cset: moving following pidspec: 17780
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.250965107 seconds)
loading group "string"... done (took 0.466407997 seconds)
loading group "linalg"... done (took 7.590897018 seconds)
loading group "parallel"... done (took 0.172784075 seconds)
loading group "find"... done (took 1.167992021 seconds)
loading group "tuple"... done (took 2.115057524 seconds)
loading group "dates"... done (took 1.338533371 seconds)
loading group "micro"... done (took 0.247691801 seconds)
loading group "io"... done (took 0.660338503 seconds)
loading group "scalar"... done (took 41.995262795 seconds)
loading group "sparse"... done (took 12.736258532 seconds)
loading group "broadcast"... done (took 1.108621307 seconds)
loading group "union"... done (took 13.974039426 seconds)
loading group "simd"... done (took 4.75033097 seconds)
loading group "random"... done (took 9.57989929 seconds)
loading group "problem"... done (took 1.969405358 seconds)
loading group "array"... done (took 22.363790875 seconds)
loading group "misc"... done (took 1.432885123 seconds)
loading group "sort"... done (took 3.572339607 seconds)
loading group "collection"... done (took 19.325432826 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513521082 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136936439 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131984481 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146188733 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20322646 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14144879 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15590057 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113069918 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009589038 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185720936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153722901 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511108256 seconds)
done (took 5.152250553 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228039236 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093437684 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102937915 seconds)
  done (took 0.871646954 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076945401 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144340303 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09351782 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077149736 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094253185 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076929423 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094645889 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076996878 seconds)
  done (took 1.334993575 seconds)
done (took 3.196578033 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.726540165 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279534541 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202043111 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45918426 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.1970238 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213005663 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680707413 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346108401 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252726889 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099009149 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143028841 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386465241 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13570185 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679650478 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089281624 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122128273 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175269256 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454682304 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081258412 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109686911 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115641304 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140607077 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13064659 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090382271 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183985905 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081343462 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193388149 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107374979 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08021256 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288571342 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19997213 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68341977 seconds)
  done (took 10.842336432 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11010825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132788135 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097198203 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13778325 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134568935 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098818827 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083997651 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095349087 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120719794 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174557834 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116383807 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136410769 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094645672 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081880234 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113896549 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241927878 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118624414 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104185116 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099492239 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102784212 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121108057 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114076716 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107676396 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091732457 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165673721 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220037871 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110100679 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124202956 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097289169 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113538209 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143998335 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142925611 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095139673 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079988493 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172033097 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125627566 seconds)
  done (took 5.108871982 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186663284 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118328761 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16692688 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161675761 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139117511 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157525651 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111156539 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242915869 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114468531 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163998709 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13929695 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114842966 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079586496 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097242066 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126435525 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078014683 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641352738 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161841145 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133014008 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097042468 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103891813 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098517879 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121335798 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086281586 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09625032 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080395051 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.124666243 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.318563344 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158090631 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081506551 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.147412165 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121015429 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099567993 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116061691 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206542047 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124524893 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116274138 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096896667 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077802287 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192467705 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087792011 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093675732 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078765781 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11993739 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132376928 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117147959 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098398285 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095035967 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202180363 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095105486 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096967441 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.946357266 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181452798 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091089039 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096869907 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328884304 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096704123 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097092087 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076666589 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26940464 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182547355 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099939474 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079976037 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097424345 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082248333 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397442327 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098802263 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.669878592 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084075699 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106880073 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081657784 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095824501 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102860052 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085868369 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113512171 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079274995 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098001485 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079396378 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09553859 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080396559 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107339934 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100776949 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078933123 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163162191 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079847729 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114060852 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126014085 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084817715 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09659412 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131150648 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077551867 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098095952 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079137834 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131041606 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098929171 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107187864 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082557124 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143151607 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098034422 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181392543 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078609136 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123030854 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09795069 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11378771 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115215148 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10049896 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083677248 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094176174 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075929938 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164333823 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080882922 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0991194 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082064929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11201496 seconds)
  done (took 22.430225897 seconds)
done (took 39.059572457 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324540711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101305412 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100777872 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100804433 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09826745 seconds)
  done (took 1.473978169 seconds)
done (took 2.19938692 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.297509277 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170311506 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093949255 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165492073 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093071864 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172865031 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157770947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110578959 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217187906 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077060132 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162532267 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093394723 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075728446 seconds)
  done (took 2.635800943 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094730167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113899749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082394679 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110599319 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075959602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110266418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09199228 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116190301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108261573 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083827476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092086948 seconds)
  done (took 1.802290717 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092610052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111720729 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08086208 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108859512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075578209 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109696125 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091299498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114275844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108222232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084421412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091908889 seconds)
  done (took 1.790562526 seconds)
done (took 6.942678138 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089540212 seconds)
  done (took 0.806113891 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.91296561 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.885640201 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111826744 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148887778 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298409529 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190408955 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476075124 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127279517 seconds)
  done (took 11.078261161 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.144087423 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084687462 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102216321 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085364503 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100545821 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08511182 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099041678 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09865618 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085387388 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099764826 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084899338 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097614666 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101308469 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081135064 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102212682 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082378054 seconds)
  done (took 2.319565589 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118384648 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118244451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105688557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107862911 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086593043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103222494 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10453599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087523736 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.1003248 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102200499 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091169677 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104333045 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102831938 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079001053 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104404439 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107464575 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084432257 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104757003 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105563352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089746261 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105867352 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09469612 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087135422 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10550348 seconds)
  done (took 3.230818876 seconds)
done (took 18.156899645 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157541179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108249633 seconds)
  done (took 0.993163311 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094805363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112651384 seconds)
  done (took 0.938301982 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096866337 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094458419 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120650745 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109037314 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079581245 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095691259 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118325465 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079799185 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095504986 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07979553 seconds)
  done (took 1.703828394 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081395357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108284219 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101450372 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094927944 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103735792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093609457 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087029886 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09770707 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110228826 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076715378 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103738437 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11570418 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086490708 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118036395 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106782972 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084750822 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10422799 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099857587 seconds)
  done (took 2.510867366 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078348891 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096204359 seconds)
  done (took 0.907042058 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080269463 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093592021 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081002116 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096838966 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093299311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076218032 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093601967 seconds)
  done (took 1.347394426 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468661086 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135630967 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25307377 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084262211 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119005807 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302379294 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097008429 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083506868 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102362636 seconds)
  done (took 2.433967291 seconds)
done (took 11.567678678 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092602348 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116969128 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111758879 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467536766 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106742337 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096954812 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159753466 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254544467 seconds)
done (took 2.144956364 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149831585 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326578408 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114467314 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067860036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097647434 seconds)
  done (took 1.350037969 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079641397 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099184038 seconds)
  done (took 0.919418812 seconds)
done (took 3.165639624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08018759 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096911626 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114080134 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095940598 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080789267 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.0963065 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077694463 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097763301 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07721056 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095790615 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096678067 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079113737 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096844076 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077093193 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09406372 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079329944 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094458055 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077582621 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09409246 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077624109 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096868282 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077633735 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09378995 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079439727 seconds)
  done (took 2.901775151 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098604278 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09847699 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102019573 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085092513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101164394 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08445474 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100856576 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096710941 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085517682 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098646024 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099561495 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083371816 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098820667 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083763301 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098175045 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101164478 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084821398 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097151512 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082054899 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100311271 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102299604 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07977033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099823451 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101433736 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082596005 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100246797 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083019238 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096711376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102342579 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082740299 seconds)
  done (took 3.556373267 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084462762 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093833087 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077814678 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101533118 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077148317 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096379118 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077592198 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095039932 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078759491 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094364165 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07901382 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095398392 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077817241 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095171319 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078903468 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097397262 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107232587 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078556849 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095060474 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078163739 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098974363 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078045052 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096995701 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079191616 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096760531 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079384834 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097850562 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079843005 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098274374 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079463193 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100530614 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083472577 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097488384 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086486935 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100461381 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079484219 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10122044 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097279646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080081817 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096764549 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079279747 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097334744 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078653772 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104072693 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079278069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099509464 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07985767 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098473263 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079884026 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097788682 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077593223 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096427871 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079495014 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09603705 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098013348 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077056365 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095727569 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077171083 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096008197 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077683778 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095373015 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077208972 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097214581 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078935224 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110407705 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08511451 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094429 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079163385 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095494482 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080420449 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096579664 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109300184 seconds)
  done (took 7.180739877 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083736111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10599029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080188274 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097109977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076090947 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09576283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098968634 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07846065 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097015735 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084917413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096594661 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080083463 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096645637 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107949246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078524621 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09717424 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085162237 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092796071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078961326 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099535354 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078446325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09918539 seconds)
  done (took 2.741046962 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207117366 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104882114 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14136337 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107193212 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082999036 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105662492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102211008 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086252228 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101758938 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082992992 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100126029 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102044169 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083630039 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099721954 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100481105 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085706956 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102263962 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084200766 seconds)
  done (took 2.636520975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093315094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098604885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103038744 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097706289 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098994337 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083586861 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103792408 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107740006 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082840721 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098400907 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090825184 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100623952 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100476487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081004558 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100968203 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081603873 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100627631 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081340197 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107696901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103420057 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103980287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090702204 seconds)
  done (took 2.869361746 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096012333 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10042678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116861024 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083840985 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0947677 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079056403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106174822 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081329538 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10569308 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100588549 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08124553 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097171193 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087826261 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097481176 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103669703 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081348311 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099931418 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082323444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100640947 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077245022 seconds)
  done (took 2.633482974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101448232 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09999986 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100003078 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091891172 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100156609 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082627181 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108602572 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100430589 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082441126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12450355 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099618517 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0832419 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109110074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105367376 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099506277 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092520963 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107622738 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109513061 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083181195 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099597139 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12418514 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083785103 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108174537 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.21181695 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08290873 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099728817 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100159376 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088544709 seconds)
  done (took 3.642186144 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081532249 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098396244 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078957652 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09613655 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078285618 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09652103 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078071834 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096280043 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080547295 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09626057 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081387439 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098424716 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080412092 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098653679 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081630659 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097824467 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083678912 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095447394 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078385544 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095919601 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080155957 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097880941 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08050353 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095496567 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077882094 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097416501 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07897769 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095629707 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081036801 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095279834 seconds)
  done (took 3.416998439 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09059438 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105689583 seconds)
  done (took 0.960964311 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079097101 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113933931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078265543 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10221928 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085367374 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099765141 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107225717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085906284 seconds)
  done (took 1.512692022 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095941014 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109168277 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083474729 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111558801 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108937727 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094648298 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159409094 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100260723 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087081239 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096523789 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112254842 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081263802 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105020383 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081420819 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105266934 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087852779 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097112087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086710151 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10156033 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097460676 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082988392 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110251951 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083606669 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09658825 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083330622 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109723093 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108735494 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083093121 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103151863 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10875828 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086777636 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093646802 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081390391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100197796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079915544 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108520843 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112290495 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084566354 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10885682 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084087625 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110316675 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094956551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086988389 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105986974 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092541171 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100482034 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082590259 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095042071 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097049598 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084672668 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095100045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081897822 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093840145 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089393649 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103918031 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113481416 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080223521 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101435405 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084607746 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102900631 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088034824 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101484404 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084307172 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099036333 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106745851 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085475004 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107041063 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077920386 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093241149 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080462855 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109292008 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122935492 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090481978 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100908928 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08355568 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098267607 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10341711 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083208945 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107062598 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091007918 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099980944 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10734684 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090039755 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099821598 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08559342 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107542379 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098174474 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084788847 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097078118 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096661525 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09853909 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079858121 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097445785 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108649781 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086297073 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099426381 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079554279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107496822 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080003653 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100547152 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083757539 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100043097 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108587957 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088809694 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105452227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107274706 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088811783 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100196439 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084215831 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095933818 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084203049 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102027968 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106356963 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0766693 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102562409 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083273953 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10116509 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089365069 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098097816 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082348339 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107740338 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10733607 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081115812 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096608925 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084939361 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099691886 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086475835 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10700839 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097804577 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076547373 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094544174 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085779919 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099801421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086358544 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105100685 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103245593 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07674164 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098939309 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087310704 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107333457 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099442695 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082181214 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104607308 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083100579 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099124151 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087707173 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101803737 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081524124 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103393522 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10212107 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077174559 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104365321 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084630724 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098164911 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085607167 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103140264 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102481156 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083172491 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099382043 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088068511 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101381479 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080979355 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099286057 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08052553 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108978521 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102157556 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076916273 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097308954 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089372351 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097789322 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081382289 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098523094 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102288939 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083581532 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098293377 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081637009 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101112448 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112307442 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086733341 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100969722 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087640631 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110751375 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083069959 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102396431 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100844047 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083946416 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101385288 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089436083 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105778765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106119269 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085295504 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097122265 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088290551 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107839717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082064204 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098582401 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081250105 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104355834 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10689106 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086283615 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101281358 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080467543 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100654299 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105130867 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084873128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100903526 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080975265 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105177111 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081550027 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108160912 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101481993 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092635053 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103331681 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077681318 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104286003 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099010716 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088379182 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096034485 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079792824 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099783176 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083135252 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099701896 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085952422 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095189254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08945939 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108933357 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100862242 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082272498 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100448112 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091538584 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102754443 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085306249 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10339593 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105632544 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094993607 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099812356 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085805713 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109118405 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101518564 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076843061 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106613428 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081153462 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100166753 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08211565 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098825477 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085256318 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109423124 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105607396 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076325874 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103357921 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081255976 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099621977 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078017535 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108083759 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104791011 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084453399 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109158842 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084590515 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101401955 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104493803 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081525083 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101649967 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084051854 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103708431 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083483429 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103776558 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081924288 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10389097 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099473108 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080773042 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102015393 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082642466 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100586836 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088911554 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102484328 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082817685 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103103547 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101113091 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082572557 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101454474 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082742153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104295981 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083543335 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100929418 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085854325 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096359034 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10781385 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081985222 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109642189 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082868742 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09752528 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087800929 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103958291 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105850315 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083235132 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101736859 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084838657 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099984998 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085768757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110207511 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098725865 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091361478 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106718939 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082695358 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10400485 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082800336 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102381591 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099351002 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083651635 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102855305 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08270414 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101734046 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08805192 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103809202 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08320152 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102684494 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102448686 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083034446 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102731493 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077743914 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099966313 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08195138 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102074052 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089837327 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102006005 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10396963 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08141603 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102121362 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082215857 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09794561 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09052646 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110907132 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102126567 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09077098 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100451089 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084042795 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110497495 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095523749 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081081739 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099030718 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080519473 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108270039 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084126763 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110613301 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100733224 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082265841 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099539009 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083778195 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099370996 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07829995 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099230952 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0874987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104578933 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082135517 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101379973 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085108365 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084714174 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108279682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081716054 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103020091 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083094659 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097991134 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080996538 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100474558 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104234262 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084049865 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099946261 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079536081 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101502547 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084582564 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110860889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082214951 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102549689 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090281997 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100663043 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104678285 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086985086 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096892003 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085727292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101428882 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083266371 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101654716 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104684388 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085953402 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102839262 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089956258 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10173105 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083575549 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102039947 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09994305 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084133882 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101257446 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083735951 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100872519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084919995 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109740833 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080952779 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104044096 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101041424 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083113768 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10580625 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084178869 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103861263 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110038691 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086272058 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102428182 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089379225 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104794066 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086715312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103080777 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10279406 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089373175 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100642563 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091997442 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100781164 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084081547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102689123 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081266871 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101249126 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10121892 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082683665 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106358417 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084341038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100574745 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083100876 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099581742 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08387514 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105237621 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109046852 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085267786 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104068591 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078496326 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099174772 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084385262 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099540244 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08491947 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104646372 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107634564 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086297817 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102640399 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082422885 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109574322 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108099422 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087501201 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100270732 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087942133 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10300428 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085660066 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103383695 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083007571 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103352267 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107042656 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08471924 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100894205 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091869981 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106097012 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084549202 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10344741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101802484 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082959092 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097022707 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084474388 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103943649 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090133672 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105549054 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102506161 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092594057 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100861589 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083097639 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106227071 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082579908 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108856975 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096516912 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08514796 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103171996 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085892412 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097479213 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082802064 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099288945 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086091769 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101286187 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078728116 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111318077 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108912935 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086687003 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101280315 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08206631 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097254096 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078386237 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.1012578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084972809 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103489992 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111424575 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082089227 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101324876 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078785043 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102744481 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085965796 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106074037 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080541909 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097819816 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100573937 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085883589 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109323072 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082696698 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101750691 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086434624 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104502996 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081002181 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106114833 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099121241 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087809203 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112448925 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084391065 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102798379 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108208446 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091356588 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103193657 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078571984 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103171369 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085215221 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10296253 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102816037 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084860087 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116463941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086308876 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101253652 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081708773 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10563715 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101089012 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090366712 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104015799 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084393694 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107342579 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084991631 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111185377 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104396556 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089104491 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104564316 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085664665 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101578328 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102263098 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081575875 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100853981 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085357765 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103301814 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088410663 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109964112 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101827909 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093907969 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111066579 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088504722 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099372205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083013437 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102146234 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078763743 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103532207 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100109571 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082569728 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100641054 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082780537 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102683077 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089616259 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104488789 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084369221 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103362344 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097417583 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085730146 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106051047 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085520247 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099819933 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084963749 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103416366 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090403328 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10909547 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103532636 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086645661 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10412993 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084802357 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098553733 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090655759 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102072523 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085502883 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102519652 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084072526 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103605472 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105976846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088768037 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103823898 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085551641 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115168873 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104685363 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081841625 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099527532 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088760486 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100454402 seconds)
  done (took 57.517360605 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147525294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080937334 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098689554 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079184422 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112583507 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099716882 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079786073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099432161 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080787446 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101362105 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079076341 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098621226 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108681055 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123642968 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092937633 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103300058 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097090139 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080592395 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098361651 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080319084 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107644603 seconds)
  done (took 2.863858505 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104261025 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117123345 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113858626 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118823757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08939478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115080968 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113292952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115311236 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099858779 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110502768 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118260963 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115374267 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090966284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109719433 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109955095 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093939533 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11928761 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108522391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116035761 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095328635 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11191368 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113617973 seconds)
  done (took 3.214868531 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083921483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102574432 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084903729 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097372039 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083309929 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097907173 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087711019 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100267928 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087528099 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102037608 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081259129 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101772728 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103971769 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079036321 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101861662 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081588157 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150520089 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106575035 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082981291 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1040629 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097464561 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084971778 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098017981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079452749 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101607799 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08815367 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10388541 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08106958 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102655926 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082127117 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102718384 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079866838 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104096004 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103006946 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082795841 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101342748 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083480169 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102127121 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0784605 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100540415 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084435599 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097789227 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083972007 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10464668 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081865993 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100527437 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084823983 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102877732 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097369648 seconds)
  done (took 5.434486757 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103771374 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160760251 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085185764 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141880806 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1205033 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112628167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087040811 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141915388 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102048213 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082573861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122688012 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119929412 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103802435 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089749888 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107544239 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103703178 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085615579 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101931324 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088674648 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103263732 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10795344 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090142074 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119650476 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11830039 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107268139 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083188317 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103251926 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107932811 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097288054 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109083299 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108753379 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090597897 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11988138 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107938112 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083193394 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106903175 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120702571 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103888697 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087476167 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101667859 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087101188 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109593266 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109785153 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101870891 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104681652 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10906605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084684448 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10064369 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117182919 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086512848 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112907321 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119092704 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107585319 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085146036 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108273327 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11958418 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084236182 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101786741 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087780145 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116853393 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100834872 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088004043 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118897766 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105410535 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112042416 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099352538 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109033595 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108273171 seconds)
  done (took 8.09328591 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093567541 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111154548 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120881982 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119955226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091715982 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110521455 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110768307 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090534533 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110463879 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117058092 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111004446 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133934844 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086348324 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114416618 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110387138 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09172995 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111120129 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11103626 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091613626 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111643399 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111309765 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120709427 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091547231 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121408323 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141610592 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105997354 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091297688 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110647714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12006826 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111224783 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122882189 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092415586 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111644897 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121464995 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123325172 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09191221 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103197058 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111301954 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091595409 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111443282 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106054279 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120637682 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091826198 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105054543 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110805214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092617048 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120867257 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124463289 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113616258 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096339678 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111156612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120440622 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111283705 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091388245 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120767187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146041579 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121009265 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121378996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111511508 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120162122 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100615021 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127900274 seconds)
  done (took 7.670136052 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107548763 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115742333 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117693731 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100626807 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083600507 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108157876 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083368776 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.1021482 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114405493 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094844718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116490738 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108473443 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112594546 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097091314 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108780993 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111412285 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088301145 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109060065 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114166971 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108316826 seconds)
  done (took 2.933495501 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093208246 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123710015 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085241003 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111846545 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107428822 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091275017 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107075172 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107506737 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085670178 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106759234 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097270806 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11624345 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105348718 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091014233 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117692015 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110949885 seconds)
  done (took 2.488354539 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096018886 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117015435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120028151 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084903095 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104523511 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080179146 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104880235 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100261101 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081631343 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120326576 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084875939 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108767068 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104706282 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083073897 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101826013 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088237386 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100623455 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082831811 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105713383 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122159784 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096266029 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104647252 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105635297 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08718389 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104781549 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090062118 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106727476 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102060382 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083871449 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105264357 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085044215 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113185297 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.1016174 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083791017 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10273109 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082101344 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105760415 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085830779 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108104592 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104674799 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083317731 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103852297 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084944058 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106398695 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081180723 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105149749 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100891844 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091749746 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102924239 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085656214 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105089998 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106310999 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086486373 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115112221 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088113981 seconds)
  done (took 6.233867403 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099640159 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108856076 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08015905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103355047 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088156135 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107569955 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108138018 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087424543 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106558168 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083634299 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106937526 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089573994 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10767188 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108901654 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087743935 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109335354 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080291464 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106870722 seconds)
  done (took 2.611652672 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090905187 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104729893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091941082 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106204999 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085066717 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109225084 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080120583 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104894881 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103273642 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08586685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104985287 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087877309 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103148488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087277405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105235663 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084071792 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107997288 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103568848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086323686 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101182816 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088118183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104162822 seconds)
  done (took 2.964907783 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118934031 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12496271 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092593635 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228806497 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103283828 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132850909 seconds)
  done (took 1.641694735 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109366567 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120859095 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105689826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106512707 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115328441 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107209773 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087147632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107624688 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117579662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100705351 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108779136 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117603241 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117517452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097095875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114342009 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114878625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107326889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088049941 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106118114 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128764709 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087781042 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118515407 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107587048 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086772044 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108292571 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117871823 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118262928 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12261326 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087893902 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118372997 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114425619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087639834 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118593285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122179432 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108758357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0978678 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107663873 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128616196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114136334 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097964553 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109098855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115024875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097426789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114255607 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11817426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108646018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093115141 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107685323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107915109 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136217648 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09371714 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11699891 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114947654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118222028 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117803369 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135778672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102339497 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117742715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115672366 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123274615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117349473 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093832648 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117032038 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12213125 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114001577 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11831983 seconds)
  done (took 8.139424012 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101832728 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126531881 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107543918 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123069857 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097177225 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108594675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108379438 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087811316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108538089 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106913135 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151630319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088669297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118084941 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117176778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107634774 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08768535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108206654 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116967073 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086963164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134994822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108753712 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117079826 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117895368 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098454991 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123571554 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115178924 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109226251 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087653196 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10769003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107750924 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092777503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109066035 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117506144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086923708 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118161087 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107870425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087555585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114327316 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108666757 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114325863 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097458257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128860257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108896527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107758549 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122498705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088101383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10816958 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086987371 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108979494 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107776353 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123016351 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102006045 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12291515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118999662 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109093269 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08875503 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108328226 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108199531 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088223315 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115697721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116917449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107657395 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135628322 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088550225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108192574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117472579 seconds)
  done (took 8.016060235 seconds)
done (took 154.614115036 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097575075 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135516063 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095598219 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169331771 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106241343 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119305258 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137369588 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097365403 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106577513 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085771468 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106583033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087495274 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171867459 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085154605 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106520682 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107608172 seconds)
  done (took 2.661257077 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199931225 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254934829 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102894954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105698862 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11075484 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088914997 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106070622 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091009666 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109915597 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085657102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108679722 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086313307 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105583942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086362909 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110564368 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087681115 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10773639 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108649633 seconds)
  done (took 2.907709225 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113187404 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155347083 seconds)
  done (took 1.119608259 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119631632 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1800207 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29556624 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155426781 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118488634 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126709528 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156667762 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130869912 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197142174 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122546496 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122879546 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097463742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139997138 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115459589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094778089 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118529962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142102084 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092622913 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115384945 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115834888 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117217757 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106729705 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115254103 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093244765 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181177702 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118968007 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084481883 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107086797 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11583718 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094345065 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114040308 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124320319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09916625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175480646 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102704784 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178306795 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097687511 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112267513 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114900296 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091563606 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118740845 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118268301 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104984383 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118410302 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087010341 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119019321 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105747011 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085715622 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11443365 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117737158 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094586672 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113787415 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154989598 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118572804 seconds)
  done (took 7.525565713 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795535936 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163455147 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090161306 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887084347 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138520891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103711712 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780882452 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133867812 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238928907 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762586031 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134087301 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122840685 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229209851 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.2377913 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.986399842 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312688093 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673310895 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101794793 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15092805 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152853136 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120317571 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138310595 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130049915 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431548967 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094809844 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11268445 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118824409 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099393412 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158620925 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127706057 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114275534 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178428613 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269570753 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185807188 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115973227 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088935111 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111743926 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169347921 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26743678 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214599065 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180321185 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087058672 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111044757 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122256748 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109999014 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109461236 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164428852 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195444569 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172842655 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09182308 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12237651 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120135776 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121312113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164367272 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120493416 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298946507 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31185255 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11197986 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120732187 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10570159 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264532472 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123002888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225257896 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115828392 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213882407 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111627519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778636428 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191381198 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08958536 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118590485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118990746 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094105456 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121487558 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167844073 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409236447 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123923614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093971449 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112198239 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20561872 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127140813 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112268711 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163040613 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115181447 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098580209 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126124251 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122865766 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170730204 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235115064 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124934602 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119430947 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094183314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125544474 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116130864 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217077709 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219745891 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162669272 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211881665 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122946828 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16371914 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191373292 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098524771 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195627255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096627868 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126931362 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123036341 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217066476 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145031275 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101538849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116826295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119402971 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148724996 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127626879 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098212728 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19132349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461689884 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168791821 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109225186 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127989028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098854511 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161048666 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118851841 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261958203 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121521455 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169254246 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117804568 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087299995 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120129937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165166031 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123231362 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098107429 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101980006 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119358431 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235344681 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217758168 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122678035 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220470002 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183963223 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119883676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172811734 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12149257 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16792891 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120243652 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120805963 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095052559 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795908677 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123981274 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097263439 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116863164 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188346399 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111271222 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102041768 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125427247 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108735061 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774450217 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127972829 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122179306 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101789408 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119769094 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119415066 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095694815 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11644722 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162247759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23148944 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121870868 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119675756 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103736114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182859832 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094298088 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125710393 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124468066 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102706714 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122042516 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114659311 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124776511 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172000075 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163930848 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220554354 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590367165 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09034366 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12527705 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228840766 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090789263 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290176103 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120381949 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228736078 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166180773 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121144268 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307881184 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16624586 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188326016 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127000484 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174186366 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087166779 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118970183 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162822205 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113652884 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118723341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16308542 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126073062 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102303335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960396979 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112945323 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230731434 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086296247 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193738046 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09423536 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121375174 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297017483 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111828843 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107504641 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18539771 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093385285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126652477 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.848434119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125689949 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122387493 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118793299 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200629384 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187194206 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098675295 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119519025 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122818012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163878831 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212035527 seconds)
  done (took 44.318943196 seconds)
done (took 59.383959276 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275663856 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213025875 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257640281 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167723712 seconds)
  done (took 1.869009216 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174021886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147810234 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120521468 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107558673 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148563488 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085397089 seconds)
  done (took 1.664543656 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351509332 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270020884 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239123598 seconds)
  done (took 1.746641386 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288296313 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251452748 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354185608 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418137722 seconds)
  done (took 2.314780466 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208658628 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131758275 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110812809 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104116475 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196447393 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249539137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140716897 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201107033 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121855079 seconds)
  done (took 2.397671676 seconds)
done (took 10.878575805 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.269198242 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.19218871 seconds)
    (3/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.154273732 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096766436 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127654958 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241719783 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.183349091 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125527709 seconds)
    (9/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.229127428 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.219204092 seconds)
    (11/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152591786 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138442121 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10049134 seconds)
    (14/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.137067256 seconds)
    (15/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.173476925 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0941478 seconds)
    (17/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123219859 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.206632402 seconds)
    (19/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085353994 seconds)
    (20/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119302545 seconds)
    (21/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092690372 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.213808993 seconds)
    (23/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156404559 seconds)
    (24/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.157964963 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116340636 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.250841857 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.184084147 seconds)
    (28/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.22262687 seconds)
    (29/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.223179323 seconds)
    (30/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091900616 seconds)
    (31/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.124652063 seconds)
    (32/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.235098827 seconds)
    (33/286) benchmarking ("sort", Float32, false)...
    done (took 0.173205541 seconds)
    (34/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101721906 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116836303 seconds)
    (36/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.215772427 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110839893 seconds)
    (38/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.184176187 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138457613 seconds)
    (40/286) benchmarking ("sort", Int64, true)...
    done (took 0.2253929 seconds)
    (41/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.185193983 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092567248 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118212161 seconds)
    (44/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.132476271 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089313647 seconds)
    (46/286) benchmarking ("sort", Float64, true)...
    done (took 0.232044934 seconds)
    (47/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.177412291 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170793248 seconds)
    (49/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118249397 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.134085018 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13478686 seconds)
    (52/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077472007 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122858641 seconds)
    (54/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121062209 seconds)
    (55/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129080041 seconds)
    (56/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117912255 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116209483 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.101002238 seconds)
    (59/286) benchmarking ("sort", Int8, false)...
    done (took 0.188428397 seconds)
    (60/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.212273976 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187847719 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.142216283 seconds)
    (63/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117920262 seconds)
    (64/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.155207232 seconds)
    (65/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096843721 seconds)
    (66/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133251155 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.186356927 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110817725 seconds)
    (69/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.157639859 seconds)
    (70/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180106324 seconds)
    (71/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094775303 seconds)
    (72/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.15158789 seconds)
    (73/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08919507 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115459924 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093859169 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113069285 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118751024 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094015159 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133258964 seconds)
    (80/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.077848787 seconds)
    (81/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119117542 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067862363 seconds)
    (83/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.151992693 seconds)
    (84/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.160451127 seconds)
    (85/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14472364 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076197873 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137179288 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136812378 seconds)
    (89/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088446152 seconds)
    (90/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172921601 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195058904 seconds)
    (92/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101149939 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089534764 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086397631 seconds)
    (95/286) benchmarking ("sort", Int64, false)...
    done (took 0.110704009 seconds)
    (96/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093402468 seconds)
    (97/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173151634 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077896417 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110439997 seconds)
    (100/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067636019 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090279686 seconds)
    (102/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.164801475 seconds)
    (103/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.101029685 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08782948 seconds)
    (105/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.109804265 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078681387 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110580479 seconds)
    (108/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234467251 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085797183 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172038903 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139900626 seconds)
    (112/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090788263 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.130872248 seconds)
    (114/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.10066379 seconds)
    (115/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122831715 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227861906 seconds)
    (117/286) benchmarking ("sort", Float32, true)...
    done (took 0.233289772 seconds)
    (118/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130049321 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086168907 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169911106 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096201874 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116381019 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134852082 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093161759 seconds)
    (125/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117529931 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.162569483 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089779368 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184443831 seconds)
    (129/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.161195375 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112797532 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134579637 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08759486 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.136627836 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182108481 seconds)
    (135/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077638904 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.091661615 seconds)
    (137/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113850756 seconds)
    (138/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12461406 seconds)
    (139/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095124538 seconds)
    (140/286) benchmarking ("sort", Bool, false)...
    done (took 0.180754341 seconds)
    (141/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119275891 seconds)
    (142/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09481027 seconds)
    (143/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.120840637 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066437213 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091876914 seconds)
    (146/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117998891 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108487242 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088022333 seconds)
    (149/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109697517 seconds)
    (150/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.161466722 seconds)
    (151/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118007021 seconds)
    (152/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184800224 seconds)
    (153/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096366241 seconds)
    (154/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150689898 seconds)
    (155/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077636305 seconds)
    (156/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.090404106 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124762685 seconds)
    (158/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109248682 seconds)
    (159/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.170770646 seconds)
    (160/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118483659 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124955129 seconds)
    (162/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100031322 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110352502 seconds)
    (164/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.15047373 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091486779 seconds)
    (166/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094514243 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08922766 seconds)
    (168/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068644784 seconds)
    (169/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118927802 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086616883 seconds)
    (171/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117548503 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077684422 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110839597 seconds)
    (174/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067208641 seconds)
    (175/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069015645 seconds)
    (176/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090157317 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066738968 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067743099 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089725348 seconds)
    (180/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066708804 seconds)
    (181/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167418413 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067933783 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109015316 seconds)
    (184/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068098403 seconds)
    (185/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185404549 seconds)
    (186/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221498058 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067880113 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091793165 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.114331637 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0913224 seconds)
    (191/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066828506 seconds)
    (192/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116835054 seconds)
    (193/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150853747 seconds)
    (194/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152076663 seconds)
    (195/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067627662 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166217082 seconds)
    (197/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095895485 seconds)
    (198/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122637383 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11686456 seconds)
    (200/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06821434 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126022822 seconds)
    (202/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090292832 seconds)
    (203/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068244864 seconds)
    (204/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090053101 seconds)
    (205/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098124881 seconds)
    (206/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117736088 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0868766 seconds)
    (208/286) benchmarking ("sort", Bool, true)...
    done (took 0.223494031 seconds)
    (209/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109917518 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06769785 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13437558 seconds)
    (212/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06854992 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091593883 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.291432864 seconds)
    (215/286) benchmarking ("sort", Int8, true)...
    done (took 0.223053748 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162676016 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088793052 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119970881 seconds)
    (219/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095217275 seconds)
    (220/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090680564 seconds)
    (221/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099218321 seconds)
    (222/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12552146 seconds)
    (223/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06781439 seconds)
    (224/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112500636 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087236696 seconds)
    (226/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.1169761 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160985243 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090342262 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085969225 seconds)
    (230/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118104126 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093300102 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13612413 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125028693 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069644763 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.116388718 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087079457 seconds)
    (237/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120170216 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08644302 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124930296 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087425781 seconds)
    (241/286) benchmarking ("sort", Float64, false)...
    done (took 0.172044657 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086848502 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137690896 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110779845 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087186414 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108909868 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094182394 seconds)
    (248/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10915512 seconds)
    (249/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067585608 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068113874 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120064309 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068182619 seconds)
    (253/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.090914002 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086049306 seconds)
    (255/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066452672 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091045505 seconds)
    (257/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086267374 seconds)
    (258/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116692864 seconds)
    (259/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136427272 seconds)
    (260/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067422885 seconds)
    (261/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173310837 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06888383 seconds)
    (263/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069581125 seconds)
    (264/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.102891147 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095647245 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109168701 seconds)
    (267/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067802095 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.1090335 seconds)
    (269/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088250374 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067050764 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118535314 seconds)
    (272/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114652699 seconds)
    (273/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067942804 seconds)
    (274/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135726807 seconds)
    (275/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089674836 seconds)
    (276/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113341032 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094010056 seconds)
    (278/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068284733 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110921941 seconds)
    (280/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067932939 seconds)
    (281/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089844224 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087961816 seconds)
    (283/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090836215 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09390151 seconds)
    (285/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112969729 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09402646 seconds)
  done (took 36.122749305 seconds)
done (took 37.014004363 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100603545 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147824458 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096301963 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135778957 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12355785 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09168705 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118681082 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098153394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12443198 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125161583 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098733259 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093916693 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097919744 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12074545 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097114045 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138824604 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124531123 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09406005 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119221241 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086652674 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118516694 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086234444 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111957443 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070761083 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122239886 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094616436 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116809401 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12032133 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08723638 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111025735 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092568455 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117273797 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08654998 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123947295 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09330843 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118554263 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097374839 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121295446 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111855332 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087815122 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118836761 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087575396 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116653302 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095029118 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116503501 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092300055 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11829769 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099842796 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13976756 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11546044 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095820033 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122150117 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096249666 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118248051 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091139509 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119950651 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091947232 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140542584 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119627255 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093036989 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118746271 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095204786 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116994918 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095154257 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119352925 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12106088 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097903349 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116760753 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097401735 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116641991 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087364892 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119841693 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090483 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110264398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096352091 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121251375 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.11001765 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09364761 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11853833 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092397031 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109807159 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090060554 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112185285 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094070451 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113297793 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069901112 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115174925 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09389539 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110380803 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097321077 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116914184 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094499333 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112625588 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098832384 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111057841 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092605792 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112577167 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086890802 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113052357 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091505967 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111479717 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089549751 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120283613 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112231438 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093871288 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123591235 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087733226 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117184375 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087042687 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110169442 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101672337 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122309039 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086839382 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116727306 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087316275 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118625743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085928463 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111152217 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110835246 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087241473 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11740727 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0878533 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113466138 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09442828 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126114136 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087264179 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114379492 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090325375 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111459298 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093131722 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111371262 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088034293 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112800583 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077965807 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113661197 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087410157 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118277451 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090390397 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119813498 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089055401 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120619386 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091763338 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117226024 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117002531 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086079431 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074853975 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11664288 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089202933 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113543767 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087199704 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112804695 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087170518 seconds)
done (took 16.971338397 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087722368 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182976712 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151246963 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141713718 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107562392 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11214354 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122296438 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117889049 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11384975 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143539124 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110812623 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131982206 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147593293 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087729925 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112583981 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091500512 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113640552 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103170283 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146130217 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132955076 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163535318 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086497155 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147846629 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135599538 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121851592 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113667241 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112493623 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091732959 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115100915 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103294792 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132365445 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115344493 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087797872 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13376379 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104550444 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119912077 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088050491 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118085257 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087617759 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111900097 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140426429 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134075626 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092926984 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118107989 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09183606 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114336232 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089009485 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121296448 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097623222 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116158936 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127364609 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091335585 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12224065 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086586351 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122893102 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121318908 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090719951 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112685129 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090773631 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11167129 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091470883 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126924981 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142875436 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091651767 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121852736 seconds)
  done (took 8.615386682 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104204032 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140114713 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105495852 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131007367 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111983373 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089399062 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112884021 seconds)
  done (took 1.747186897 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08917556 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134635483 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111519402 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136773521 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133016443 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11232505 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123992591 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088844525 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132893203 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08934116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134297187 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15026172 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090532534 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120657577 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138022307 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088694366 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138535431 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08960226 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116691552 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112352552 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116206696 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135192418 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090966904 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114661002 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103743498 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114952498 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162643582 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094388537 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114965697 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092273917 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111929739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151415765 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103498479 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12473801 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089834151 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13029946 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128602185 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086741822 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126155801 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093951449 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127781688 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090595274 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115049997 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087193115 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119381176 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099232632 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118389814 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107763574 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117006952 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134508781 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089373144 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127727685 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089545433 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117576284 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090121178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119620245 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098596381 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114291801 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133656094 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090362852 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130762867 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106467924 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128040413 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130171886 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091592522 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127790758 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103673406 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117799277 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090807405 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11838709 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105425291 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112437828 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090801748 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125241977 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116441195 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113143813 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136806279 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091264248 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125057172 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088927145 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115539821 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115145275 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112733389 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119543027 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090373913 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118232113 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093876824 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113282847 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088832176 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119151065 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087828214 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115938519 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092935918 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114991049 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091646412 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132342868 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11528988 seconds)
  done (took 11.851339442 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090184197 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115058017 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093113688 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115417545 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090793884 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11530356 seconds)
  done (took 1.581980157 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117451923 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.1174321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104159848 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121266124 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156290548 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103661778 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13017418 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123961242 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108652526 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127043985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129006514 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105275257 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136615315 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121293918 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104298872 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12007674 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104090323 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125018244 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127687423 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096228529 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137383281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121002445 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096791053 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132517175 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11875478 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096491085 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127284885 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104067761 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128128818 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124017452 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095897117 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118314618 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09564032 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122865981 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130577428 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095276145 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120390479 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119524139 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100175863 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117733886 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104504683 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12162121 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126856641 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094734536 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124141604 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121112987 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095230711 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125944041 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104481882 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120486943 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118908816 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096264323 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120700015 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093781652 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123356047 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124803183 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093880275 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13028182 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121571943 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097453325 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11910159 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09333519 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124543213 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119176962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104378635 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120073569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121995997 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096220219 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121829423 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09656612 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119354224 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092716253 seconds)
  done (took 9.23859291 seconds)
done (took 33.984773566 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684886308 seconds)
  done (took 1.646578459 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.831682457 seconds)
  done (took 1.796139968 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.983468125 seconds)
  done (took 17.97712025 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496333593 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577368556 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.981142444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178118007 seconds)
  done (took 3.197519922 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957667232 seconds)
  done (took 1.945458499 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281882242 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234548132 seconds)
  done (took 1.485921676 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.773231481 seconds)
  done (took 1.753966831 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.448168096 seconds)
  done (took 2.418523011 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322282079 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183705233 seconds)
  done (took 1.484280798 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550719302 seconds)
  done (took 1.526811264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.866711005 seconds)
  done (took 11.848567887 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265281459 seconds)
  done (took 1.255228486 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300101636 seconds)
  done (took 1.279957327 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.521884411 seconds)
  done (took 4.503598888 seconds)
done (took 55.095420243 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098857806 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127548201 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101652046 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124245194 seconds)
  done (took 1.427367375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100215032 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121455344 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10073282 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120387149 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126250768 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096498352 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123835477 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100601597 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121679729 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096514731 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121065402 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120957345 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098903077 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122483942 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09396208 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123425542 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123615081 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096895855 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124334927 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096772094 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119533117 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098541257 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124430014 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094154503 seconds)
  done (took 3.651116619 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100115037 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119146925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095588131 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118298946 seconds)
  done (took 1.424633337 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100349526 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131552107 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105348167 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125735663 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13106758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106094126 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116790042 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092448598 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119686327 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099828722 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116445468 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139107711 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106180869 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124824778 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10150772 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114165957 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091901497 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131292305 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125664037 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100896315 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118650636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099417344 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115537941 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109842023 seconds)
  done (took 3.711397387 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170169556 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127720721 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138928721 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095478893 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160917723 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141404021 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088253181 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141324659 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087642406 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131760925 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118591674 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133921198 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130701356 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087898373 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11473541 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088547716 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129385696 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128796528 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091769248 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127898555 seconds)
  done (took 3.431200906 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098887965 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117498111 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088830643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116424861 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099053953 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120597413 seconds)
  done (took 1.634391965 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090931556 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114428046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090257575 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114130073 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094675638 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115016356 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089193393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115170709 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089720658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115286219 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089880153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113904305 seconds)
  done (took 2.225182902 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504936637 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119857927 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120835413 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089022854 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122256117 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089127593 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129688823 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093430795 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141629543 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089803168 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116187985 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094185827 seconds)
  done (took 2.702477919 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236515127 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125970067 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282597222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365619538 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156318673 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164520673 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278553163 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161778194 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196331151 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150388655 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230884306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196601124 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152275013 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191157787 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13809338 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144883778 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19009152 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251278848 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152601578 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211461301 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205496227 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167321565 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179514801 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15209204 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111591211 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192274263 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095553245 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129815139 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23361293 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178822994 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188817587 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161415222 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146857374 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237460568 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248795486 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195149321 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27869035 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134077952 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166601754 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142696706 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264542164 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139538523 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234440777 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155111478 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104675213 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221866224 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166787865 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176131656 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146746352 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139323807 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198367268 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24282453 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191768053 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138282723 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299676817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150588381 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158014026 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188805475 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252571195 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226775467 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189004883 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121301474 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187631015 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191275562 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210582335 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151525924 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183007167 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147761573 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183275928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190215405 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166620681 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204101457 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182088387 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14088352 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171078799 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173531674 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173624915 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258506655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184783313 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123310315 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170771887 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149802158 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131500258 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16788786 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126034015 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214409796 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143624676 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1645896 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207854603 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15898015 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162238026 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222074884 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184303671 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149002722 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083666979 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153656376 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156792851 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176854076 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140593637 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159191006 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15578912 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130249074 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170602844 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09745258 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210991264 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091467344 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173758779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210645705 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100087209 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161715234 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152827185 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150086512 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177691267 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19855875 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141233633 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133838427 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210819506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180071923 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140673005 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177882832 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229086222 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116593641 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149335736 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228113533 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242890897 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112902663 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228528412 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152876557 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107693292 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134608888 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181073906 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156958438 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16150552 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133529923 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183451331 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233363906 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098858779 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139095238 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19585168 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134369355 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132443392 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155221353 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146994548 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110810949 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143085455 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145213967 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177518548 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178706335 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155465646 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166766274 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150792171 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248356083 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140402381 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150488519 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121694824 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122811881 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192755125 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227027808 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103243861 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23397764 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170971921 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22418213 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17072636 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107134415 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177629117 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131438868 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120317446 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193371193 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168333723 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16214079 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196340665 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221907568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180840418 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209720457 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167385427 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175182875 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166305218 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15661459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110169107 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160403477 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158337464 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123920447 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139959504 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10708005 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149710996 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144048873 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134193707 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198545969 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171102003 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217467555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159052805 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148582333 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181490275 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102126665 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204699368 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179606323 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146246296 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199016849 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193940318 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212906662 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116903002 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228902601 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093035899 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125869528 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142761069 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170573154 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133657238 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108835173 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161885097 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208101531 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18134352 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17327749 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232556449 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176810741 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191758473 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095189304 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169696651 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184537765 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203188444 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154132952 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139717005 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152490485 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178435613 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155422307 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256137982 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169645462 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176477826 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234196367 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123595525 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132478344 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151179362 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177778315 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153519831 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176538107 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148121147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140422532 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160703752 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104095896 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187513663 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185551356 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163816828 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186927679 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149877281 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213414116 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100984986 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162045508 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160885641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166105539 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108866183 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175371981 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202678095 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146668219 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167186458 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216563392 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104659112 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308574779 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236146319 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196200909 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138179049 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154694496 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161167928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163015565 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172167596 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179147587 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158177328 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187175209 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159620458 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137446433 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138492911 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122364434 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151743671 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133482778 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148798134 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177962948 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13863737 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187513775 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154993078 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159498913 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172352912 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150756772 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144687531 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122245924 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244237229 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183800607 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24042957 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150478171 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179128032 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206138917 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127716509 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132044898 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106404441 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178732308 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136852824 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190966727 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214536093 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199678 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207897213 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179041419 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111257274 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121451402 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157106277 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169542653 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227723376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148899701 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120159777 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231508904 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108740875 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133608999 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167807867 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288004659 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147239074 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19461901 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108873104 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280224682 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12839933 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106417648 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163776634 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235781275 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136359067 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152093048 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16696159 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162890089 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163349533 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14852459 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218834782 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211825171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225188002 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184438211 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105436833 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15674212 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202982939 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194227523 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155814434 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137241387 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206690646 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194534967 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221878362 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114984268 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19672767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168854912 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129466968 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214809007 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134957826 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207847031 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136048368 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189770413 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152730124 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139134152 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17795309 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214237721 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113708142 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215947814 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182969305 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135176289 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106536827 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165995682 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206105007 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153885168 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100839593 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207986488 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097741697 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191886563 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263110407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134591669 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156078591 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14601587 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108030007 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154027622 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157723181 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139904333 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163624665 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204349528 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135394072 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191505258 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230325069 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172533595 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173289129 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146410343 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693777694 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129975373 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196383186 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147950408 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206924453 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151122574 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173217095 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16078532 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169982123 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222902801 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160910959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232179489 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191920192 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178484749 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133670634 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159294522 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155372035 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143977829 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154066966 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167732555 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160446923 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146186303 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179658004 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165340959 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134272267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112755026 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226629256 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12119778 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212942874 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179794693 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110853383 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173282804 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215729936 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134188715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181172721 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236127179 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115089577 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149916526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134674612 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15058793 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261953816 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097504804 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216956867 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184255847 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159516737 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169535442 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148523905 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193223736 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158400751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21221102 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115415809 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15863208 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157665426 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138823973 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130446112 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155566975 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168371428 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121775037 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187026907 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139210715 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194880309 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124697005 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144236938 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282324745 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180098364 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244716534 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107570367 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137360953 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164759015 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149627126 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177681584 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177773634 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136827219 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134579639 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108055893 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15599087 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111444483 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155880757 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190599329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163816919 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233504572 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135543063 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275996044 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113189409 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155285698 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114879153 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104248904 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150269448 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146086291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155431744 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192095236 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263009153 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147103873 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132059618 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120564796 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126084683 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133996905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162623356 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165358005 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179817776 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144852575 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081489749 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156576069 seconds)
  done (took 82.469100773 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164179427 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132511278 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147611777 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201310461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176829146 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267678055 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210804389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252894797 seconds)
  done (took 2.634303051 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093272195 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145927676 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156756577 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133066059 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091535166 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119594517 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342943318 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132381 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116544762 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121344837 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17310161 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093455592 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549904882 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090949514 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119333822 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107661152 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09161191 seconds)
  done (took 3.753394409 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.197252408 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.500867542 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.986958933 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195640456 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159855782 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11737461 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.713223973 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094399204 seconds)
  done (took 12.050615393 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115479051 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136234554 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123707032 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153189901 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141091242 seconds)
  done (took 1.767491737 seconds)
done (took 123.860137513 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097230357 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127017037 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097265711 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130309948 seconds)
  done (took 1.528561482 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094369991 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070588503 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101005794 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0752434 seconds)
  done (took 1.427772465 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189863765 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166109641 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381197658 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071910394 seconds)
  done (took 1.573164934 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113638109 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133067813 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104213127 seconds)
  done (took 1.449649892 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105938449 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129437105 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102231819 seconds)
  done (took 1.431429669 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105982652 seconds)
  done (took 1.200611767 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107707842 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136829205 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10874049 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137166455 seconds)
  done (took 1.585036825 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097451053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126526218 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108349228 seconds)
  done (took 1.426206707 seconds)
done (took 13.067230246 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102485447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418156044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413462447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109842311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720933171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381589204 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042240337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145212337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165567713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093982946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139424556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672824875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.070756041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373645834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.029069997 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372177329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6768441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122069583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091102792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121425369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026018569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091958637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121267805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092514778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702846425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398721283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121859188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370962923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092640247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125156766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383239802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122479501 seconds)
  done (took 16.996611123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094838506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17298038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098624115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122823531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123414449 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094987454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124413182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093790685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178812725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122282391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110547637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122582806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125085238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09490126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143554244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092430305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125136495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092159981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121778315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094253762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139334324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120383371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09504376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120779885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093846944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135307499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09419075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121632483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119732604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099363865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126793332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094836734 seconds)
  done (took 4.804830039 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13960489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182084761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128130907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126090382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167978578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123290339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197952194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117390635 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181865395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122492968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139423756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093227198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156538811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122083705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114119977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121541147 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096340435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121663073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092339572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122759784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139083198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092798549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122644006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093510705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123296143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107497466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123943538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120059145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09423011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126794473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099444846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124422798 seconds)
  done (took 5.136604034 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097661583 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126945949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109140228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138622556 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095479943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12551869 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097451956 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123981784 seconds)
  done (took 2.013500632 seconds)
done (took 30.049993757 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110960728 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127144828 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106434661 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134621571 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102337749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131911075 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091143606 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134444752 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133438269 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101858651 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137167346 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091818079 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122235025 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091298636 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13550916 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097502064 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133357759 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102207787 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133109991 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13178065 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095606935 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132511594 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103994338 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133120761 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104457483 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133568391 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13757422 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099592192 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123381821 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094174033 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124011517 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10417572 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12429785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104286922 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127298233 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09679343 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124262111 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094071767 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132527905 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132373778 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099180603 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132190101 seconds)
  done (took 5.994771313 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107182228 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139133041 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104668189 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080582618 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116488169 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080481931 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13762555 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079418372 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109698089 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107245818 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073978643 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105883051 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078310047 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101590746 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077192571 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074909998 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107874431 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0755127 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076346902 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105444021 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079440067 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072535185 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107820289 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079278338 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07509982 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109508805 seconds)
  done (took 3.568650089 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099912117 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134416657 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11366438 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183860651 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160984655 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099390201 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13145563 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140171047 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10913565 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119851766 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097035708 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149195614 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109512272 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129672648 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092654904 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137104274 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135289047 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094177725 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128402338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113337252 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138755086 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10232917 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141143112 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132811486 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092120053 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12247008 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09674452 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134230392 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098238576 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131856512 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096792741 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124966067 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122724024 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105273762 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125749903 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093496353 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141473336 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102880898 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129962235 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.12076561 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10038385 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121512476 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114298086 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16161995 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091882715 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12960086 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123104506 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104370506 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120745545 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11137021 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131512224 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092094537 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126549327 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092028295 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121841052 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106682567 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125018044 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095363826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131921728 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126816064 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106545118 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125377546 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108948047 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122487573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100491589 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121692876 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093623501 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121007359 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143282802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094793052 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161736997 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093349619 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123805169 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10118113 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129675035 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127921383 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093113911 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138074558 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103233921 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12565559 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102117888 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125897966 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095318381 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140606281 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123894671 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095637146 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122124965 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100669176 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123655842 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093504915 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136891577 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091849995 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126200092 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110486931 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122363873 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122883393 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099772343 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126403095 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092362105 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135846642 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098200984 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123562035 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132407301 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093673569 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124419499 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103277963 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12628655 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092116567 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127393828 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099279685 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124085678 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09382434 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126454577 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093939417 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132213263 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128789473 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098522257 seconds)
  done (took 14.819518913 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227556085 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215527063 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236747373 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264304826 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135968846 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115466051 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.242238932 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126118151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124471224 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160661144 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170415142 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181972819 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169924236 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182399012 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170549551 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092957391 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143479415 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165155943 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215156252 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258452553 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143731764 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102437015 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161241772 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159254648 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13752628 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132809373 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111046019 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134513019 seconds)
  done (took 5.8060319 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108934323 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154938747 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098229402 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145518563 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149331322 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092778723 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12880795 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093996632 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136130989 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136444034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092453622 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130633272 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.1011819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132928846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124057947 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10366293 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131635142 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096115573 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126086608 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097089641 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134434905 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102238377 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128327603 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122144812 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103092331 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122080946 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086673657 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14287052 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123475604 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116629587 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122015792 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101947752 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137015178 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09411082 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123663864 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095507774 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126093066 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096330536 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125525167 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092108154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122781751 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077597994 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122732897 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137355154 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100143971 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079828357 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130343035 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128086397 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094664776 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120628037 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096287991 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126267151 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096959752 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131305756 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09607833 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123825275 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096634155 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116177657 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100888367 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125197601 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084633971 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122214544 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09891393 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118017139 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102290962 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128057899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092173298 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125460487 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098214797 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129938055 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095348958 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130074724 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091139501 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126075512 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095942737 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129084956 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126345799 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09331019 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123116826 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094036697 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075453363 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124753127 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074111007 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12630327 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091620009 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123325699 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095589771 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130620981 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138345177 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095209077 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132605467 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094621426 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123257009 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096627734 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114274561 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097595837 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139471464 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14175615 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094964335 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121921391 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10833224 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126333634 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093035677 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106170168 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102066565 seconds)
  done (took 13.000312316 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129497994 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154737278 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125225063 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111678833 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15661919 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157797972 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101143964 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130840199 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094981379 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14155593 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093925394 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132190579 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092940242 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138009614 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156905158 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103775692 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126011103 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107507784 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127892878 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168957025 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111618398 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143381313 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109910443 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124226627 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128940174 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110520136 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160519057 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107343347 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136687189 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142560884 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108589306 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161472625 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143298488 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098510732 seconds)
  done (took 5.47701513 seconds)
done (took 49.766995638 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.213556807 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.443375049 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197685048 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104737372 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.223421078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.203310994 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.230235419 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196686957 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.340235447 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203493277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445507465 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.734534972 seconds)
done (took 58.660107536 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.224448654 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.348927376 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48505343 seconds)
  done (took 3.957427107 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.736873769 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.142278784 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455903738 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195386791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.19727113 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489114834 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.921707226 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.595327716 seconds)
  done (took 28.118942872 seconds)
done (took 42.163969439 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.21424944 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.235721325 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240595494 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.177835965 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309520543 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.221638008 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.538217016 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.242213581 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.213023516 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181636341 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.217495863 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.225919795 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199263563 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.565645046 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208822969 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197057253 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.223816842 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.715696922 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605583498 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199911061 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.23441088 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.205418258 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.205710722 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199034421 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.247981157 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.198519152 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214150674 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220269654 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.787021543 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203715598 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.212953205 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.743955161 seconds)
  done (took 190.730936521 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198571613 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.160876478 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.279210523 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.255440898 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.675294676 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.4031356 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346143979 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.752938585 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.221425918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.214474446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.442225802 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205043085 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.515950119 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.176057924 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22977426 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.257994025 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.510385121 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.523449358 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241681001 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.359273626 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.213649068 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.433997725 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.333464284 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.390452997 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.247102133 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.251492418 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22688031 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.235167938 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.394893572 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.42396855 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216146281 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.264202375 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839733972 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058858027 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.211678854 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.246080561 seconds)
  done (took 150.081913253 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199844075 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20043061 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20135994 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233477587 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19989342 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792654647 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777263723 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.713800962 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.874274196 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.641712837 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509234813 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20513915 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295680653 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2145875 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.201457257 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202062135 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216145079 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2442654 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206299978 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202110144 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794315465 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21837433 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202635709 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377860338 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.218672364 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235195601 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59418045 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.184239367 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224373616 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235276304 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535848712 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252263383 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202257707 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.61246092 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.289969214 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316214326 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204813812 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235854378 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202875873 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483288832 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202409759 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202133743 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.202563509 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206657479 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916825234 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206925804 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795458484 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207085031 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193129327 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206997594 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203522287 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.392130295 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.927564583 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224733601 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.202989034 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206230017 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20321261 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203626715 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236985008 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.39441851 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303175311 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221257407 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208232089 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236971129 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.204352025 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.453835223 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221738487 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.231296611 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.278387975 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.324758717 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797731321 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209222167 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304551592 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326181733 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205233802 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204198562 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204689957 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204665366 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316675564 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20467411 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.62747128 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.383334442 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2216932 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.645735526 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308242356 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205910009 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634460963 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209836111 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205701045 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968198006 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206209282 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30390015 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207147077 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206317741 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205518461 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.623009037 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780201717 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490482003 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211075026 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.498509311 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211121423 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.639268016 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.771453914 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.91245698 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211270221 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320110084 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.384333353 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.224112382 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207120218 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.650834446 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.211676426 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263417022 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.211154082 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605557685 seconds)
  done (took 366.249944803 seconds)
done (took 708.189671221 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.830301238 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8264717 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.928591285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.818051063 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.782601118 seconds)
  done (took 10.318550172 seconds)
done (took 11.453645987 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399658756 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.394821012 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268548961 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398061094 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240300523 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414535383 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375528587 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228506023 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310263603 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290511852 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307951026 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261972665 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241589774 seconds)
  done (took 18.265856484 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534479849 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523598109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272330832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54454737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248719409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531244794 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413948018 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417477494 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426289957 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242255491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222859988 seconds)
  done (took 16.512524555 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.53362209 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.578631783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277326189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533502449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25055904 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535895543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421050925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.439919297 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426638132 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243087341 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223538112 seconds)
  done (took 16.598114145 seconds)
done (took 52.512557002 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.218842425 seconds)
  done (took 2.354215419 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.253292889 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417251596 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238807371 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222703338 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219755196 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222769632 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223435905 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218701262 seconds)
  done (took 11.15357548 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219176216 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216478375 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218469595 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218912116 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217647946 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219695463 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216846505 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216497655 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218817165 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.216621899 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219445558 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21648156 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.220167223 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216088998 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219569925 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216740922 seconds)
  done (took 20.623940547 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219285425 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217901163 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216471587 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217727869 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217700251 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217963571 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219157131 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216765231 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217694805 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216941836 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218971952 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217807175 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218191768 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218029859 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218021491 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219413997 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218116067 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218369829 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222257062 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217567026 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217859564 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218130593 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218953639 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21895771 seconds)
  done (took 30.377083008 seconds)
done (took 65.645734372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.855782001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.96601852 seconds)
  done (took 6.960172154 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221446016 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.221354826 seconds)
  done (took 3.583124602 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.220882131 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220652182 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221641617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222209543 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220873576 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22105861 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222066779 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.220732701 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221250404 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221528042 seconds)
  done (took 13.3513343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.221931116 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221529186 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219044531 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221606682 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221704996 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219397309 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220671324 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221441318 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222199607 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219620582 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222428091 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.2207379 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221781558 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.219640718 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222286716 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220024613 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220301402 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.221092323 seconds)
  done (took 23.117174126 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.222181609 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.223294992 seconds)
  done (took 3.585760649 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.220872133 seconds)
    (2/7) benchmarking "second"...
    done (took 1.220270578 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220588369 seconds)
    (4/7) benchmarking "year"...
    done (took 1.220373695 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.220046445 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221095577 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22137272 seconds)
  done (took 9.683670204 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224382188 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405804979 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.509349952 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800642228 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225331081 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226548163 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.115456397 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.22629068 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22894695 seconds)
  done (took 14.104038151 seconds)
done (took 75.525958373 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.234702555 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.2328436 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.507911359 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.237185617 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232125832 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.505990777 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.252550293 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.344184398 seconds)
done (took 37.690996579 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.219741521 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.208846638 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.017019006 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.215257373 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.301830083 seconds)
  done (took 18.884824635 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.287259973 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558528924 seconds)
  done (took 4.987195754 seconds)
done (took 31.235981633 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225646091 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225940131 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22532417 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.224042654 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.225123428 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.223187639 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222705019 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225828177 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.221899882 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225663863 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.225904161 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.225407079 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224459055 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221952924 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222898893 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22590796 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223481075 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223407826 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223386972 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22302138 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225646848 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.222954233 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22254077 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227318095 seconds)
  done (took 30.526098934 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225822386 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.22575471 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226261029 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226770239 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223523274 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22636066 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227271705 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22334415 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226656226 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228013289 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223492726 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223732717 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226123868 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22603725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227119114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224885935 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.227127926 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22478685 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227590403 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224876932 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.226972745 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224652595 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224574579 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227484041 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224975013 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224881708 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228555011 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225114046 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226104357 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22464329 seconds)
  done (took 37.917536024 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232495194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.235046367 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227881925 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22771659 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227807681 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227457643 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227382797 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228296771 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22794075 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227366793 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227899976 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227887826 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228746092 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228188456 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228136878 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227964764 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228845063 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.229149031 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228692028 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228812314 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228131469 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229193326 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22852132 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229644797 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.229089614 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228534258 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.2289312 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229165214 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.2280233 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.228934871 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229122552 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229500548 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.228943544 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22911629 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229557612 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.230457642 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233110544 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238035824 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230108191 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229524291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229714748 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.230275175 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230566126 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.230319216 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231052331 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230433929 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230436083 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230893134 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230930187 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230660957 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230168536 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231222359 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231280436 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.231721144 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230547873 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230561258 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230318219 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23080864 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230923081 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230830715 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231445571 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231566427 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232187822 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.232060141 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232140068 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231782471 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232297158 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.231953332 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231988051 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.232779751 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.232622144 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231873867 seconds)
  done (took 89.715091946 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.232691396 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230581215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229025383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230441167 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22953438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232220109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230652054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233148243 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229734634 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231578738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232941837 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230959173 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230516152 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233924094 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232537299 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229692248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232838944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230600789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.2327321 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233531987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232910405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230738253 seconds)
  done (took 28.242481217 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232883453 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235440153 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229950146 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233740991 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230978216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233179732 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233279869 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235034511 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232908045 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231403247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230591606 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233807163 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232828619 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232385295 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231531695 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233342775 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233995353 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234347888 seconds)
  done (took 23.341832738 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232369017 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232503072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.234923763 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231922042 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231522051 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234913571 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231380519 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235724953 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235408289 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232200145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235278274 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235799654 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234349201 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232731204 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235285809 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23248917 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236560234 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232996884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237276875 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233612409 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234266586 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236422245 seconds)
  done (took 28.301629651 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236737104 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236735103 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.233383953 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233492713 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.23412789 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235715404 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236671894 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234015803 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237153895 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236735167 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233593874 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236250953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235679177 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235242325 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.234458151 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234374163 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236511021 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235344508 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237023572 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234393281 seconds)
  done (took 25.860317669 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23888496 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23812601 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238827987 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239520385 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238718316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238769342 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238310486 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238332412 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23895731 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238791189 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238251198 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238742965 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238749968 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238720125 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238308613 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239366606 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239043697 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23866186 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239045526 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238996228 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239189267 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240011841 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239102566 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242163081 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240464271 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240483406 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239545887 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240961954 seconds)
  done (took 35.85173332 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239705842 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239712318 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237373226 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238182022 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237699251 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237349223 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237663634 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238561425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239547023 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237737583 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240298501 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240132009 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241829735 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240075515 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239828219 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240081052 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240499994 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237964572 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238078648 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238919916 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240761148 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24068295 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.240982921 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240458932 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239485806 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241664766 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238695896 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2392616 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242749995 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238110225 seconds)
  done (took 38.339737435 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.259769474 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260999966 seconds)
  done (took 3.677781182 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239913982 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242283821 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.241369846 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239844893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239427124 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241564939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242189036 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239186884 seconds)
  done (took 11.084898927 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.243584069 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243439546 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243344704 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243239112 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243143871 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242503277 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249883226 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263245858 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242699289 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243544364 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250458476 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251928683 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245519436 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243433809 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242370379 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245241818 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243011847 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243614165 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244570407 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244962515 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24462271 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246678912 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245586888 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240003835 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245392257 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.253992386 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.267147007 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243034204 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243642272 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247118976 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243596562 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241988239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244604615 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.244706677 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244639181 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245641371 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252043693 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263239017 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250389718 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265825044 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246611701 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242864091 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246460136 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246660934 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2459866 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245540356 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.246472715 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243739519 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.244683228 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248512323 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251228802 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246370835 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244169913 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248160841 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247042986 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252334213 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265749215 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249593676 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255071752 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256288676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278771164 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271664792 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247756438 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246950944 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257586722 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.27191552 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253699977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26485397 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.244903883 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246987856 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252977122 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280718028 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.272630717 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247499031 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248920102 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249196451 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247334525 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248294185 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254840323 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270573015 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.249066521 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248294374 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263780277 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270525465 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248767384 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249761718 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249435265 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.250493215 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249895541 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259644348 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268467481 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249360177 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248082819 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248861847 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.249725462 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248890897 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.247855237 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248859263 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246550966 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249751839 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249654812 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253103136 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258747727 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24938269 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249336138 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256038117 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.269806267 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249255344 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255240854 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249580531 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250518135 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251588733 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256376417 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247839848 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252712951 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258518071 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249734302 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.250899423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.251158288 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250680298 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260961296 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.278049556 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.250682336 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250754117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255511475 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263210124 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252129483 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252540448 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250893206 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248221535 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249539744 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252452186 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250859427 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251667396 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25202394 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252668002 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.250143869 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.252482723 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.251945606 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252660991 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.251810254 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252412051 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252857361 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.252924933 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.253016711 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256646847 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258032313 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271799932 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253106711 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253057778 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250365175 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253266006 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253038385 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253690592 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.253099631 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25245635 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.253107197 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253092043 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25477476 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253513887 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253457992 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253298052 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258883653 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253687276 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.257140819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.253998094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252183079 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25417517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25535874 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253012126 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254751685 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25368438 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256955809 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263237319 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254413845 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254240394 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257292497 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25457615 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255422338 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25514111 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257739519 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262584009 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255066988 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260111257 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275483239 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255285738 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254830496 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255278323 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254696585 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255263955 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.25826162 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263342839 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266733355 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280265742 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256368799 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.26002752 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256249042 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259647165 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259406364 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255806638 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256337618 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254528494 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255622591 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256915722 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257533524 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256387483 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255408056 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256930903 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255988208 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256455912 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256166687 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.256774671 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256265627 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254433965 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256981471 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257695214 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.257243712 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255259902 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255258424 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25781111 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.25700853 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.257896366 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263830199 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254557032 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259075305 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258603152 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257326594 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25678923 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259123947 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259535665 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256931215 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265469258 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277311162 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.258785157 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263710689 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27679921 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257182827 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260628848 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258947381 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256038494 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260849598 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267843083 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25935858 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259843113 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259712446 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25882001 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259863397 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.264797109 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277217077 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259337291 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259610254 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260548114 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256753401 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260238834 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259799348 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259397894 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261104093 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259835097 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260069852 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260390546 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260320229 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259635677 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259439581 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262689694 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269419557 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266833434 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260696909 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262030902 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260030996 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265512498 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260610046 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260736934 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26091635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272242671 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286664292 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266871188 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280752246 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260711292 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267402202 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.282092934 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266597458 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262296451 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260568341 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261329471 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261159221 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257916563 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262070877 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261765217 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26248876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265088242 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267115559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262197961 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261242297 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262072354 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262756044 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262779084 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.260596734 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263015899 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264288088 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264170729 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.260788663 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.262127358 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268688371 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282717908 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.262250927 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261841742 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262066796 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262235421 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264555942 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263936123 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266313514 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272125473 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265555441 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272102578 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264067401 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273600617 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26456803 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266178837 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272050802 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261071142 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.262850658 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.263812706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264944401 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272268418 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283876116 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264640416 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268231045 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263648615 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.265547081 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264401238 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.265465211 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264886792 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264396054 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272444947 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284368111 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269156776 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266271183 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261369096 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26555437 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265731121 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263669049 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267984868 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265092193 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265985082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266407978 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.264753069 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.265577686 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.266502524 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26569368 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263925451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266354925 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27331697 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28685779 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270670335 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267063658 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273533444 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286320286 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272744743 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286461062 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266681296 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267521072 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265670608 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268278935 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265930497 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268059415 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267528891 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26736051 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.271216097 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267136676 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269073171 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.268270774 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26780277 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266517633 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278152493 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293156403 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269096406 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271998201 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.265736082 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268490342 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272773865 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267907833 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.266311573 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.270942787 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279605691 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276691931 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269126994 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268568114 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267438238 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268729853 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268163771 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.268608847 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268862041 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.269833298 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270363446 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.269033778 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271962334 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268923711 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268708714 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270304298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270275717 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27907733 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291340682 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269612345 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269830323 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270228371 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269101055 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270210498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269887252 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269914823 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27016551 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.270568083 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277429568 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.27611697 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272361496 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26890915 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.270458181 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269496608 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270552605 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271597204 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.270383679 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269989284 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270975353 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271004752 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269730109 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.2691332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.271807365 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271097597 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271589252 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273076516 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.277962816 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270784379 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268551132 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271972382 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271843853 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270051867 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27065155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279048251 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29664718 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282586019 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280029635 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276168116 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270923401 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274014165 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280330883 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.2710214 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27282873 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272443978 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.271816212 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272540258 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27575539 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272932917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.2775826 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292794886 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271005584 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281141796 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.29221631 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272430319 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.273617441 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276181559 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272782892 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270381012 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273411381 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272556966 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280309104 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.294069126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274010781 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274314104 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272597713 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.274710324 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278314775 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275253698 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274049022 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271067172 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.274946337 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273095888 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274190669 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271910285 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27293256 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.273050066 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278182917 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281287841 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272706062 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275690068 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274053585 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275588164 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274418123 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275673169 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.27156933 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.271493499 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.272774581 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276842151 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275370253 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.277693945 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273617249 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274573708 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277394896 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275457812 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27776957 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285403255 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282704157 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272874952 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.274033272 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276357091 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277401962 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274759264 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275274379 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276172352 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277384499 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275742881 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276287754 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276199602 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.280065792 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29224818 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295779532 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275808184 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.275827536 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279443925 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.276368698 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274135455 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.277213247 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27845472 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278921204 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284797376 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277743425 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281506878 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296849408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.278295248 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282988628 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280201569 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283338638 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280201278 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276690765 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277547971 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282633164 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294387314 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277837081 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287328899 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307745432 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.297484524 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278405795 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278151962 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276981679 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.279036231 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279651109 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279613131 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279262397 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280044778 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278454054 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.279912955 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284372403 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279643959 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281187638 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279612852 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278695256 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280275548 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278145438 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.279784614 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279152502 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280516477 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280475 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.280110127 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27934085 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291530968 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.308137322 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279837795 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279887901 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277770329 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282640217 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283154755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291351068 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288049256 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.280474916 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279764157 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281009366 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280699407 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27919599 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281121218 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280278401 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280435129 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27852375 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293366897 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308160803 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285516524 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279583805 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282376982 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281872136 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28170882 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281399462 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281742701 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.282832381 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284078851 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285828425 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281933841 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281864355 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285039803 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289843289 seconds)
  done (took 755.348500547 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280101217 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279421581 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279523546 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279641182 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279050927 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279640501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279809091 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279778762 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279649002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280023967 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28026218 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280641771 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279756882 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278783837 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280032939 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28028626 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280473019 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281212379 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280746913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280662111 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279886183 seconds)
  done (took 28.074029025 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283465807 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280402276 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280299319 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283664569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280848926 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283698036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282042948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284371046 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284255162 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281030987 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284329678 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28465469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282270295 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.280808627 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281687917 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284202614 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284177835 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282419289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284275185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283020727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284388474 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282289504 seconds)
  done (took 29.418379306 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.285446788 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285043514 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284571652 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.282842772 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285884478 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.282099822 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285570095 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286459886 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285590775 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.285671069 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.283128403 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.286150779 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292004979 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.290591916 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.286973078 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.285332469 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.42982763 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285741481 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286441016 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286017389 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.282761745 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.29086246 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.304080751 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.283396823 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28437955 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287428445 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288019022 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.286632634 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286037221 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.286607932 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290278569 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.286338761 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286031811 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28864889 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.285155773 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.287399437 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291390352 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286948246 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284431399 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.28702447 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296966552 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309884296 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287422637 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293003713 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.309584259 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.287791768 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.290766455 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296522146 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.28645369 seconds)
  done (took 64.472227239 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288386004 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.288334841 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285086129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28776236 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.28804035 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288513009 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288300399 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28861306 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285684052 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287012699 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288701336 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286787123 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285298854 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289684134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289297444 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286452458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285677361 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288436034 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286629605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285803678 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285727699 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.288873112 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289092634 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287240895 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289872485 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286400893 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285754035 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.28883129 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.285387396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286843654 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289113593 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289370904 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289375343 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.284097224 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283307998 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286693087 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286860836 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284731908 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285377078 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.284345421 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.287127292 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286864894 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.287107783 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.287610247 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283799481 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284313135 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283945338 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.286877724 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285154641 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286588877 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286795388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28378531 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287057017 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284698668 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286932614 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.287754516 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283669464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284201495 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286119503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28386204 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283749627 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286368118 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284212427 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287832927 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285668168 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284130915 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285287436 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286528029 seconds)
  done (took 88.687478725 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286830493 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286094278 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288245659 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285115661 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28621114 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285992678 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286467179 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285826641 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286292819 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286855396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286975312 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286547205 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286907865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286898562 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286470231 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286229829 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286710058 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28699425 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286522457 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286464577 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287135732 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285834969 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286829988 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286598072 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287687091 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28659674 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287657488 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287193631 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288422619 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28777648 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289081237 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286751041 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288074706 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287767167 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288194115 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288390349 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287352379 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288271674 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287557214 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287669307 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287943698 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287856745 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287863114 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288061454 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28863612 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288244472 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288593498 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287626718 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287721418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28913472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288259132 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288635615 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288510566 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288977885 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288366854 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288763849 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28873688 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288100975 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288708999 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289681226 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28892867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289029839 seconds)
  done (took 81.028605383 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288873573 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289390164 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286979934 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287486604 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288406559 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287273383 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290075557 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28987098 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288785111 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291282739 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289685566 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286945379 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288443034 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290222613 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288299199 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28795208 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28724134 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28789975 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289461341 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288132055 seconds)
  done (took 26.974110582 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287398644 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290809521 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28846473 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288487063 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291127097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289459707 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.29075272 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292169446 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288694079 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292209938 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292249589 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291198002 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288683396 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288842861 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291671461 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289322899 seconds)
  done (took 21.843904526 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289243854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291502697 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291466586 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291347738 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28992951 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289279676 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292184301 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290137753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.289704325 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.29184271 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293095522 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293774461 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293319987 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292890451 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29072259 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292132256 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289953183 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290104381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293175301 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292882257 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292164139 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291026221 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293989649 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293621793 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290674447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291481663 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289138042 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290306577 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290955503 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293368426 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291148137 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289285702 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290519076 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.2908855 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293390812 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289817807 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293529116 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293661893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293866705 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293161167 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293934792 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291603933 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293108686 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294032315 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291759198 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294253973 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291080191 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291975531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291580178 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291407315 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295300897 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294667243 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294943423 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294984734 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294864538 seconds)
  done (took 72.269849056 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295227595 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295364449 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293014444 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295370069 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295654839 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292870405 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294817154 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294246178 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293004249 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295396375 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293405493 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296915589 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292701414 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295841918 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293784265 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295812398 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294043539 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293060833 seconds)
  done (took 24.507037498 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293588909 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292916679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296378164 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293921651 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293934872 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297288749 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294764018 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29788988 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29681606 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293945479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294004399 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297290321 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29753849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298149989 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295236698 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294739928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297517733 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296975181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29468333 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294891265 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299880271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297826494 seconds)
  done (took 29.716482971 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296357818 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295608342 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296686865 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.313121301 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.315673372 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.318314332 seconds)
  done (took 9.04356601 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304437677 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296897563 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293562282 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297117186 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296916159 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293331291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293870701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293893553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295773568 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29272714 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293264552 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296792523 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296868654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29441641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295246468 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295729852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293996272 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293271818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29490626 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2974489 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295460871 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296748098 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293835375 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293948342 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294237684 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294032293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296704481 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29441424 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293346143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297591502 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296516643 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295118312 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296043914 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294770757 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298497727 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297461325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295058865 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297282538 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296136265 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294622819 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296377964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296839126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297883073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295368466 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297842845 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294971284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29617931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294643495 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295178025 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299320051 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298398935 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295494952 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298615055 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298756483 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298918275 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300562548 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297553521 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295388989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298804769 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296171761 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297030691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298275249 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295117545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296183455 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298341697 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296154901 seconds)
  done (took 86.779203644 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295163444 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296360622 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296955722 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296537935 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295517433 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296480319 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295569369 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296018254 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295932464 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295770691 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300407491 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296197565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295953859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296002879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296214056 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296418985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296581733 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296447293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296074788 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298200169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296272425 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297166472 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296162397 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297943522 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2966022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301140444 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297415419 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297627072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298240634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296796711 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298064468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299425906 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296132667 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298820574 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298076199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297432725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298307976 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298294448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297635012 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3011439 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296973554 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300018516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297907384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29813251 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298191322 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298698118 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296592485 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298525889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297805312 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29784916 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297734889 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298613404 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297993817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29775113 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297177792 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297308391 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297721925 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300438034 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298548404 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300264869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296895304 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298136249 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301948346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298225491 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298227984 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299493363 seconds)
  done (took 86.856328095 seconds)
done (took 1759.023458994 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462576857 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417664383 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30002756 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.304490484 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300948488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.314747326 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.321815254 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299603775 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.298906899 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299588125 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300377973 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487272443 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.302151893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301456625 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300392863 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393360432 seconds)
  done (took 42.618753386 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331351307 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306201786 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421131273 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327583517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329801357 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.493565852 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363513472 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.309680628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.483715028 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354352205 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.889462907 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328240461 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30432504 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.430305476 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.32275628 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493453422 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.55768748 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.888824911 seconds)
  done (took 30.14885449 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.768082312 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.335168381 seconds)
  done (took 9.315567027 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323614335 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304424981 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304465755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.301814293 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.295309092 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.295595651 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302173695 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295965769 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.006145098 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428750318 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303993538 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314441294 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.323067351 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304134067 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300594585 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3406068 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.458515049 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.301605232 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299662835 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308904567 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303173386 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395048731 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344628883 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300972154 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428519384 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.01672996 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310740327 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311239044 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437116346 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303649144 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.303207078 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302937137 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303783374 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.211810967 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.84625736 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.317566257 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327669776 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.312411782 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.302023288 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.443882591 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.30539964 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.311019495 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.297357323 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.848351456 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.440134169 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424911435 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.589011716 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.328350182 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305979626 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366988355 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31001767 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306916401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.348330147 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.10179402 seconds)
  done (took 110.445933242 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.322315603 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.700872549 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468272204 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321198857 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018547983 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.961786923 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321971451 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.594458025 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.383952423 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300222949 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.592349795 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821261149 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327736039 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.328790695 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798028332 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.342179538 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298767781 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.179992312 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321721142 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.302001119 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796668083 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30636113 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304797679 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468401087 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337371708 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759475527 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.733884972 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.790023601 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31738371 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30078869 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.770808477 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320573184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321223495 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302652538 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.569660703 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665706615 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650699981 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.321542169 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347012848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30304923 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.324884748 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752174975 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66096506 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317029517 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301961534 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756985522 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318237368 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.309719447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.306621309 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509504248 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.007210914 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30283692 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.717760053 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304795599 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.663541367 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.387815195 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318553626 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786052503 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319211744 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.384536914 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32551045 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30423129 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310478093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307412262 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302826597 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650667465 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.650823776 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306301554 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648799624 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.784123884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319908299 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.833171693 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.211104724 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317371877 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.412573268 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313998395 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.971411884 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795472845 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.328723853 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303102758 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636990133 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322618066 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.582425914 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318737701 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303466152 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824768468 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.312887652 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.356910017 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.311376161 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.313320172 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.062744797 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307212036 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.5944921 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.372937272 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303311031 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.303905825 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.312771103 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303729428 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.303854326 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.3071314 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83308563 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324340369 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.278377327 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328226946 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304392943 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310344764 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.30762059 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305519976 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531052996 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.704374809 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.329631407 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303663136 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.303790476 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307720837 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.470480578 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.305316993 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.613735416 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322498723 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305385375 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328293009 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982566837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353403583 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305802582 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.308366511 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.223990871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.516214082 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325138075 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323259165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30725835 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323181122 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.62520596 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331260275 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.324063297 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309189826 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020475086 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337908117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.329386011 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.646888592 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.30837519 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.204442471 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33438367 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306438518 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593477245 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580325117 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.582902162 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.306363111 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.306598818 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992028783 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.340891865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455987366 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328777848 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306185663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506501519 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753992287 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307616591 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.952750373 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.309470276 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528190705 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316838154 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606500631 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801588871 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325050125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312856238 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.018827144 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.00995836 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.152641695 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.308157241 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.594655119 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.289227473 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.786863677 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308587207 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309045378 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.893755385 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313361863 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316824346 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309754572 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309158419 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.377211744 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482248022 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.540085069 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315744522 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76155696 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368948859 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309687808 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331598521 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311406226 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.656422163 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.315673621 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.310427037 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.354302365 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.30949075 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317270305 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782767314 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.268087399 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.314756249 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461677582 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943457633 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.32756494 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309513958 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.840668983 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.550193854 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866307534 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.388707044 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.620998249 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.334338525 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.3486608 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971957205 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.348768446 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.825568837 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33113306 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.311311147 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909731393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.32808562 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.668754588 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.31070505 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31212387 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867688083 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328403929 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.31482921 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.554935526 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329985112 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568248954 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.311989062 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.364532855 seconds)
  done (took 1105.90279213 seconds)
done (took 1299.646036049 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312828936 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318963044 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.300117032 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318510459 seconds)
  done (took 26.478743667 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327086703 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319203355 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32014468 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318711092 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321246589 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.318499639 seconds)
  done (took 9.154679583 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.345404526 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318767883 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.321123438 seconds)
  done (took 19.213734215 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.526833844 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.609392308 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.655148345 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.522059518 seconds)
  done (took 10.544641317 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.316820622 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316529575 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317174424 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318282787 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319450606 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321754689 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319035687 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318617178 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.321157298 seconds)
  done (took 13.093737618 seconds)
done (took 79.717023503 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.291139246 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.975659352 seconds)
    (3/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.393132505 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.395439848 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.731522181 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.404146989 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.188649078 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.581816183 seconds)
    (9/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.96921198 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.413904816 seconds)
    (11/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.475539135 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.93151547 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.35141878 seconds)
    (14/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.024945406 seconds)
    (15/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.329564653 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337928725 seconds)
    (17/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.336597187 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.292766813 seconds)
    (19/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.434242221 seconds)
    (20/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.326451155 seconds)
    (21/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.575848791 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.314702509 seconds)
    (23/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.21596808 seconds)
    (24/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.686967285 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.328868804 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.879530414 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.292551223 seconds)
    (28/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.369195391 seconds)
    (29/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.152907636 seconds)
    (30/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.330270343 seconds)
    (31/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.312545877 seconds)
    (32/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.359168298 seconds)
    (33/286) benchmarking ("sort", Float32, false)...
    done (took 5.335953824 seconds)
    (34/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.476900431 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.339015902 seconds)
    (36/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.873392234 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.329920653 seconds)
    (38/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.495707664 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.355871399 seconds)
    (40/286) benchmarking ("sort", Int64, true)...
    done (took 6.315874405 seconds)
    (41/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.29482501 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.097263816 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.423384939 seconds)
    (44/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.964643909 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.153886451 seconds)
    (46/286) benchmarking ("sort", Float64, true)...
    done (took 6.326874211 seconds)
    (47/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.802863569 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.295331647 seconds)
    (49/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.339130092 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.54085946 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.241297787 seconds)
    (52/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.135834249 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.315217497 seconds)
    (54/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.313901804 seconds)
    (55/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.613842457 seconds)
    (56/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.339475593 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.850474412 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.299931504 seconds)
    (59/286) benchmarking ("sort", Int8, false)...
    done (took 4.371870155 seconds)
    (60/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.29727051 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.422207773 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.297145979 seconds)
    (63/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.427164328 seconds)
    (64/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.129939598 seconds)
    (65/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447264687 seconds)
    (66/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.570026641 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.305606184 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731169241 seconds)
    (69/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.324847321 seconds)
    (70/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.770194969 seconds)
    (71/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.379418189 seconds)
    (72/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.684171315 seconds)
    (73/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.374222409 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.773133712 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341531536 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.379262551 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.350476195 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.405282387 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.762222002 seconds)
    (80/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.702111453 seconds)
    (81/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.345771683 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.297946802 seconds)
    (83/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.130974312 seconds)
    (84/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.303366936 seconds)
    (85/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.385039409 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.812215805 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350171753 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.716563194 seconds)
    (89/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.316272226 seconds)
    (90/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.311226091 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.297650789 seconds)
    (92/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.454906342 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.290810125 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.98147522 seconds)
    (95/286) benchmarking ("sort", Int64, false)...
    done (took 5.52463598 seconds)
    (96/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.398775552 seconds)
    (97/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.706948775 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.29817803 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.418811077 seconds)
    (100/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302610408 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.299507672 seconds)
    (102/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.840053618 seconds)
    (103/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.503480299 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.338937262 seconds)
    (105/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.326659894 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.30065075 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.760978129 seconds)
    (108/286) benchmarking ("sort", BigInt, true)...
    done (took 6.339513446 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.423154873 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.298438876 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.35037585 seconds)
    (112/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382331812 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.377051792 seconds)
    (114/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.326926982 seconds)
    (115/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.404614963 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.799689481 seconds)
    (117/286) benchmarking ("sort", Float32, true)...
    done (took 6.333894831 seconds)
    (118/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.399754165 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.798751592 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.299294142 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.765445076 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.18431531 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.318222781 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.345561924 seconds)
    (125/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.51680627 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.299330825 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.769788984 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.299347835 seconds)
    (129/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.084649385 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.926177318 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.827682117 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.319003992 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.257496913 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.422007458 seconds)
    (135/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.713782006 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.321560741 seconds)
    (137/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.319821506 seconds)
    (138/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.765960898 seconds)
    (139/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346423871 seconds)
    (140/286) benchmarking ("sort", Bool, false)...
    done (took 1.83785252 seconds)
    (141/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.360257984 seconds)
    (142/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.587363097 seconds)
    (143/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.176621796 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.620339043 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.091902421 seconds)
    (146/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.599214289 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.104839842 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.319630445 seconds)
    (149/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.321559789 seconds)
    (150/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.328293841 seconds)
    (151/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.446046135 seconds)
    (152/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.138843306 seconds)
    (153/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.449752433 seconds)
    (154/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.724186095 seconds)
    (155/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.656974934 seconds)
    (156/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.705231709 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.511369302 seconds)
    (158/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.114291972 seconds)
    (159/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.302892583 seconds)
    (160/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365206785 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.429231648 seconds)
    (162/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.619390995 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.422089589 seconds)
    (164/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.304157068 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.170190185 seconds)
    (166/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363698716 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.722810481 seconds)
    (168/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302215408 seconds)
    (169/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.345558803 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.011643611 seconds)
    (171/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426865613 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.840714724 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.356067269 seconds)
    (174/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.155923694 seconds)
    (175/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.302390533 seconds)
    (176/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.327192588 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.103607539 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.303776346 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.473837279 seconds)
    (180/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.583235114 seconds)
    (181/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.4387761 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.303666475 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733909852 seconds)
    (184/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.584201588 seconds)
    (185/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.304914305 seconds)
    (186/286) benchmarking ("sort", BigInt, false)...
    done (took 6.347491301 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.320944316 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.310237738 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.227414999 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.356288392 seconds)
    (191/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.142588962 seconds)
    (192/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368556299 seconds)
    (193/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.564459098 seconds)
    (194/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.638716386 seconds)
    (195/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.966353518 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.343903881 seconds)
    (197/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.35234923 seconds)
    (198/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365542473 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.349486069 seconds)
    (200/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.852330958 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.796303386 seconds)
    (202/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.387857518 seconds)
    (203/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.305565124 seconds)
    (204/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.565667714 seconds)
    (205/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.444534791 seconds)
    (206/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.349661133 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337190869 seconds)
    (208/286) benchmarking ("sort", Bool, true)...
    done (took 5.434302175 seconds)
    (209/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.404755948 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.305979132 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.876810997 seconds)
    (212/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.31380635 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40063155 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.591443177 seconds)
    (215/286) benchmarking ("sort", Int8, true)...
    done (took 6.342861494 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.372110696 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.374488703 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.956860679 seconds)
    (219/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.532268547 seconds)
    (220/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.958962563 seconds)
    (221/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.420134448 seconds)
    (222/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339097178 seconds)
    (223/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.90282809 seconds)
    (224/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38903208 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.691097277 seconds)
    (226/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370508448 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.343480785 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.827472839 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.367955749 seconds)
    (230/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335175465 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.124059137 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.326262922 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.705076242 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.308739356 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.32795324 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.279537703 seconds)
    (237/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.336051234 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.207776139 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.046501094 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.708324785 seconds)
    (241/286) benchmarking ("sort", Float64, false)...
    done (took 5.67697457 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.547391126 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.772374755 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.027569508 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.275337181 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.216397435 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353310521 seconds)
    (248/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.766785727 seconds)
    (249/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.538462458 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.30883758 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.714854283 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.921607678 seconds)
    (253/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.975488781 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.550410468 seconds)
    (255/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.134386252 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.310147487 seconds)
    (257/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.182140621 seconds)
    (258/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353562419 seconds)
    (259/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.411012734 seconds)
    (260/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.512334336 seconds)
    (261/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.560007603 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.31509738 seconds)
    (263/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.356065823 seconds)
    (264/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.761546851 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.41653532 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.409978643 seconds)
    (267/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.309801948 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.437754033 seconds)
    (269/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.426663085 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.310465033 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.18854475 seconds)
    (272/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.413734929 seconds)
    (273/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.309890535 seconds)
    (274/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.361656946 seconds)
    (275/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.452413464 seconds)
    (276/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.455491742 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.370175541 seconds)
    (278/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.199920076 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.108662675 seconds)
    (280/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.310660804 seconds)
    (281/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.306023721 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.354946174 seconds)
    (283/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.862395317 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.353421076 seconds)
    (285/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.415480938 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416248853 seconds)
  done (took 938.067425163 seconds)
done (took 939.297704215 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.36267274 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358148083 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.341505398 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361740953 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.45136677 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.369962443 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.352008681 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.343235242 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.389898547 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.390359615 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.339746312 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.370197269 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.341855972 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.340814455 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34052296 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356891753 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.412233863 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.341694003 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360321679 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.352673927 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.358216935 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338560965 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390395529 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.369746176 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.346102413 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.345499276 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.344244916 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361266085 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453345146 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.344755401 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.345380988 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353229077 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.412402722 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340623921 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.336986245 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.361531146 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354454254 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.352809229 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.346587158 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.374490277 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.82549585 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.358781673 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.34354388 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343984414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344109983 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.347371726 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343560255 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.350084807 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357459556 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358474286 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.811696384 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.374810914 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.346847071 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345329362 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.354730246 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343237244 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.347548826 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360790958 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.362655279 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361390108 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.449010021 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.353799646 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.34583867 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360247026 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.351723053 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.852892367 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357347583 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.348816717 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.829644339 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367588044 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.851427129 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369773494 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.347111708 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358831214 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376532212 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.461434822 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343546903 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.344376747 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.351574235 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.344238861 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.354546572 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359153447 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350742334 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.346521764 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360622783 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374614991 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.355230312 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.347455924 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356026448 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.363756359 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354051765 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356903369 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350239105 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.340995758 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356399144 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.349841954 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.348686076 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349865665 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.350960234 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.357142083 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.830031303 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380996096 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.34490099 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.343531178 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.345877163 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.36059331 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.82978723 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.364395237 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.369537265 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.394762873 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.348227869 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.448997882 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.350899565 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365987284 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35726608 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.350843745 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342852754 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.444436545 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.827262491 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.378881056 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348465163 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.345594596 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367506909 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.34955358 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345077994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.455368693 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.352660252 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363554514 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.469079024 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.359050988 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.379715256 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.346340589 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.351198926 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.374090794 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365259025 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.379859125 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.351653943 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367022072 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.364805825 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.346907351 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.360614682 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.360065144 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.349875405 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.355626136 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344426331 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.374170362 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363132063 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363748246 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.370259511 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.470595657 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346882362 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.404303672 seconds)
done (took 228.219654536 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.408384137 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.337975773 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.439403904 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346154613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.449570591 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.447835378 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343640653 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.343343626 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345319145 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.724468913 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.343511419 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344035803 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.344683581 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345352994 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429112301 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345858445 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.344544419 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.689488463 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349203687 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417400536 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347925062 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.344576857 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346885302 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.731301524 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.343150884 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.345015444 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.418899182 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.34836806 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.695938236 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.344664986 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.344304504 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.696120665 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.439150027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.36640935 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357391409 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355360309 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.449330676 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.367793095 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430676391 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430557689 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44249619 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388566918 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.343336469 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.342179654 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349173367 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350160103 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346320492 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376220072 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.345201948 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.346828553 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.691203571 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358505295 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.357475276 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347953898 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.346886319 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.369883693 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347521562 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350810518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44040705 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.350586699 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412234513 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733850901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.729571927 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.349295837 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.350506798 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.348220183 seconds)
  done (took 149.413618947 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.418348017 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42373256 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.463803395 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.36915289 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.400003885 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468895813 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.369053829 seconds)
  done (took 11.170415268 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361020457 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352289946 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40149411 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401207897 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352396888 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528875314 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352231775 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363645928 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349663067 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.403785043 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.353368005 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353881328 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359225199 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.354069709 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399634689 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36439008 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465369714 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35297672 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354146952 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.504507142 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349957368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359274292 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.404283092 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.364089135 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354129036 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357803132 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.174973628 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353215539 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350114805 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352451661 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350465871 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.427249933 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.353680077 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.353756414 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349844513 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468265757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353923866 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351416594 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.352664563 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.352200173 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35347126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353329151 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354089381 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350861517 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.353388176 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.377220836 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353901386 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352905241 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355008676 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356566572 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.403787429 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354628302 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351839188 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352311586 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.409794365 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361267841 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.355077107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.351085054 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.355949055 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352662965 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505024141 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401991108 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354947377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402448969 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354668966 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355423207 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353990822 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354336091 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408463075 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.3557129 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403357845 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353434933 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542334844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.379254937 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358071469 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.358393122 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358120989 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359619004 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.350982999 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361979628 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.35368904 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357456664 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361059233 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354232462 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353740516 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.522803626 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464596773 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354061609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368367764 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363127806 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.354127747 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409502346 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.35692478 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.35501342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408556295 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471859369 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.410372052 seconds)
  done (took 155.624364834 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.36143087 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364853171 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359923256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.379040011 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376065573 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357824847 seconds)
  done (took 9.462149352 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360871147 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.360025833 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356814983 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358430348 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359873549 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357400729 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358278042 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360460072 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.362521691 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357903071 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359858364 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360253319 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359085027 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360245938 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35828783 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358467873 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359701401 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355810262 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358760262 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359791761 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.455519812 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.360408096 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360108233 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359497719 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364348127 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36002863 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366720194 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.35928742 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359557462 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.363952469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.37986981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360904792 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.361429982 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367350802 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365579636 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.362118143 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366545388 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362644029 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35819782 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361208339 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363265269 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362200171 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.361900771 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362127863 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36318809 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366930636 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368267266 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369168905 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.364578517 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363363132 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363739657 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361794374 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.36142973 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363040364 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364155551 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384000183 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368408785 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.36291959 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362457263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36350429 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364174442 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363820994 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365703395 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.367370681 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369075594 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364166312 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36283201 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368035131 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36377155 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363163907 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363842407 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360177653 seconds)
  done (took 100.481664658 seconds)
done (took 427.407265244 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.822243283 seconds)
  done (took 8.091100685 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.464120712 seconds)
  done (took 7.733438385 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.635065696 seconds)
  done (took 22.909750285 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.444366845 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.470373962 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.39354315 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.360198456 seconds)
  done (took 26.939069792 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.833280767 seconds)
  done (took 8.101809871 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.356122012 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.379682772 seconds)
  done (took 14.006394455 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.428097767 seconds)
  done (took 7.697880385 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.461624491 seconds)
  done (took 7.737571178 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.378941718 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.375252184 seconds)
  done (took 14.03813251 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.337217347 seconds)
  done (took 7.606442277 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.825237906 seconds)
  done (took 12.096663502 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.370070895 seconds)
  done (took 7.641537849 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.37636515 seconds)
  done (took 7.645977394 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.701964673 seconds)
  done (took 9.971589335 seconds)
done (took 163.489461986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.35714311 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.365309598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.364000982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.36427026 seconds)
  done (took 26.721161529 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398265337 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398687597 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399225813 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409875375 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401597033 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398643665 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391434003 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391905872 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409920349 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40084393 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401094879 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.400570152 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398040709 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390688265 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.401010759 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.400509583 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409902814 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400563976 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.390504069 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40142878 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367034108 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410581831 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403538387 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.366929111 seconds)
  done (took 34.815488895 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.887862735 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.438823648 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.518897152 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.41790055 seconds)
  done (took 7.535948028 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418401895 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420045293 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.430827432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469548214 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503051858 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.429825872 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391376336 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388303323 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37572316 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420513385 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.495287706 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437373292 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.512894642 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367550985 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564570623 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367599593 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368635812 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.421268838 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471455488 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484367039 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.369473304 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420555618 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.423827002 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436989986 seconds)
  done (took 35.662476901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.366706213 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.387141303 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.367934168 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366612444 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375656515 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367405933 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368463168 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.369791142 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.368309676 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.374547014 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.36761247 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.379706986 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366943984 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367952753 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.37369625 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.368994528 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374741457 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368197635 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.368490987 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.374817419 seconds)
  done (took 28.698653614 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.362070616 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.215262105 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.713811466 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.617316159 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.361728039 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.367253358 seconds)
  done (took 27.912550053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.4428028 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.607246302 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.373696137 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.743750894 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.835773436 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387684796 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370076429 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.628642942 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.974657007 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.965044556 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435614392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.445977007 seconds)
  done (took 20.487418359 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.367760676 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.363529702 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.370996893 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379271871 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.427213818 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.391508839 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377312321 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.364019514 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.431804693 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.450465777 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391374044 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.429083485 seconds)
  done (took 38.023272816 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451230557 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409644298 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.404371569 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385084265 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089689925 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576639802 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436202689 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12860315 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393870674 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639192965 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373509425 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461217193 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621952843 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365252539 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390110436 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.402704301 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616520381 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865438193 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367512756 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479873456 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391994739 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367655357 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.573485067 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61091505 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600324751 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34599689 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627454599 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143649612 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670506284 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384428962 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378350367 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366322574 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642111323 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053483965 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488474231 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591512496 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391183437 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933686957 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.353342733 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.576772134 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377857039 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391598457 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379854859 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369990456 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304573938 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368566335 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14533275 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40192262 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.080888786 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370286754 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645464639 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468855043 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373999066 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939743944 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427230828 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.38212664 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373612198 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464378594 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968518737 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.869188424 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390346574 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.311298701 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371705038 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.605918584 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013869648 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393697432 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.374412029 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373820428 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304331578 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.605629642 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394624529 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517551974 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.396655863 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020968332 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10608725 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397654537 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325707545 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932423755 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380655936 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.310035158 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598491445 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146768926 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306363966 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.316789955 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305214953 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119858313 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38701853 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.860311813 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400185386 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153329412 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62423417 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417223229 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396418148 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596287216 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.255064538 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372988854 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.372566519 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523702727 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394359623 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130739439 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332692519 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.377038059 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630268178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.58455887 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378596885 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.44028403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912421387 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408466656 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.391097454 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379700106 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609196804 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.999959884 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4065378 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.874002221 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398063078 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.150543458 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159657053 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382207248 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.379592229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374407183 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66472957 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.195771398 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263926975 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44285594 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377464696 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374163746 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.622772166 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231559771 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.279234762 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.589747502 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401674954 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.3914329 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.376136794 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322782912 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.37447627 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376412374 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.162327905 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599335164 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37585965 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65828602 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310317931 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523787202 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385262753 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.598229755 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.611520218 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398886924 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633772469 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37779192 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389472958 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393285613 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395201792 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476192405 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397405772 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.37641147 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655636563 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379821207 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.380678564 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.615174988 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161988642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381541216 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.383449397 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382114231 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980011491 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372305201 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384287891 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266054255 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392331024 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445402582 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384310522 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607921629 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.733086111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399605486 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.38234121 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.385784906 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599946417 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387282021 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.618124054 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465461726 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.890048479 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007830984 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40885853 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.314583995 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.089486044 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.071861253 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379915435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.5672794 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379428303 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605116185 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413281369 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385903129 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985150964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397581173 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.634741619 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.39211024 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39246115 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385609689 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380324821 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.692682016 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.909734752 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401905332 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.394658287 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523521701 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393226034 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313757374 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.89698745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384993482 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38089774 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.157006659 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415519962 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.649466252 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202965835 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659440982 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395152383 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654798307 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.741823692 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.420122179 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.379875503 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392740144 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400745452 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.40733178 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38959232 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392165312 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.621138736 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.825962799 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951050039 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120670792 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952265556 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.732449977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.408921108 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270939459 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153597209 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33969783 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038614611 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629304168 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165591183 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350875112 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900766915 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.64943826 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202434577 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657174127 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61080015 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713731041 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.405437218 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668648705 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596898385 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417451092 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386717 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318565684 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.903164067 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956694191 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413261828 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462299588 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156709365 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407902398 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.161891842 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.410779841 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.190892259 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825651335 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.953586997 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770527472 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397393417 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402541478 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210767179 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41215073 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909250614 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026001312 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404464923 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.905593645 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346011788 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614954659 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418477817 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383233821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.030116789 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.38737827 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.640924805 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662973932 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322681249 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385724445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944419633 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262363381 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392171003 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386718866 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176903152 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404260986 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693788967 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.391124788 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.731703985 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407373599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319616999 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321181307 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.079403026 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390285143 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361487098 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889439051 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.397694152 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386517564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404067013 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23515073 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642729287 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.401454476 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991780882 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631230506 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387499242 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410327874 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.390233008 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400194063 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.376010743 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.26926088 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622771338 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397012412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617586592 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.454818784 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.292678641 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.929401709 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606907455 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286239247 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388516371 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647645266 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.117842086 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.391697556 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116034247 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430876056 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393563073 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401881437 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389547966 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425338297 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477841503 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616743696 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.424921674 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399995107 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824716936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416064755 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397476889 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402138059 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482404855 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.924563672 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.726768708 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.161085412 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993745293 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150289795 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023982476 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68707638 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392247329 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397208842 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322174104 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538027883 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916698791 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66249419 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51962234 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.392706498 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412664011 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389046409 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402908745 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601944189 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663761607 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261732431 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405838655 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047649798 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.54890253 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400442657 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.60164368 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899726546 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95975544 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505666984 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403704819 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156557576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688581334 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481525994 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389363656 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979189284 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.410861514 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.18613705 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400985697 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391375273 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545225436 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669468658 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106853765 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.42631524 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.550885964 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.163764488 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.667330538 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654915215 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.880285441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623540036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027318536 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140390082 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654648414 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462463696 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622782943 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.534409209 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539595307 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.402599259 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301884126 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393821581 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236559318 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.103209707 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401618288 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004543438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674328679 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396028568 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.402535034 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415175648 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402853733 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616021106 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148349193 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624217402 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402946927 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397580113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.962901532 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011245787 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691435804 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331502777 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396533238 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652329733 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653830031 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419161362 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846469333 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.105271345 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962974576 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366850525 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414488445 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406299093 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144464028 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011660266 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.753343962 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91998973 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054017708 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411437782 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669128847 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.39915005 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395579906 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677578492 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398788296 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398747095 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629959267 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.025926704 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222047526 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.418987837 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.704680213 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.335376999 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.621252993 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411405631 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338691572 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404751703 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.844222691 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421263829 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525455268 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407378715 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.394070113 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401354792 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.134424044 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6734368 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402418986 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.395511438 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.38396258 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422617668 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499348157 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977491652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425348376 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070200011 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.747918669 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652297334 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397851485 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.383671366 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.40116354 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39809712 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114919105 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.365490188 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3983666 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988719803 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.407114014 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.413957497 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400700373 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.612191063 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608539851 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398628542 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656674785 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430898968 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418763336 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.299026647 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166220312 seconds)
  done (took 1689.043050938 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408332288 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.437163564 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.414286715 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.432408807 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430166565 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453839342 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.422302646 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433713485 seconds)
  done (took 52.739984122 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.408946107 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.557126827 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.429370635 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.407665136 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.407065155 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.413072286 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.886095553 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.429260638 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407445072 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.408662025 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.399660325 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.408762175 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.086304431 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.409434671 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.41602437 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.390089756 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.408144594 seconds)
  done (took 66.587907671 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.723476145 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.653940028 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.54950363 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.425194567 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.443769058 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.404035757 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.624379939 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.416852915 seconds)
  done (took 54.552235156 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418226043 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417599676 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418349349 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418302662 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418224015 seconds)
  done (took 8.400358478 seconds)
done (took 2092.454796407 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405633823 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407417067 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404448482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406250181 seconds)
  done (took 6.934569093 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382011251 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.126461791 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.38917655 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.402990004 seconds)
  done (took 18.610919111 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.406053902 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.401531592 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.15500361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070907794 seconds)
  done (took 5.537769899 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.152379259 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.164320357 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.148523469 seconds)
  done (took 7.777196534 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.401009348 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.40437582 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.40768629 seconds)
  done (took 20.523638088 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.701104245 seconds)
  done (took 3.013468774 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.549275092 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.597480069 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.719475572 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.738015864 seconds)
  done (took 7.916591703 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.800164259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.775435049 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.591633418 seconds)
  done (took 6.478617832 seconds)
done (took 90.913099878 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.401436201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.649828331 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.605340604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.372194544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.636255134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605509123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.61485765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.338178672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.879020819 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.868691517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.374009896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.634635011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.77467403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.650373895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.778453122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.651321589 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.636453113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.446108588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.057451638 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.292243672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.618860333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.00720281 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.203647753 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.049963181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.641253937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.553556715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.599609662 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.653044543 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.230613156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.616593226 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.556214114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403495496 seconds)
  done (took 199.713860784 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.403415571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403736876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.421020172 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414166209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.404557371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.404974384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404743221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.421330188 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.403490979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.414664622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.403530466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.413980388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.403126665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412562239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.404756102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403652059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.427199532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404873447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.423755788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407046227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407286759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430111821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.413719732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.405125821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.40597107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417071008 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.404783098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.4049111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.404470487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.429910201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.42008452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404422896 seconds)
  done (took 206.462531483 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.404870066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.423211623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408655334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429370098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.414749928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40624539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425507425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.405936193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.421519535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.420561098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.413761188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409906141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406742701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.430615924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408797544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407342721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426150776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411058686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.406966693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423497776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.408952215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.40718951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.438407623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.405503292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419573168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405495126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.423295912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41612721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414009576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.413858882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408111709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42391986 seconds)
  done (took 206.605619104 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.602437856 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.413497081 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.415741163 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.351350975 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.416120378 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.414756901 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409557884 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.662373294 seconds)
  done (took 15.003793957 seconds)
done (took 629.099179498 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.762721757 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.475807744 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.620664329 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.435895976 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.239264199 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45550259 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.435366187 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.613425 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.355135944 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.620294788 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.738010733 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.451202081 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.885339795 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432279924 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.697261526 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.539194772 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.309666937 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.435127911 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.758728202 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.018145202 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.704258614 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.917996716 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.631955771 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.35877125 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.899930348 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.910633867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.200995099 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.298223069 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452593686 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.76293084 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.164945973 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.464622707 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.502128684 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.499881579 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.556968049 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.538378197 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.43232871 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.499124292 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.644791677 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.681829396 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.992531227 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.169678856 seconds)
  done (took 95.883748575 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.400898009 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.400784738 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.399663882 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.401525792 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.403787555 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.401268901 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.400311307 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.401405675 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.401923429 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.400768579 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.401415623 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.40376908 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.400870026 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.40253516 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.401163945 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.401741656 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.402673473 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.40318065 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.400716698 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.40188027 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.402735002 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.401916573 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.401993636 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.40201332 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.402206946 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.402691233 seconds)
  done (took 37.766605262 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.419372469 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.675385665 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.845838036 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.426727959 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.419996212 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.424099967 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.503487598 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.420949668 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.422766919 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424037954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.578556091 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423341429 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459203482 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.873823046 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.424548462 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.42078772 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.421156565 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421239995 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.684374391 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43061578 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.527187329 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.42224663 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.504923059 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.43179552 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446003825 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422965981 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424713929 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.995354611 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.441731382 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.582212731 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.272322924 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.508425151 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.970898915 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.875876231 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.271883391 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431659251 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.423121808 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.58588894 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424570423 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.423506738 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.505303708 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.423615577 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.856351977 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.10554634 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.442457945 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423232854 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.017678362 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.605768938 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.683641513 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431341601 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882977613 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.426808156 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.427509767 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427501292 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.683585167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.430980766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.424535786 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.04060807 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.447998587 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.506885779 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.42564639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424375255 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.691010527 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.425524793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.686295648 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426593839 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434032423 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.445712422 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.85821072 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.427924668 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.128717549 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.444370364 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.425040138 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.585511807 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.68554622 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.052526021 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.448378174 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.696425301 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985443148 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.52287634 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.429576764 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.988332076 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.528167401 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.42924534 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.429031518 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.428301535 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.426044568 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476210064 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.504612453 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.060634284 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138377769 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.06831406 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.529335644 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.439829498 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.427204857 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.045241867 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.448235645 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426963617 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.855506863 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128743301 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.445814129 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.435344566 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.133647536 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449501286 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.510830517 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43396055 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.867727424 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.428342501 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.478890173 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.426985077 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.434622293 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.450662784 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.510226957 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.431984802 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.428676002 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.097659594 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.607793745 seconds)
  done (took 188.027445473 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420708952 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.441425118 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.421266694 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.439430561 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.42119407 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430161678 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.421954805 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.421154866 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.427809126 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.420994392 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.422097662 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.424370965 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.426143909 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.428102063 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.434526866 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429867295 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.036697944 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424384053 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.423397541 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.443192777 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.231881428 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.431955426 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.438913332 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.423249147 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.424560664 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.425406526 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.429798001 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.425619112 seconds)
  done (took 154.720196828 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429005209 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.022239322 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.449811034 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.568321999 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452094908 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.427145462 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.564964624 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.489797365 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.449846329 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.427443409 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.427656725 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.748564239 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.432620037 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.974025197 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.634025719 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.591427543 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.979552644 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448729648 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.427953078 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.428379507 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.574225608 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.439487139 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.748425365 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.023465654 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.449845323 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.025056987 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416563211 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.430899818 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429963236 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025030666 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.447848011 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.751141696 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.515279039 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.496411852 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.047222242 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.9904939 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.990782776 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.592764136 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.437401785 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.429389165 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.42980725 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.416318269 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.026863125 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.451575316 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433434024 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.016220682 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451731879 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434346275 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437490292 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.429433709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.496080475 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.516955491 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.77538935 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.032372642 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.530940426 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.443741632 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576426054 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.831343619 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.436243871 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.975388027 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.417163475 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.0326481 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.452842282 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.41724163 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.431627939 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439748778 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.591314737 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.578304981 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.985656756 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.451779048 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.975671203 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.609819281 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.432441479 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.431668335 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435761343 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.033799402 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.997301142 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.610147387 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.575002922 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.642519147 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421366311 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.433759005 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.418335061 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.51548574 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433768301 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.036041835 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.996928805 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.452964705 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434229147 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.435388788 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.435288216 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623896366 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.056837734 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.534895538 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.968168823 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.776017394 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.756745292 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.436962508 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.499378852 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.45971349 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.758537952 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.437722965 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.497934694 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.907260635 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.761949792 seconds)
  done (took 171.145129621 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.68862816 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.743144515 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.537332808 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.603358125 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.054896343 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.029973508 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.802378261 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.593174443 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559575931 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.717334603 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.679966001 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.530879851 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.663466405 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522895878 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.22137933 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.5320688 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.553411776 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.598306303 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.607507893 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.50802471 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.126016618 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.735832215 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.638947118 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.423637116 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54440653 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.234982423 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.029506096 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.973527827 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.622444743 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.827856936 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.996087691 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.609542504 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.430956475 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.153551198 seconds)
  done (took 69.433756802 seconds)
done (took 718.296669336 seconds)
SAVING RESULT...
DONE!
