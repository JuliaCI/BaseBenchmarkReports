cset: moving following pidspec: 31101
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.045390617 seconds)
loading group "string"... done (took 0.609060471 seconds)
loading group "linalg"... done (took 9.677132934 seconds)
loading group "parallel"... done (took 0.180921671 seconds)
loading group "find"... done (took 1.524224296 seconds)
loading group "tuple"... done (took 2.164757165 seconds)
loading group "dates"... done (took 1.497515117 seconds)
loading group "micro"... done (took 0.236193933 seconds)
loading group "io"... done (took 0.587204748 seconds)
loading group "scalar"... done (took 46.54608354 seconds)
loading group "sparse"... done (took 14.324291496 seconds)
loading group "broadcast"... done (took 1.254229157 seconds)
loading group "union"... done (took 13.033741047 seconds)
loading group "simd"... done (took 2.727445741 seconds)
loading group "random"... done (took 11.021418402 seconds)
loading group "problem"... done (took 1833.706457574 seconds)
loading group "array"... done (took 27.736512803 seconds)
loading group "misc"... done (took 1.219482308 seconds)
loading group "sort"... done (took 4.004142235 seconds)
loading group "collection"... done (took 20.254955858 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.774096561 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144846558 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.214439145 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.380677663 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.254000713 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15139383 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.174167294 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.583777346 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.051703435 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.289284323 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152973454 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.632111656 seconds)
done (took 6.517016368 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.301908856 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.394074633 seconds)
    (2/2) benchmarking "String"...
    done (took 0.180699554 seconds)
  done (took 1.232183258 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074349901 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.18665063 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.116126528 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.114648401 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113084003 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098121379 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.113560664 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112973285 seconds)
  done (took 1.516527347 seconds)
done (took 3.789538959 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.562406094 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.879787279 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.597823955 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189759489 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.189917184 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.177509066 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320906946 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162707483 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125699887 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.108031587 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.2062884 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.358187473 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.50224292 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.002039437 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089718504 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125344179 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096660396 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68316013 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08567172 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137189199 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.606732833 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117087875 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114433593 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124836307 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208755362 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133937747 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169212692 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093605667 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679582125 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101173332 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233172843 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082849707 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.178733998 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.260620725 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09451806 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092466454 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672560439 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.181436105 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117179189 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.093062126 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668113735 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080797067 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.247954462 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099617913 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112043488 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191592018 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119830482 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.098728041 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08697018 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.097391674 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158574231 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459664319 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105585281 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.188547975 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092209123 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.707218912 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096414823 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155527511 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138107948 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108849595 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.081639466 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.110520267 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156672728 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113324253 seconds)
  done (took 20.194902842 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.162149638 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168042823 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09330386 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157313143 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146136362 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079433339 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099138353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07718475 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129302696 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237319891 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14105119 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.190563374 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07299798 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102662568 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145428822 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251774079 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123531026 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120633386 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085722728 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106842023 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142776483 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095048371 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110341517 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110188807 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170875541 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204446363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.119836877 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122782686 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099910787 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118238303 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139777481 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148711569 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090972846 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098111888 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189515157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118502332 seconds)
  done (took 5.447807635 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.226489216 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117260211 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.238754991 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132603569 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181410074 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.174383076 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148486728 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168300521 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15745194 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.28778558 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.244717956 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182792157 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127879265 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095380716 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093275484 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078135939 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093311351 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.761771931 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182117941 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151196455 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15035882 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104479544 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097727872 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.392516926 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084807635 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096507966 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100414876 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.076491933 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226719807 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083011472 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.403382245 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117899586 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107477607 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130485736 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195524587 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134744503 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14278789 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086756888 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098175332 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.237564903 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093706781 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094801053 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127470598 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131932933 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117470499 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100361081 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111023008 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.250136454 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084777709 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121722508 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.138862562 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200116252 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.136901095 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095486262 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.374815755 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115204835 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08651281 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097835542 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.301943892 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140544667 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081537228 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094359821 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102394644 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077003353 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.457865295 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090664261 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.2643476 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079777812 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.181564787 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09804641 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089786107 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101400287 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100432604 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100083465 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095574892 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078230299 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096302471 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093972128 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083782278 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120711536 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101301713 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077671087 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162448308 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119336206 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097736011 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125111447 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098921232 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093967818 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12527191 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079596906 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09982446 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.174018356 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104265037 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119316244 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098460134 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084082486 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140953598 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096091351 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206332772 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081066571 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124114437 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100118059 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098515541 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126042314 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126712091 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079887335 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10023628 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076595055 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096952692 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158655217 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078191909 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095164689 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081924905 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112845191 seconds)
  done (took 24.893094673 seconds)
done (took 51.195268602 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.528060752 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.12220603 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122429448 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122090293 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.119854185 seconds)
  done (took 1.754778583 seconds)
done (took 2.465529336 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.390363413 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190589536 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122538927 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188275019 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107105265 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212416852 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178804272 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12000333 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.226954388 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084280192 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.201968736 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083102486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106367608 seconds)
  done (took 2.953869419 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098578392 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12376663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083555318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114728117 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095767811 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096824016 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112343935 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136815624 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09695457 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105571025 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078833931 seconds)
  done (took 1.853042389 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094556249 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117812952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083849923 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111325667 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09433826 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094392666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10966127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105323862 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113025882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107491097 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078551431 seconds)
  done (took 1.822567914 seconds)
done (took 7.331907253 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243409133 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.244516681 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.152338411 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.223855076 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.402719942 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257410094 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.644700037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167676127 seconds)
  done (took 13.242106719 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.177158471 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100995083 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086842193 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101576225 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083889122 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102612622 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099536017 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085079269 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099673167 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086169066 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101005091 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100884218 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085087288 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099758106 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083634819 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100582537 seconds)
  done (took 2.376005069 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138328521 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138057444 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091133661 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113448394 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107686667 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.08973121 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108570228 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107474875 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089092564 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104688687 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112466584 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111449436 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095346723 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10345671 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107342552 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.098344508 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104716622 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108528085 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108185368 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093383111 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112376131 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105756309 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095305921 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112074186 seconds)
  done (took 3.365677654 seconds)
done (took 19.695983257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182092254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101287145 seconds)
  done (took 1.001635088 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.151590305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153375487 seconds)
  done (took 1.028391342 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.129310624 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084389927 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142757225 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118485771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099094755 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083402189 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138588904 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099740511 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098424758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083259156 seconds)
  done (took 1.802322892 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088594641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104769861 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112625495 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.149194963 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112071453 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.208101529 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105840898 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088157575 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105023852 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100322956 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107658222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108810543 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106609626 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127194808 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104046839 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095110756 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115614294 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106810492 seconds)
  done (took 2.774418408 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083737848 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099697557 seconds)
  done (took 0.908767855 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089299573 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099923318 seconds)
    (3/7) benchmarking "month"...
    done (took 0.104052796 seconds)
    (4/7) benchmarking "year"...
    done (took 0.089601237 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100124697 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084384181 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100482848 seconds)
  done (took 1.393481987 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.551730915 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.277016611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.38176581 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.121982149 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144104824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.387608428 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.164230569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100448106 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117713663 seconds)
  done (took 3.032875248 seconds)
done (took 12.666291171 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091315115 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.23820955 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.602174534 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124579155 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.098685262 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.143724054 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.332814865 seconds)
done (took 2.364640338 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378550625 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15735783 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076056205 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098340959 seconds)
  done (took 1.438756014 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077924957 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107864063 seconds)
  done (took 0.917639743 seconds)
done (took 3.09657525 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082054824 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095271066 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081116554 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095337331 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.081472944 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098016846 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079929662 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095489504 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132990056 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.079840615 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097381495 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097775009 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081341953 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097189045 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080506847 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095977679 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080692632 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096561533 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079709425 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096256038 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080515171 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096901944 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095750137 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080142409 seconds)
  done (took 2.94870492 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108303291 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10143739 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104346855 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088440858 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105325608 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10508909 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104369903 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.085237572 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104074069 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099329268 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089744108 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105440187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099293282 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090578965 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09993027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105509105 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088831407 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100359239 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099033982 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089341536 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104261791 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100099929 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089759985 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103229891 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105722595 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104914828 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084691723 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101454757 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087815116 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10564283 seconds)
  done (took 3.701101649 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090685513 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093942384 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081239299 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107826555 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077783524 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098899965 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093665554 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079112217 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098979063 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081740112 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101351589 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081177403 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094599858 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099252187 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083991192 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101983015 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098606052 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096910002 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09428467 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083894248 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101301473 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078088621 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09846674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081386818 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097642315 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078262466 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098337317 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097628564 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083009837 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096807976 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084714053 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10284013 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081200326 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109120179 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101963722 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.081722697 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105223421 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078693778 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100640352 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094177219 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080068622 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097419362 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078503781 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107276514 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081729276 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098776301 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094399772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086811111 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100039495 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086169787 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09401101 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07858252 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101773934 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100799358 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086938784 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093560479 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083734358 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094567212 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083393115 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09772664 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094032033 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079117288 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103016314 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082478763 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122098765 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107830963 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079248999 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.101307719 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.083372093 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.104445879 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100912647 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099294416 seconds)
  done (took 7.417111343 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098188402 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110904456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083833443 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100820648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098955718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082566114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1074235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097978081 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084791432 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108368643 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082527537 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099502976 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099213432 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084203826 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099923358 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084715543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108557104 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099171095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082564389 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100553001 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09834495 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091892507 seconds)
  done (took 2.84905851 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.268841122 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089171644 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153084812 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117849086 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1241063 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117619482 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102976368 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089749677 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103242009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111484768 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094776207 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104453185 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123630673 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110565603 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093873821 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113372889 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103991623 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112456721 seconds)
  done (took 2.881251407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102242372 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103801856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127110894 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085902411 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103141729 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102751455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094765626 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118735623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101564494 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086802442 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112749855 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101845541 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086413754 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103099279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103078778 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086767483 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103839126 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101764893 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096238234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111432183 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111990929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114715377 seconds)
  done (took 3.005036643 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103678908 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102000935 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.139518887 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090011279 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10199405 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099000246 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091096697 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102055068 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110448735 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08576881 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102404383 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099953901 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.095838117 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102494844 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109160921 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086195245 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102584507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086367866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102534568 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100951782 seconds)
  done (took 2.762868878 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180112961 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11784049 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102196812 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131556413 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117462691 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101217877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132356675 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118241532 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117712129 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135281633 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101347729 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117138438 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131497256 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126506264 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101774581 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131193199 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131076578 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131767249 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117691761 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101982391 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133941705 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118257813 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131656382 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116987526 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102008296 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11803544 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116924518 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109422987 seconds)
  done (took 4.13965138 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082476332 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097485777 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082595861 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098735515 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082350586 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099226189 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082016199 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098133411 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081062848 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099259416 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.098272484 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083334384 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097987243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082256076 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098612748 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082808711 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098538455 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082523903 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098014919 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098638904 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082159239 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098730135 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082015268 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098204776 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082745441 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098893899 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082751715 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099562735 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081940407 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099021412 seconds)
  done (took 3.484085737 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096155892 seconds)
    (2/2) benchmarking "in"...
    done (took 0.128681834 seconds)
  done (took 0.978071722 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093067625 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119389114 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081884023 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100735862 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111134151 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083978289 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11146991 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1106329 seconds)
  done (took 1.566474577 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15224654 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.151911978 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091344494 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112880247 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.151473712 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.144248486 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168841972 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107468513 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10453042 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080586888 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146750575 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097509493 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089198246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103281436 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106948218 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096179857 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101494269 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110736523 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091893969 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102605993 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1057255 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09859963 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109651182 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111776382 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08260104 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109099374 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111246146 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.09734369 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102151468 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110522277 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0872645 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.101090785 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088770836 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.106199672 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100879572 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.150606257 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100381645 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102032653 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10727527 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090346059 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110695556 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.10130293 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091101098 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104004679 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109660766 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088783539 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106646865 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100414065 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081660478 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10007158 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085345575 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100339693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083149656 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107737449 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106498347 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11730757 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086273379 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102067683 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.100661122 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08389898 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104886237 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084629826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118040653 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103765447 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089883011 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107609171 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10538202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085200441 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.102562029 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08411469 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107600762 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123600426 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109725109 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090016449 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108745486 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084577192 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103711065 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108057428 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088907943 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109175312 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10599348 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092420142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108162683 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100388669 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084321548 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108469828 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101974527 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087596165 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096903494 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120853359 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086745588 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100781963 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081183041 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109358897 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101257704 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.090060553 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097017067 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090544089 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099978599 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106164609 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090728911 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104142668 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111674316 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091818123 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10802662 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10805324 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.145173072 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086386768 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10067305 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086254336 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111448928 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098970977 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092975095 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099768805 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086812884 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102482992 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107107025 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092117938 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103623633 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105992753 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091652454 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110666038 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104690117 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083117945 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101813461 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089698095 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111627652 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112585233 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087576304 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.103431926 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.102464323 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090564462 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105792942 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104696704 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090145728 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104528028 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.084202467 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103344696 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106222116 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092603925 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10077734 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104076338 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091374428 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105564171 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087562551 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108180636 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101230402 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08115786 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107705239 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103541234 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.085676218 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112302071 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102383552 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086766738 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102846607 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111409072 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086099315 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108596706 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086061372 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106689192 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108463209 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080856 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103360269 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087099591 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112163719 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102701316 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.085137288 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10204003 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107924901 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082135514 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105990043 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081636429 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102350411 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.108168107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086441633 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10560052 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084063624 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119996331 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118662803 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091604221 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106704033 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110630816 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088974742 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105298939 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106556704 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090988284 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.109314287 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107408951 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089724059 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108137235 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08432772 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.105984894 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104441098 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092022137 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099214606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086465337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098664508 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107027098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092805981 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106513219 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107583517 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086847975 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106226517 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095365374 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103841895 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.108122201 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08030129 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106772437 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112252408 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091909442 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109648221 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093250871 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104483943 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10322304 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095783297 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104599878 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107316585 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.086438652 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09913582 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082142569 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109171627 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104574103 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085460645 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100731364 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091286659 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109922444 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104021562 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081898347 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107039695 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114220626 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084233542 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107460265 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102935542 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089471065 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119803038 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099214637 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085767231 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112461354 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106818057 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084592267 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107282112 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087359847 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.108599881 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104489111 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08746141 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10578561 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092780278 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105518772 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10133356 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086199492 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.1048235 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081359303 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.104709825 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110320381 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087055042 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103834891 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114041772 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092083915 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110000333 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106238348 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090162272 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.109494466 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091522718 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106017 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109347398 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084311241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10024015 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10408408 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081828236 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103845276 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085271394 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107761466 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105464671 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088703111 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106579669 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109433463 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086399643 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109592449 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127015895 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082854425 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100636285 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105417861 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089214801 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103606181 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103145542 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086941153 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10999853 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089972093 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110852186 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103324942 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08445115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108951889 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084650848 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109999299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.110007038 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.092312151 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104125694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107632393 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08614917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115400153 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099215589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094126338 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108121431 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106134251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087591482 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106024051 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084412513 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100373051 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10444674 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091273727 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106283372 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088846572 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106735362 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105621231 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085182271 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102791071 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110922476 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086933717 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.111998854 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.08504148 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100935577 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10018717 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091248198 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110638792 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110446531 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085836719 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106311763 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092427107 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108199022 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101724865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09549484 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112689531 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091261219 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115101894 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101470229 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085836263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116288334 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103008511 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08812025 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105825079 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081721034 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111615512 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.110466084 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092297625 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106432432 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100017433 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085613649 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.111662389 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08733521 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.107583642 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105603833 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090626983 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102448104 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087985659 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.110333994 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108237832 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092421548 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110986824 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107420243 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086584367 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109888563 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085114864 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101415919 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101196975 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086982323 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111345101 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081961211 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.107945787 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.108484602 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086155819 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106668887 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089156363 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103151461 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111445256 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090321378 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106514314 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115115652 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085708275 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106354531 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089103442 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108769807 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101504805 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088209166 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108394543 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111144775 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092422562 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109643576 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106723748 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090984817 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105820464 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.091112133 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109641274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109297644 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083219584 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.112329025 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0940406 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.105526786 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10526212 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087992988 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.1034119 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106761771 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.093120334 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.1074883 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095140088 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11154855 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106909527 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090530848 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110063078 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106534626 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093983836 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10449719 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111848685 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083286556 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113795615 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087543327 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.112016344 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10521639 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082869733 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108851393 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107597406 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089310064 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112971538 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093119771 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101483422 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.1016886 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087501278 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106232201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115422542 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094588073 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106878766 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088454388 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.107117702 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105098405 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092960551 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102807234 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084980467 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108567615 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111424376 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08676431 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104030067 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108400829 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093053663 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112772489 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109123287 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083991566 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109457283 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111232918 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087741146 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104414473 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086334973 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111609213 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10956064 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086236504 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103301498 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117533681 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092665311 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11252664 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104358764 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090508914 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106781994 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086904327 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.111716621 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107785647 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090534723 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107481003 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110025829 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098605948 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101802081 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104085399 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099463479 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109561363 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112885757 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.088490009 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108059037 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093669385 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112875589 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.106105681 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082922608 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10325674 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08720899 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101709079 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105566455 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098580557 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112075437 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10715264 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089225187 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108211208 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087867678 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.106680853 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100963374 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093292194 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105373027 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115645539 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08413303 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102866621 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088587203 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110741333 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106913998 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091411434 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10628047 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088407054 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103982764 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108046378 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098000124 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10945633 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091544594 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109089155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106636646 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088862249 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117717445 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104911291 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088737405 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120220683 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.111579983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091702854 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110726666 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113581817 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09238645 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.107215731 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.092613023 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108613333 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108289889 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.092414196 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.113577353 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126188004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088584059 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103158725 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.109660882 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08685697 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103318926 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11536112 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094872892 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.112673596 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09014608 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105518486 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114094813 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095325368 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109360269 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108790378 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088600922 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109551827 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106748198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088820876 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106046196 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09364438 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114206945 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109377702 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094575976 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103903409 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118646776 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095176731 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114365756 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085391921 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102950527 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103139189 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.089028373 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11297846 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.092567445 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.108340948 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108848312 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091421374 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.110364936 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089766302 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107887047 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113112896 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091779991 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.106385984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090524615 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10864265 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110610128 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085717025 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11272358 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113170171 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09378532 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117204072 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.111064381 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088593086 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106358778 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090251948 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108432666 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110932418 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091426378 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106629715 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083028943 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111691215 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11306671 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090336781 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113855776 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115001556 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087716249 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11293583 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115356442 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.093670391 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10642464 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091231976 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108081624 seconds)
  done (took 61.103583185 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165736161 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095280882 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10833475 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088054955 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.15684003 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091338126 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108024725 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089965798 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110327848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122448718 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088585622 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108250782 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133051976 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141355033 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137297368 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124723268 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088233927 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11045418 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108457328 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09091189 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13124872 seconds)
  done (took 3.200713138 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112778238 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.128278728 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128002368 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131175748 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118109619 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123926188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107878224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126418535 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130763236 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120811797 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130363978 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125525167 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.121606291 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.100591028 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120179743 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122036769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128728183 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119774836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.107139509 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.12780938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119341672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.126851178 seconds)
  done (took 3.479717262 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096034673 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110470638 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093683178 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.106925644 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090433285 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.107739731 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117706315 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08614456 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.116235879 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107518451 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.084791455 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.107847855 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.092082323 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.108244808 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105010281 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087919017 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11783986 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091466859 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.112991566 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.087649664 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.131367275 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10675448 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.108307514 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085342665 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12191422 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.112593102 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091904975 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110856866 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.084572753 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.110814656 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.087122823 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.110340793 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112175314 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085032795 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105854461 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090551222 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.112160312 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.108294595 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087488691 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111143629 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08893518 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112455365 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11518999 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087174059 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108059594 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108567375 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09148677 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107703559 seconds)
  done (took 5.727014972 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153104427 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169176629 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.119097454 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.158184334 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13493647 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104974294 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115850323 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161768847 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.115805628 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.115710624 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136575144 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134066099 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101551779 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.123840433 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.118714956 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096600836 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118231506 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.117138463 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125787831 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096186475 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122843633 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124374589 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.135174471 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133650842 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100220937 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.115446571 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120809669 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103003468 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132707726 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125121397 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.120600387 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125367366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133133622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102674297 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116042803 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123268376 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.137576904 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.117410777 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.098033605 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113036441 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120378931 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10393088 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118156875 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136813746 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11750682 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103261864 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116756423 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112244345 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.135124158 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.102401393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129042962 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136443132 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119299323 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.116462519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105715299 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136061363 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116757071 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.115602293 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.098431332 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135360684 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.115620337 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118875626 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137329522 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102475881 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12749134 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135944312 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119692919 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120163372 seconds)
  done (took 9.206896027 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124740819 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.12013169 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135085896 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134366023 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119571833 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.098310375 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119628652 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.1196676 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117815447 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108333545 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119174693 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.228306099 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.095062011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127976635 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120397517 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119153775 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.101013585 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120650413 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12103372 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099412066 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121334317 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135607489 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120156578 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135279898 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136619096 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095269184 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120364021 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119946424 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135692064 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120291842 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136375596 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.101379078 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120115689 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134873127 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136861113 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.120588735 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091431946 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120472303 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119181313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099111338 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11531512 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134724039 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119992158 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095481088 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119952123 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120915506 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135508681 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137706125 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126855996 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109687385 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119347184 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134496345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119707543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120157658 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115405046 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.166668952 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13572831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115139519 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121198249 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134347774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136167896 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145024667 seconds)
  done (took 8.464109811 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088855569 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109155507 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088461625 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.110528602 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088823009 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110442592 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088491613 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109014173 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087871846 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109070433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108762713 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089261764 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109151167 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089342385 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108796231 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088523823 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109610706 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088896226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10884905 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109723525 seconds)
  done (took 2.817210511 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099542126 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134177229 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.113518156 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101294075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113828571 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122819538 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090908154 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114363175 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113846607 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092477332 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125440796 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126709873 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113542421 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102349752 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125390721 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.121497459 seconds)
  done (took 2.627933661 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119663118 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135092099 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.169776635 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.119021763 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.11382246 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100069889 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113321526 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.113617291 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.090659891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121378333 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.096539744 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.119327505 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.114247216 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.092046115 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.113363938 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.116992108 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.090785991 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.117925719 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.091948131 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.191872373 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100183877 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11805568 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.114575254 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.095768537 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.116873481 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.121871877 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100944296 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.114579283 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.116856028 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.094261039 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.119055376 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12539187 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.091625746 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.121055791 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113056058 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095501512 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114635828 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094403602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.119415435 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114107589 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094675195 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.117309523 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.112813061 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.095864602 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.113257872 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.093854284 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.112819851 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.123047864 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095892558 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.118499532 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.113778731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.099243709 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119275562 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126450801 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.101750266 seconds)
  done (took 7.003622793 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10653481 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117507961 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130522929 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089889885 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115766426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.094494624 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116533245 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116909038 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096827023 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111523706 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116827504 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095702066 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11695312 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115225683 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095481192 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117227601 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090562483 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115524168 seconds)
  done (took 2.786658998 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09888554 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116250011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099271829 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1136339 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.114333325 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092141625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111637285 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090761992 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112112103 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.11343842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092224649 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.113032002 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090726502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112341423 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11241657 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092404568 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112803215 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092062633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113264098 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111498013 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093022616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112363093 seconds)
  done (took 3.138325776 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105330184 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.170467266 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123716673 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.181987754 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.114903369 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.112538088 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123014825 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.093209837 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132509757 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110764301 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.090056949 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111160638 seconds)
  done (took 2.295948624 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122264858 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159351234 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117288545 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093137154 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1287314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121856908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121134564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100577957 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134435563 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140355311 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119851184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135193482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135441065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137552738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127441017 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106107029 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122047823 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122546281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094607409 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167603389 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102668099 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135996198 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123113625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121187816 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100324748 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137623164 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134522142 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13955113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122835446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134148857 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129683818 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100658007 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136183217 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14065013 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116026771 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134991533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100833191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148497684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133700074 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136268173 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117056235 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128888104 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134127248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109454959 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134944572 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122541933 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132455089 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121293157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100860019 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154788961 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131368262 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137368258 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13024074 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133915652 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136245091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154634835 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140523274 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138238723 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129778751 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14087032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137771605 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128569988 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116162813 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140837157 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130137902 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140923191 seconds)
  done (took 9.291515246 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165238893 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096596384 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123195305 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140363855 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137547914 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121264403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100100884 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122125553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121732016 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096637018 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199515393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10076978 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13744828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137381106 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121871527 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121926864 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101782124 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136832862 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117090071 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154079263 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123773691 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136897898 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137134007 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136287352 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138147346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108202949 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123368062 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123126301 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120677584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101034258 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132949519 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123464379 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138518358 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09496545 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136953569 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123709403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123587048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132128045 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100603101 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128944437 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137171954 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147430231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124036899 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123137495 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140249454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099825956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123685348 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119224065 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099799647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117749155 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13976636 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140502052 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141177958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137196917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123610566 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101248604 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123508754 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124267843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122303976 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108724646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138128559 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123700152 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158707958 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123424315 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122528364 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137601421 seconds)
  done (took 9.174324827 seconds)
done (took 166.783831182 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156316009 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.178757325 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153259677 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151281686 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10842886 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145165193 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121761678 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152021772 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108290234 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086651422 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107923894 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111731693 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154881935 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110467263 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086776636 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113211343 seconds)
  done (took 2.879307802 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211288688 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308892979 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130456902 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117028183 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095917486 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112819306 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.114716102 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095733779 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.112656593 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122550433 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090796194 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.113114594 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1224305 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091031487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112440854 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089801851 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124122354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.112429534 seconds)
  done (took 3.116596303 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122900418 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165324127 seconds)
  done (took 1.129838314 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128734552 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218642603 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301287291 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171108162 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.14105408 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13763603 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173578194 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130359099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.206884401 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13680206 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.374105392 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115936289 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121959467 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.122757383 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.128341622 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.0941912 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14788988 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.12623855 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.125529762 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095785991 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141807907 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117936863 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123642749 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.104376663 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193784728 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135313024 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116906385 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117316992 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097891918 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.125736446 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124114739 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136991402 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.135966065 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187934579 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122892505 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.208955572 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103649735 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115981829 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.126265041 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094813213 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120735269 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123288299 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13372785 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094833576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116620944 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126662747 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09525001 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117211022 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126120946 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129180784 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125523541 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101705867 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.209593327 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12641319 seconds)
  done (took 8.417398614 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.911277191 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160610557 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092567214 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.070467535 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148382481 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131841954 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.903792843 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140280756 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.282052402 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.914015886 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131207686 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128341489 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.268480133 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.275017647 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.214760149 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.380694386 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.77432449 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127230215 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122007748 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.189863537 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102249079 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147377558 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137086194 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429613502 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116369777 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112915082 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099523012 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127574253 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.204396699 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091689943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11867222 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.227582648 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287555625 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235009774 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115893496 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09050169 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113586018 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.209915128 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.305341563 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.249174472 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185861165 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109110928 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091707532 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127745827 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136768156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087925622 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206370437 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.21808139 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19668757 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118787501 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128909005 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102562611 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128603721 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.206962532 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088975627 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.399928663 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381465547 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113357198 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102776042 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135546911 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.302255957 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115802136 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264662649 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14389725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.248096492 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115396417 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852315624 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189132553 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115968094 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124161096 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122761145 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100622438 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128387127 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182409547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390601246 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133666977 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12011786 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113258609 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233896634 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113870083 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11312003 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187447054 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11687593 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124586982 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110596377 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131266089 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.21897895 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272617954 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129508274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124892788 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120765725 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106410397 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118212905 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231213443 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.278406675 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182850133 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.259695773 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129987505 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187458685 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211003672 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1275269 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193855343 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123485414 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13470614 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128717276 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25318666 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157409147 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.11407921 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098803043 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122666221 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161417279 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116701292 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100787301 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.213401012 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498209928 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.19019286 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112924542 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096368952 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124813745 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205683879 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101130288 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29530451 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128351751 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.215795667 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123030405 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088987559 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12579045 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187467289 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132443582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123503459 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130513867 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123950551 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273054242 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.257664093 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131896106 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267096021 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191230168 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12534461 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.2160723 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102996843 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.213836151 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125624472 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106017034 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116854657 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848350619 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129060062 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124273513 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097398493 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.2319818 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092343515 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115759787 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090979733 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111222782 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835768796 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117920509 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.088762958 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.11619139 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102919371 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124559958 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12361804 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12066809 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184167389 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.294418445 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11009073 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123520992 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113769711 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183563604 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118909891 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092039391 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.116128127 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113440115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103754245 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121942821 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114614472 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196259373 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.205082606 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.258417616 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572577615 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09142611 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115641721 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270112755 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115258887 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347251956 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128208134 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.26660297 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.215142875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089128245 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.401188032 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192626992 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211929745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.118926277 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216995376 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089790296 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124337389 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186039193 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114836323 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124099512 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180459447 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135594748 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131413472 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199865867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114101789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248892155 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112321494 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192380751 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118128323 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129609266 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347643398 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115651966 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136515051 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185165155 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120513746 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091319542 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.643293929 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115718637 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127440371 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103562335 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.283903504 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188300466 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125073651 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124911162 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127746611 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187094968 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.256050067 seconds)
  done (took 48.423423027 seconds)
done (took 64.801086944 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32972724 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290678369 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.341697166 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236713841 seconds)
  done (took 2.146978642 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.24053005 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.187355147 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.197849385 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113495982 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.20513036 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.113878971 seconds)
  done (took 1.924827212 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.548592549 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.447654988 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.384156415 seconds)
  done (took 2.249095634 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269262077 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.277427309 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.370451875 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.50330095 seconds)
  done (took 2.429512605 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.289392796 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141112804 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.107530701 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.18574698 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.263882841 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.316156828 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.163790213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.213531845 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.119690831 seconds)
  done (took 2.721801563 seconds)
done (took 12.343573875 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.315440363 seconds)
    (2/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.265834969 seconds)
    (3/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.365378372 seconds)
    (4/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.281374585 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.205910104 seconds)
    (6/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.333909798 seconds)
    (7/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.279918102 seconds)
    (8/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.243823175 seconds)
    (9/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.261068371 seconds)
    (10/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.333727013 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105036955 seconds)
    (12/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.134315946 seconds)
    (13/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.142353005 seconds)
    (14/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.318920025 seconds)
    (15/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.210768461 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.167797685 seconds)
    (17/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.17912671 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.277927695 seconds)
    (19/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.131733213 seconds)
    (20/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.146299931 seconds)
    (21/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.317252194 seconds)
    (22/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.172378457 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.134631432 seconds)
    (24/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.244838177 seconds)
    (25/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.232697015 seconds)
    (26/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.223241681 seconds)
    (27/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095918135 seconds)
    (28/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.135039129 seconds)
    (29/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.121061177 seconds)
    (30/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.200736505 seconds)
    (31/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.104938432 seconds)
    (32/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158211053 seconds)
    (33/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083446046 seconds)
    (34/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.105810223 seconds)
    (35/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189821631 seconds)
    (36/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.289017442 seconds)
    (37/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101346442 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.153578001 seconds)
    (39/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.167589861 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.156196589 seconds)
    (41/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.172580276 seconds)
    (42/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173306564 seconds)
    (43/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.216229876 seconds)
    (44/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083210131 seconds)
    (45/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.200278432 seconds)
    (46/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097657847 seconds)
    (47/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115805469 seconds)
    (48/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.172679661 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108864656 seconds)
    (50/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.128813249 seconds)
    (51/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.215980825 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106386219 seconds)
    (53/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.183460807 seconds)
    (54/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.21226308 seconds)
    (55/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109487881 seconds)
    (56/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.134262645 seconds)
    (57/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.164453718 seconds)
    (58/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.103464435 seconds)
    (59/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.201121321 seconds)
    (60/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.104564798 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098012889 seconds)
    (62/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.122742682 seconds)
    (63/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.171236325 seconds)
    (64/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.149417657 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122213275 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.156791695 seconds)
    (67/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120663101 seconds)
    (68/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193644559 seconds)
    (69/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.12993576 seconds)
    (70/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14274862 seconds)
    (71/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.109833603 seconds)
    (72/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12785191 seconds)
    (73/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.134607856 seconds)
    (74/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09717108 seconds)
    (75/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.105539278 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.158578198 seconds)
    (77/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083542571 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.132560084 seconds)
    (79/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219601602 seconds)
    (80/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142209799 seconds)
    (81/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119868069 seconds)
    (82/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.129145756 seconds)
    (83/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.145719117 seconds)
    (84/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144627647 seconds)
    (85/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181346054 seconds)
    (86/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113345274 seconds)
    (87/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.149126688 seconds)
    (88/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.106993926 seconds)
    (89/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083838914 seconds)
    (90/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133321645 seconds)
    (91/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121308517 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098970077 seconds)
    (93/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.126134234 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.157477408 seconds)
    (95/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086847995 seconds)
    (96/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.105777474 seconds)
    (97/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083032008 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.13265604 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098399748 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136767428 seconds)
    (101/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.106257111 seconds)
    (102/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.117983587 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.153875928 seconds)
    (104/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116465833 seconds)
    (105/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.144932199 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.180177415 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123620242 seconds)
    (108/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197356346 seconds)
    (109/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122499833 seconds)
    (110/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150279403 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114075133 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.128930096 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098101318 seconds)
    (114/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.114167329 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10837434 seconds)
    (116/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.135238011 seconds)
    (117/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205324885 seconds)
    (118/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138454721 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098217343 seconds)
    (120/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11605952 seconds)
    (121/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126887873 seconds)
    (122/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.104512353 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122064621 seconds)
    (124/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.08514772 seconds)
    (125/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.106516256 seconds)
    (126/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104700791 seconds)
    (127/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.149917551 seconds)
    (128/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.212899966 seconds)
    (129/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.119024419 seconds)
    (130/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105576364 seconds)
    (131/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114980453 seconds)
    (132/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097225693 seconds)
    (133/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.110020745 seconds)
    (134/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.083088702 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.122916194 seconds)
    (136/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081797903 seconds)
    (137/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106213724 seconds)
    (138/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.081622163 seconds)
    (139/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134402997 seconds)
    (140/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.104082786 seconds)
    (141/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.120887319 seconds)
    (142/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.138792472 seconds)
    (143/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.187589211 seconds)
    (144/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.199378224 seconds)
    (145/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.119885945 seconds)
    (146/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.139338897 seconds)
    (147/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.31876027 seconds)
    (148/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.214925299 seconds)
    (149/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.088833736 seconds)
    (150/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.18209207 seconds)
    (151/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.108632078 seconds)
    (152/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.1121149 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125021969 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123548029 seconds)
    (155/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11496869 seconds)
    (156/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.123763189 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122004159 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.113757448 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.13824853 seconds)
    (160/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.106373628 seconds)
    (161/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.125301236 seconds)
    (162/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.15189448 seconds)
    (163/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083951727 seconds)
    (164/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.180033919 seconds)
    (165/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.10962326 seconds)
    (166/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102217745 seconds)
    (167/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.114268118 seconds)
    (168/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.111577559 seconds)
    (169/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.109692939 seconds)
    (170/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.195627357 seconds)
    (171/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083775499 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.125438274 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100284467 seconds)
    (174/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107881556 seconds)
    (175/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.098448761 seconds)
    (176/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.106820018 seconds)
    (177/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.153825243 seconds)
    (178/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.102226806 seconds)
    (179/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107701185 seconds)
    (180/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084119334 seconds)
    (181/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.107566458 seconds)
    (182/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.084499553 seconds)
    (183/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.106784949 seconds)
    (184/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.092670914 seconds)
    (185/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08339152 seconds)
    (186/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.120430648 seconds)
    (187/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083960177 seconds)
    (188/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122874736 seconds)
    (189/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082391435 seconds)
    (190/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124823437 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.123846167 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091152788 seconds)
    (193/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.106883295 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103523297 seconds)
    (195/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125345451 seconds)
    (196/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.082032293 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123645087 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12318241 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110510323 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124380988 seconds)
    (201/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126177358 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114916815 seconds)
    (203/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116315148 seconds)
    (204/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136047055 seconds)
    (205/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0862611 seconds)
    (206/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.108425591 seconds)
    (207/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098659182 seconds)
    (208/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.197956601 seconds)
    (209/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.083026622 seconds)
    (210/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132902195 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157799875 seconds)
    (212/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083915418 seconds)
    (213/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.107645897 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.113967977 seconds)
    (215/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.108975733 seconds)
    (216/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091740939 seconds)
    (217/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.11571482 seconds)
    (218/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083247006 seconds)
    (219/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.106589099 seconds)
    (220/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083900883 seconds)
    (221/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1276358 seconds)
    (222/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123447687 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098933938 seconds)
    (224/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108210655 seconds)
  done (took 32.590102438 seconds)
done (took 33.476394153 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.50833035 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132457093 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10299747 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128319618 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18740689 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132039949 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111830112 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135167393 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.134412022 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100080055 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.121412139 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.134060731 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104030196 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.210100478 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106775654 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.122422785 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120413154 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.109466783 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.134842657 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.13965553 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.185983779 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095082751 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.135242159 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12042612 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.186473862 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095018045 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128175462 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128275268 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108611825 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.126173186 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128312919 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0959573 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136473464 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136065535 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093052867 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124534948 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09337731 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.117398862 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.12460632 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.103091326 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.134045105 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.125778068 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.10687754 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121203786 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.125429142 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.101248211 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118070348 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106696168 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120100125 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127778044 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095112014 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137567345 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.12541539 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093629868 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118746775 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096565564 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.133844933 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117485869 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109502661 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118484588 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120424284 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092988314 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128366969 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093011934 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.125087755 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11917192 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.101174393 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.128265069 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124289794 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096267536 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116850446 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099881557 seconds)
done (took 10.039925969 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100794348 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181006248 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.1873238 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.216611178 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151582322 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112212481 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142351017 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150904122 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.136927454 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120470421 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.15724035 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.149845385 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.193742828 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.133841612 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138340145 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.101678591 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.135681949 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.131794673 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.195195531 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146534316 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158451507 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.108197675 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158949177 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143491097 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127144146 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149987108 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.105736157 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128048217 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.125684119 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119055019 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14640942 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126248538 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.102957924 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.148611713 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136601261 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.107479358 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14024674 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.126727662 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125188232 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100558815 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141330571 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144016633 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099839651 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138256662 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127599308 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.131974128 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109174044 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134157995 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.127548378 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104498 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128119222 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157976147 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.132064329 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109091052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133410081 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.131774354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109405224 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132462873 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128099971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107718531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123701282 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126025774 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104071309 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153505634 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.129323444 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.13308546 seconds)
  done (took 9.785791911 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121315589 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160775243 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.137275075 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137346574 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.13108557 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091088811 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116454069 seconds)
  done (took 1.82298066 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093088114 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18792979 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187111439 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212511106 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.181558931 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.19795955 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141481224 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092572896 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.157331972 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128880047 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189022491 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.220490505 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.126290606 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.137137802 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.191109144 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118224468 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191857262 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092645472 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130452866 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186680197 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136362718 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.150260041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.134223034 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093868371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.179882043 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.122240005 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.245345299 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136203647 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123685291 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103423236 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132299653 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205084687 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18156441 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136883069 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123150943 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184210167 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182892698 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132617476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200070785 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.124101038 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183378176 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.104811569 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.132737471 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.133412939 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.104600928 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16700221 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.136983632 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133740512 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.104697866 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214286567 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106652148 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183863945 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.128233129 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.131746731 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.105243679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13401599 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138882905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.10644811 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215502133 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108985189 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182629435 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209375851 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183551906 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183391811 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14254087 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184149759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1810798 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103599051 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128597801 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.133090828 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183349732 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.129971418 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.108583323 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169538298 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136258776 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186178513 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185180414 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129770556 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108437093 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.125290769 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12920895 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092854498 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171782227 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135126146 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127400827 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113763428 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134452305 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.133261009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098078197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146300133 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.130919715 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133842153 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.110241942 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.131179193 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136346418 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187578451 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132411355 seconds)
  done (took 15.238880662 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096499531 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119266933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.100843687 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122165671 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120911123 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096532576 seconds)
  done (took 1.601800322 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129554847 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.135152151 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144595775 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.134280111 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191338186 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.19412388 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.196550328 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132186045 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.150043375 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.117346864 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.219096309 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197485266 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.191051419 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.13664896 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.195007604 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136383512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195797463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105641992 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.143410612 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130481544 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139174735 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11040397 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130193424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.18371699 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137446624 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.136355937 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106956909 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.142714012 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141539385 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.131750166 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110879026 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137337022 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128890066 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.107055669 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.222457686 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103076942 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129646726 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140352735 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135808562 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.111699212 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.221842565 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105114552 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.14302023 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.139822967 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106529656 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130529832 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.141316122 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133112124 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.198015162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.140594819 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.115756608 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.137415646 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.135781629 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140469071 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102939515 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133991234 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.142665941 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.194929451 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.139050566 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.130127959 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.110068753 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.138010798 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132043715 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.13926647 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.111972512 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.140301602 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.128963739 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.109303287 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131158073 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135931952 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140049502 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.111359775 seconds)
  done (took 11.177111008 seconds)
done (took 40.552974949 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.011955634 seconds)
  done (took 9.9582666 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.988286378 seconds)
  done (took 1.934374081 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.765733054 seconds)
  done (took 18.750121061 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.575471548 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.672681826 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98619819 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171888941 seconds)
  done (took 3.35448657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.007699545 seconds)
  done (took 1.978311121 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.355516483 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25968886 seconds)
  done (took 1.569960296 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.869830337 seconds)
  done (took 1.83347347 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.465823426 seconds)
  done (took 3.424422093 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.385919186 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201600403 seconds)
  done (took 1.558052616 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.677866173 seconds)
  done (took 1.645127355 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.960783793 seconds)
  done (took 36.927775359 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253145464 seconds)
  done (took 1.231920513 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31866807 seconds)
  done (took 1.28588779 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.703803574 seconds)
  done (took 4.673097908 seconds)
done (took 91.083287584 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106184496 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133800255 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108396861 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131527804 seconds)
  done (took 1.44470683 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117882083 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.136180399 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.139282102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.108043998 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.144355383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.134988977 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.105278062 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140049579 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.134799987 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.135931551 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.110406043 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.13456649 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13640284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.105000395 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.132183002 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.137219118 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.114070858 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.136126347 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.134154759 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.110677432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131831153 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.136084571 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110798965 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.131957861 seconds)
  done (took 4.039858113 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106177919 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125550793 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101451749 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12430603 seconds)
  done (took 1.434864148 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115257668 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.149702898 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148333955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.113475214 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149998221 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.148169456 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127715652 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.102133489 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129633782 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.11455545 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129944684 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154262778 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.14934435 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.107846255 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.142101882 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.124479269 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.110735012 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.149217582 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13965934 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.114959493 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12801073 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139565812 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104914055 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.146020408 seconds)
  done (took 4.115101888 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.227668228 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.118265428 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.158582052 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.191474256 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.159773213 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.130091926 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.158593903 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.113809612 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.140332312 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.134470011 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.108321999 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192252203 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.141396335 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.138959415 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.13593219 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115742588 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141715295 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.139724315 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.137379143 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119366681 seconds)
  done (took 3.880883755 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107161999 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125960231 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093473798 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12459972 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132572891 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101503762 seconds)
  done (took 1.668173712 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094229492 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118831535 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09286466 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119437312 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098620449 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.120292743 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09103838 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.120291585 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092171044 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121782179 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.118088416 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092000946 seconds)
  done (took 2.262417098 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.31019143 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096736654 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127801653 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123262696 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128728914 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096512984 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140994813 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.122840128 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.23751935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12632057 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140713652 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202124537 seconds)
  done (took 2.837838599 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233881659 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134077854 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266905286 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400864379 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174634561 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183395025 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294097793 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20796361 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210025163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154578405 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216960294 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17435639 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170357724 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199878275 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155375023 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.205958687 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193623604 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221275977 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163122394 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254800416 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182013813 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185751456 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20122766 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167054089 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151911895 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176172016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132123219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114076371 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191367117 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216494153 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194769167 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163186971 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156193146 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224184181 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269416216 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198971541 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.360948564 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120859912 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209967102 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.228073559 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287224697 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128715021 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245812463 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171109914 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117634944 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22821735 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174162161 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205069829 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148428566 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154822846 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207985375 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194710159 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.233946342 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125590026 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345809438 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163002393 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164574137 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194866536 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212460643 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239232231 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185235758 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.108141202 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228706209 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20327607 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199609974 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162834467 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189954265 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141754691 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196814626 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244130341 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20260129 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186833059 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232764245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121619178 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181792082 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212740711 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142720161 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228484353 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178876002 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105571696 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166311207 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151532276 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140405853 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.201402474 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108085845 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253528095 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121056434 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.231889508 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224422347 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174767567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179732471 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184387875 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185308842 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162231885 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.132994888 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161632427 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177639312 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17359076 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117534756 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174944047 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16085084 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142733259 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169120169 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.13479745 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174813871 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.121956451 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183877206 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210637797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.117142207 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181008926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165749863 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179316083 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189349192 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233481111 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117391046 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145831264 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215481705 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173109456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153828322 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194251778 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236978231 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185708198 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152441806 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191420058 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216933557 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156616546 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212463261 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159564694 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147501131 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170155769 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17660828 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174748461 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.172526232 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114054455 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170028935 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245233032 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.110946927 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149362618 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193285306 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142312926 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141438899 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158820053 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122321911 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.157800905 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.168048073 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.156691131 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17207816 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176812834 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169694957 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177927144 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157938382 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217830026 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144904183 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.178411847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163572724 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131914965 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206478756 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206052319 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141735369 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205826576 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190998546 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242713947 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183387515 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144002061 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201026365 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142850378 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.106547378 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185023605 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181944861 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179671161 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.237136086 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210697246 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.219561118 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.173079009 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136140406 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215859513 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194413955 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176619124 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.160361299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181710396 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190837912 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.133393669 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.109871723 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.142661403 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154130261 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143571265 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118588443 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233420555 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183215692 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20450122 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178235828 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152752382 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201612876 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.142213635 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18330557 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196305998 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151823729 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.238259213 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202336054 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185713716 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156034703 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191879595 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.133764253 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110633501 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.15135138 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188114126 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145915461 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146370348 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132519816 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230744562 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19652906 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1652921 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2472081 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19033073 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216364388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.13799365 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151353956 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217196547 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17433494 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177512048 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144419899 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179294729 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197017526 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1596032 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242967587 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183982505 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188680416 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225597467 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.17434566 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144427057 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165337645 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186486999 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15504691 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182150742 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161297412 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149016447 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169440072 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.150353729 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114957667 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230674871 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128788622 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232834274 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175163313 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194248318 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138482708 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158976742 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178330821 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159999786 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102439916 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18707761 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238157859 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162884847 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175690842 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193905521 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142655606 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329192229 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208916839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235008586 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122887537 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159757728 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17985217 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175061154 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181026429 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229018222 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158639292 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200561645 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174887092 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.156067356 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122065723 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1623689 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165912359 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170468095 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150544741 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173773795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155261912 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207529952 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158731763 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175780743 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18265293 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162870974 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17367809 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126998281 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252289191 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175145759 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200036174 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172106074 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189269142 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206385618 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136190994 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139830527 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114703266 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202112404 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146133348 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175926188 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197929889 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244470437 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177847136 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185903372 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151081342 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.137546424 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178354944 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136218958 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24532751 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155885013 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154278254 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214338164 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.165491745 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142711353 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181643368 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298710062 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159703429 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193225152 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131525764 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288699109 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112134399 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143578198 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177656831 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19006464 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.167525839 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198681222 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187289191 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16003578 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178075099 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150716386 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205275973 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253784498 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192731234 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195192856 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159683486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176134808 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181339569 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194407627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159176146 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162403355 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177657674 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203553194 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210447268 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.150003155 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182112973 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182100443 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17735512 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224767849 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118564821 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235654748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116251217 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184040803 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157725385 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139564342 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176950739 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197050723 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146510833 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194637043 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174252287 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145445728 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141548995 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169589853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17545247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158085087 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.115411677 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228942289 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.112398844 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179549442 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199862476 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145404423 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173860452 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161135165 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148687781 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130438247 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159203591 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149918206 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.185274511 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206108562 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147166126 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197508277 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191864022 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183019011 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178574802 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160431759 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679902227 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.143981137 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203714098 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162699295 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212835683 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166264467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187279015 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179527383 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16474299 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189565158 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166438791 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23967178 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185308445 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18035974 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144594594 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1592873 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160738999 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118611576 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169897295 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181373503 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155633508 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15429857 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176198534 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161909029 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.161471962 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152165803 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206616545 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164737699 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208160656 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204344364 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154870938 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186085993 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196467797 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144344707 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183247674 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192080508 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160110056 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169950454 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.148194024 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151091914 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199467058 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.107768013 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179242545 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17805406 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180698127 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182244351 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152896363 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178605559 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159035709 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179113575 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141250961 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177279886 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175676899 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118710729 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.144309806 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172016375 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177145922 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.177628024 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142812384 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.182484264 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204786469 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.109825517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14822736 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302197129 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174043593 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244200937 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172034755 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118603538 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160188594 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176007928 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173250441 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177870012 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.145422688 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145473124 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.119192796 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.201354224 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174765025 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174415388 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198470068 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18007712 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238461294 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130993333 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284084309 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154458117 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172559032 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144441691 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.117647067 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156319683 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148934015 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16358944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209552502 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19701333 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.170198053 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.15995455 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145173162 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.110616257 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146012897 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179075178 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170270258 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175634966 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161166651 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130141901 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131017949 seconds)
  done (took 86.682787976 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157351665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151300778 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.160655686 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20693962 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177975913 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270635805 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215993022 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237650455 seconds)
  done (took 2.645672022 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.135519703 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119844904 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152658188 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134074712 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.136195713 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.454779376 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145876233 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.108619427 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196836463 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.173927784 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105027808 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.684768591 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131988657 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134509541 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125404787 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132657141 seconds)
  done (took 4.130955392 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.530870148 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.565050847 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.14249898 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.267287031 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.248696393 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.195480499 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.769149595 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206223768 seconds)
  done (took 12.990896748 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138315444 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.153109366 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.354720929 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.222891651 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1727026 seconds)
  done (took 2.116278035 seconds)
done (took 131.223331253 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.111343714 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.159821085 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.137614124 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131957709 seconds)
  done (took 1.601639769 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157903247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.124336918 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095326812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121854568 seconds)
  done (took 1.572059231 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.543556125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090736345 seconds)
  done (took 1.738280861 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134712368 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.158143503 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155775766 seconds)
  done (took 1.529937144 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117437226 seconds)
  done (took 1.191199723 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.109507266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.14142984 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.194235098 seconds)
  done (took 1.523351288 seconds)
done (took 10.229963723 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.130521307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438917656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423916078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14536575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.705858789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415617453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053619007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170686475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204727262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124969286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118985717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.706687349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.039315354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347789131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02355336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.350667305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.714023657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12927778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105636859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128669079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029717962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09613238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129036514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099122425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708614816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.431570464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098239712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.392988743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126218803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103714867 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.417131806 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125415006 seconds)
  done (took 17.304218657 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144704418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138084986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128254662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103921291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128283811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109105631 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14352282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204440672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129672273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149295661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096656528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134305726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126264254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122943108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126890837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101179159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129946441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134760031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100606583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148143504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124975974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101211479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130632295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097867085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141801954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126642019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.114576206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12858111 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131560105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10507089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129133161 seconds)
  done (took 5.2075619 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150280225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.206175123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137294947 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163961816 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184716475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100020067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220884485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174063746 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.236067422 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097645418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150635473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1253726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.139882136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129446333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150313486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098397145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131736837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101163078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137353003 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130392874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120800061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.129313977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130360072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101063542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12902951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141516807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099563055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.144113156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126425984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105368293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133973542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098130635 seconds)
  done (took 5.506883099 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112816749 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143881581 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.149159327 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.123065434 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.138149989 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.112634016 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.141008152 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.135002414 seconds)
  done (took 2.144046907 seconds)
done (took 31.239421029 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125203096 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147451892 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116469237 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141531334 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.204811693 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.131291622 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.114985818 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.131529566 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112144086 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149436657 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127086096 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.105964857 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14831184 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.109069811 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.183744644 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.143867864 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.196344834 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187288128 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.133535592 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.112333334 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.135201401 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.194436344 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138317771 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.104165864 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197878253 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131519328 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.184011086 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.107439064 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.138039175 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099853542 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.21609994 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.110095358 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133185559 seconds)
  done (took 5.787137093 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202603065 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.213084385 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103352864 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.135246553 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.212842639 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.134011627 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.202740601 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10339459 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.133421418 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.102167909 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.133298628 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.204359334 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.21098257 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.226512853 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.243773221 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.214112009 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.199846437 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.241733829 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.199581259 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.218548771 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.205171083 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.102696337 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.212237147 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.216594506 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.138153354 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133129211 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.240986321 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.212657688 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.236768215 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199944695 seconds)
  done (took 6.620215188 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113958896 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145190247 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123811212 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200035066 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.172242587 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144025244 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111224045 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154724103 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155680849 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.097755551 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.138516343 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.168148913 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116844459 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138850754 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.135081927 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118867005 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157299469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.130911281 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106966208 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150066739 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.147661239 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.118187877 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145006549 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108773654 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.131295328 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140528301 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.104309913 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140974981 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136291271 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10810643 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13425644 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.132933584 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104018344 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138034736 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104223571 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.143034544 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.159070788 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108320312 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14453129 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165767389 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.106821655 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.13860643 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151984052 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175577986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102657657 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141056933 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111207908 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138579369 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.127979785 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120193992 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14414156 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129471113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122735302 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.129646847 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099285938 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136803044 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130647178 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102464908 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138865207 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131493197 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1273002 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.138294616 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134167125 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103192178 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134740524 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099826607 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.129229676 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.134417913 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124480292 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135652758 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159479257 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100641665 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.140554284 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108243961 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135065287 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138561813 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100910832 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136434317 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10858058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135702958 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138322556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104101782 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134567551 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118334236 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.152566938 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.143508354 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.14013242 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.111650171 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.13347268 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100984583 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145634334 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.131370345 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.104021683 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140441303 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130085389 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.103811456 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.141800185 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.108916927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.129389362 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149360593 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106641405 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129854962 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.116902475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132582006 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.133693309 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.111538637 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.142843871 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.099931503 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.139573441 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.141452918 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099166352 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136116107 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.133128042 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101395575 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.149965328 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.109839638 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.13509578 seconds)
  done (took 16.286901045 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.307564739 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316407272 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242980923 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.375645955 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15789734 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.20270211 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.275241351 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.264373092 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100294868 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174310624 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.225401526 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.239973096 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.132263114 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163196675 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.28321129 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.379663569 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.164837336 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177048009 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174278152 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.156692655 seconds)
  done (took 5.625091576 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126064761 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173437455 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.161840469 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.163947543 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.136576779 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.117283546 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.129285179 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.156209248 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.109477265 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138091424 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.099439653 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.146335732 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.139403493 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.111261613 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148276774 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.179110835 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135264934 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.108577339 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.154899365 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137305954 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.113619458 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.161605071 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.142798681 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160445787 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.116023368 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.14712158 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128075776 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.107304947 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.133248791 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.105868928 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.138223361 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152801196 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.136775895 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108512012 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140712371 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.111239512 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.132181629 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102163697 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.131852497 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.13377837 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.119256781 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.139077196 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.132269102 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099551795 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.143470687 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.104069754 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.142575926 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.113837593 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.143082825 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.146673655 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.112724681 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.142754968 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.136630739 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.120760342 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.133670791 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.146948768 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.114469171 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143270654 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137146857 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099300888 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.127998565 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105341262 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.136116563 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.142171299 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.11091883 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.154350666 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.145927088 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.101863395 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.137131994 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134816138 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105081646 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150553331 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159991639 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.106613194 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.133277904 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152473045 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.10487007 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122422132 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111396651 seconds)
  done (took 11.513579751 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131522311 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.138514315 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.150077931 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.139954523 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.151955418 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106485252 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.136971693 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.150936055 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.112852921 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.144336849 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.142557386 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.115239362 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157131614 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143879267 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104920628 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146989893 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.139428882 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.146567309 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152002639 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.167339078 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.147589428 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.106980925 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.145625188 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.113766934 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166985994 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.144149499 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16503204 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.111807237 seconds)
  done (took 5.008102504 seconds)
done (took 51.923816575 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.29458387 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.409551128 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.18865135 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.186888665 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.231696184 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.211587138 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.186809245 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.379276243 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.950514219 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.184247466 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.187003543 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.184070719 seconds)
done (took 27.704935457 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.210172317 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.783008753 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514024148 seconds)
  done (took 4.403954231 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.179409259 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.181833177 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.425115697 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.180439016 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205990312 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.198511588 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.180945547 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.194344621 seconds)
  done (took 15.673485729 seconds)
done (took 25.576332943 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.228398323 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.378341336 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.451455391 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.209649907 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.182712575 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.187432885 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.173937129 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.210807776 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.193919854 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.175858456 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.184106939 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.45885966 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.18799935 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.572982082 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.177289213 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.18321933 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.198192324 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.408710486 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.194049291 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.229210753 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.171750443 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.195505915 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.200793614 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.219168839 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.189500246 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.197666781 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.197042519 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.176695677 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.37072707 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.190197127 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.228476956 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.186168406 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.210634973 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.185777611 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290756351 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.208215225 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.359089192 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.180505288 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.180872811 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.181997554 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.36368088 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.588262733 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.18498781 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.187216705 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.186616902 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.240558725 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.175445881 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.914428048 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.184712863 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.177431102 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.246473417 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.585065189 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.184373473 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.188560429 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.19133568 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.416662841 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.212424151 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.205318827 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.205640931 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.186444333 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.182930329 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.192429971 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.235487064 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.196207654 seconds)
  done (took 142.251495294 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.181560808 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.18025875 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.18403542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.246388361 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.185094958 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.180139836 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.179848404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.181445968 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.180146244 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.210754189 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.185016155 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.184629596 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.18496046 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.146429532 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.185577624 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.195430727 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.185249694 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.180339276 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.186666834 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.179468527 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.182315243 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.185875126 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.200458766 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.18083645 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.216714158 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.266472352 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.222595048 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.200352026 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.184489746 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.181501398 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.225420354 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.24830136 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.781698943 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042582786 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.189211816 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.202240281 seconds)
  done (took 79.54284281 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183329116 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.181206435 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181200122 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.182767858 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.212771657 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.1820171 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.180463612 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.748019157 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.741535633 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.926837798 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.439427856 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.51418308 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.448986255 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187091744 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276372117 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.196796769 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.182072598 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.198517412 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225542526 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.186482978 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181581587 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.748448445 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.199415109 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.271859258 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.37671811 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.198265254 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214587241 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582014335 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181587753 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216452418 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.514359819 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.230487465 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183854023 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.553194228 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.427115619 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29749666 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.185099642 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215368207 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.183737972 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463812276 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182654435 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184388796 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.187163584 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852244811 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18683472 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.750107182 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187903921 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.116661878 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.184603341 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18302848 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.943562795 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.795578485 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.201199447 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.184084555 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185573784 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.185613486 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185154466 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.216382133 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.014309127 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278896976 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.20247004 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.187022627 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217416388 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185001852 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.285740532 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199665901 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.177149148 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.247327321 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.293470506 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.728840682 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182240502 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277424498 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300824311 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.1821591 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.184658416 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182475645 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.185134008 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295886129 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183677844 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.585106723 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.356029738 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.20129862 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.473577081 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.282634735 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.184846476 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.554003586 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.186897428 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.182828842 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902946666 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279652908 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183081821 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.183827953 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.182860987 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.58162091 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.727127192 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.185008678 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.419219421 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.187859795 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.180245949 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20222461 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.580551807 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.710292447 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.18333744 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854964925 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.185356513 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293540798 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.352974992 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199399276 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.182743744 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.444378067 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.187507508 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.241384909 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.183014759 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.579855721 seconds)
  done (took 364.421565747 seconds)
done (took 587.324839381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.939141707 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.884876497 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.021008974 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.918224601 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.884135007 seconds)
  done (took 10.753568455 seconds)
done (took 11.858794841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.369993007 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.371956524 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246735896 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.374219186 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216532712 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.389490986 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351601531 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20696586 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.285956228 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.261421504 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.284840106 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234567525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217276731 seconds)
  done (took 17.919329175 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.452892876 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.193307731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271663402 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.470347449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231543079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.457035329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.508196512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.193332362 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333189882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.20179295 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200632146 seconds)
  done (took 17.624298453 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.452406669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195160472 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272958388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.454941883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232871829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.459381984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.487978189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.193579046 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333921108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.201512068 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198827543 seconds)
  done (took 17.59301938 seconds)
done (took 54.245469161 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.22793255 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.352137561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218160607 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203005065 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.196644191 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.1993313 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.203421777 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.196742881 seconds)
  done (took 10.907532772 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.194330854 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.1939256 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.19440672 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.194400996 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.193620745 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.195464144 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.194066219 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.195447076 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193486601 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.194435826 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.196280401 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.194158266 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.193797203 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.195542341 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.195050741 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194392881 seconds)
  done (took 20.223757665 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.196754645 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194421071 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.195474794 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.193193879 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.194716214 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.193243049 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.197035067 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.195288486 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.194732059 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.195030039 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.197535647 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.195544431 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.195404579 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.195498466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196334357 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.197577389 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.195780111 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.194870425 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.200086067 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196492212 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.195063411 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.196240391 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.195547985 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.194653359 seconds)
  done (took 29.806731751 seconds)
done (took 62.047225084 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.20047313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.18772901 seconds)
  done (took 5.499281611 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.255632942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.259179204 seconds)
  done (took 3.627555667 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.197306492 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.194998795 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.196830573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.196427274 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.196521252 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.196573971 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.197760738 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.197343599 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.197952789 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.197633443 seconds)
  done (took 13.081406202 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.197635014 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.19653957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.19695489 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.197899146 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.197372312 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.196660693 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.197790536 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.196562118 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.197244337 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198235446 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.197831084 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.197057507 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.197720108 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.197146409 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.197978074 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.198227555 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196513087 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.197052653 seconds)
  done (took 22.66328577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211188726 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.218704299 seconds)
  done (took 3.541360291 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.338386121 seconds)
    (2/7) benchmarking "second"...
    done (took 1.239928206 seconds)
    (3/7) benchmarking "month"...
    done (took 1.313664477 seconds)
    (4/7) benchmarking "year"...
    done (took 1.304892502 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.241187381 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.219286922 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.240616646 seconds)
  done (took 10.010819603 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.199897348 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402136356 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508473714 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.816248995 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20013356 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.245212123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.029155537 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.245258225 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.251955349 seconds)
  done (took 14.01086477 seconds)
done (took 73.546188948 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.186405907 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.24626571 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.199711579 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.210590364 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.493632884 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.242406359 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.191745426 seconds)
done (took 15.88320377 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.182693604 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.185809361 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.185362178 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.214777422 seconds)
  done (took 9.883700518 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.180233747 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564599219 seconds)
  done (took 4.859061592 seconds)
done (took 15.856699339 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201222646 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.20094866 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.200946497 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.199249045 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.199151414 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.199997603 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.200427595 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.200781706 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.202184928 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.20105391 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.200341958 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200175353 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199778296 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199986311 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199264298 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.19989632 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201616307 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198382985 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201828492 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.200171988 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200549175 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.199239845 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.200895341 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.200399784 seconds)
  done (took 29.924143786 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20379101 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.201587682 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.201159383 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.199969349 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.200317508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.20094506 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.201265329 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.201928808 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.200341291 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.202037562 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202006968 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201713364 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.201036201 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.202174034 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202242411 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.203264562 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20100031 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201231662 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201954732 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.203286543 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.201503922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200561172 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.200875751 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202944216 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.201072025 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201569073 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.203568189 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.202763408 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201260759 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.202375401 seconds)
  done (took 37.168529496 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.207698271 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.208878066 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.202889642 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.202492815 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.201138173 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.202066449 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.202448524 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.203061975 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.205340056 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.203288093 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.202966313 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.202469668 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.2018138 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.205137423 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.203704483 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.204758653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.203754269 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.203272157 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.204796716 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.204353453 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.203768086 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203739791 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20501377 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.204543708 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.204805838 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.204514426 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.204305984 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.203788953 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.204145918 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.205300749 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.203841132 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.204338768 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.20454639 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.204732968 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.204328146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.204827515 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.209772294 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.209520855 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.203939376 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.204992119 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.204230159 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.205589704 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.204567456 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.205870181 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.205859608 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.20475795 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.206099943 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.204325987 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.20546287 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.204878245 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.205397023 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.20452892 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.204449397 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.205629193 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.205487408 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.20421511 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.206386175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.206066317 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.205811214 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.207007402 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.205023181 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.206903462 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.207109885 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.205998616 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.206023303 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.20706095 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.206951408 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.205096582 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.205623116 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.205618492 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.204420928 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.206253766 seconds)
  done (took 87.874416339 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.206924735 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208852965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.204958264 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.206818865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206255966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207514409 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207824484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206779907 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206977829 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.205773761 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206551327 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208370563 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207725237 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.207362343 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207184197 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207789025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.207500064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206232437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.208418135 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207777998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208567981 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207312549 seconds)
  done (took 27.680110997 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209420553 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208153578 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.207384575 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208591295 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209483255 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208831333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208599189 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209464345 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208895845 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207790298 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20741147 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208814589 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210395002 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207592061 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207381135 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210368421 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209696825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21020597 seconds)
  done (took 22.879767116 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.209194294 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.207146315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.209185451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207761647 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.208332006 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208751604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209237418 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.209039341 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.207568116 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.209049634 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.208701764 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210188707 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209721959 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208003515 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209508891 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209055923 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.208079005 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209510477 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208081458 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210015684 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208421707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208960148 seconds)
  done (took 27.715543187 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210240143 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208929002 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210414844 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.208654248 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210119309 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.210326447 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.211425901 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.209089675 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.211170486 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.210852262 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209477774 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209863579 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.211843541 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210091993 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.210114667 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210134793 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211966684 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211954902 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210008658 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.209746529 seconds)
  done (took 25.328112036 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21199036 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213002519 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.211465204 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212914049 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213532175 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.212205739 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212853552 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213144287 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211408217 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.21365101 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.213086345 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213823855 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211658455 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211835103 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21414654 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213464183 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212479265 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21356462 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213131054 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212130304 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214519504 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21386446 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214784073 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213351787 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214784483 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215006079 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213712698 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212861386 seconds)
  done (took 35.092813424 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213377909 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.214861954 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.212456115 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.212922308 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.213216402 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.212326532 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.213656354 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.212610953 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211921114 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212519761 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.213461559 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.211929274 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212597065 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.212883113 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213176438 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.213619852 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213987425 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.213569563 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213167618 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213492778 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.212747074 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21254724 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.213178598 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214013931 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213248907 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.215373737 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213884725 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213469382 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214359661 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213493019 seconds)
  done (took 37.525418663 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.261408863 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259683285 seconds)
  done (took 3.646970464 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.215776813 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215446159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214493486 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.214130343 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215245049 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215845478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.214866155 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214832835 seconds)
  done (took 10.847111063 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.210565403 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.214800854 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.214181322 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.215004935 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.213381443 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.21251307 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21886147 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.233167898 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.210830637 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.212130575 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217874203 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217527237 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.214211882 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212653003 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.211423735 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21466191 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.215147573 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21648354 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.215431355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.216932078 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215402775 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214412497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213319859 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.216199859 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.214103931 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.221333057 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.234310223 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.21764267 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213275737 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.215607203 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.213271915 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.217949619 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.215758705 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.217066892 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.216672417 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.216941264 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222145825 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23177764 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220879301 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236145326 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.217768345 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.217524726 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.215007147 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.213847198 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215259275 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.218097884 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.218651377 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.21679533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.214245457 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.216776048 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.222839021 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212641891 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.219020394 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219149282 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.215443113 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221198168 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235162152 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.217728525 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.221821814 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.224151882 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.244039817 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.240170159 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.216598558 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.219299754 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22507513 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.23318861 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222161092 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.236959917 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.220271466 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219904206 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222060003 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245096792 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239512221 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.218957826 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220371086 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.221114946 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215841203 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220338475 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223496561 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.235401255 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.218988503 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218773608 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225937073 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232785107 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.216254915 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.220191133 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.219436789 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.221336773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.21682799 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225123559 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.237835831 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.220525672 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.216696685 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.217912593 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.217996643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.220279309 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.217066738 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217852181 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220471179 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22159072 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221026953 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.220796263 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.224194178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222358602 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220092018 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22376845 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.239431029 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217791168 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.223777695 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.222702396 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222032401 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.219682323 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.223379516 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.222616092 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220356349 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.224970399 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223187459 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.218880071 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.22105346 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.222565079 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226035615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.238829406 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.223284107 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221867372 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.222705858 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.23092615 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222451801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223209271 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.223640149 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222691521 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222501463 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.22124655 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.223189366 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.220292482 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222874062 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221149504 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22383392 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.224323091 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223340503 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220970663 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.220724771 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.219591892 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.220028437 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.222151129 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.22311128 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.222274006 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225280822 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.23915865 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.222862797 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220828852 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223870534 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225089942 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.221736999 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223078993 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.220406033 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223995412 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220705773 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.225147572 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224925535 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.22515765 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223352876 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.223030014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225566106 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223860651 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.224370626 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.221410689 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.224729132 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.224765274 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225243156 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.219947477 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.225024862 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.220931497 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225822184 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.231139992 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.225749595 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225299669 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.225133488 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227063347 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22524404 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227757229 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225117385 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.228067428 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225695082 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.22840894 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.245745586 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226872644 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.227406671 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.223025145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.222170348 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226918962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.22681717 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232809142 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234723356 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24890036 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.223897356 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229147151 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.223971707 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.231639844 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.226951375 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229043716 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227525912 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22692917 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224667632 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226585276 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.225904477 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.227233088 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224248827 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.228278115 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.229461059 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.228137405 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229259712 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.224056033 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225101853 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227785617 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228934123 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2277303 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.225848955 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227338785 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.224826724 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.226257414 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.228297254 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228899175 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.23060983 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.228769753 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226674089 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226734515 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.225414225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223708272 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.229200737 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227125713 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.225651762 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232224056 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245094009 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.226658617 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231760106 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.244299094 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.225951104 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228649544 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230476334 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.229097565 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.228851893 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.236472219 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229857261 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229534561 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.229202985 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226982616 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.698462955 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.230743824 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248478925 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.226589206 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.231119135 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.228538665 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230688595 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.226546917 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.227133834 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226377916 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229969297 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230968076 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.23250138 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229543181 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230488084 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.23129422 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.232643411 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230048054 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.236937623 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.23343171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.228368761 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229275576 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.228720094 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233607013 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.228146877 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.231080574 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.227983899 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240265724 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.256054426 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234997048 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.247412145 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.234859182 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236301082 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24805438 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.230684748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23008589 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231091393 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229491741 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229175708 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232733862 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229441006 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233095984 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230618542 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230135857 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.23429546 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232856371 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.227708514 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.233257436 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.232746963 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.232480895 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.227340051 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.232988422 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231277454 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231830377 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.230264205 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.230012454 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234856227 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248890033 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.230846541 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229906669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.228838742 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230160765 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231414643 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.233114473 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232115082 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238483383 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.233079946 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.236454355 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.231121644 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238481625 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.234912471 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233962833 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.240463614 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234171135 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.2301586 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.231318785 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.235520937 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238800913 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.252916829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.231771699 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.235875362 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233550316 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.23317513 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.234247897 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234347182 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235824168 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234217469 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24150921 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249908146 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235859449 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234679214 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.236323427 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235371175 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.235927137 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.232072366 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235573016 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.236424699 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233783986 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.233151721 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.232562709 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236024061 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.236578353 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.236443209 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23669664 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236077484 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237875763 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.252391244 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239527791 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.236569688 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24127441 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256027482 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238651027 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.255884116 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.233654411 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.236550847 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.236808233 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235853597 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.233443342 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235764655 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.237356468 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.234590848 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.24235431 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.238385715 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.236260226 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.235148327 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.237699752 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.234019224 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243686572 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253822432 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235789349 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241444473 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.23864841 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.23640913 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.241222314 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.238609528 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.23244367 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.236321839 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243160595 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243137907 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.235521266 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.239155367 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235053468 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239396794 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.238554678 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.239637578 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.239447224 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.239494735 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.236525056 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.239978962 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238171086 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23995002 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.23653217 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236197307 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237371935 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.244230788 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259010525 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237813784 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23894872 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.240840413 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.237294613 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.236520523 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.23907019 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236391688 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241772694 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.237414068 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241357434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.240326979 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239665008 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236986183 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.239496231 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.235513271 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237063738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242660147 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.239367306 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240258747 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.236913071 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.241362278 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.238303279 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236801077 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242479503 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.237320176 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242968874 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23958319 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.243033544 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237547567 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.240627998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242291537 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243252866 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.236649049 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.239819471 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.243688396 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258979029 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.246259034 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245406053 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.245612667 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.238912951 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240555354 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.243597402 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238533226 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.240197497 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.240993417 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24006547 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.238641877 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.242471096 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242395218 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245773107 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.257812485 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.238317907 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246803276 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.258620647 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242780743 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.24050095 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243142033 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.241059411 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.245106584 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24386815 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241452557 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246821747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.259470915 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243768617 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24157857 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.239906683 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241579533 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247632225 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243895819 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242099191 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.24349507 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.24181368 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244145841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245558455 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.244276274 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.239664954 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241390553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244085376 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246002737 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.244848657 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244035193 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.240603304 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.243207746 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244336512 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246051521 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.244800296 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.245486374 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.240790115 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245003035 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241726007 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244738352 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.240737924 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242168621 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.248748414 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246227803 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243532718 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.254533552 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.253093837 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.246555474 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.24239613 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243361665 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.24499244 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246159402 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245004688 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243253274 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243529616 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24666503 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245716876 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.247800717 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245660297 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257404754 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.266290572 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243634985 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244338157 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24694195 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.247755237 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.248397925 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.248606398 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.246357404 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246912408 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.253078235 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248584698 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250893224 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26310297 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.244214431 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.24975405 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.248122535 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.249251188 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.248178391 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24726787 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.249102817 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248740537 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.257313453 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248483466 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253219077 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269107344 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.265638753 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246391016 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.249117484 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244221463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.249623005 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246660886 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249842244 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.248846903 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25001738 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249580411 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.245932025 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25062359 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247905283 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249048365 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.250213624 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244763587 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.24794846 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.250146524 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250295879 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.249324968 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250212172 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249479896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.24938493 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244871041 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2584064 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.273422021 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250159717 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.250056254 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.24868614 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.25097702 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248408964 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252525784 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.256168226 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.250603959 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.251008286 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248238943 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249631926 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252449579 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.24708974 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245455041 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247222529 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252373939 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.257211879 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277430034 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.250521516 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.246597632 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251886052 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253024981 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247932889 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251098637 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249880309 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.247917404 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.250431768 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253907394 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.253661687 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251787176 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.250532995 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.257610266 seconds)
  done (took 737.240774267 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251740071 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252179466 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252706214 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252487463 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252116334 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252463601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252765878 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252985697 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252756649 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252392624 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253968029 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253567949 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253165983 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25189898 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253738683 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253022417 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253885337 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253196661 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252947611 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252817074 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252510136 seconds)
  done (took 27.471358065 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.252577591 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25367331 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252903458 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254953957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2531827 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254048077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254525525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254169761 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252836742 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254356037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253815029 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253465904 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.253049002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.254439203 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253236197 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254286116 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25436832 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253873563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255332665 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253995231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255272308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255935085 seconds)
  done (took 28.749598808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.252999422 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.254582197 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.250758036 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.254837655 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.255435713 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.255854084 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.254021339 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.254622301 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255340087 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.251852799 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.250624907 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.252610094 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256370629 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.260574118 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.253650516 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.255987535 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.255173332 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.255185852 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.255792749 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.255635529 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.256784041 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.27484056 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.256866988 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.251258345 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.255752125 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.256352283 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.256971757 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256533765 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.254036396 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.257417411 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.255790657 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.25227806 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255031075 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.252438554 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.254777116 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.259884223 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.255083784 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.256765162 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.256867058 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.262184361 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.272487575 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.256119967 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.259239002 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.276454085 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.257791309 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.255822925 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.26161673 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.257117617 seconds)
  done (took 61.491123195 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.843882494 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.867300054 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.864230431 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.864849865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.863971526 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.863872427 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.863220044 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.868554476 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.859781435 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.862016438 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.861692005 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.864786602 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.866711197 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.862358979 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.858727329 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.864307449 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860725739 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862262934 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.86515383 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.871349206 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.862889288 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.865835724 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.86777938 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.865486984 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.871413277 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.869868312 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.867536949 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.868414751 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.869404911 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.863524985 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.869176447 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.868098492 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.871558901 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.862598219 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.869601884 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.866141562 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.876001253 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.868829433 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.870094619 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.870671688 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.870077901 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863314076 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.86636765 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.874309231 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877709725 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.870473719 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.87176707 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.870770842 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.871324591 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.873980148 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.870743639 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.868843803 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.871022755 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.866809264 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869112197 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.873042295 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.87282473 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.874585766 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.871014422 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.871493008 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.869802697 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.876940481 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.873864386 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.869614767 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.87043768 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.872473211 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.876339246 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.869022841 seconds)
  done (took 128.19097616 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261355376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.261869002 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2617443 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26252559 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262194138 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262593487 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262397007 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.262687206 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262436705 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26189908 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261763995 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261271026 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263171266 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.262728528 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261969188 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260911402 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262369539 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261574644 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262900923 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26366008 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262344212 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262322502 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264472757 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263852134 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263050058 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261801554 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262045905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261883978 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262216694 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262710107 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263133548 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.262311905 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26307201 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263954608 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26349757 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264174792 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264330009 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264588054 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265406821 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262440324 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262982828 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265157581 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264660992 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.262125573 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264613553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264305064 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265580361 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.264179085 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266020419 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265866313 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.264991311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265311499 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264256966 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265806025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265429545 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.265000475 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266472368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264926994 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265757195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264163004 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265301624 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266348969 seconds)
  done (took 79.510855187 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266337201 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266079478 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.266649253 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.266717132 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266247463 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26577656 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265239219 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.264901303 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265850232 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265946025 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266924193 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266087039 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267765487 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267506215 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265705743 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268250881 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266691676 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266739371 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267056124 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267839779 seconds)
  done (took 26.503911335 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.268298215 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267728497 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.267423485 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267880887 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.267198411 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26739147 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.267489641 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267758863 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266899353 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267214431 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26786926 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268647668 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267033926 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266718623 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267816784 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267769997 seconds)
  done (took 21.455190084 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267591188 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268632901 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.269441797 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268258747 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.268151353 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.268719834 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.267768428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268492218 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268190251 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269175702 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269276081 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.269396953 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.268101777 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.268978799 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.267487378 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.268875744 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.268285103 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269148813 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269293866 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269188821 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.269086322 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.269789925 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.26906926 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.2699489 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26892788 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.269605373 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269295813 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270298563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.270356213 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.269855716 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.269778375 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.270066723 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268853837 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.270030811 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269244704 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.270073988 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.270586171 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.270067778 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270933816 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.27126629 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.27092649 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270950071 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.270687914 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270679591 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271686473 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.270674437 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.270871972 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.271843104 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.27001937 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.270659008 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.271245969 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.270832665 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.270478438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272081256 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.270475929 seconds)
  done (took 71.00976627 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271002458 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271560361 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271326313 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271149036 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270732242 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273415754 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271535801 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273572161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271789021 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.271671249 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271428521 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274027389 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272049826 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272413536 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272401956 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271850269 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271977714 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272929302 seconds)
  done (took 24.074390253 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273441266 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272580194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273167026 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272659244 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272040036 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272987744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27358581 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.271929709 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271556945 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273788642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271754225 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.273952508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273485103 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.272429161 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273843208 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272904287 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.274121297 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273228528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272415898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274285809 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274432394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273027089 seconds)
  done (took 29.185541102 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.26830449 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.2695551 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.268577212 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.28487129 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.28451784 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.27027062 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.26929043 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.270195481 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.290780188 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.334793824 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32841565 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.285195801 seconds)
  done (took 16.603533797 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273830195 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27531955 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273645723 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276131839 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275254683 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274468074 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276312786 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276596916 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276009124 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275480458 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276029823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275097358 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275460293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2760492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27592103 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276092592 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275756828 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277222954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275416776 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277322629 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275825488 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276229021 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276364125 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276697866 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277011725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274991292 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276181762 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275845539 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275226121 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276394879 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276130507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278520735 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279086216 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279505787 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277999953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278758446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2797487 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278322249 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27961631 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279321183 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279212595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27893984 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279264603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278793513 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279435298 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278371698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279517754 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279767719 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280146716 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279455816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281125766 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278983242 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28048047 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2797424 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280332914 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280200021 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280391298 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279095465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279450677 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280409266 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280756256 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280075651 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280108775 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279732381 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279533082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282008494 seconds)
  done (took 85.518573646 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280702903 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279734849 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280640834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280888099 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280043889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280698519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280427966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279957662 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28121209 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280812286 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281905173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281407872 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282567082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280462802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281690133 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280700093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280780235 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280651113 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281744025 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281101394 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281456444 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281423562 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282372209 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281588779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282004086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281654073 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281888503 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281132352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282130799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281070279 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282677746 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282150919 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280448124 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281080064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282927559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282515692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282496582 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282172643 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281716257 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28192475 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281300381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281547879 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281327455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282963933 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282627029 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28253127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281932389 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282857394 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281295847 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283702739 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283544459 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282970802 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282696896 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284871495 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283596233 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282641053 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283850268 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2835984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282807383 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284176472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283250058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284142997 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284367577 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283535241 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282976248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285515986 seconds)
  done (took 85.804616395 seconds)
done (took 1769.606779252 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446263462 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399687414 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.279788276 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.290191865 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.279157867 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.30430247 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.28777554 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.279290523 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280397376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.280956652 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.278843645 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.469446554 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.337882818 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.280449928 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279858775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377790791 seconds)
  done (took 26.341592729 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.30830812 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.288503318 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.397161484 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307959333 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309613614 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.469326877 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.343176869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.28518996 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452805979 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.307515146 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.276785207 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.323767369 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.285838796 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.277679823 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.302886508 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.471147598 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.533320855 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.27710825 seconds)
  done (took 28.40804837 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.723217407 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.298240128 seconds)
  done (took 5.211357347 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.303159024 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.284956362 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.286472855 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.284467488 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.276962558 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.277925463 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.283788409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.283802505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.281175176 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.413082145 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.292449055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.299112067 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.303980456 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.286653241 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.288708286 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.327482337 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.457443614 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288569924 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.288357399 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291836014 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.285514857 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.367669125 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.328108218 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.295847812 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.409689867 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.285320279 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29337089 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.29438214 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423753182 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.289268382 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.287626971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.285999951 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28827409 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.282245099 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.732347939 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.301290459 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311467386 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311661354 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.289639498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.418502473 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.287191568 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.293728577 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.280594709 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.734179479 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.422503404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406028984 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.300793958 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.288682966 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289197388 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347849126 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28788174 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.288668082 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.346533617 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.058227224 seconds)
  done (took 82.718946608 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.326135572 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.280826041 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461047789 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.303845263 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280650869 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28040905 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.281985206 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.561904547 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.286400911 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279771625 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609781514 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851337562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306402861 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.337451768 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.143209752 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.381965845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284175087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.297334272 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282077472 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.281530965 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831014117 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293754727 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.281719495 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.374596057 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.320520755 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793078304 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.285416612 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.29334334 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.283118836 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.282703355 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806682018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.307537591 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.351458166 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.281925292 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.550829035 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652763241 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616822111 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.287025856 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.326487597 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287501501 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.294497175 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776002905 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635185746 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.283147721 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.282747315 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807649873 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286298262 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.285457895 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.291786986 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532665676 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283764642 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.28559275 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303486378 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288773211 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.283141151 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.303668321 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.365983279 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79623187 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285742452 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.285178173 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324236949 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.28445204 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293247456 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284534244 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302828213 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.648935027 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.502435969 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.288377906 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648722457 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814504553 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.306277258 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892305131 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306321388 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.289585293 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.47191773 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284882774 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.300770154 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806013602 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.302990259 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.286973236 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621193089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.28673648 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.609331998 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.302267092 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287647061 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848020952 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.3021688 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.289649374 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.285375378 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.304820827 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.285308 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314240104 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.561693554 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.310453896 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28751667 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.284978649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.335514916 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286823535 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284826014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291786802 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.876534554 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.320363556 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285894612 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287011255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286188511 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.293679308 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.286418757 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.287083159 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55445903 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287247271 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.312294815 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.287745814 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.286822244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.306871259 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.384656702 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.290748401 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.591313368 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290447811 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290358222 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.292441993 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286993722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.328168234 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288109992 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.290361455 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.177533227 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.590675919 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.307024552 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.304229867 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289242196 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303662272 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288525961 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289619827 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.34540869 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.292238367 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083358124 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337808499 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.33190839 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.289343858 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.298902223 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289219129 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.296537079 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290330435 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579568035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.562919936 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479771097 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.29334427 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.288760727 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068900352 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331230759 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468955195 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311790507 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289794328 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54018679 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.497740748 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.290694304 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.290397678 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.292422873 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547419307 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.290114258 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610452191 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851301633 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.310228759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.292195296 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.092200655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015428861 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.295521295 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.294345982 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.620560735 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.306349655 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.291813398 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.291026292 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.290363643 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.306986905 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.311004042 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.299024032 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.291058051 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.29227738 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.30482459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481711909 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.309237159 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.298017567 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808904508 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.313811329 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292116469 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299759339 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.294058429 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291340139 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.365791191 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.294799938 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.323785463 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.293858458 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.299191055 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.855572955 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.29755903 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.301136857 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481282339 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999808512 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.313323453 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.294548126 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310266466 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.223098079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829390722 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.319141826 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.604847813 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.308309706 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330759325 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293787187 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.375012395 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829919071 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298354554 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312249133 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.966454639 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.314392478 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.71199015 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.293371123 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.294465946 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912848012 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.316068747 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.294512621 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.291995813 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293202751 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59167793 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.294835748 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.30782548 seconds)
  done (took 488.731995192 seconds)
done (took 632.599580355 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.292476669 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.295173272 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.291870582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.29989588 seconds)
  done (took 10.385485433 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.307649384 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.301370956 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303910291 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301334125 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.305991909 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299767282 seconds)
  done (took 9.028700317 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.296196556 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.296795178 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.302667913 seconds)
  done (took 8.101538823 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.50212405 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.32128572 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619888541 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31885161 seconds)
  done (took 8.971044371 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303353994 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.30447206 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.304989537 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.306879581 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308976645 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.310287988 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.307209344 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307948607 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.309295718 seconds)
  done (took 12.969641683 seconds)
done (took 50.661284989 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.45382962 seconds)
    (2/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.458391249 seconds)
    (3/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.240564523 seconds)
    (4/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.141758833 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.356090236 seconds)
    (6/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.378965073 seconds)
    (7/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.452166003 seconds)
    (8/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.429746922 seconds)
    (9/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.406208525 seconds)
    (10/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.373790624 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348586807 seconds)
    (12/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.403035197 seconds)
    (13/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.383030631 seconds)
    (14/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.042051605 seconds)
    (15/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.317089034 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.485865116 seconds)
    (17/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.311562452 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.296989991 seconds)
    (19/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.30866396 seconds)
    (20/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.367684734 seconds)
    (21/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.979012029 seconds)
    (22/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.426425253 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.336347165 seconds)
    (24/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.290595736 seconds)
    (25/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.955511815 seconds)
    (26/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.443480049 seconds)
    (27/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.471088503 seconds)
    (28/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.288988155 seconds)
    (29/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.508082799 seconds)
    (30/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.445971209 seconds)
    (31/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.477886657 seconds)
    (32/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.39194426 seconds)
    (33/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.40388304 seconds)
    (34/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.457641724 seconds)
    (35/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.498352221 seconds)
    (36/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.517249314 seconds)
    (37/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.334037467 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.385834089 seconds)
    (39/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.353988205 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.528398389 seconds)
    (41/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.474952312 seconds)
    (42/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.351700504 seconds)
    (43/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.481306229 seconds)
    (44/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.238059579 seconds)
    (45/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.032215578 seconds)
    (46/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.380191935 seconds)
    (47/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.368855181 seconds)
    (48/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.357994739 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.393322509 seconds)
    (50/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.328388281 seconds)
    (51/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.956127496 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.43744671 seconds)
    (53/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349037596 seconds)
    (54/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.397164317 seconds)
    (55/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.320023637 seconds)
    (56/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.507771696 seconds)
    (57/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.391392295 seconds)
    (58/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354214007 seconds)
    (59/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.953802534 seconds)
    (60/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.391062148 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.527605712 seconds)
    (62/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.329323914 seconds)
    (63/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.358651938 seconds)
    (64/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.410109087 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.389970107 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.299932652 seconds)
    (67/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.343899773 seconds)
    (68/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.292622947 seconds)
    (69/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.458989324 seconds)
    (70/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.333715511 seconds)
    (71/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.443096377 seconds)
    (72/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.398060502 seconds)
    (73/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.313086242 seconds)
    (74/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.359959808 seconds)
    (75/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.39989183 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.395527515 seconds)
    (77/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.043210392 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.32231189 seconds)
    (79/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.292537277 seconds)
    (80/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.29981115 seconds)
    (81/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.364793822 seconds)
    (82/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.345355955 seconds)
    (83/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.363488519 seconds)
    (84/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.302675213 seconds)
    (85/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.526249076 seconds)
    (86/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.375476398 seconds)
    (87/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346943012 seconds)
    (88/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.337766319 seconds)
    (89/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.425978568 seconds)
    (90/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.361770879 seconds)
    (91/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.334665839 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.392175956 seconds)
    (93/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.349218853 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.375468043 seconds)
    (95/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.091464361 seconds)
    (96/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.139515827 seconds)
    (97/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.996058406 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.453026324 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.403325951 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.377043478 seconds)
    (101/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.294263495 seconds)
    (102/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.533730964 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.44478513 seconds)
    (104/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.400662376 seconds)
    (105/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.363202276 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.305872656 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.523165505 seconds)
    (108/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.437312826 seconds)
    (109/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.309673875 seconds)
    (110/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.517597049 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.428718449 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.335043839 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.397896745 seconds)
    (114/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.476100316 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.414332218 seconds)
    (116/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.338507108 seconds)
    (117/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.29429129 seconds)
    (118/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.376372293 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.446474477 seconds)
    (120/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.406356351 seconds)
    (121/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.499306242 seconds)
    (122/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349567306 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.398680217 seconds)
    (124/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.071123445 seconds)
    (125/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.42045597 seconds)
    (126/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.400569059 seconds)
    (127/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.323599991 seconds)
    (128/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.450445611 seconds)
    (129/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.414127868 seconds)
    (130/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.623118373 seconds)
    (131/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.570089404 seconds)
    (132/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.32596865 seconds)
    (133/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.56756694 seconds)
    (134/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.359716426 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.356904593 seconds)
    (136/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.443014707 seconds)
    (137/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.18821586 seconds)
    (138/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.362517417 seconds)
    (139/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.44002004 seconds)
    (140/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.34128151 seconds)
    (141/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.504315029 seconds)
    (142/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.33027546 seconds)
    (143/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.603642686 seconds)
    (144/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.412349358 seconds)
    (145/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.215344218 seconds)
    (146/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.411465947 seconds)
    (147/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.47506729 seconds)
    (148/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.093039094 seconds)
    (149/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.437650318 seconds)
    (150/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.299360093 seconds)
    (151/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.298029563 seconds)
    (152/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.340960938 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.306749958 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.4388676 seconds)
    (155/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.326672806 seconds)
    (156/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.347779598 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.447931112 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.436714796 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.384487729 seconds)
    (160/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.09860177 seconds)
    (161/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.534597413 seconds)
    (162/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.51520574 seconds)
    (163/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.493658416 seconds)
    (164/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.381366155 seconds)
    (165/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.298287649 seconds)
    (166/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.36623762 seconds)
    (167/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.458484034 seconds)
    (168/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.665898357 seconds)
    (169/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.095249996 seconds)
    (170/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.3227137 seconds)
    (171/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.024260818 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.3419916 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.664203906 seconds)
    (174/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.078536875 seconds)
    (175/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.359234172 seconds)
    (176/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.345575026 seconds)
    (177/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.372989471 seconds)
    (178/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.341198278 seconds)
    (179/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.508634167 seconds)
    (180/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.331111007 seconds)
    (181/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.44453853 seconds)
    (182/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.441919098 seconds)
    (183/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.300315611 seconds)
    (184/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.300040919 seconds)
    (185/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.546981141 seconds)
    (186/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.312067768 seconds)
    (187/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.306069318 seconds)
    (188/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.339995288 seconds)
    (189/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.970615695 seconds)
    (190/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.327730399 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.401943559 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.360360127 seconds)
    (193/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.440389744 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.42664393 seconds)
    (195/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.426711739 seconds)
    (196/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.300873731 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.453690922 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.350183871 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.423879042 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.411682749 seconds)
    (201/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.349517316 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.412700296 seconds)
    (203/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.403067654 seconds)
    (204/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.340221885 seconds)
    (205/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.993061217 seconds)
    (206/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.995877937 seconds)
    (207/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.48277347 seconds)
    (208/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.072790406 seconds)
    (209/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.370613087 seconds)
    (210/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.543924241 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.36456046 seconds)
    (212/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.327407384 seconds)
    (213/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.307491314 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.559157255 seconds)
    (215/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.477164592 seconds)
    (216/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.47866084 seconds)
    (217/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.46363988 seconds)
    (218/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.074042663 seconds)
    (219/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.47931865 seconds)
    (220/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.430737836 seconds)
    (221/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.377951171 seconds)
    (222/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.310020759 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.457001322 seconds)
    (224/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.671790531 seconds)
  done (took 366.512305193 seconds)
done (took 367.71987967 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364721221 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.498453408 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.318108374 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.316329977 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360121653 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.309477897 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.36027481 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325430514 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.32609121 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.327165016 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.309392301 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.329322434 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.329980303 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.356945628 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.429952664 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.326452797 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.318059584 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.323820684 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.366486753 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.384782067 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363862077 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363353624 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337783135 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.319852552 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36487929 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365245807 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.324226622 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.318034389 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.326019333 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.367405881 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.32433751 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324931236 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375344386 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.374044202 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362992184 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.324778033 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362466431 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.500299536 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.36145946 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35878026 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.330089408 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375820165 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.329297637 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.329679321 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.3747302 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.33916755 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368222913 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.441334312 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.324361323 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.321724192 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367860071 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.385440529 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.330284721 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.321399731 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.315561513 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.442658474 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.326247209 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369627874 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.328337937 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364871076 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.434840402 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368969693 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.387003491 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368156828 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.328651686 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.334357271 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.326051532 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.388127366 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328345291 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366546395 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366474225 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.33445729 seconds)
done (took 106.745276868 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.439441368 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.321556501 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.460618465 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.327089958 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.483313669 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.464203726 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.325273601 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.326447539 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.326611158 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.115503599 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325498009 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.326989237 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.324237604 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32653028 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447541561 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.326078046 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.326112012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.016127491 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.326886116 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.462434635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.320775499 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.326980777 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.326398369 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.147022152 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.322730704 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.318746439 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.462027456 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.327247641 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.017517286 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.318715022 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.321776342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.017764993 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46308081 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.347415227 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.337003729 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.337971946 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.485933987 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.345624163 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44454541 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.441095706 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46433924 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.365843395 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.318907573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323289176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.328201825 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.328207161 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.328965541 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358374341 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.32640063 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.327194852 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.018815435 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.340170274 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.329098547 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.329738551 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.328190919 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.357720086 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331058609 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.329105984 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463061842 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.32983842 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.448366143 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.120423573 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.132479144 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.329507374 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.32570887 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.328902533 seconds)
  done (took 107.76791435 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.390069664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.402603224 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438697876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342822365 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376436074 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.441267329 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.343526748 seconds)
  done (took 10.96352489 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.332194339 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329868655 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376372856 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37430188 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.329345008 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.480833672 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331219124 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.337720341 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.32946199 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.379568309 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330200847 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331547708 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.339596296 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.325709379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37604367 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.338734414 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.442272314 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.328838625 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.33102799 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.477420559 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331525512 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.340170293 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.379390828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.339825503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.330899497 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.333933995 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.141042119 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331850356 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331427734 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.331878518 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331801562 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.383273832 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.333207815 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.32812532 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332589277 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445014711 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.331240135 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331153135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.334286786 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.330492487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.331553557 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.331643689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.334462659 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.331650576 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.333356347 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.352992443 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.332965029 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.333306031 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.332467853 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.332604729 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.379865268 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.334883763 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.332787334 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.332751332 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.385357692 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343540041 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.332664802 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.332536868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.334377696 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333549563 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.481662397 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.382265428 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.333360346 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37727969 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334332397 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33226446 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.334203264 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.334906464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430835177 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.334547086 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378161162 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.334205961 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.514016338 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355236196 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334543224 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.337661089 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.331691685 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.33280344 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.327871899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.33596678 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.333764949 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.330656383 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.340280995 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333329818 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333759505 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.487227915 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440240734 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.332807992 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.342184568 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.337572184 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332761022 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.383766112 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.333879199 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.334413458 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381016394 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.444764101 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.383405855 seconds)
  done (took 137.381663771 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.340964616 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.342449536 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.334387849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.358197656 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348611694 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.331820549 seconds)
  done (took 9.289719969 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.331714978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.335206638 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.335857664 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.335004362 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.333980255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.335790231 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.33391973 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332666004 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.339551427 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335037352 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.335760863 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.336196521 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.338609126 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.336003175 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.336219955 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.336598605 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334484611 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.335001915 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.335995697 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335035107 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.331819342 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.336165175 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335784603 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.33489197 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.339353194 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.337232531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354885672 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.336413383 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.335655329 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.339707626 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.356625527 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.338380747 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.333475581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.337311226 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.340346078 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.333179522 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339086787 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.33858123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.337877882 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.338241857 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.339010534 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338142556 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.337688842 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.338238431 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.335133521 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.338142328 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.341756667 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353992977 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33887473 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.337809208 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.339406294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.337616425 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.339627845 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340499128 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.338138871 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355490855 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.342110257 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.339086099 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.338975352 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.336039642 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.342455394 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338535238 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.335899928 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.342768279 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.337999705 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.341259649 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.336603417 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.343063481 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339092821 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.339449105 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.339550067 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.339292034 seconds)
  done (took 98.602583416 seconds)
done (took 365.228975512 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 11.00342452 seconds)
  done (took 12.240906349 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.432025363 seconds)
  done (took 3.669936893 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.136031096 seconds)
  done (took 23.378003985 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.41870247 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.387315486 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.378258644 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.333688388 seconds)
  done (took 10.755513675 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.616349369 seconds)
  done (took 3.855233352 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.345269524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.336019647 seconds)
  done (took 5.921354688 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.57725526 seconds)
  done (took 3.81295844 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.84658086 seconds)
  done (took 4.088240711 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.357584498 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.348804787 seconds)
  done (took 5.950670501 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.319234397 seconds)
  done (took 3.555190488 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.320935865 seconds)
  done (took 38.558824949 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.341345311 seconds)
  done (took 3.581013264 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.3675489 seconds)
  done (took 3.604435431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.989720586 seconds)
  done (took 6.228068059 seconds)
done (took 130.437119383 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.330270458 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.330120541 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.329128809 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.329652111 seconds)
  done (took 10.557452109 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.372956143 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.371809232 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.376128395 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.383926401 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.375923542 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.373274713 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.385360109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.365014767 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.383837002 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.376935546 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.375637015 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.376158261 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.374600148 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.368535405 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.378499626 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.375599813 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.38405208 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.375047255 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.366890706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.377142369 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3407682 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.386771584 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.37685657 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.342020032 seconds)
  done (took 34.201965342 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.853018793 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406103843 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.491866336 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.390918999 seconds)
  done (took 7.381247122 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.400146717 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.40969423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41924684 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.462226649 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.483545752 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.417591201 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363323525 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.362996279 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.34851916 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.410018887 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.469766221 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.40259921 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.485352651 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.342752501 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.530503486 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.342098907 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.342162986 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420537041 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.457746649 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.47144542 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343281745 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.403414276 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.420002849 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.402950062 seconds)
  done (took 35.152597913 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.345519884 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.358247273 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.344835168 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.351726147 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.344708057 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.344668144 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.345187059 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.351895926 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.343642178 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.343601688 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.344483713 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.358660509 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.345004878 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.344532915 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.351595169 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345019442 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.350541352 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.343921495 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.345658688 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.350385622 seconds)
  done (took 28.194727456 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.334349475 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.333016504 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.684221424 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.589637787 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.335664232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.333550319 seconds)
  done (took 13.852317805 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.4094517 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.570199484 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.345261412 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.689104436 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.785664756 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.357701744 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.341959189 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.593958748 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909886926 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879478892 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.404282856 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.410820792 seconds)
  done (took 19.941579921 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.34510839 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.340571726 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.345464146 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.355769806 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.39403727 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.360447855 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.347402882 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.335009246 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40071977 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.41487165 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.360938423 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.396087247 seconds)
  done (took 21.639607238 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433961851 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340484212 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340643921 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395523881 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340128647 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185393773 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385565117 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040315957 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.362860678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612840577 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342712634 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437920327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591002481 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335898289 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342092706 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.325155784 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5701106 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818277525 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343442525 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338481612 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373646144 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336767003 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341967746 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.554863045 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359947199 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337132006 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.599948008 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337471702 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617653403 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355442462 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346751509 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338085456 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613727774 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991087195 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454287175 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545478156 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356048964 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343116446 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.335191911 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.34461363 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344657529 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364700259 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347636069 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338174534 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336514106 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339622269 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051873176 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.364834191 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.33939704 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339595309 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592727185 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440623101 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345802528 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339851462 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337395068 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339282736 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.346432542 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471525082 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939170793 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340385912 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347603642 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.345495091 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347801239 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346034456 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970965148 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.369157175 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.344785357 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34636338 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340770503 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339820086 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364702453 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3406423 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.365135743 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341781163 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043296283 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376529224 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347308212 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875320434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343875603 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.34727138 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569700235 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341172498 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341879141 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.341703872 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341308124 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026325861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349595743 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.329288178 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409452095 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.064618149 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.573529694 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385747145 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371282923 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.563763201 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.328400161 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341287149 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.34271451 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34797208 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362940404 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049920786 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360277975 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.347066758 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599080969 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.553660399 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345976123 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.349690019 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820647901 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365606514 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.367672799 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347887708 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559324297 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.941461751 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381653514 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343414044 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366781854 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342554352 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063996604 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349439806 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.451119297 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356220843 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616001299 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.112177704 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344838604 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409875872 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347207894 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343385747 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346801017 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352219373 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343487856 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.547925936 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372592541 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.360035368 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.347273878 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343302053 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.353063519 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34858451 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.370160235 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567518044 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350319968 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630652017 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345056339 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344341916 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34608683 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.566568268 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.358215695 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.690521562 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60655918 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348287426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353166228 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361466989 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363086772 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449393622 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367272921 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.351324496 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605489801 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.352059811 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.353294859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35001136 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355212174 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349623374 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.35438803 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350062466 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945079178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346785378 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353982006 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276387092 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.363625352 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414005374 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354902576 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560555857 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.373259946 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366256308 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.352435664 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.361375079 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575325564 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357209257 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.348931818 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429592249 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.817922061 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941071437 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384924891 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.348977217 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.347045351 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.348738408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348189271 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346357489 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349084921 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559624018 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384684657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361345153 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929740329 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371470991 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351224132 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.362013413 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361103235 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354963155 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349840881 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35191824 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357638952 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363101749 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.363563814 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490837891 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.364756084 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347987431 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.867419946 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356111335 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349611372 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348886412 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383462676 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353486334 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161694238 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630630972 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354577615 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613090826 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356919954 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.375019048 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.350489004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35917375 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364671129 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.360617969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377586898 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.361456375 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354874121 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358455528 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925729774 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072436315 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886022349 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374888706 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355890472 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357384279 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067207788 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371841507 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351374458 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589129885 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08765487 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370271389 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829212574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.375870095 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117748573 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615963559 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589512907 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36294101 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.36724443 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617458888 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57034057 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38766009 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361010838 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358450919 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.340834152 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909357447 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376236058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440999301 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068757444 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383091527 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361899182 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.363966222 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.370299004 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767022518 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377164906 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353999175 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359564121 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360279859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186851609 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381552715 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355217934 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984363495 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394446549 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.835751254 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373049483 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.569727787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391610202 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.358789936 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.355198051 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.360061177 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.629873255 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614287041 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362678621 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355136605 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912217131 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.247472358 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.362081967 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355277024 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089114734 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366936448 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645740548 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.362387327 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376022478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362835128 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356372961 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356050448 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.355587145 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363363131 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329180465 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836195557 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.354121048 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361491455 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365525 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363731929 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610363732 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.371920141 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935031394 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608224303 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351861246 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406068502 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.363378093 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357087847 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.366750707 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356951032 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356010644 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406038065 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579803237 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366245826 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.349843233 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377266822 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567489761 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357720127 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35657585 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606194899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.382802796 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.378568492 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082699712 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411173102 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35812579 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365004349 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359278267 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406241535 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446164519 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574176304 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.394836429 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368799124 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76951936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383334035 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366507529 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.373677279 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453612984 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367163953 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.366477834 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.156785577 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941919236 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108606362 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948073564 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644646693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362856593 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367099728 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359756627 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5235318 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35954985 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665991871 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358917145 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.360489552 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382400719 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358274259 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381371951 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575716848 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636277524 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360555074 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365489201 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366339756 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.359700811 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370091105 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.569704096 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84136696 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905065447 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363375964 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360502409 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085966526 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657114862 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362057555 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361499853 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361225543 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.368149708 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373494908 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.368395892 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363499572 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510263775 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622479392 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030225191 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.388934904 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.392659937 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.881317816 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372150185 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621906298 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36475425 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584220409 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969194948 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083760649 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63307463 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431527376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577796627 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.385977757 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524432787 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.37004001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3662707 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364038911 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361839061 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.363179644 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.37131001 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952385758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646104399 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.368131279 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.371633048 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399245685 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.372426344 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584014818 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064076954 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58685446 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373082919 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367596141 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364150262 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950800653 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650984222 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368008304 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.369831981 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606849139 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388888413 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390461586 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.882164528 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.366141023 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906944339 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.336361881 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386221639 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364029807 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072445931 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961527793 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.388856686 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85905451 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368855882 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371004266 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64712019 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.372066837 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365684265 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650823191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.369658097 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365660906 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588426241 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.974057079 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164073524 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.376638244 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380335122 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.37312656 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365687941 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404391184 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366131027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366158985 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.789105204 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384857356 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366532445 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379040341 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.37540711 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370468658 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.375084632 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366121218 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.373411398 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.375712116 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.374644022 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375071112 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501804842 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929339595 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388006958 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.066056241 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692024783 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619497608 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36516213 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.361571582 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.374195188 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368515099 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367791704 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367286946 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364006388 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933959016 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.369876639 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.39960547 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37353767 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.583420728 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577579617 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368867964 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59289157 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393270137 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391072441 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.354008696 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367957171 seconds)
  done (took 966.426507344 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.37701549 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.409756671 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.394503203 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.387682181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.388795514 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.472702688 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.4226044 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382193456 seconds)
  done (took 20.503861359 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.37091799 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.379450492 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.369868742 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.379719717 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.379733489 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.850254174 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.394360125 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.374493922 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.388466587 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.373456835 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.38050888 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.356206443 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.379942952 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.365776931 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.364681489 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.381126818 seconds)
  done (took 32.7639602 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.391332191 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.523393307 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.357643212 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.417053505 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.385498314 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.382652178 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.605608999 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.396874804 seconds)
  done (took 26.732102829 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.37683934 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.377977382 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.377686019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.376836254 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.377461938 seconds)
  done (took 8.157277323 seconds)
done (took 1226.744133249 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.376064085 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.375284587 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.376789015 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.375222466 seconds)
  done (took 6.775167361 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.358818765 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.363862309 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.364651226 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.376209939 seconds)
  done (took 9.733874808 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.071314644 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.001449201 seconds)
  done (took 5.343252419 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.857028816 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.866296803 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.863111397 seconds)
  done (took 6.860091727 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.661125627 seconds)
  done (took 2.934220062 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.279080318 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.376007185 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.042198565 seconds)
  done (took 7.970034225 seconds)
done (took 40.886080029 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368860925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.634418471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.522777306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36689491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.528640554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.524434896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.109552758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.379681854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.373115752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.386686422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368412948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.530786317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.088128951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.61397042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.087482331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.613900648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.528996217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.373375559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.373632955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.369798622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.108508719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368440125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386682849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.378405752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.535650469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514765209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.369660701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.614605747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.37952809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37523391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520795754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.374014602 seconds)
  done (took 82.345738793 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.369209104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.395560386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384643402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.371621844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390342131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.388003994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.373211949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.381580614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.375742447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389990692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.370567224 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.400167223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.371269001 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.370016275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.389956553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.370191003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.387594938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392926661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.371693073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.371715077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.371935345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.372256719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372027405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.372837956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.396492038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.372611114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402358256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.370861827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.388491662 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.371541519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394074352 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392610602 seconds)
  done (took 77.469617755 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.371847809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.378630948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.380601531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.387549436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.377167449 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396674482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381529559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.382780506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378797461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381519623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.38633658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.377475762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39685108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.37682183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.378364745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.374465158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384735267 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.385672986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.379559825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405727414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.38044481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.379129838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395717486 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394776131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.394431204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.381153406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.373708911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.390074796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378444262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.379733029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.38237437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396265872 seconds)
  done (took 77.566771018 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.653379759 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.382657413 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.386248228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370336997 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.387546869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.38355653 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.37943095 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.659996489 seconds)
  done (took 14.880921143 seconds)
done (took 253.537451003 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.378804615 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.87885404 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.429415252 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.379159406 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.422918411 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.406782121 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.600959199 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.42309733 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.603407839 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.411551948 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404467401 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.37832034 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.194111829 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.531973981 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.233370352 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.365132555 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.270709457 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.382969723 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.963947876 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.670015796 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.406354597 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.37714464 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.238138487 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.30246972 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.372516927 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.468515029 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.479698595 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.608095728 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.539446008 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.461795305 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.897368113 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.403968702 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.398748729 seconds)
  done (took 64.563219926 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.382476668 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.507311521 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.387205277 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.386574917 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.511369978 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.408168804 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.384691585 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.386647862 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.387109978 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.387939965 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.388697676 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.388811954 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.389516778 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.437428756 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.512847168 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.401746491 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.384330983 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.510224567 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.383356009 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.381590621 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.43626269 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.38678247 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.390043557 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.437496705 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.386314389 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.388581127 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.510064956 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.41173461 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.388577678 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.506353112 seconds)
  done (took 43.832423131 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.389439499 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.97212016 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.133437424 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.398419858 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.384509011 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.391341521 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.674811499 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.395824512 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.390364545 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.389628922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.875676211 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.414672575 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419966468 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.158320573 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.410719375 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.391988178 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.390539199 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.386802471 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.981689813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.401691323 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.697612038 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396276558 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.676902487 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.401483604 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.410082637 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389528671 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.392312321 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.218241583 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.42148441 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.880298779 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.198595959 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.679127921 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.154962906 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.166559801 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.203196053 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.39778625 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.389531618 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882239683 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.413974525 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.3902363 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.678923358 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.395257888 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.142025194 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.103878501 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.407739063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392565337 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.2360384 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.907111041 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656076935 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401008993 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.169417429 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.414271443 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.393313229 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.391511312 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.634602404 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.397737722 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.388656202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.264620186 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.421029194 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.677706064 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.397803633 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.391695654 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982291387 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.396313951 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.979805917 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.396789101 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.399118086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.41156046 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147578612 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416156753 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.098060715 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.408768675 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.393582771 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.882490288 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.002378419 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.307331463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.398715967 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99069805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.188091701 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.705172885 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.400953743 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.193804272 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.706702351 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.401459399 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.397165018 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396598574 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.396281717 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.475901469 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.676848518 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.046972372 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.095167137 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.28489179 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.709970003 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.407301098 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.394517694 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.268470483 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.421772954 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.397562207 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.14303808 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.099617927 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.411033871 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.40027102 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.107269475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.414655473 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.685045606 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.403686284 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.153981664 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.41838629 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475799996 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.39731163 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.401283818 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.416268407 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.684925988 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.401871008 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.397772371 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.080840568 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.911580263 seconds)
  done (took 195.646340019 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.389458218 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.389500521 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.388056852 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.405581912 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.388166656 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.394975688 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.388605023 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.388965479 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.395353275 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.388890349 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.389479494 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.397275609 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.395958182 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.390344782 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.390179713 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.390235231 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.396878033 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.393895794 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.389971417 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.390229667 seconds)
  done (took 45.134093635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.399091133 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.969230056 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.952004157 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.403644524 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.398355061 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.395834439 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.452436144 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.418604916 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.398028004 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.701800524 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.571824802 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.423338169 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.398191274 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.399661681 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.931531385 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.395584071 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.703790948 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.977144208 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.405352766 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.970652555 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.395530274 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400666412 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.395908276 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.971197264 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.733590219 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.69158478 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.460060746 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.995858122 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.422724177 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.400216416 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.973641842 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.408835224 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.398605313 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.970728616 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.422871842 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413497219 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.401284191 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.455334303 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.480685293 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.729441641 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.064688134 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.714927839 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.418523852 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.587601307 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.404124767 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39199431 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.980832881 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.424636064 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394026083 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.403209583 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.404971432 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.941150707 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.423077642 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.941088477 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.426550991 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.401597113 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.975534929 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.945688077 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.958866562 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.576200836 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.422636212 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.68746872 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.407544839 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981004704 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.426552503 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.4036387 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.403415267 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.572316899 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.00010141 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.693891406 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.714821674 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.713942321 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.408211575 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.465002129 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.427629626 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.781581762 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.468292333 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.840962822 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.71208414 seconds)
  done (took 127.794433975 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.675199631 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.511842598 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.824938794 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.03970759 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.407979591 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.538466651 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.511372593 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.670970307 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.413841172 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.48015696 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.060078643 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.525116954 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.211668962 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489843936 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.52371344 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.544859805 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.816473292 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.40014789 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.106964226 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.049155805 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.405455753 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.527354246 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.954905264 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.61695214 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.395364433 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.000962159 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.400184118 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.085272866 seconds)
  done (took 54.486208699 seconds)
done (took 532.73401717 seconds)
SAVING RESULT...
DONE!
