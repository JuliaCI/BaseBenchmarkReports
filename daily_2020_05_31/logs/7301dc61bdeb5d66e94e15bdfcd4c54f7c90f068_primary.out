cset: moving following pidspec: 18819
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.214651572 seconds)
loading group "string"... done (took 0.586011708 seconds)
loading group "linalg"... done (took 8.03252262 seconds)
loading group "parallel"... done (took 0.169863482 seconds)
loading group "find"... done (took 1.209833574 seconds)
loading group "tuple"... done (took 1.869397978 seconds)
loading group "dates"... done (took 1.280849075 seconds)
loading group "micro"... done (took 0.197342753 seconds)
loading group "io"... done (took 0.990530139 seconds)
loading group "scalar"... done (took 39.784397415 seconds)
loading group "sparse"... done (took 12.282415084 seconds)
loading group "broadcast"... done (took 0.979893106 seconds)
loading group "union"... done (took 13.834096931 seconds)
loading group "simd"... done (took 4.801603143 seconds)
loading group "random"... done (took 9.111824717 seconds)
loading group "problem"... done (took 1.724565448 seconds)
loading group "array"... done (took 21.441288831 seconds)
loading group "misc"... done (took 1.730828028 seconds)
loading group "sort"... done (took 3.350107558 seconds)
loading group "collection"... done (took 18.173578254 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534025591 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12547079 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136816054 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119926427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148939313 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 61.968600005 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121398274 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082252035 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.839233758 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149261675 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113870813 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418552556 seconds)
done (took 67.161332169 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175490162 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088427719 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079426308 seconds)
  done (took 1.242860543 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066226681 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127658398 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06706826 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067867294 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067369316 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066916534 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067147353 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06695801 seconds)
  done (took 1.607445751 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073146831 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068657634 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066404588 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068435746 seconds)
  done (took 1.354087722 seconds)
done (took 5.536454097 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.795024904 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210286314 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189571534 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.409773146 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136505813 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179705027 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644662088 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334817548 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204362284 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094963541 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11303689 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.36137052 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124656309 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644430598 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078191741 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096497653 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140068426 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456133255 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071937911 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085538806 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092827612 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131021098 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088933664 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077075265 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150356704 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071004637 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143394373 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084188178 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06923583 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221268204 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175644227 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659079929 seconds)
  done (took 10.44973047 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102379416 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09928968 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069349719 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125568653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098320131 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070515893 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076045342 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068327433 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09306529 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128850248 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09138834 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108449965 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066637775 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069851351 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083384279 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197167871 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080431545 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08587203 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068739016 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07855484 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107933163 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078145499 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08006326 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080343067 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129720167 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.172969852 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098028361 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098623632 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067964382 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081671843 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115767951 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128449993 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066437642 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067209114 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125665912 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095102952 seconds)
  done (took 4.573001322 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008879803 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150689583 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090621895 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134817709 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065811294 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110360254 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069484995 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083012124 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238489357 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.369161951 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.626349088 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147812474 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116804024 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104653718 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071320291 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069554922 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067918545 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248790333 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09891192 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108089429 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083668329 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070979633 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069536968 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065503116 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072817292 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064300085 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069479521 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088583173 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076721094 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332518989 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125566614 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069190077 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.838028475 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165168098 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067921414 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105480305 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16059298 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094956223 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14062215 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068134268 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06413071 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157235195 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063604802 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070673744 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066012676 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083888676 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107467541 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117497508 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064758635 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065439803 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164679624 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064190791 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081413232 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.204153418 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150271468 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064584494 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.276619266 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088253522 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069422691 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062266508 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173263166 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.106862834 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066298199 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065143807 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066690665 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066260505 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375138339 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063623128 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.209297866 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066018454 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074910309 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068327393 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068267597 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077134364 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075759194 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087872434 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06298158 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064815328 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07056262 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065083833 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063843267 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064427296 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090860856 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089320356 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.371161328 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064254099 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069716047 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062640369 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088285103 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095389728 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.064611067 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06323974 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09868088 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067208258 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063862863 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06565164 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111980997 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067243826 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110338296 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064886353 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061167878 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.301247677 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069990886 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09922951 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071969212 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103438582 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079428269 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07342824 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.474261532 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067507488 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074788294 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06817836 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069828969 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068938987 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080132694 seconds)
  done (took 21.750824902 seconds)
done (took 38.860460042 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247178582 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087693409 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085794357 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085183282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08543165 seconds)
  done (took 1.786445294 seconds)
done (took 2.971529871 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128427978 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100700565 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066204456 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099175591 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068863622 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101763655 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101641373 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08472809 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101198433 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065799446 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098569065 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065599623 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065522182 seconds)
  done (took 2.340623083 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083201767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084727325 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07016979 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082847403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063404006 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082655575 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081734503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089070599 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082697236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073030766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063432715 seconds)
  done (took 2.02709025 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082963089 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084224053 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070536016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082268652 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063605917 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082368136 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081916198 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088549587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082970008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074111222 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064148779 seconds)
  done (took 2.019322426 seconds)
done (took 7.54841122 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076879579 seconds)
  done (took 1.231482416 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.535375047 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.522658837 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079310029 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101497754 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195087648 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110043659 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236308525 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084179165 seconds)
  done (took 8.191343167 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095069624 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069944839 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082886008 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071188451 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071110454 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071019431 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07088104 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070886714 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070555122 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069676202 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070249661 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070277745 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071251697 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070843346 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070504014 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071696824 seconds)
  done (took 2.407999083 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098077599 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097076688 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075205694 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076394825 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074026982 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073280861 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076019979 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074985224 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072223513 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073796602 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077191846 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074459976 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074291641 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065442798 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074671838 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07741956 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072182 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075644494 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076259083 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076920015 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076515211 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065100539 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074310689 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075329998 seconds)
  done (took 3.091827608 seconds)
done (took 16.088010842 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116962994 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078470545 seconds)
  done (took 1.356795528 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079809993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080402848 seconds)
  done (took 1.330431822 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078626899 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063543125 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085231185 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074544816 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06397579 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064143625 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083164949 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063970523 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064199155 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064491955 seconds)
  done (took 1.87632477 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065916559 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073241212 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069822999 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079841259 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071056596 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065164405 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069608721 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065588585 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073545198 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064308234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069204685 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084365924 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068805241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085876988 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069322147 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069056708 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070924667 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06847335 seconds)
  done (took 2.455880937 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063540269 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064270882 seconds)
  done (took 1.303833392 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0678144 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064668505 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066825211 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066715717 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064037399 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0633731 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064321623 seconds)
  done (took 1.628267327 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407384551 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123244657 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333641595 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071504761 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080942138 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261253494 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065512993 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070674951 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070656874 seconds)
  done (took 2.699894339 seconds)
done (took 13.828778671 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08144898 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086434928 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098347092 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414033266 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093831711 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069021855 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116341649 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182262753 seconds)
done (took 2.328759294 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211446395 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.086297922 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.493804779 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210583874 seconds)
  done (took 2.972203149 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352010891 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082108946 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078086673 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.183470052 seconds)
  done (took 1.885422836 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067637377 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070959969 seconds)
  done (took 1.321379068 seconds)
done (took 7.575818993 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06530188 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089915566 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064556602 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065616522 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06517509 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065113709 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065433651 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065265464 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065308476 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065596213 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06501936 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064943526 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065557282 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065508811 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065605936 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065325946 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06575116 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065986153 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066000643 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065334529 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065908043 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065392379 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065751773 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066005192 seconds)
  done (took 2.813851195 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08211974 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067621402 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06933082 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069226422 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069892829 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069022372 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069223998 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067985558 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069325393 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067307902 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069704306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070090063 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0674386 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070475614 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067376023 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070511082 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069434747 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067955864 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067656741 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070133125 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069606267 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067982009 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070304306 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069384963 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070223438 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069968186 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067528715 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067952438 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069368034 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069866246 seconds)
  done (took 3.277696561 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066356737 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061544205 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06205599 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070596725 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061864519 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06263472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061589883 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061888523 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062301872 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061946951 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063148121 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061654131 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062009973 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063200172 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06309579 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066800275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079841421 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062687257 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061948196 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06270042 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066445358 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062385738 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061884074 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062037116 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064694571 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062014002 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062346105 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061672817 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062897666 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0615766 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065766014 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066310133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06208584 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071025771 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066474356 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062105851 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066107202 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061669237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062103474 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061733437 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06149315 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061695156 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061571337 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071206247 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061865758 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063387149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061778094 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06328711 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062399752 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063653276 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06200862 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061873031 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064129306 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063407394 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066969448 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061755204 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062780441 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062093474 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063385711 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061421873 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061499987 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0612506 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065180492 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062486133 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079482052 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070682493 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06172396 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063178955 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062653998 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06561282 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063226062 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07729675 seconds)
  done (took 5.805799422 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085734807 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088335012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066998167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066976995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06292709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062464527 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070417026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062481675 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067213941 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081570805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062518 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066836849 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066889873 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066840661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062951039 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067804949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071393688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062981234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062889159 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06676866 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063252889 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070762082 seconds)
  done (took 2.718670734 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146172413 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068047736 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106598776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073492033 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071198814 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073218004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068978741 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068584384 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068755854 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069115563 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069563236 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068709738 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0717899 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068589503 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06905771 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069035344 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068606416 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06899616 seconds)
  done (took 2.568495373 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078704932 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068099081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087295143 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067909445 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067893726 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067459972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071521328 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072546896 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067565829 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068238482 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072906997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067492756 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068009767 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068124996 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067510811 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06833869 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067728063 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067845571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072483079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072160233 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082060704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073689554 seconds)
  done (took 2.768704826 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07881223 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067069756 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082406069 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069464349 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062755941 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062234421 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068857178 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067076716 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068605827 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06656235 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067454168 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062922677 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069868297 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067630786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069976671 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067507603 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066752032 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067476687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067330948 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062819676 seconds)
  done (took 2.567482709 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083807791 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065429118 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065747887 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071654477 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065393576 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065309153 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07198591 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06542687 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065686534 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086200595 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065752798 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066462536 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072234069 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069817496 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065619272 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071793952 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074209752 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071980768 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065491347 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065772239 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086857769 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065685447 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072142048 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065857751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065789721 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065657348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065777465 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069411948 seconds)
  done (took 3.159309096 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066106717 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065682103 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065760557 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065599358 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065480928 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065370901 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065767981 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065538053 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065200309 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066012494 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06519802 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064893282 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065337873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065315722 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065120739 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065244052 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065630689 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065900143 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066249913 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065662764 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06567543 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065419689 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065441625 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06553758 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065450201 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065106061 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066045883 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065606231 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065574999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065733874 seconds)
  done (took 3.176861026 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076029326 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074344127 seconds)
  done (took 1.359519327 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063791905 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079376948 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061593531 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074087675 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071518624 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065775426 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072444294 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071495079 seconds)
  done (took 1.765998617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085988577 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075752416 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064791661 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076615874 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07561288 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085558913 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126962146 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064626303 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074763401 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065541491 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083341275 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066734964 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074775394 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070122172 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074855798 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078483392 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062213582 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069782089 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065957447 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063022841 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065161557 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078095712 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074418329 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063159447 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070240236 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09210046 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080876524 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064226159 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07188533 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076871814 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074635744 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061509711 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064133265 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064683968 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062995457 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075394115 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082527469 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071378417 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077102898 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06528862 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07249083 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062274036 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073336083 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075218501 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080184176 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064787753 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064731455 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062612952 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065830008 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070654076 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062643164 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068767412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061704205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076306081 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072145179 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079660799 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063211049 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070483682 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070926831 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071541106 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075567333 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071043495 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074113655 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064090315 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079962281 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07443631 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075940858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06224965 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06136088 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062157336 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07778345 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092242606 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073732677 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064655023 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065036653 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062256293 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071631332 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064493668 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074120116 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075691969 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063913648 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06909747 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076432661 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068871573 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071021935 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070273502 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062606637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06742204 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065378169 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084061803 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062675424 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062230708 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064966728 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079076928 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072920606 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063525393 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065694686 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075402095 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061183346 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064141661 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064436644 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069512118 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076613964 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067709278 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067945345 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076818597 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073177024 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069292163 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070499978 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06073429 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064285638 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065839182 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074747532 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061136074 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070305374 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06757317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064505782 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076049033 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062459655 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063664787 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076638934 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075586846 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06284979 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061204069 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070750304 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063689874 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065699336 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076841777 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062011665 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061598896 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061365686 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070798083 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062539986 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070363977 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066544178 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070130677 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.186657408 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063014051 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.06914397 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076658444 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067677469 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070045297 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07385736 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070168754 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063937317 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076603203 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071457491 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066500057 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074548897 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06888519 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062221504 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066552689 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070751795 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063185965 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073125265 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066696461 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071248439 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064670096 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063013153 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070379678 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065199449 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06689295 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070014763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063153428 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079133802 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070478766 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062159039 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061858136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070889822 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065227587 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06406919 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066308975 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070400733 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064455417 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062120228 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06371946 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070662985 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071482525 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066751051 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064571144 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073288814 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08172036 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063399884 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070890576 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064094943 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065493321 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064703366 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079068442 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074459694 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068517084 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071100043 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061568625 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07339271 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075984347 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066398725 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062969938 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066806243 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067949114 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075737482 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06798894 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064707879 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06269661 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070052314 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066733053 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070880948 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063787423 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066374884 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069246365 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062525355 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069869123 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064502396 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078687562 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071772172 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062497667 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066359237 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0624632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075454242 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062440432 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065762932 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06683584 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064666825 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063220709 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070841064 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06184198 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076295244 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077050058 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070123955 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066403756 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063723797 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076112477 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0696829 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07299257 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071428847 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073947085 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079206317 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066308017 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070784559 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079263491 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06361279 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061264316 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073506743 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065262585 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062620193 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062843294 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062575854 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071235797 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070597886 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073700889 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060968976 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070259627 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062161331 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066102364 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061964721 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072006156 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07071308 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068120284 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07557276 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063969787 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063651593 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070930959 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063114972 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06425383 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064931473 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071170377 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064175333 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070049994 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066961721 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069808105 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066220263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06158948 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06977174 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063731755 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068618325 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071878984 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062261291 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068287172 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069471538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06304225 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.199463967 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068568345 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067372676 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072003757 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070054655 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069605556 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071202977 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062086733 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076398342 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063451249 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076892884 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068647916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06134689 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070059176 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070854654 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069181507 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065047687 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065363199 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069453169 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064058195 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07098539 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076469913 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065630966 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079590073 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075477354 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070060212 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071432368 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069822068 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070437855 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066627801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068696228 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065117166 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069567136 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063688155 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072276318 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071147453 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069151711 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07032818 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064629568 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06936616 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065450163 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061956042 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06637697 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066727744 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063724375 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076782309 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064530442 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06767675 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06311339 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064922686 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064014902 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061846937 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070846936 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071376213 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064647615 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074771769 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066624644 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0701626 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079498902 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061124278 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06288242 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062494139 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065854834 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076791854 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064388227 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07797512 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068936575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066734322 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062281501 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064742818 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063122289 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061576213 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062237297 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072688157 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066576851 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06368448 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064282116 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071468689 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064793711 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076746062 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063376848 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068651153 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064252138 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062207584 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06655318 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06638903 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070936137 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064489737 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065470223 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061710152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064112346 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068316138 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069947647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063546295 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069793442 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076159962 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063783686 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071443649 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066096634 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061871285 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071441691 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063961243 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063786386 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066767222 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071889601 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071536277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065011215 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078738787 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063572441 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072335213 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063790903 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0625774 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063466064 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063450091 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064047602 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066775225 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064421899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076497093 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062009215 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069872808 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068644624 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067141593 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07407723 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064446349 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069977167 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068882593 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065515439 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069590137 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077136709 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067146207 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071446549 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064230408 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069321236 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073392066 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065968958 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075113754 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069140754 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064450042 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06907242 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065078299 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063559983 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063373509 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062452368 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072748493 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.19650194 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067499119 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068159929 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062995262 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069021506 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066368372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077439258 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071877493 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071894912 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062044114 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062106481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064889681 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065396337 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069611114 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071155141 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074338845 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071052822 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06786742 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063511823 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07887568 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074336825 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072951041 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065964592 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072512773 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064918754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07144331 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068897806 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069413922 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065839596 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071904206 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070049084 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067695261 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074348685 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072594911 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064667712 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069674433 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070390852 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069307758 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062850532 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064578556 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070840461 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073544315 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071289228 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063884207 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079082063 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065358878 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069443169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066711933 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063438549 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072499736 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06204885 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070149576 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065158492 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065103165 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062855195 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066719226 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065634496 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070862604 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066474232 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062690432 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07979609 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078764854 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070403425 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063555457 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063136346 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062225774 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062299252 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067101689 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0650648 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070037077 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078664051 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066530318 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066392288 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06238467 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064315136 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071810578 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071777669 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062049794 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062634362 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066544268 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070566586 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075762916 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062903004 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064352703 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071912547 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07071814 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062664633 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066492631 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061776715 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071796062 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080653938 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064235039 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070322509 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074316628 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076438551 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064389124 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062742816 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064019462 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07013791 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069604814 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065163492 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064776202 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083715394 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071799902 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066326282 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06302612 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070552646 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066841345 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078113325 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064964541 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064495177 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072547281 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07337357 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071221562 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074119276 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075276749 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070117912 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069863207 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063257682 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068804949 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062957992 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066886675 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064859095 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064090063 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068107258 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070734633 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067918215 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078974004 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077738808 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066467513 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061864765 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067084935 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066778552 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062434441 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064638303 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062002892 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062154905 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062289954 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062542336 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069213219 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072708466 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067251545 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063208502 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062689245 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060368571 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072591578 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069759728 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068604543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060691399 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.062847094 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063609319 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070817714 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064660359 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064050144 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069061284 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068353514 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068347882 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060782152 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073920032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061986528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068660852 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.0653054 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062528045 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06277157 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069760962 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066410676 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063663071 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070077137 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069617001 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063955179 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07660751 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06039397 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071118124 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060747147 seconds)
  done (took 42.461085673 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104441153 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064222066 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063041542 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062706116 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072373304 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063893658 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063159778 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06403234 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064315767 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066124548 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063181047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062771196 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070741467 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077583513 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072840339 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066597774 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062289734 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063495393 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06267556 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064346664 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069789962 seconds)
  done (took 2.778543692 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070187445 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077919231 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074363088 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079853009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071077298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067373475 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074498955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067368728 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075243866 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072739198 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075476484 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067512816 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073073109 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072909345 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072573312 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067745338 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075777338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071452774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067749252 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075496576 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067454527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074822135 seconds)
  done (took 2.884046431 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064174031 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062997458 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07036193 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062129878 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063701728 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061838543 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066030849 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061970846 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06574696 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066386473 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065896461 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065677606 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070129555 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061859098 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067156844 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061740557 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107827491 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06579893 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064309046 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064538479 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062493187 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071126885 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062220077 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062719123 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066298115 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066337859 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063941299 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062434155 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06368338 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065867773 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063653469 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062233168 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070331941 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069563385 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065920639 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066220193 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063500858 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063585975 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062264045 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061957249 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069421506 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062467147 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066671076 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070489992 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062464027 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061955194 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07109044 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063343065 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061864784 seconds)
  done (took 4.521516609 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074639561 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110200703 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068174068 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09118089 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077139929 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069336771 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068162023 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092605197 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064177833 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064680016 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077648449 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07789055 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065843991 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067299017 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070677574 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065663581 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066558926 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064888163 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069143061 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065175534 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069136702 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07001735 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076864018 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077043381 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067550511 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064478697 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064940192 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066862678 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076657962 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06941996 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067370248 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06761577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076674004 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070545172 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064954292 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065428556 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077615598 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06593271 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065449145 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063619202 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065348965 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06676852 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07017773 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078074505 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065865776 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070987395 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065739913 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063372108 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076700945 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065017366 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069781932 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078033452 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066879424 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066160182 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067193129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076836128 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065387117 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063934361 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065908086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07698379 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063679982 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066575652 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077247721 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064733512 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069151203 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078034404 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070074044 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066395973 seconds)
  done (took 6.229315349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072568892 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094353018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079390835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079216061 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073144282 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074104324 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073584185 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073405446 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072977667 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077010203 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073531713 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114618009 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069239283 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075712211 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073306155 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073310263 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073477238 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073112424 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073508293 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073485252 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073245906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079806229 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073879082 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079708303 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076497515 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069228179 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073192761 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072983934 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079432312 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073225705 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07675714 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073060669 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073244067 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079314502 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076915641 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073079149 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063135658 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072942476 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073401059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073318987 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06900833 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079634867 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073251503 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0691452 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073269363 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073234066 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079559824 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076449291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075520059 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077187023 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073585862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079702222 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07352014 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074000748 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079531453 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082296589 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079872038 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079697618 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073193033 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079141081 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079657888 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082097395 seconds)
  done (took 6.030473718 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077688118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07023239 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081917602 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062035851 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062474669 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07224291 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062264482 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062895101 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070529083 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073415281 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073027721 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072559203 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074674984 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072297593 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072392559 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075287436 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072376135 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072446366 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070712711 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072189922 seconds)
  done (took 2.744212061 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076392097 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08125141 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067729724 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072359819 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067594513 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072246723 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067274353 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068032834 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068534013 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068623531 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073861732 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074339187 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068395688 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072242801 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073581041 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072279284 seconds)
  done (took 2.450007553 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083209984 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070431611 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077316107 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063921837 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067248578 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062874159 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063332246 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061955996 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063356849 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076770714 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063498359 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074660102 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063785767 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062612953 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063561553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069505793 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062800836 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063504756 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064199138 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076790897 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070581199 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064611345 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067667277 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063424178 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069421933 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070608007 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065335794 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067176426 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063758198 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063865929 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069380703 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070230463 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06310475 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064194764 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062591986 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063747821 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06330587 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08150317 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069009115 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063739701 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062214035 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068646421 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064195917 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064508263 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06279898 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063814006 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062995477 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069864921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063879504 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068895724 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063463489 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066044915 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064341672 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071064877 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06645353 seconds)
  done (took 4.982964665 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078334653 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067766016 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062038165 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061504339 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067068613 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068130159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067738026 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067609554 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068261017 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062112958 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068498791 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06714699 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068900488 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067708913 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068012999 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067933989 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062059071 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068205068 seconds)
  done (took 2.529440701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072909081 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067036543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071431227 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066965208 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067380421 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066647598 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062477599 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062429047 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062432318 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067740344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067049473 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066477336 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062702765 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06702792 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06734185 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067046204 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06665561 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062684472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067448068 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062121723 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066729069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062845964 seconds)
  done (took 2.764379106 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09605547 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083533313 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140561653 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079828561 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087000101 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072013043 seconds)
  done (took 1.871331931 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092368224 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097867097 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067082554 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066812289 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072641099 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070382797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070448054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070359528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075546051 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075500558 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070440659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075428621 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075497721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077702189 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072964283 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073309528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073486959 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071055476 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0671983 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080130191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071055151 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074863099 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070850917 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070355502 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070810718 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07744348 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075441054 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075546761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070775484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075227284 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073036469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070645063 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075277225 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075655021 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067399354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075112956 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070897324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080093646 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072958066 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076997867 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067513149 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07338932 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075701127 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074623021 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075484858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071447556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074634502 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070828166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07085113 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081824192 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073551738 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077038522 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073091082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075523898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075018466 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082251139 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07553682 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077379158 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073087362 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075474284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077233736 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072925994 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076538244 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075684636 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073185905 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077309055 seconds)
  done (took 6.233121413 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103332831 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067769616 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07105431 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075538238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076946909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071500855 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071523313 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07059847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071188577 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068294347 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105829578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072008207 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077923527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07771344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071399395 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070971328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071425104 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077761063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06834873 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082303509 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070858962 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077227388 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07794292 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077594792 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075785802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073313035 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070949791 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070441374 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071025045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070473708 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074530978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071200773 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077673934 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068310177 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07712446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071132345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070630953 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074713295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070829644 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073475169 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077482035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080014796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070800272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070622761 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075982513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070931659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070865944 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068404443 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071171118 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067786764 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075549221 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076129449 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075602286 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077028339 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071572762 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070816415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071305832 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070457539 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072605647 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073365911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077180834 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070325506 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082034325 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070901995 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070711754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077250762 seconds)
  done (took 6.235687469 seconds)
done (took 127.883017671 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210140731 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184912242 seconds)
  done (took 1.702330405 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074657321 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104712831 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082778684 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133390913 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072082586 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105300293 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10433504 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083402816 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07101067 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071622205 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071119997 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074272769 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136994653 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071791889 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071850223 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074067282 seconds)
  done (took 2.728564857 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104383601 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167085152 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108686362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069396543 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10441538 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076977831 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069256399 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08234612 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076254702 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071290067 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077349158 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075498139 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070886263 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077990583 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075506612 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07809784 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071440742 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07795674 seconds)
  done (took 2.863509715 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102769208 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094499055 seconds)
  done (took 1.527010446 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.176744729 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135296799 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204753836 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338708583 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151265041 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.427252595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140011811 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139366922 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118373698 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135252856 seconds)
  done (took 3.290769839 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103354295 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190838048 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293718252 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120471824 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075991519 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110804886 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122029898 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081838065 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079415345 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079033186 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079151962 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078308812 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100363871 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076919763 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076430524 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078499135 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103471039 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074827322 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076161809 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076398949 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104409921 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070187765 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077290995 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075157268 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07764676 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077840997 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070661103 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069714787 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076062827 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075759628 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079128351 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107919994 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07742068 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103998774 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074039013 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104397185 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078791834 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074213928 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075787759 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074769742 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077702373 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077541459 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078271381 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077869324 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071111029 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078444201 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071307032 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069640725 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080226763 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071126978 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080007325 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079120858 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103315789 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071147463 seconds)
  done (took 6.14001593 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108238768 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106987379 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071632527 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112432708 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1041193 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070680094 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105494237 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098622175 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107463024 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071017587 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069500035 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071265563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079396489 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081481222 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115581515 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108655681 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073012948 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07012473 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10841719 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107887663 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07009104 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101914602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097948751 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108101393 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069179946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070819919 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069465828 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070708903 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075920949 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077620427 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069816243 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078905463 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08375235 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077274484 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068938132 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069335736 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069197579 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078489159 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078904366 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078313045 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076583033 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068591064 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069227218 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069683985 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070096372 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067779911 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076885496 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078325921 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077026154 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068980211 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070159377 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068853789 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070191084 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077707149 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076317849 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078769969 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078263137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069053572 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06903147 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071588698 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079274855 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078326597 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077995322 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069956171 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078686867 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069072533 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079180339 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08302382 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072190025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070507415 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069009245 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069057212 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070186823 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07681219 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07632709 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070373345 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068775192 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068651707 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078876125 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076682204 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069076057 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075929685 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067840087 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068975897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069814157 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070137051 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075765549 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077673716 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070739352 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069321327 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069264889 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069251283 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068125838 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075811897 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078427647 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077549712 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077235047 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069952586 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077297952 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076808469 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070340435 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077241478 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068622707 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070304528 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069731479 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077050828 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075952513 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078187223 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068966261 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069392032 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076862598 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079567263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069611977 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075843534 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078075839 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076148506 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067857025 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07907266 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068708216 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077840243 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068540509 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210714726 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0706654 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07834316 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070373503 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06854772 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069387432 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077726051 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070484963 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069297723 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070147744 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070080812 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07723903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080278428 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070618363 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077151014 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07730871 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070582496 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077756165 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069268384 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078327066 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06973628 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070816836 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068287358 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079948373 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069341843 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06927921 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069430282 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078462386 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069384438 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078947469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076331312 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068490068 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080246767 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079097047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076308878 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07925208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070719099 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06891205 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069216956 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069245877 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076401157 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078126803 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070831616 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069770994 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077316738 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079024849 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069006167 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07736227 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077289267 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077728766 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069646759 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069813805 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079612815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079675366 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077302918 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077678881 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077606967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069766544 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076601287 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077248518 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069753899 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08346616 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070050727 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081609302 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077616923 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07589655 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077637534 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078931612 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079337246 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079205873 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08210623 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068596628 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069431973 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077626384 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069242652 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069568558 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076727455 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070627187 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070538925 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081869684 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069352597 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079209695 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068133457 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077771845 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068749991 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070056225 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082193692 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069171492 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070478475 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077247836 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068934783 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076337703 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078808761 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076792934 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071703682 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070229475 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077993762 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077861203 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069537394 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06886558 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070382482 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076241423 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07605125 seconds)
  done (took 18.474026183 seconds)
done (took 38.070910122 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209274474 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153518611 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184167431 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114351572 seconds)
  done (took 2.088663213 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107434234 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098665298 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087654784 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065693692 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093441301 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065450665 seconds)
  done (took 1.878083293 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336045099 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211516168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192756907 seconds)
  done (took 2.094882618 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221835877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205217105 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459003469 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282504955 seconds)
  done (took 2.620274278 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14308178 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081782936 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064873497 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.077779079 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123059232 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.173602281 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092831412 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126767716 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072009364 seconds)
  done (took 2.363801366 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146286097 seconds)
done (took 12.570509873 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224705754 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113606645 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.267531228 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.145071136 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07272463 seconds)
    (6/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.128090754 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068946752 seconds)
    (8/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.191367106 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075426824 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076159532 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178548728 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.174219645 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076573197 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133569629 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075241016 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066743793 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.225734277 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194747362 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.450579836 seconds)
    (20/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11924309 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075232196 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072942069 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075165696 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075096599 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078806339 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.129680627 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176769439 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084990078 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074872159 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075008998 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091363915 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206986026 seconds)
    (33/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178334212 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211172668 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101874061 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117539218 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130552891 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074835531 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241243783 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.164204657 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172783288 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065154351 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17086734 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177934733 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106733015 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127819039 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074693503 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.165350947 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.144890654 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084203865 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074614664 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113525014 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226888555 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079515674 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156122833 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.06658818 seconds)
    (57/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.209799294 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124110517 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16738666 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087036945 seconds)
    (61/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078861059 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.197904438 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065400051 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074145347 seconds)
    (65/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125576552 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073185819 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09855065 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068143018 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064714394 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066841321 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076416856 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087686386 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066088352 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194310372 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217437028 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104447021 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120242844 seconds)
    (78/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077268763 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076238677 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07659072 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089335899 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100487116 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083755218 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065598491 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193482042 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.124328428 seconds)
    (87/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077592179 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 0.287709287 seconds)
    (89/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195493069 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10305559 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195481642 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.169397604 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.0842103 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.138929667 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087980587 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087779976 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084737559 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067043021 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077315306 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.14269929 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087778672 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06661153 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066611418 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072524075 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.126636413 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072412954 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066621355 seconds)
    (108/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06758103 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069735069 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174913825 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073247567 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073936386 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194445054 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.186654035 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089186311 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065682898 seconds)
    (117/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07512247 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072682938 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066371008 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091326444 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074760612 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068698613 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07232718 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104225531 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079574504 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083976585 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075260644 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07565084 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108484044 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.208965341 seconds)
    (131/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218835438 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066637314 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091363981 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072942138 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067399224 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179205989 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068431372 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06536627 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076172423 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07376868 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066225963 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070465925 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077792785 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0662765 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0740484 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170753517 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07178344 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125621025 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08771384 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069950341 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075321179 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066016581 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072763781 seconds)
    (154/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092335686 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073857987 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072604746 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091969943 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073877362 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21581435 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072857791 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065481413 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065881757 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180922925 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086957868 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087592558 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094575611 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074630751 seconds)
    (168/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064880344 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066611885 seconds)
    (170/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066304244 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131612332 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066226563 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077316426 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076732605 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137226296 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077641005 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140656763 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073608973 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065418264 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065676661 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129321509 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193426144 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193090872 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126486797 seconds)
    (185/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068260094 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169712287 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069572258 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076239284 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066307428 seconds)
    (190/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137448653 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068700739 seconds)
    (192/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.124722567 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066502138 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066952788 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066138839 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077403441 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068019456 seconds)
    (198/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087096734 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06582525 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176969888 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065416656 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065605571 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065269102 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072956294 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08997358 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066121436 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065494642 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066614576 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.234784569 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.079148631 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122618599 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068694132 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074020018 seconds)
    (214/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065902879 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078845872 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06600769 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074337472 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065833052 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066665373 seconds)
    (220/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142986973 seconds)
    (221/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078297069 seconds)
    (222/309) benchmarking ("sort", Float64, false)...
    done (took 0.131377793 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066149522 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072915783 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122825334 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069464294 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067048927 seconds)
    (228/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070442287 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068318511 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066218999 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078589155 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074864907 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076779253 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073371859 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136896154 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06989412 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066756183 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069299281 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133684313 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066621346 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067062018 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074151804 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090711656 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065090517 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064969598 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090391758 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.0661538 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068131922 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085975681 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065853481 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171067507 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144142406 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067320755 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120221167 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074858712 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142590913 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066993832 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066729254 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065549114 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135275231 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066831399 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068785874 seconds)
    (263/309) benchmarking ("sort", Float32, false)...
    done (took 0.133387408 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078234682 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067517498 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065873542 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069781827 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086602346 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077651896 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067775019 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.125033652 seconds)
    (272/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093335328 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066416892 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066365306 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120796897 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072861955 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07502305 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066541365 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086508329 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073116163 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.0663634 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137172065 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065558139 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078457801 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066293548 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079135306 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066811871 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066922987 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066201259 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074534595 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066503388 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077804797 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067662024 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066441749 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065856329 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067994573 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179122588 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072884944 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066663937 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065876103 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092002398 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06716433 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135777178 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066723233 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066045758 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06532464 seconds)
    (307/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078895006 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066281472 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066591472 seconds)
  done (took 32.87668976 seconds)
done (took 34.245715858 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085717248 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098722607 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073872424 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093507304 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081455894 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096038022 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074112621 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079388977 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08188695 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081019992 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079254119 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07256022 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075448124 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075477725 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073268247 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097595742 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080287934 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074343264 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074329095 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066124697 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074777588 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066096505 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065702676 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072035095 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077425122 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073300614 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07533841 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075460047 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066698225 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066253092 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071356526 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075212051 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066163669 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078532788 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07525032 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074496401 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076526259 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079017935 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065509489 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066297784 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075815986 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066095399 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073968523 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072549554 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070991668 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072447057 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074264057 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078237474 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096995077 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070786034 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076099628 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076966663 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077436476 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071689883 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070946365 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073892239 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072320663 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09749435 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074436803 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070690805 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075545786 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075120007 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072287207 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073856018 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074032129 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076737588 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078530308 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072664412 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076612994 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072829133 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065884282 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074214412 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070453097 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066168029 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07740918 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079023445 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065081751 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070062802 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073906079 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074362583 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068318889 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070367049 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065705858 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070440212 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070744485 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072125483 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070883517 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073171374 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065450525 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074592382 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073241817 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073707812 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065606819 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07865018 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066118361 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071979035 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066181266 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066442982 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065515057 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071677202 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065817647 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070675874 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074582799 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064778048 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07057083 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078723113 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065988103 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073053142 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065146443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066057794 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076801968 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075534749 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065937324 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070372349 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065039178 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070814571 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065551439 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065551771 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066016743 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065906566 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069894421 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065128736 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069847528 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071187527 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077382017 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065206809 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070289606 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069677849 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065264764 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072069606 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065850267 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065360477 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065026016 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079054363 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069540768 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065686856 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070877376 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070291299 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073621729 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065078001 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073951363 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071169983 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06984348 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07189503 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064339224 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076632398 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069733357 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069411196 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064819074 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064843945 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064020961 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064531259 seconds)
done (took 12.511862124 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069061382 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116490975 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092180137 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092240446 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082394766 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066685854 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07397873 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091385706 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068132866 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096370794 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088338414 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088378253 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110037563 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065724045 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066660651 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067672638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068273784 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078394104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093986639 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08849991 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105353238 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066807057 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085791424 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086939961 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083498237 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08806912 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068393616 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0682767 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06963176 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08948807 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091496092 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069421661 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067776258 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089804853 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084773179 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079452243 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067167599 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074838388 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067465465 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066651243 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068592227 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086975017 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075518872 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074807612 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067829712 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074492595 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06835292 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.0823635 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087588431 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075178025 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081751284 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090871669 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070722361 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082671427 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066425207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082401615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075614451 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067236751 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067461793 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072114563 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066869839 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069542137 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077843648 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075641933 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071004059 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081214111 seconds)
  done (took 6.613090091 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084755033 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094241507 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082843344 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083377198 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066143922 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067139098 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066777574 seconds)
  done (took 2.002800725 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069796289 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086930767 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090042284 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089890999 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083027645 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090795489 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074324299 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06676547 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095377842 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066526765 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08699905 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098268285 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070709938 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078542103 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09156545 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067212749 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091208508 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067103232 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067739124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091532492 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071388404 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093917343 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07901281 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06758956 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079601958 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067856602 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099466366 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075304973 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068454313 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069213731 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068080108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.09392637 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079220306 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080789176 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068564429 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082069243 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080733485 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070615534 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077829179 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076206252 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079900336 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068163173 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066235039 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068466553 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06979921 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078775453 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066127658 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068318695 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067944813 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086443201 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065923962 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078986689 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070643583 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072860491 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07317139 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072095823 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075141443 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06873651 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086432865 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068935009 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084047137 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083168278 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08016418 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08385951 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06726234 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079407456 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08029685 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068286247 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069471404 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068498998 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083213697 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070560879 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068835668 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078399328 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066705221 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091457308 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090838263 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066682529 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080301978 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067567837 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068476493 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078767203 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09022239 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072278747 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068219199 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071635031 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069370405 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070152394 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065966684 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070674158 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068322247 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072307382 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068136964 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070756927 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069876377 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083809318 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066471093 seconds)
  done (took 8.825979501 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069297731 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068442533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06912793 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067833938 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06818764 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067935673 seconds)
  done (took 1.893955685 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098857028 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068207718 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080760353 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068413458 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103294086 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083037908 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083299179 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085546345 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081769236 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07981703 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083284171 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086382182 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087813467 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069968576 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083009463 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069728176 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083595192 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072320442 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079386552 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070792551 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081144271 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.0704152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07049602 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087967498 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071738516 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068890551 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076937887 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079423401 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078693707 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092621822 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070083314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071694299 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075712081 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085540763 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083567537 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075693783 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06785146 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074257852 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070741387 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071795512 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085554286 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070345569 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070684621 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074301961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.088005614 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075418211 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073827938 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076131703 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082661261 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074181807 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073951952 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069200991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071576948 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074079407 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076075415 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085183195 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074023382 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082921022 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069877903 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075571147 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067802243 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071150941 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086895658 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071047658 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074919182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07407459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075586285 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070190556 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070671169 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067657029 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074112636 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067717511 seconds)
  done (took 6.994183185 seconds)
done (took 27.803734963 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516831961 seconds)
  done (took 1.957383461 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615590605 seconds)
  done (took 2.083648098 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.566889644 seconds)
  done (took 8.030649071 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.41001569 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.651423306 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.748631654 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134164221 seconds)
  done (took 3.448792609 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.701187925 seconds)
  done (took 2.177209214 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234505307 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224199757 seconds)
  done (took 1.940788673 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346811504 seconds)
  done (took 1.812232479 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.052319398 seconds)
  done (took 2.521254222 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.250344379 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167842359 seconds)
  done (took 1.890516234 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.442587449 seconds)
  done (took 1.910854468 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.242935576 seconds)
  done (took 5.711660914 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218022194 seconds)
  done (took 1.720570166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234996001 seconds)
  done (took 1.707322295 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.741765867 seconds)
  done (took 3.213845225 seconds)
done (took 41.608380033 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082942996 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085106254 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084883033 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081045941 seconds)
  done (took 1.789271549 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074493628 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070443412 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074472913 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070360728 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074072284 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0708612 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071863834 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073009363 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070646018 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070984338 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070684756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070848097 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073968763 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072170337 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070233585 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073696861 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074933545 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071187604 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074017778 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071070657 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069308574 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073864323 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074286924 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069944933 seconds)
  done (took 3.205517809 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078361167 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07381609 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076120822 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072275257 seconds)
  done (took 1.78063829 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076574928 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087505784 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086450342 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077138864 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088353715 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084109541 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067298711 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068078597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068959474 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076435636 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066394406 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0922664 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086330351 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07707762 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078543388 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063747664 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06586408 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084660877 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077014122 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07741516 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068940217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076914209 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066364589 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086639562 seconds)
  done (took 3.326136483 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08644057 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066317095 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085783649 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091842294 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093112949 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066275446 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084643085 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093237276 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140818945 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066120864 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.0720428 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066307954 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10477532 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06682819 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085574039 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109109521 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112643168 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069774321 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098505024 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06951833 seconds)
  done (took 3.211567017 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082968966 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069296844 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070353588 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065694075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07611379 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073058983 seconds)
  done (took 1.922920352 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068817742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068279966 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067962477 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067281728 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07242877 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067498856 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067159151 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06816868 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0679158 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067718532 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067530341 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067210769 seconds)
  done (took 2.298719199 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193073484 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070359922 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071343282 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066904637 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073101578 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06704676 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081953387 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069478737 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094404902 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067793268 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067608193 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069368219 seconds)
  done (took 2.474410368 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189925004 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073777347 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220135087 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143816503 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101729644 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108704935 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111110578 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107315976 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132187827 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096848388 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152065096 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158737258 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10300791 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128567731 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087060627 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119944827 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144084453 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154975136 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098767315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15312534 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134678851 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121716184 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140881271 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095960535 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100999632 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111827025 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071889149 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076767521 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157530848 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122487854 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134712017 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10462811 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08987787 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168204255 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15529634 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130283779 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140622891 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080907235 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117906621 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128495985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191376034 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086984984 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150278556 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102931701 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077617214 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124295181 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108933956 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114422502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.09874179 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085643209 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271703846 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171713851 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126728517 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084225293 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116216203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104128772 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108647862 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113235658 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214981114 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1488549 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120592983 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069203162 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106265926 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141433021 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124943749 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104705803 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116995892 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08984853 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124119067 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150450564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134542225 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132135587 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.134691935 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084972616 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113967311 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129511877 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121894663 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161408091 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117237563 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070712953 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1146409 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094831648 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077651284 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14146392 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07348262 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163444985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095526656 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119400309 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124528335 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104098983 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10449716 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14847486 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133273357 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100302081 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083829004 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09871606 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113670987 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140157201 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083836507 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103650639 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109242375 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076362787 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125002628 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072787998 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113437406 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092093821 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112244255 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265542711 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078325623 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118055666 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098555429 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098601717 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12435877 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147520648 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084923084 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078296374 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15553093 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116282021 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099575333 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134401651 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148464893 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118423312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093715968 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136339167 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162473265 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087066684 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151127055 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098738279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081103736 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102915524 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117457427 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105527156 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117168033 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07807047 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113784272 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156483068 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072386555 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093020565 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125343263 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078729776 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078414016 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100267929 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099724646 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093528347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097279334 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10048957 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12942162 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116700178 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101328767 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117034127 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096339567 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154361233 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085102255 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099083747 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100038276 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070549951 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12525327 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145748571 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076337537 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149839663 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115572491 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110599041 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112503716 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080159346 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128272402 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075929436 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069891879 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130845691 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.253891427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105156389 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143396356 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109128606 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.11760855 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114288845 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123981161 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122097217 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123036708 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109808131 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086279177 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109763828 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1580788 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071073539 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08852449 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07999197 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099764066 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09089489 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081262488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131494841 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117592802 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106388197 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110061715 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093394804 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140893977 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076609027 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117917782 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116380695 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091900493 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144580759 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14319007 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125320895 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097090193 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128608905 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071170623 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072261828 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085660989 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116856378 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081624705 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081595455 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108336585 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141017746 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122371413 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128000697 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117729742 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114681253 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14787635 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071116884 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117165127 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134745876 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115386295 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100597979 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087896612 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094974781 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134710192 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099205026 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196307737 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107661358 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115590248 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293448088 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09894009 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077274232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100332509 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124463913 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09736593 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135049818 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095010911 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084231103 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102556554 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07615046 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095448094 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127875158 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111652485 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128311933 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107723443 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122216786 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075650714 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107137377 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116771897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116979254 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081946677 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114046433 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155893848 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100303169 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110930114 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141240643 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07669482 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133894687 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161305262 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134482179 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082014002 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100271348 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115770813 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119440789 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1156912 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130643696 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099776608 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129444186 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106497629 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082210833 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083821551 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091712083 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099405606 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108685267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100148108 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110068876 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092720502 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128990413 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099080607 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106038402 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112463483 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097470051 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093011413 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09282499 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163030625 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111671326 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1552269 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095542983 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13207714 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29683845 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074101908 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077268303 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079209632 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130450023 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082304596 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12313884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107955686 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110282375 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116687448 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129641482 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092834786 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069577936 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105196621 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125638353 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117820118 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092902516 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099844559 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151947123 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114014581 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076550244 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107679802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110764297 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09974893 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163242018 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079606213 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10556274 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075190038 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077595597 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119970165 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141997092 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08072698 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.09992655 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114538569 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106693262 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120180446 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094082064 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106761662 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124790388 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137592672 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11956087 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086847567 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105904174 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12090264 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142929004 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098911215 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096385084 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162808817 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141515087 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151429204 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084822128 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109080996 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109160324 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105321048 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127752272 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081179145 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150019844 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078483133 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125046914 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095837857 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085883939 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269986415 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109164355 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085242624 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139614114 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112300328 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080727802 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078283623 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107586266 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11278657 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098295093 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072911328 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13708867 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071840373 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127793299 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158855957 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078107207 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100946625 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092116955 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07963775 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09894761 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097202114 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083195224 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096454887 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159451967 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085035442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142572399 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125824334 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108765981 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129500213 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099580432 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642024099 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077240738 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141938464 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110249923 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167827962 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095555464 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112782279 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106203691 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114539632 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133579878 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098049425 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174783913 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122570317 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112575222 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07683909 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097418091 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099305281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085628556 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102215563 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108143596 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108340625 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091891349 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112491963 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11529523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079998877 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092973017 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144183711 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108801356 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137364424 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277018808 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08262038 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112707782 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126787849 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077883002 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112991174 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141159663 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101377668 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118592357 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080452632 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09671492 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162264313 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071503386 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147888423 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114515909 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105888605 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110855248 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105049783 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12311077 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099369467 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115561868 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089920361 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140769325 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109560581 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081634738 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077026898 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101431068 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105799205 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094552249 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094649188 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096250551 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141470342 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070288354 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094466559 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109597964 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140367661 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160508477 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102314317 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081293999 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115101784 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151016999 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108962967 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114932832 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078771549 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078579532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079193484 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098124446 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119726549 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108983582 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113615552 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107084542 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150645914 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081545938 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221690349 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092328335 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101018156 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086080685 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077661334 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092499752 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091929331 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09822405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1050062 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309294312 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092834875 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087005451 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089220972 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073213017 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080433926 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119537752 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10538588 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112113194 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115862677 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080256936 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099059978 seconds)
  done (took 56.750153059 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.102951976 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077085039 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096633426 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143172367 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121504054 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199224494 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150519141 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188810452 seconds)
  done (took 2.658231349 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06822209 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094051813 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103221345 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082444328 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066942118 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068019968 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223925533 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08140393 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066809039 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091258085 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076949884 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069000655 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.453715916 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066743543 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068298623 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077135484 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068036863 seconds)
  done (took 3.394730564 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379775341 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610450831 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353394147 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075919353 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.001328771 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089308403 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.229428794 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137428924 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081695662 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549916802 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366572964 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134287429 seconds)
  done (took 18.588271246 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083132511 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076845228 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091049802 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091544403 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07977313 seconds)
  done (took 2.063715203 seconds)
done (took 104.959804947 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081993548 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.441430288 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069960049 seconds)
  done (took 2.116307466 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092481082 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089718756 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090489661 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087909516 seconds)
  done (took 1.949964289 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075848622 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077310382 seconds)
  done (took 1.731131062 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.207583447 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17537428 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098336079 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083967988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080904385 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081668102 seconds)
  done (took 1.829751083 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073372818 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073428125 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073288706 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074182991 seconds)
  done (took 1.872925852 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068647689 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067565557 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069652385 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0721452 seconds)
  done (took 1.858613609 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085158366 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085267339 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080007732 seconds)
  done (took 1.830099039 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101434851 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091429594 seconds)
  done (took 1.773456369 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081816697 seconds)
  done (took 1.663273871 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090587237 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10062358 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130239762 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115291304 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136170364 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115035601 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089149951 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085778211 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079381618 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092554259 seconds)
  done (took 2.615687544 seconds)
done (took 21.38262688 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079500516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376215081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361926522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091122639 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673921293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35800052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98575936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094084467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143523019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06981692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087590653 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651478113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976309435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332105119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964947573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331914225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653678811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069709266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069458343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069994847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97435461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069441536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071105019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070961422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652457343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376168982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071496035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330627229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070464723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074452447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359736681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071366687 seconds)
  done (took 16.195028035 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07105094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122830285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073632636 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085615406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071871489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070583772 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072685672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070008468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12339023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07031973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087574541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069497135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073808211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070808414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089821279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069573132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072672361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071290253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070072791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071961581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089824152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069959812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07129763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073550238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071151852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083905725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072053552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070629304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070450825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074744189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075623499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072016623 seconds)
  done (took 4.069323504 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117569854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126442492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074508962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107733634 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114140886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071675291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14795451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094476558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130622067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070369474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087904817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070055394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105043204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071588767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091621513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071035321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073959015 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07118518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070735967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071186496 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089718673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070729546 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071405816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07133404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071288025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08597825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071783356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070634021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070328658 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074979907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076136284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072404682 seconds)
  done (took 4.332686983 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070988322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074011788 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081782008 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083082364 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068677638 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071089915 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071785376 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069059079 seconds)
  done (took 2.188614336 seconds)
done (took 28.373496434 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079314654 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068872538 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071862876 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087976592 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074559203 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080173644 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066120302 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075761032 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07290882 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073004135 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074848137 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068151699 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071709084 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066121382 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073423892 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067731878 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081929924 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071916841 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081346064 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081814861 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071068844 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074222673 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076531212 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082010205 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082182637 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081322258 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077476864 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073723559 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069243881 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071550366 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071553056 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079839805 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081960692 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082217608 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068542201 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068456397 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07300796 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069886147 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082985796 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078003683 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069957657 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078004671 seconds)
  done (took 4.724026154 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085468302 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089883687 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082817275 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079945679 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091030798 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082961777 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087486082 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078453209 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078496134 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087018805 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075262264 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081596085 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079509417 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073551191 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077714243 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075782798 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08014315 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074648509 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078100648 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079420125 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088695682 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073823152 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089064654 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080349042 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075458159 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081348742 seconds)
  done (took 3.712789839 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074590255 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086529037 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09376634 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144295834 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111530589 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08171479 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081973756 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093032755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097609668 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06916349 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073927909 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093842624 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093512125 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075591922 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069157134 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085097984 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08463605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071363219 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076331039 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097901617 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090217524 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086481097 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095023149 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08554328 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068616678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071917901 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07379933 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08780265 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071789688 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080514126 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07201868 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073180188 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070034181 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079875914 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071703738 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068361052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093954636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080544271 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081242057 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069500454 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078438801 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06970062 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094236398 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129368663 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067624655 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072712995 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072435214 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080466072 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068290747 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096335205 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080669691 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068454274 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06995792 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068043476 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068093184 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071350965 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0705509 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071521001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07867196 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075503738 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090562757 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073782548 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086084581 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068112353 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078586678 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068041346 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070180721 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067811684 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097582808 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070424849 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113570578 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069443505 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06733925 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079842327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078888252 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074675454 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068613933 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086332089 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080300173 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072845687 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076887567 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071822192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072083046 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099413327 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069213974 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068517651 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067583589 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072202983 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071857029 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069311115 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080647244 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067831737 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072320843 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086452214 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06821754 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069570638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072440968 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07121109 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067910804 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079415217 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07309117 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070203377 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079220052 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069567948 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072137053 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082083787 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075219113 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067415945 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070682852 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072032794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07020392 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070330383 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072371631 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07069875 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075125078 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075236098 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074326649 seconds)
  done (took 10.765306692 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165088442 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15684582 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071568993 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149085134 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078022256 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080663035 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152063511 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095844321 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069350248 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070767084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069434443 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110400816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106407269 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117009095 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082088357 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06999365 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092346582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115708097 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15455843 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148922156 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09158948 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077195308 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071898217 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071460567 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071573251 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079269518 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086339211 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077820396 seconds)
  done (took 4.428106892 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078740808 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103983258 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073320422 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091776926 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089209345 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069512779 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07177522 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071442336 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085995005 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078139963 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069824313 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074590161 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073440776 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072526606 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070759998 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076148359 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076609812 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068983924 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073746768 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074932232 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079737984 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094494728 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072941812 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06912937 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072362925 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069394382 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077549502 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082041605 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072381036 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105587469 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067234156 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074504512 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083232319 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070064327 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069246101 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070019993 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069341664 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069446329 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070769662 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067879698 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068100539 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073045362 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068298072 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077774182 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082836551 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071184388 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071492681 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072081442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072003339 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06686881 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072024236 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072220763 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07255221 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07664323 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073395767 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072481771 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070288978 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096232417 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075454494 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069335611 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068669006 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068169042 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07173883 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079155741 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085314651 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071699838 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067885569 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069876507 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08194526 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082469963 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069067459 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073752803 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066784438 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071111327 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07216631 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07583605 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07015714 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067771275 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068880562 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069497863 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070387569 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068938051 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069081165 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072159373 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067477032 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068024102 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069893694 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070885962 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077940139 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068606657 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072982037 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070499847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068222805 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071997641 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074695608 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072243582 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080448125 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080701557 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069761692 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067863341 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082870789 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072216362 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068559576 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074946498 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074568062 seconds)
  done (took 9.418552524 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091969026 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069242321 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085708518 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.0919776 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078814539 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074926345 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079286912 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069153959 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085710532 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074045338 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077142344 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067807961 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080280549 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079115299 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070133443 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080301298 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073141848 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087189889 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084079184 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068108513 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078095204 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082178929 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081895544 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083857751 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082738098 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084699075 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081626192 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079054887 seconds)
  done (took 3.870801382 seconds)
done (took 38.512658783 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.67738888 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.843790821 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.666341017 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.879486107 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.717622713 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 81.56610091 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.756658664 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.659063953 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.975355773 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.70496247 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.942381138 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.883444007 seconds)
done (took 139.014870875 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.713076357 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.812995341 seconds)
    (2/2) benchmarking "String"...
    done (took 1.912340428 seconds)
  done (took 5.327333692 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.842893385 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.460232582 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.898980904 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.660972684 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.667324581 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.936074758 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.442234485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.107263595 seconds)
  done (took 29.775754052 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.821303344 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.88322746 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.35099947 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.386224346 seconds)
  done (took 15.086721432 seconds)
done (took 61.438936852 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.715504709 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.663520861 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.692806988 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.661141466 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.7542835 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.681723628 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.061377876 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.695423844 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.66121871 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.66798074 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.664291839 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.08338742 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.671085123 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.031006531 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.665036473 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.663746078 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.713362778 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.170588303 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.815291478 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.671588506 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.676385878 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.853216349 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.66935089 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.664283668 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.7073612 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.664262281 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.068510264 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.669065385 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.276392314 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.663844112 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.700529368 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.69722071 seconds)
  done (took 200.318260588 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.663068722 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.701810156 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.785254852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.693176792 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.224936258 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.858194802 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.765840432 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.114319641 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.668538833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.680903218 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.9547568 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.663540833 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.979638217 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.609915565 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.700484749 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.745707236 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.901505931 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.958360528 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.70240961 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.840297183 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.668637292 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.817791888 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.766796429 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.915355793 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.700361597 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.766237961 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.668729886 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.687379958 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.845163441 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.882166351 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.678561633 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.66859263 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.860080676 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.533453493 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.687016634 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.687379864 seconds)
  done (took 166.651849129 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.849272645 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.666135091 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.66412245 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664592758 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.670090472 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.663752313 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.788232153 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789976652 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.319558627 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.008247726 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72184997 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.6644478 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.419760581 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.663916977 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.729580065 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.675451934 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.664414583 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.678558062 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.691719974 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.664367534 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.664858424 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785539787 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.678525628 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.665303392 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673448558 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.665398168 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.670720497 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.053712783 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.664724049 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.893401882 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.666226829 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670549246 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.904656204 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.666946001 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666994902 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.4848154 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.161922691 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745354446 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.66660042 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670404544 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.665424612 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.882619896 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.666550427 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.666083705 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.665533604 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.66687541 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.774649843 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.669957913 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788484116 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668985194 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141690333 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.665540921 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66734748 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.13913634 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.250436552 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.668504412 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.668692463 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.66583779 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667547272 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.672247228 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.020652655 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.897896236 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.668134432 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.668824433 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.681036801 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.667294258 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.719918589 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.666204208 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.154184187 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.681922644 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.789115405 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801942017 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667722591 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730856652 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759043562 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.667568975 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.666811096 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.667055089 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.667262484 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.667025209 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.747403542 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.667175447 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.666995482 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.780985861 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.678684388 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.668582149 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72524051 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.737615165 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.668287907 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491383696 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.667725487 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.668110399 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921389372 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.732507172 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.667783111 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.669327136 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.757400445 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790161935 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.393388898 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.668098003 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.667991654 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.90302143 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.668379749 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.750565501 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.669817961 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.788834328 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.67170351 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747878858 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.677235653 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.66992347 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704251127 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.669897517 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.679970364 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.668796155 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.040742149 seconds)
  done (took 388.133719627 seconds)
done (took 758.612344918 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.287855969 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.259201493 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.359510061 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.27201561 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.249086279 seconds)
  done (took 13.038058376 seconds)
done (took 14.647637574 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.751151313 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.751232428 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.68900197 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.750574269 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.684828389 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.750866908 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.734128555 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.691942889 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.719676512 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.692580036 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.720810234 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.691451168 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.677458244 seconds)
  done (took 23.915794809 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.907839812 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901575339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.735068011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.898160235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.710538483 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.906475095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82187066 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813742249 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.808442021 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.68046642 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.679496916 seconds)
  done (took 21.476392709 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.900212237 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.910486766 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742073125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.899087575 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.715183477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900288233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840094438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815024913 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.815119614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.682263934 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68041501 seconds)
  done (took 21.512871715 seconds)
done (took 68.515058619 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.674657463 seconds)
  done (took 3.286124315 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.693837193 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.84831381 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.674162251 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.673732125 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.673977498 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.674259422 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.674879223 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.674954878 seconds)
  done (took 15.201129674 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.673879191 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.673393622 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.673995955 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.674546906 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.675480164 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.675835306 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.675330147 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.674373393 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.674799377 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.675696629 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.675145362 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.675477785 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.675005959 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.674676875 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.675335318 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.675802689 seconds)
  done (took 28.412036109 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.676563131 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.674060531 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.675133873 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.675375733 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.674850844 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.676272283 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.677106453 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.675171206 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.676591382 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.676005944 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.675471148 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.67711303 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.676666124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.676225535 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.675728327 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.6768682 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.675689521 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.675744348 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.679989623 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.676770339 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.679269998 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.679043821 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.677629651 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.678474046 seconds)
  done (took 41.854745724 seconds)
done (took 90.365328169 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.413293224 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.299093266 seconds)
  done (took 9.329839511 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.679437625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.677710076 seconds)
  done (took 5.041978743 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.67720462 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.677296024 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.678086255 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.676950686 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.678708957 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.677436946 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.677240854 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.677902266 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.678026256 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.678309596 seconds)
  done (took 18.394021236 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.677696907 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.678528511 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.676944176 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.677620563 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.677803601 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.677815578 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.678703496 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.678402269 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.678165312 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.678169108 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.678092934 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.678536782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.67902719 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.67796449 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.678470915 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.678898468 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.678917658 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.678604932 seconds)
  done (took 31.824621941 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.678420774 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.678043707 seconds)
  done (took 4.973540193 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.679444896 seconds)
    (2/7) benchmarking "second"...
    done (took 1.679884051 seconds)
    (3/7) benchmarking "month"...
    done (took 1.67950007 seconds)
    (4/7) benchmarking "year"...
    done (took 1.679833813 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.678970155 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.679073924 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.679550858 seconds)
  done (took 13.373339643 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.680037659 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.826700549 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.887642459 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.340672124 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.680349553 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.682217923 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.603073768 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.68144013 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.683759829 seconds)
  done (took 18.683913989 seconds)
done (took 103.238421617 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.518341399 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.680709173 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.935256025 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.778249744 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.700310337 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.680014438 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.705735523 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.943423963 seconds)
done (took 41.559029737 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.720399808 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.344631968 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.36673221 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.715254612 seconds)
  done (took 15.045544237 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.676178922 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.979158512 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.705159478 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.483253172 seconds)
  done (took 21.466965182 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.041640002 seconds)
    (2/2) benchmarking "read"...
    done (took 2.022989331 seconds)
  done (took 5.68615633 seconds)
done (took 50.539145404 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.678710083 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.678053963 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.678673136 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.679859653 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.678921325 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.678992633 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.67944269 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.679392163 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.679422925 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.679540129 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.679086255 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.680227321 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680416881 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679837991 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679751585 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679479292 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.678965663 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680262019 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679491999 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.679751681 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.680038009 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.680080599 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.679473132 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.680273368 seconds)
  done (took 41.926064401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.679928595 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.680613498 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.680463058 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.680661663 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.680051798 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.680931817 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.679335356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.68081417 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.681656508 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.680580765 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679502954 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.680664347 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.680523329 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.680058804 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681448622 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.680900029 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.680112206 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681347931 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680055197 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.680829884 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.681828962 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680307337 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.680875924 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.681254935 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.681102491 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.680360019 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.681331429 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.681379813 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681258085 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.680531959 seconds)
  done (took 52.041253573 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.681124074 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.681182422 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.68170609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.681834966 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.681550812 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.68138002 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.681868203 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.680987184 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.681440834 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.68153332 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.681262122 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.68194953 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.68178543 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.681597985 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.681895358 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.682038351 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.68223434 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.682460459 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.682061174 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.681955822 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.684334992 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.683140434 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.681359725 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.681875994 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.683421923 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.682579163 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.682506034 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.683360319 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.683506956 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.682072187 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.682756266 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.683236316 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.683426685 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.684031684 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.683418025 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.683064442 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.683037679 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.6838565 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.682564318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.684038809 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.682529543 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.682986872 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.68415467 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.685094962 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.685638774 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.686014311 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.686441318 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.684509706 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.685638922 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.685436155 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.683980157 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.684360225 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.68355474 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.683078131 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.682416053 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.683602216 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.683357194 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.683222023 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.683882764 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.683885946 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.684942859 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.685221903 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.684775837 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.683591697 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.684696494 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.68456714 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.684756756 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.684537869 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.684549558 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.684281081 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.683870885 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.684717542 seconds)
  done (took 122.816960574 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.684657097 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.685240513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.684920653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.684811705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68437379 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.685034029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.685709011 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685337208 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.684276189 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.685473164 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684742755 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.685291176 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685158401 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.687280321 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.687437722 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.686332275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.685588542 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.686322047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.685290099 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.686252707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686090546 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.686446427 seconds)
  done (took 38.706678912 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.686456288 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.685420561 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.686268962 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.686443995 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.685640258 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.686194591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.685422566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.686961002 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686087851 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.686250103 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68632697 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686458978 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.686780021 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687073639 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686495953 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.686672995 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685851237 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.686683676 seconds)
  done (took 31.978222935 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.686651997 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.686988118 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.686447486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.686607668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.686514306 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.685951806 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687423435 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.686927225 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.686533558 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.687176884 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.686472298 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686325514 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.688376028 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687022162 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687005365 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.687977394 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.687758341 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687094564 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.68814899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.687137991 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.687048068 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688117516 seconds)
  done (took 38.741679018 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.687279455 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.687672746 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.688445957 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.687574439 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.686966332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.688389494 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.688275163 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.687406428 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.688699378 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.688507976 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687457577 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.690163599 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.689586584 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.689162275 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.688988476 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.68893289 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.68939902 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.688564309 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688862766 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.688514699 seconds)
  done (took 35.39523724 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.689248056 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.688924266 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.689762812 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69059692 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.689836122 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.690228196 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.689995487 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.689381621 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.689919127 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.690104489 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.689260424 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.689517643 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.689347364 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.689579437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689747461 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690084587 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.688672705 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.689741551 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.689157719 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.69019403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.690225248 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.68900099 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.68928136 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.689816902 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.689576698 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.689966295 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.689714947 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.689979203 seconds)
  done (took 48.938597341 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690254016 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.689930772 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.690316156 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.691131862 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.691039904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.690307522 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.690967276 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.690967915 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.690508723 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.690682295 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.690327228 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.691034198 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.690455729 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.690983251 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.691058468 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.690824451 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690944528 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.69134713 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690490247 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691298762 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.691237906 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692060283 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.690884758 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.691034294 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692131319 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.691491835 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693044969 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.69234366 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.692061802 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.691982104 seconds)
  done (took 52.36310719 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.712443716 seconds)
    (2/2) benchmarking "in"...
    done (took 1.712393565 seconds)
  done (took 5.054834529 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.691743499 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.69208489 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.692896839 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.691636144 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.692402084 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.691809593 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.691407942 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691930483 seconds)
  done (took 15.166249618 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.692255211 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.693663027 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.69269874 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.691476515 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.692366122 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.693532327 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699838188 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.693926834 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.695862286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.694561981 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.700701562 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.701334125 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.697425699 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.694907176 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.694325603 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695906525 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.692378564 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.692886301 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.694006591 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.692932275 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.692302078 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.697150661 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.696075504 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.693743393 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.695995199 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.705404229 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.698967425 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.693417316 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.696642246 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.700768404 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.696727142 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.695501532 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.695649691 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.695990969 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.695089172 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.695102811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.703406706 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.696839788 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.701332954 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.694329749 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693437957 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.694185277 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.697025362 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.698058133 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.697981338 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.695189535 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.693944173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.693754592 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.694679895 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.698881631 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.701856786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.696753982 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.695212294 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.701038255 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.697696612 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703610057 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.695875217 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.69936849 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.705334657 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.707503337 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.708236568 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.704843918 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.699269404 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.695686172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706065172 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.721658201 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.703460921 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.695245063 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.695646914 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.695926294 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.704701666 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708093036 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.707311209 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.69574925 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.696050897 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.695561823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697826384 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.695940328 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.703415719 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.700320149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.696276139 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.697118102 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.706180042 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720029797 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.697522562 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.696942744 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.695851419 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.697430839 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.697185886 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.708023127 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.697524859 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.697622505 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.69736722 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.698398007 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.698579299 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.697114915 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.695350727 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.699482464 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.697040098 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.696446571 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697987786 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.701677859 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.708075917 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.697246532 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.698187179 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.705214954 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.697726513 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.699113063 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.705148562 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.698549155 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.69834815 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.698964102 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.705956768 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.698502979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.702304225 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.706980037 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.698524595 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.700425514 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.698233955 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.697747012 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708349191 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.726219609 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.697835748 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.698762047 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.703301392 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.710662667 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.698215022 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.702374838 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.699030803 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.698920432 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.698350783 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.702107541 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.7008781 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.703891369 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.701280038 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.703574345 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.701101908 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.701933443 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.701360878 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.705085879 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.703454055 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.703381126 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.705472048 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.705060568 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.702452621 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.704917545 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.708520684 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.70451185 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.704546975 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.706543367 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.702296757 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.702881565 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.705237518 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.702759364 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.703169453 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70384212 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.704168473 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.702243592 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.703411173 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.702916594 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.702774124 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.705322622 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.709443163 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.704261037 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.707439074 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.704175805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.70346289 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.702694673 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.702894971 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.705064438 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.704328398 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.703426599 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.706858722 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.712403634 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.703081874 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.703489906 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.707559477 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.703848233 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.704002704 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.704388993 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.707319935 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.714371836 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.703741541 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.710552014 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.703926765 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.705094092 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.703422286 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.705351419 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.705196449 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.704806467 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.708866813 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.711793519 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.716621449 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715161427 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.70498253 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.708910597 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.70543343 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.709239916 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.709911528 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.704470219 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.704696552 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.704959689 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705969314 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.704157656 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.706328862 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.704390807 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.705001317 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.705254216 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.704831622 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.706528837 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.705529226 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.707964175 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.708030516 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.705414658 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.705956222 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.704930769 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.706736683 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.704759058 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.705525979 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.705460272 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.705328395 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.706489891 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.712774758 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.706589098 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708769914 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.709936353 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.707316772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.705868739 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.706521089 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.710102262 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.707834808 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714498695 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.707667993 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.708221207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71533432 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.706610925 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.706584763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.709912497 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.706738708 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.705766467 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.710723117 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.715284366 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.707197683 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.707228329 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.706804173 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708204091 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706187596 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.713813087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.707836919 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.707616286 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.70749042 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.710401024 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.707557749 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.709700291 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.710100368 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.708275148 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711087645 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.707177646 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.707405722 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710282593 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.707774104 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.707267586 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.70860133 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711570882 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.715980581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.71369616 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.708473386 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.710051277 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.709459942 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.711441409 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.711090715 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.707891888 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.709000318 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.721337244 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.716387628 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.715792292 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.712572256 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.709180459 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.715693338 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.711015493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.714908482 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710829521 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.710977334 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.710923531 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.709380761 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.708883536 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.712476912 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.709827894 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711271428 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.711535061 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.713056658 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.709479117 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.709967753 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.710535817 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.709782674 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.709053961 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.711031881 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.709057221 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.713029939 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.712847337 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.709832751 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.712264118 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717211574 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.712420667 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.712269829 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.71161699 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.712013918 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.710021534 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.711400297 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.710229483 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.71402628 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.7189364 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.714679652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.720481989 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.712471187 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.720737447 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.710368449 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.714512268 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.719160108 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.711815855 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.71034256 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.711922784 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.711003265 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718498296 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.711442991 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.712361111 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.716292767 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710296785 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.711753781 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.710376602 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.711711983 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.710863152 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.711506962 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719027593 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.71410605 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.716938136 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.71470369 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.711846454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.712346426 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.711004281 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.713048167 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.716978681 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.712164945 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.713165286 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.712823326 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.713060057 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.712701873 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.712056676 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.711383071 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.711926583 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.711912308 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.720591382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.714154632 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717282398 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.712523352 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.721246549 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.713544836 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719798768 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.713407391 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.714167536 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.712434135 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.712387623 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.714619457 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.713183712 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.715586523 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.712333688 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.714502649 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.716148607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.712676774 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.715131631 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.715523615 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.713742446 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.71464926 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.724512098 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736218012 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.715965091 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.717882439 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.713605443 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.715585072 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.717842619 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.71463303 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.713639623 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.717235634 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.725444312 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721395564 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.715995772 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.713758127 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71639806 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.714532092 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.714055127 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.71394336 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.714174841 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.714445743 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.716179736 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.715132544 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.719558918 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.713812503 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.71593437 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717630348 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.715087403 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.725479762 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.71573578 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.716523317 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.714827056 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.714485545 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.716479283 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.716583788 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.714667427 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717108907 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.714892093 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.718862 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723117274 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.724345527 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.720130701 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.717410721 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.716003587 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.717853486 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.716197034 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.716458983 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.71585259 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717185592 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.71816788 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.716508799 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.717368823 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.715579435 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.715287887 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.716412791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717119635 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.720359099 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.725468438 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717511344 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.716141988 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.715926259 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715999767 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.716093981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.717300251 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.725004544 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720677008 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.728235555 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.726409149 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.721298184 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.718096463 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720731028 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.72706604 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.716987618 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.720068818 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.71791171 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.72113543 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.720256517 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.722251408 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.718273316 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.72487753 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.719230671 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.717408766 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.724815844 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.720608242 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.716032468 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.719850864 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.724067832 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.71949169 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.717098586 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.716577176 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.719021895 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.72461121 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.720216706 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.717037304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.721082834 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.717222787 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.719614081 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.721781875 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.716721535 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.719594631 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.717720671 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.720020966 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719383427 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.717505913 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.718005852 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.717752071 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.718466543 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.722326328 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.726445397 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.718383054 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.721763863 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.720509779 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.719910792 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.718274038 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.718765032 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.718584592 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.718322326 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.718804065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719472588 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.720129061 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.722489363 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.719875669 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.720511017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.723430768 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719321836 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.724178384 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.730918114 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.727240511 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.718622677 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.723080238 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.720481185 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.723760971 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719714664 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.719945713 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.720847881 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.722888534 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.719161156 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720141226 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.718892913 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.723421031 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.736442257 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.719894217 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721267952 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.721185174 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.724874261 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.720785983 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.719523305 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.721609413 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.723274222 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.724089696 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.727903742 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.721565349 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.728836835 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722718572 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.721824705 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.725511707 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.725458723 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.729526103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.724710889 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.721004922 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.721089158 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.726801471 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.737849925 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.720546922 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731223774 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751943876 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.723177444 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.721649288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.72098272 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.722012545 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.720828322 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.723125584 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.720880903 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.722562443 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.72162555 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.721074815 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.723199439 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72869446 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.723794894 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.721394981 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.72115958 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.721632866 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.723907229 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.721429823 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.722706796 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.721872892 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.722698882 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.72142683 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.722260502 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.723647932 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734422861 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.733107545 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.722294332 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.722665779 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.722745539 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.726531844 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.726011207 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.733787576 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.730235951 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.723371461 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.722564472 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.72529417 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.722809642 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.723391526 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.725131846 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.724507895 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723700727 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.723270718 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.735973283 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.732222659 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.729337327 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.723712038 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723525009 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.722768631 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725496135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.723171052 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.723646885 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.725209746 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.724365177 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.727725386 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.723107369 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.724320715 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.726829638 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.731513039 seconds)
  done (took 1021.775576677 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724295651 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723774497 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724090555 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72366322 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723743289 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725479398 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723858523 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.724593793 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.724398914 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724269582 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.724303204 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723821502 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.724351354 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.72435005 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723959335 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.723632276 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724774992 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.726096788 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.72388384 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724900955 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.724617833 seconds)
  done (took 37.872585082 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.723804125 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.724552824 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.72378811 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.724068102 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724185337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.725193317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.724539606 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724226337 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.725107725 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726256026 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.723267255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722843306 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.72412061 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.722582586 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724187969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724383682 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.7230481 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722031486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.722928604 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.723913578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72340856 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.723633628 seconds)
  done (took 39.588082081 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.724602728 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.723707497 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.724571102 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.723207303 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.724386042 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.723836422 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.723281495 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.723437412 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.723222489 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.723659114 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.722768981 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.723579492 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.73072691 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.730899368 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.72478236 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.723926315 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.866233773 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.720140413 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.719960741 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.71996017 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.719827601 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.727515444 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.719803194 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.72060548 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.721433126 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.721257289 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.720992484 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.721200399 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.721732308 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.723414 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.725117832 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.721642911 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.721551378 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.724657902 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.719603675 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.721533134 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.723797027 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.719313356 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.718302857 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.719049471 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.730266348 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.742250504 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.719303367 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.725677252 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.719523232 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.715904383 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.719154252 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.72349769 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.71546828 seconds)
  done (took 86.226179528 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.71710716 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.713503248 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.713151318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.713424304 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.714067837 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.715184114 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.715322797 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.709880045 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.710898003 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.711331983 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.712354566 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.710846928 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.711899973 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.711063235 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.712122242 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.711512423 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.711188853 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.710509112 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.711616829 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.711276008 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.712149653 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.712573742 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.7112908 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.712424775 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.713011757 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.711830561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.711588753 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.711782017 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.711787542 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.71142683 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.711762199 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.711250946 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.711939298 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.712963437 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.712257355 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.712535776 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.711643689 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.711604093 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.712065244 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.712556168 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.71122503 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.712314809 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.712422785 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.714428708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.714185448 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.713964364 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.714376015 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.714471203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.714045661 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.714161876 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.713430703 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.711394825 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.711525114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.712711822 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.711342572 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.711671841 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.712840218 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.71202945 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.712288635 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.713618446 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.711035249 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.711769925 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.711768691 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.71204408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.713427508 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.712239105 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.711948738 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.713028801 seconds)
  done (took 118.099770135 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.711449392 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.714092494 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712386097 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714267879 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714024323 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.714135723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.713561516 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.71416387 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.713026329 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.712839345 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713418326 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.713354979 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.714273094 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.713230214 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.71317876 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.714392092 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.712753108 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714073335 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.713728245 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71437885 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.712829755 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.713494816 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.714074209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.71347443 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.714502777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.714194249 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.714437911 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.713708023 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713345527 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.713908884 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.715165416 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.713035865 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.712767381 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.711907176 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.712114407 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.712206698 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.715006168 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710789267 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.711597688 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.711786503 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.710534516 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710523535 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.711572829 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.711296083 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.71038217 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.711127912 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.711459702 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.712556112 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.712228309 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.711985083 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.71057086 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.711530822 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.71207203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711440302 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.729569218 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.710518201 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711209685 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.71289033 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71108338 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.710742121 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712069193 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.710483512 seconds)
  done (took 107.854051132 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710926638 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711173656 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.710556423 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.711899955 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.710942415 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.711620103 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71026244 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.710826609 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.711748705 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.710506301 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710857418 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71082249 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712296004 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710123254 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.711442937 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712559826 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710205507 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.710629855 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711164059 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.711895058 seconds)
  done (took 35.87057151 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.709922679 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.709981521 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.709808784 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.711089739 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.710256033 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.711010159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.710965868 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710577346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711157982 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710397381 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.71181806 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711721232 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711412753 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.710635628 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.713678616 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.711386104 seconds)
  done (took 29.023634309 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.713758918 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.710680301 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.711252482 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.712192528 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.711744371 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.711895763 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.712934615 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.711220469 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.710708772 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.711415424 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.711520714 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.71207134 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.710647337 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.710030942 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.710216571 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.709504817 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.710604512 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.711332394 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.709191299 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.709075786 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.710229295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.709245464 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.709782763 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.709075664 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.706758694 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.707651694 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.7054494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.706295045 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.70712223 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.70730577 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.70609658 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.70570847 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.705879013 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.704649778 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.706448692 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.705057452 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.704340298 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.704115607 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.704379149 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.705570847 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.705053272 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.705273676 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.70325325 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.70316751 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.704045708 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.703733314 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.703859193 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.706199652 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.703043155 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.702118048 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.702567278 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.702887745 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.704359415 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.701876999 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.701827153 seconds)
  done (took 95.55686198 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.701420788 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.701343286 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.702548995 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.701384842 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.701829843 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.702660238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.701915675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.701574494 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.702457107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.703067941 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.701838188 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.702397915 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702552672 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.70193433 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.703469242 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.702088753 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.70084572 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.70203593 seconds)
  done (took 32.277519432 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.702601273 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.702835259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.702181735 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.702224603 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.700876328 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.702311436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.702001145 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.702565884 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701645767 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.702374668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.704631953 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.701462138 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701635696 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.702999165 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.701291088 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702128611 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.702031997 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700666859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.701526138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.702864766 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.701325746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701743306 seconds)
  done (took 39.085947771 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.701792866 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.702675118 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.715629754 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.720982922 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.721161364 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.733836036 seconds)
  done (took 11.933642629 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702208036 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701157291 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.701285292 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700947731 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70098946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701035153 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701697853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701120931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700886049 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701874304 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701990888 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700558626 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701863341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701122082 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70126248 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700582594 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701904206 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70124466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701732588 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702779502 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702181072 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700312089 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702015919 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701693469 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701668946 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701693713 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701512031 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701746644 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702313543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701341717 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702243285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700637064 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700580888 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701870818 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700761187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700642285 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701289362 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700629003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700604088 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699551667 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.700033986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699762777 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699168632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698521532 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698478497 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698811374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698861645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699888212 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697876153 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698610429 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698293466 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698622997 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698668397 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700822765 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698411397 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69838124 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698019877 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699355361 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69716884 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699957344 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698380035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698158032 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698931901 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699445501 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698695145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69963913 seconds)
  done (took 113.863690044 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699245096 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.698095413 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698775531 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698320376 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698865582 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697910779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697949054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698304839 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698144426 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698452137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698973886 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698260974 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698100789 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699302171 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699652536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699631998 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699176589 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699059177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69969792 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698886083 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699128726 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698898487 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700512981 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699394806 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699555062 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699594302 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698905315 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700044989 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699882754 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697810078 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698661172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699028904 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698712594 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.699426869 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698351806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698628591 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698429974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699031107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699608637 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700048855 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699585065 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699471061 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698761313 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699715029 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70007795 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699743967 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699250797 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699107529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699255627 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698979105 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700054424 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70068621 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699482777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698213577 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699247754 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698734923 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699400583 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699183156 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699852864 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699235206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69915534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698025002 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699428057 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701181826 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699449183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699374894 seconds)
  done (took 113.780307752 seconds)
done (took 2367.55764261 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.765126201 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.70415379 seconds)
  done (took 15.104646 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.865269099 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.81681373 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.702231341 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.744745823 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.701776325 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.710035575 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.713347527 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.700124212 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.700705828 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.700291537 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.700612929 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.88510914 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.757155912 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.699102657 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.699848778 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.792328626 seconds)
  done (took 49.529774141 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.703230788 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.703102157 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.713170156 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.706121812 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.705446926 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.715384535 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.734577939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.706221086 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.737722795 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.714600766 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.771592952 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.714241063 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.703848737 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.752794624 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.716218792 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.717825114 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.801116831 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.778675059 seconds)
  done (took 32.731146561 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.780333862 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.707615579 seconds)
  done (took 10.130380998 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.711731696 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.698104277 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.715800961 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.701911174 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.728849972 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.71332954 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.73640628 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.73237689 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.733881435 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.744354798 seconds)
  done (took 68.85646818 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.707183633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.706937506 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.704073245 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.703081808 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.700047845 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.706330928 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.702916797 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.70272506 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.359801378 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.737650349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.710970797 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.710162044 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.703774998 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.704981261 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.701489744 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.727238143 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.818297099 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.701335152 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.701215108 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.709481968 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.704370205 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.754231295 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.717590589 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.704936318 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.733655312 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.359120037 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.711073957 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.709566977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.813249896 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.701634968 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.703686416 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.889077052 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.705786062 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.161848703 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.971286257 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.709318941 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.717168207 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.714100259 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.700781852 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.819559105 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.705108358 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.709409008 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.645107317 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.94850059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.807546294 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.747925081 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.999228682 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.719883253 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.705279206 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.732391676 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.708770744 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.704099378 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.716867398 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.21477779 seconds)
  done (took 123.624921065 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.701295067 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.048520974 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.867085457 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.704384868 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9840141 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.907766548 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.704399289 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.748503362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.7047369 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928488737 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.9530507 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805965055 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.703070147 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.702801091 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.70532075 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.70343105 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.854310417 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.773736554 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.704424798 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.70293686 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7287438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940911424 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.825280722 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.704331832 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.728414359 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.911600204 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.822300004 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.802303634 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.475918029 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.703294893 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764134492 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.706973168 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.70420657 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.702441199 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.857207002 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.796683372 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783208976 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.704841493 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.704790485 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.702616261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.449285834 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902996445 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.796760264 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.83227104 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.951877295 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.905971388 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.479978551 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.702711938 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.436475032 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.863525239 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.929367279 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.931241704 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.823294786 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.705089995 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.231197511 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.702052197 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.702613075 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953080613 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923179165 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.798043644 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706431366 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.702643477 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.703262103 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990504278 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.704013086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.797927828 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704139694 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.703777864 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799647676 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800705106 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.932423414 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915498784 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.733463331 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.040695926 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.215276775 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948448288 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.769180448 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.95157418 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.706175447 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704923092 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781668112 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.541702841 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.956362283 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.986864135 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948890291 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739154066 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.422746118 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.705738259 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.931124312 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.925124466 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.964808199 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.95190197 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.943030962 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.014913975 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.705694106 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.706849542 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.949028817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.828593356 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.710998423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.046846723 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935659329 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.229862948 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.732371295 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.00812811 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.835975981 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.710578088 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.342623467 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.706853906 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.935093693 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.745432281 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.707997875 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.709418038 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.924194062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.692961405 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708693977 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.346074764 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.768307183 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.71174419 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936747191 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.710759453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.975785458 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712874977 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941820869 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.171354448 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.737773908 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.935478034 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.955304746 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.711450535 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.947398332 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95012247 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.821065212 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.926590786 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.333720379 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.710130224 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992554012 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.709728118 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.708926388 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.876301957 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.709510073 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.848143805 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.710992789 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.001507931 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731337212 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961361852 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713852153 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959282964 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.73990452 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.756670343 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.710531117 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.838198772 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.70998375 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.529830023 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.867007203 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71353012 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.708977591 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.513201451 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.70972366 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85670066 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.934507066 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730033765 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.779876344 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.37018231 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.710251847 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787474081 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.731303436 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.093028841 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.71144672 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.961642147 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.128486639 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710395683 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.711883319 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.993963113 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.88963464 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.713320184 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.708772115 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.610866083 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.710483592 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.710145286 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.889980172 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.086555426 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.709347743 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.908948828 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711262938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.836703634 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.713075951 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.782950663 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.045840922 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711458481 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.709501632 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.709605342 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.712403913 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.711590067 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.971801632 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.734453637 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.202168915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.846969002 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980545111 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.018404696 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.94902995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.7523469 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.713386988 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.961874976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.712699305 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.773289704 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.712486077 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.730865396 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935697578 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.713993482 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919108525 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.977714097 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.554371453 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758281352 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.716212943 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.711433196 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.711427637 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.857914498 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79474365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.715809076 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.711591307 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.824471666 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.831746408 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919266787 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.712971866 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.802129814 seconds)
  done (took 866.915294268 seconds)
done (took 1168.529426009 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.71261443 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.715059628 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.716182231 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.715283316 seconds)
  done (took 28.508570663 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.722104749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.713675206 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.712910428 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.715127023 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.714308919 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.714474941 seconds)
  done (took 11.940666975 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.75954385 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.71576305 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.716099539 seconds)
  done (took 20.839983024 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.784792811 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.095861854 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.844358744 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.127561797 seconds)
  done (took 9.502929589 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.715836652 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.716028569 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.714000503 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.714765658 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.72354265 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.722074511 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.715408359 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.714566177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.723465644 seconds)
  done (took 17.110580967 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.86333623 seconds)
done (took 93.415770469 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.946134916 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.72660264 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.199764691 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.729640407 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.890445674 seconds)
    (6/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.886266506 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.825541124 seconds)
    (8/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.816722905 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.857899233 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.739789257 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.966529677 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.872326596 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.746147607 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.847938244 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.744871996 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.822162544 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.72644563 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.532609693 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.088624687 seconds)
    (20/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.750265247 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.88277943 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.856772028 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.72609879 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.745164381 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.893015935 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.340574677 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.971107957 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.815164013 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.752213704 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.874147951 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.494048031 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.72830761 seconds)
    (33/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.970438495 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.983891662 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.604268894 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864374668 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.63139452 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.899982312 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.723083877 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.11866911 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.890881958 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.836345998 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.886700521 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.728399534 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.530296916 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.862934178 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.723476864 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.58204451 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 1.946945052 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.81698607 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.820043836 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.857016927 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.725089802 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.385720642 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.847205164 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.420268378 seconds)
    (57/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.945198247 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.855975367 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.831645445 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.978801272 seconds)
    (61/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.959237919 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.811661979 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.972464779 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.748033945 seconds)
    (65/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.826237465 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.742778918 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.838500928 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.813136628 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.812642548 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.937655601 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.73131769 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.845786282 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.827658696 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.05087632 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.066847592 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.346123703 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.736112753 seconds)
    (78/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.327127738 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.868111305 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.741542338 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.618123473 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.730522919 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.22531584 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.900932686 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.917245721 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.832850448 seconds)
    (87/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.899690996 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 4.599925679 seconds)
    (89/309) benchmarking ("sort", BigInt, false)...
    done (took 6.732027951 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.415044161 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.021466512 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.82494509 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.732430208 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.493198224 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.83414686 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.06935055 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.563569889 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.92547594 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.739151045 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.015115899 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.437131777 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.860210983 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.343111167 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.743694523 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.826081513 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.807815365 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.842795332 seconds)
    (108/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.022408826 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.793415347 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.725632846 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.103273501 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.856715314 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.09752056 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.182600994 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.716103157 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.902639232 seconds)
    (117/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.740293124 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.859710899 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.172672717 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.402317572 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.768645034 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.726197308 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.302226162 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.752061635 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.065097711 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.921330108 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.860962742 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.747786588 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.849620739 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.941652154 seconds)
    (131/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.180046287 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.862979128 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.738658315 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.729248491 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.085547342 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.945298905 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.726666085 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.605918966 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.756877998 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.860118883 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.986376694 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.810672406 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.859509797 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.847028655 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.983884162 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.809233869 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.749689089 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.858193508 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.670984184 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.416190605 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.72939037 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.165216415 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.808426189 seconds)
    (154/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.613454716 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.983304345 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.971191632 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.520350964 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.759537408 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.727223465 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.079807967 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.973443765 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.912282284 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.73264967 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.127128512 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.53474274 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.718408979 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.757419171 seconds)
    (168/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.744167886 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.515320954 seconds)
    (170/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.728957738 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.246918723 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.860606057 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.733249425 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.842805509 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.881497693 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.086375874 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.732422584 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.758138577 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.109910818 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.731083779 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882442728 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.078258542 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.055985813 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.874567844 seconds)
    (185/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.813290937 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.730944234 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.796514076 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.190293135 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.930022487 seconds)
    (190/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.938986951 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.902508718 seconds)
    (192/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.021668894 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.814740309 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047249353 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.105698601 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.224203315 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.83452046 seconds)
    (198/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.111686434 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.082903327 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.73398391 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.559646187 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.105212951 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.853034505 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.759083969 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.730221042 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.086962756 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.648323957 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.86389004 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.838344662 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.06484007 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.735695019 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.570089988 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.084707475 seconds)
    (214/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.733484414 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.730492329 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.143836972 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.757040979 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.811250487 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.924123705 seconds)
    (220/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.737463211 seconds)
    (221/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.410129383 seconds)
    (222/309) benchmarking ("sort", Float64, false)...
    done (took 5.532053566 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.735804548 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.076824103 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.861237099 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.887515138 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.81624715 seconds)
    (228/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.82943087 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.848792685 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.203286849 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.304856558 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.957095744 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.502112166 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.734506072 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.731136638 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.800968838 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.731374797 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.225238866 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.758870792 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.848720279 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.737812764 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.827603477 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.038970493 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.837407496 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.810584179 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.042171067 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.134756406 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.736898586 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.770039189 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.016224163 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.736170602 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.734361982 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.734521187 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.826987346 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.755500219 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.238563926 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.670099136 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.134536337 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.835862442 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.73355759 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.053560454 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.736262818 seconds)
    (263/309) benchmarking ("sort", Float32, false)...
    done (took 5.55792518 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.054766186 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.819230948 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.816307229 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.047075622 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.646707256 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.199633535 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.934102061 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.815170891 seconds)
    (272/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.777952249 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.023303011 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.087086233 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.739584959 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.906622377 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.09364592 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.05567621 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.642056789 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.760023335 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.132213746 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.739775066 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.976532421 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.425099137 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.743643384 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.095791623 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.964440807 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.74106586 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.284392741 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.512841617 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.487064552 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.87978302 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.900383026 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.816830837 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.075541314 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.941952638 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.819166002 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.768724959 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.73743845 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.001787836 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.743856395 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.857237842 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.953075927 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.12706782 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.061036474 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.966328436 seconds)
    (307/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.924271041 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.839479564 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.054133392 seconds)
  done (took 962.178767209 seconds)
done (took 964.119060579 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.767276779 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.759943919 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.742386507 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.76325485 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.855552873 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.788477776 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.755932692 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.746026205 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.791805777 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.792173677 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.741027764 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.787224312 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.742704661 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.742693556 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.74285839 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.757951964 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.052205449 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.775570246 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.759930336 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.75383821 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.759276116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.740492668 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.792498879 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.786947251 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.746741523 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.747133707 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.745981749 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.761523503 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.855487126 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.745218688 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.747753495 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.754076574 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.053403218 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.771228358 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.741316535 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.76251989 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.754527868 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.755158362 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.749862381 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.774983341 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.139839432 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.782053152 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.744302699 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.745161511 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.743909211 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.750075477 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.744808232 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.751601712 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.758061183 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759718338 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.133257423 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.798926938 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.746349296 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.744236219 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.758512836 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.743424431 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.748432885 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.761352947 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.763592102 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.760951756 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.037591956 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.782181362 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.750200373 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.763363652 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.753695167 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.170143956 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.783119942 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.751712617 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.140412521 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.791082968 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.170246903 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.795603999 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.746521676 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.75996316 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.777069165 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.05216469 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.776174745 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.74362372 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.753277523 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.742851166 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.757536199 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.758668285 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.751575339 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.745657977 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.762008831 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.791643078 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.758991642 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.74561562 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.758789748 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.764106332 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.754395517 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.757533754 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.750099094 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.745267975 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.75882143 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.750890542 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.749527422 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.74784804 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.751160515 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.761278758 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.139824948 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.80240281 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.743832349 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.742189568 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.747897556 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.76104643 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.138923541 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.787124018 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.770206894 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.796576 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.750459571 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.041302857 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.779069547 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764018229 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.758434899 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.750332973 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.744819286 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.040952659 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.16805795 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.803013703 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.749870038 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.74536552 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765113209 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.750365004 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.745121544 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.057845762 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.783656073 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.76221991 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.870618349 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.759974826 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.779951162 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.746027729 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.751023325 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.798298522 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764212595 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.779915991 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.750595202 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764445878 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.765359433 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.746243667 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.759723575 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.761454572 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.747996344 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.756266988 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.74624024 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.798552719 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.762665501 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.763247596 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.770510755 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.872008342 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.7465335 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.040536346 seconds)
done (took 275.084643266 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.828068158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.743634506 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.838127284 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.74944153 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.836368657 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.825572911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.748321991 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.747617714 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.748156426 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.240072161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.746914566 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.751364401 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.748037547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.746257427 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.81752608 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.746368744 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.747979369 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.225773518 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.747632377 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.826262777 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.746885994 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.746151904 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.746977219 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.238627378 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.744455787 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.745351541 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.831285376 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.74722585 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.191584132 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.746569559 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.746786187 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.190740623 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.831489252 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.775143911 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.75515494 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.751491335 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.841024307 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.7605865 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.818205698 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.817716837 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.850048005 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.782460611 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.747126157 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.746416874 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.752910212 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.748941827 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.748655776 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.782466929 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.747273384 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.757117543 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.192325319 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.752765082 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.757350853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.749971077 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.748444336 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.777705366 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.748671731 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.750113281 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.828321169 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.749555489 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.823297737 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.241827065 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.279697716 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.749186474 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.747440839 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.749430823 seconds)
  done (took 177.174156017 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.813970003 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.825023639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.816173853 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.755864355 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.798150029 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.815633394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.75555059 seconds)
  done (took 14.263955347 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.756183714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.748838675 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.798757521 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.797164128 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.749642446 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.904780236 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.748039842 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.761030525 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.755672202 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.776277603 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.751463744 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.75057416 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.756710451 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.749621295 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.799888103 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.761578176 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.865724403 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.751623509 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.749331457 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.898920349 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754696151 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.759697177 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.775922486 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.761329567 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.750670796 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.757625542 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.324176454 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.751157733 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752333766 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.749409239 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.750780523 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.791161401 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.750622496 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.750008853 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.751875338 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.863653522 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.751132483 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75133914 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.750279416 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.748841731 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.750398911 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.751398384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.751754711 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.750987071 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.750169827 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.774865828 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.751522116 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.752240811 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.750112855 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.751479749 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.77775172 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.751562123 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.752044928 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.757201628 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.793027843 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757616739 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.752676309 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.751989821 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.751906773 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.751939662 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.899999594 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.801847127 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.751252468 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.802225646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.751813602 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.751878399 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.752940617 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.752419608 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840962795 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.752058619 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.803655495 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.75244411 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.91273646 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.775572984 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.753056667 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.75695486 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.755863272 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.753417957 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.752476939 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.759703324 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.75268213 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.754630962 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.759984553 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758658794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.752783685 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.865699631 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893584393 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.753161604 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.754029605 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.75934887 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.753642965 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.79791012 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.752439061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.754089373 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.808651679 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.868652525 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.780553457 seconds)
  done (took 194.200223507 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.762282543 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.760857049 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.755312635 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.768849039 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.754931277 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.754303041 seconds)
  done (took 12.243854726 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.756660071 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.760215074 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.753766265 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.753316246 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.75352293 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.75482235 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.753764372 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756423212 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.758143563 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.754445744 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.755939994 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.75623727 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.755158685 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.756348288 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.755607987 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.75483889 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.756635984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.755470465 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.755573366 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.756799694 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.00506902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.756446088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756047244 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.75980612 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.760144317 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.754985481 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.769230895 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.756002379 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.754767086 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.764388691 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.760293977 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.756854879 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.759144559 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.763310608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.761079983 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.759096085 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759585711 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.756261698 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.756348576 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.75638384 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.757093824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756708244 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.756327274 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.75712553 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.758918741 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.762769715 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.76140951 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.76997844 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.756874871 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.758290757 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.758106503 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.757212791 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.75631791 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.757256615 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.761694576 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761428999 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.761243642 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.757316115 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.757739425 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.760647025 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.76174127 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.757754904 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.759462118 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.760379274 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.7650937 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.758696194 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.760569434 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.762092408 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758393326 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.757995971 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.758501209 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.758350787 seconds)
  done (took 129.531537448 seconds)
done (took 529.113808364 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.002659549 seconds)
  done (took 8.692645195 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.861566023 seconds)
  done (took 8.610363864 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.257763317 seconds)
  done (took 9.952046603 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.766317742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.803082375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.768977149 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.762637651 seconds)
  done (took 28.81605959 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.944003497 seconds)
  done (took 8.63371155 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.777640453 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.753962293 seconds)
  done (took 15.28921719 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.877904535 seconds)
  done (took 8.567111824 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.072600797 seconds)
  done (took 8.771624282 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.775127283 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.761894199 seconds)
  done (took 15.245899683 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.756263606 seconds)
  done (took 8.443078214 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.898598122 seconds)
  done (took 9.683361744 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.77115381 seconds)
  done (took 8.52662835 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.7836219 seconds)
  done (took 8.472703617 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.841591747 seconds)
  done (took 8.528758657 seconds)
done (took 157.925113872 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.756933095 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.753792004 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.757564671 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.753706445 seconds)
  done (took 28.708057449 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.787677553 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.788118994 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.789994564 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.798166261 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.791226255 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.787699153 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.781339089 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.780730357 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.800267932 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.790531793 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.790208227 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.791259228 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.788036623 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.780948529 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.794484494 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.789823819 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.798541818 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.789629927 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.780642238 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.791729246 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.757267879 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.799892682 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.791790192 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.75728924 seconds)
  done (took 44.586841822 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.945135656 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.827788447 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.908994785 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.827039116 seconds)
  done (took 9.196775241 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.808400536 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.808426116 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.81958812 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.858591007 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.894681595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.817459483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.780285647 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.777559102 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.763139223 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.809257028 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.883997197 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.803975534 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.896653896 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.756392182 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.936991593 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.756517351 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.755898606 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.808660244 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.859457797 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.87977707 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.757367194 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.808120653 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.814665191 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.808306531 seconds)
  done (took 45.353726787 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.756366503 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.766357786 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.765654939 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.758261347 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.759378402 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.759303758 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.765643059 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.76133043 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.780293698 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.761942672 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.758790437 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.759910362 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.764633982 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.758451758 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.760082939 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.771461923 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.772943324 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.759306454 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.762953727 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.765483434 seconds)
  done (took 36.95877893 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.756719095 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.60284432 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.102556154 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.008484273 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.756714092 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.757042632 seconds)
  done (took 30.675562994 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.771082394 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.765780828 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.758946806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.816251927 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.899041916 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.765256318 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.758584715 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.768736687 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.808521767 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.822732518 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.779499094 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.789548374 seconds)
  done (took 23.197215733 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.760120196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.758238875 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.758758838 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.771066246 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.767778917 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.768235618 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.76666825 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.756632316 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.770909815 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.778947908 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.767855324 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.770364217 seconds)
  done (took 42.891279443 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836130196 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635204818 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217948942 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222611734 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284129334 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961020863 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.758285673 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.845102365 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.761853119 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030431747 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.11759659 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963404789 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000838597 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488582565 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.762575299 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.233824332 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048622355 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973927123 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787987851 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431004333 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865453043 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.251063304 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.39727768 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.867918086 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962726571 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.8821446 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.01724445 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.706882593 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806375627 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762068622 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764359745 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.760160925 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030744378 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877400764 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829257368 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764075891 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.171435328 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.46694308 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.764447425 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.449297553 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.316997782 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879794019 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762485715 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759397828 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.686877569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252563863 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851099126 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.762325164 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.459961887 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.762288378 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765860844 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835971936 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.761882436 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.567078214 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445016201 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.028795753 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.762919809 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762217684 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321490128 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764372532 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363153151 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.693914421 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.848350101 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.443855623 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239525641 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.917473216 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.762362913 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76208215 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68634896 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.442151737 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874525099 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897508782 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.776709676 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401171151 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049808747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.178798167 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814793801 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033438885 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.598744545 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.69402178 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977593927 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.708711109 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687583113 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.605815911 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.687098851 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97465371 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795363105 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.364768859 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797306487 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843506931 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766547854 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776463593 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763411337 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97588183 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.659847808 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761744005 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.064516874 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02019292 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778582824 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848793615 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689201508 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.764624538 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007244981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.969182189 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.986984157 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.242574091 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853497386 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.679101587 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.776028961 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.677783939 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.7721825 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.034653186 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823945114 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775054367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885439343 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.712645776 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016194249 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.705214953 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.863140325 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.133781166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00208863 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.108462918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010767089 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826386206 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.771772672 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.764577565 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461386495 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376061175 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.984196762 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.777897284 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.225178831 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.773328477 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.765846478 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698567018 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.424413825 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.146695529 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.845806022 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980667231 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.690439739 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041304929 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694743072 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902348024 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753838517 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.979622491 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.415437743 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.852723895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015681562 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984113408 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.980502025 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773784878 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779593412 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857677002 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782449165 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.143977507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011943066 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.768688582 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.768927607 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473893496 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822943376 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768240568 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.769855353 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318720814 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044316802 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.791996838 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.76938954 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641687794 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.777960036 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829684031 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77111235 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771692579 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.28785602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275511805 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.775082961 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.425233456 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983550882 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77182672 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.411498926 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945137546 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.780013394 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041298952 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836059069 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.69549202 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.468643245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.470361547 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768168924 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696236019 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.768474857 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771016009 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774341325 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.956286997 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04896528 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822937286 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.459265488 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877736887 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774325616 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.77156594 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769588037 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.261192592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799650921 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.245354369 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894154183 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89931488 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.781354189 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697125635 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.77197448 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77212014 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.771010559 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.714624354 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817563371 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.464617712 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974618405 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018523496 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.174761897 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78071135 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.469168581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.888113695 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.789204834 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096261556 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265518708 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.869361013 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836704932 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.77769782 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.469075945 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507582484 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336189511 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077708212 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091976694 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127347228 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.098606016 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.088400566 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859070003 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000155075 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295094442 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829231251 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860986423 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707333545 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785771589 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.421756358 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130933125 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780515727 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988847421 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067996853 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.155335965 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909657774 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975910678 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802084978 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.549247185 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794636287 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.307563298 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788752052 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.266414941 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980074935 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854833784 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096148883 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855013332 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.773237806 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124683816 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816074339 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.473680989 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126596625 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.135667944 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.264686548 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999105398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.775957373 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.21308378 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12900527 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.938734172 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.88892406 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699865829 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778431682 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778670806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.786763197 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.745509609 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.614151396 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.016543675 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779175348 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000175809 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.858803922 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138619691 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.680803311 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.776723211 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774105992 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024508026 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485259411 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924124132 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.037906924 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.33860855 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784713858 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70017994 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701467603 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.476695018 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.776377164 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741092279 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98745461 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.894095793 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454981188 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.121672337 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079361183 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022787064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.787295791 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049709871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05319528 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.267510536 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79772148 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.873830477 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.1038419 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.48258512 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.991804394 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.002905321 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333422801 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993796551 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243114082 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.749946345 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.774848582 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982422183 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989403021 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.17358055 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951992523 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.487094433 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.7890393 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149301517 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837115087 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.180969789 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965783695 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.862074424 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781594905 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854208933 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780387324 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.781338459 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782777655 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78625979 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.18007906 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89738739 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.789006851 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852252187 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817048794 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.348198704 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.786066916 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053964238 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149859248 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117372459 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840676791 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.777649512 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779178565 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703743337 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906180195 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.215356219 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049653001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.897131338 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.91057628 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798581664 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112494701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.991712303 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081987661 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05104985 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.660402802 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370694457 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894054895 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.994149409 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783154656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.981622491 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227372244 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09327897 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341971577 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.865814649 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964336424 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051276053 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138780778 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779279476 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362288845 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.791443213 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184790856 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.81394755 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184579699 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039499092 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782202556 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899182433 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782848572 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.982819805 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.228946306 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.491539114 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128953946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640178596 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783224213 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059099506 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115676604 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086130944 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856709018 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786575629 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.468781021 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913315594 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.665625848 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.99531195 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781019325 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983591088 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.489737346 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783134615 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058562039 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08641212 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.781102987 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.688894955 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79865837 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.783536314 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996073985 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997544897 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027111883 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785090599 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.786806685 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.587461694 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06081675 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841204823 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708162436 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.782999854 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827678567 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008400803 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799846117 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.296327732 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.482352115 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072890483 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.689546833 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799352333 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.14939936 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157192939 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118152116 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.304341435 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00524902 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.336240342 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.57768449 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154259631 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.785294269 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.151420676 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157677565 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.783572279 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259186321 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887839985 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.054851839 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110245122 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.801978226 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562824177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.815946937 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9969301 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135642884 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713837026 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788014644 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.83090563 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.783400093 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.766863425 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7930459 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.696035517 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.168292763 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.622175533 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340998766 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.785998553 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.816153476 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.144368492 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289115135 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886104931 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802070646 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78740663 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.487125287 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.071870314 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026460519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.267636061 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.871113569 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.785538478 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784584722 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703476317 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969746047 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.972274319 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075709216 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.075602079 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.888627422 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786674988 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.99117302 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988083857 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.156899584 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917206976 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.87087172 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895158961 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.726459397 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490967848 seconds)
  done (took 1613.983404144 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.805001702 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.815177449 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.812568884 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.853220142 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.828344884 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.815066064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.834903693 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.817530919 seconds)
  done (took 56.301724388 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.785754855 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.944598816 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.790030275 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.787552712 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.795363028 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.787092071 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.950132955 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.798575738 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.791662545 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.791027934 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.788160126 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.786368575 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.561537487 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.811110678 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.788662478 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.795920373 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.79240665 seconds)
  done (took 73.283690204 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.789308962 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.222284546 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.823883392 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.789178178 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.874875674 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.802752804 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.865431086 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.790925481 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.791904951 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.0423736 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.088161567 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.81423534 seconds)
  done (took 89.415630317 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.801616183 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.790432958 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.790569022 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.791588376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.789981615 seconds)
  done (took 10.692392894 seconds)
done (took 2106.953492012 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.014578772 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.98067792 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.028678409 seconds)
  done (took 5.729703335 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.930963389 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.981281149 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.095821792 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.117404155 seconds)
  done (took 9.8515876 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.092124595 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.154599017 seconds)
  done (took 5.968408792 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.116195304 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.822344436 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.173151584 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.792565655 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.794713282 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.791652074 seconds)
  done (took 22.106609071 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.792125424 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.791852543 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.791585944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.790833652 seconds)
  done (took 8.888609086 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.788814952 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.481198138 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.791821059 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.801472991 seconds)
  done (took 20.585985054 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.939198376 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.907071042 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.935087637 seconds)
  done (took 7.504443415 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.937439449 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.009601546 seconds)
  done (took 6.670200979 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.949292386 seconds)
  done (took 3.671630137 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.819571471 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.062206347 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.278094154 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.307089359 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.371862304 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.618633351 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.118191853 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.015888451 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.229376523 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.2494058 seconds)
  done (took 23.793305365 seconds)
done (took 129.618615823 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.132633498 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.825151855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.993246841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.14170185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.032907679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.994761731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008811539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.131586299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.821925525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.810661399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.1491479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.030838189 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963679579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.811382701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.966732355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.811501867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.023677461 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.154149545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.829343396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.069035736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022777236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.791409797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.990005444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.807629111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.029561584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94363626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.336756863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819873593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.965875182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.348815221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.949243222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.213459566 seconds)
  done (took 165.646537846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.793541479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.794531069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.792610503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.794042695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.248459636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.795875029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795320207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79416298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.232324571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.229944396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.795248672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.241610732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.794315822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.794817695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.793598698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.794387275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.40906838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.795663892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.795278416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.795042753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.795517153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.071709268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.797600214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.09121591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.399744704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.795416359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.795206443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.795131522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.795781967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.79499117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.793910104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.794613676 seconds)
  done (took 206.728095751 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.78023483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.797071522 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.796604531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.795341531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.797273025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.795806882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.7945236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.796369331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.574646113 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.542289434 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.796687749 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.797371642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.798998904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.796555037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.795248004 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.796027078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.796008669 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.796953118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.796182734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.796754254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.796498173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.376524124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802164668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.408872885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.797327556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.801016235 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.797377269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.797643788 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.79592026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.797624813 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.803461061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.797143051 seconds)
  done (took 217.93724437 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.038877064 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.797088089 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.798329795 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.794003041 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.79813824 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.797642784 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.772501923 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.048885475 seconds)
  done (took 18.580894672 seconds)
done (took 610.62653081 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.14883743 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.992740987 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.976379459 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.823182822 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.066174661 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.864782766 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.817790634 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.880540689 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.638190201 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.89264854 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.482232623 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.843690031 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.577148873 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.849713049 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.945214841 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.875962768 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.407617633 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.511399039 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.997173255 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.89985334 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.000003477 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.718245579 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.898780161 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.671875041 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.601108544 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.762669815 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.84726785 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.405992474 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.827102771 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.97392186 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.497325619 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.076487267 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.828750189 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.812539917 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.869245862 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.847061676 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.027221491 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.827919906 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.944955755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.518869374 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.886338511 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.536007835 seconds)
  done (took 99.600280917 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.805983704 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.800584798 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.800246379 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.800962282 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.811141292 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.800281575 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.80145986 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.800949044 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.801356655 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.800065568 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.801112918 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.810467996 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.801391488 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.810568439 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.801716432 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.801158568 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.801481473 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.810765917 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.802758128 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.801582367 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.802477944 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.802153982 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.797912859 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.801557121 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.801020236 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.802057555 seconds)
  done (took 48.612720741 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.796897357 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.97127695 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.043224896 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.817401128 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.797570015 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.800904639 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.815012824 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.801625853 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.800636485 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.799670852 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.887604813 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.803108213 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.814850336 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.049798796 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.814240728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.797939331 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.798012028 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.797988182 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.978415853 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.814188986 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.817654704 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.803126408 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.81666384 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.811278838 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.799754807 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.799190396 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.801590854 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.251268792 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.808285938 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.887469307 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.846694151 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.823236725 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.185602382 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.062411268 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.855638269 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.808735784 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.798059566 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.890585939 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.805151164 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.800000648 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.817240825 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.804353699 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.042118374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.323728797 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.813912791 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.798879436 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.25804371 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.901283194 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.842118426 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.809174106 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.044912256 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.816660161 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.79993237 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.800422441 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.835883358 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.807463907 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.799519095 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.115014889 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.810706747 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.817467889 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.804455589 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.800165305 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988247961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.809098834 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.970437352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.810022684 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.806443507 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.800411777 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.044889228 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.816575782 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.328045037 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.814725473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.800478777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.889370038 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.977677344 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.280821645 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.812850656 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.987765837 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.203733589 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.824213243 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.807959527 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.237057243 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.828286473 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.807585681 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.802370054 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.801125749 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.800974671 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.843673634 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.8167779 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.241503618 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.331160587 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134957926 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.827379685 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.816351658 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.801355147 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.116399397 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.810548485 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.801534004 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.037215229 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.333618635 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.816842942 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.808554029 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.311392788 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.8170506 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.819777324 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.81035373 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.047078438 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.818070311 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.844367896 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.802037428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.80737371 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.803802035 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.820014077 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.809855948 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.802889278 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.311333875 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.909469327 seconds)
  done (took 223.991808285 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.804293252 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.80541623 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.799944406 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.805803809 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.800749667 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.802568168 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.801310125 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.80064214 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.802442949 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.802089297 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.80028842 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.80263233 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.803637975 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.8029025 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.807323515 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.803720874 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.404618204 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.801947791 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.800688621 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.80138607 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.441364872 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.808060701 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.802028708 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.802564235 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.801210397 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.804762182 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.80538624 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.806728833 seconds)
  done (took 165.464259775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.802537891 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916444072 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.822465053 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.833113943 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.810451968 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.803997528 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.90345479 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.821887258 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.809555021 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.803420617 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.804203429 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.863558663 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.815321749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.902903086 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.835292036 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.912246215 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.908945038 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.811119247 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.804230725 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.804888949 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.832374835 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.813240156 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.865164567 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929705337 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.823704675 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917178545 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.825025172 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.806142586 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.804825397 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.91799908 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.82374784 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.864544796 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.835188146 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.823121355 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.923536159 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.923461539 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.910687614 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.909512767 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.812819181 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.805917318 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.805072976 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.806858408 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919874548 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.826854862 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.806054482 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921285249 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.825862823 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.80641842 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.805885717 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.806068339 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.819248737 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.823467716 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.870855891 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936741393 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.843340557 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.830858186 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.905222845 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.937694829 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.806787592 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.904929309 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.813632966 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920262326 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.826620675 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.807138717 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.807926031 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.810226435 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.835019933 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.914247195 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.912040719 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.814794505 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.906583032 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.842178463 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.814349982 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.80781042 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.806653377 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.921130817 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.928198528 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.841885695 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.84551166 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.837423903 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.815962777 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.807367345 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.809283039 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.824523732 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.81367746 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920612261 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.927844183 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.81411385 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.807393265 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.807486833 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.808591254 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.831964046 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.929884333 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.846100723 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.913635104 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.875107708 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.882876165 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.822480998 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.821646524 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.813508718 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.870186714 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.824623082 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.820030324 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.108472604 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.868969873 seconds)
  done (took 196.105855746 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.205117617 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.853639422 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.863173805 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.128981446 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.151677734 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.746845013 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.853417731 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.85548169 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.877903006 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.059944126 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.930872756 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.872905933 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.84314418 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.82908627 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.856123103 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.878939776 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.863663102 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.204017339 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.065771143 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.037212599 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.844042221 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.127658803 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.165276559 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.444697739 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.903889135 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.283934335 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.42135646 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.988828254 seconds)
  done (took 59.904657647 seconds)
done (took 795.40820347 seconds)
SAVING RESULT...
DONE!
