cset: moving following pidspec: 8949
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.947449337 seconds)
loading group "string"... done (took 0.592995702 seconds)
loading group "linalg"... done (took 9.3025757 seconds)
loading group "parallel"... done (took 0.180442049 seconds)
loading group "find"... done (took 1.496860894 seconds)
loading group "tuple"... done (took 2.179536704 seconds)
loading group "dates"... done (took 1.462908601 seconds)
loading group "micro"... done (took 0.233758186 seconds)
loading group "io"... done (took 0.620452066 seconds)
loading group "scalar"... done (took 45.182226882 seconds)
loading group "sparse"... done (took 13.831245564 seconds)
loading group "broadcast"... done (took 1.12791832 seconds)
loading group "union"... done (took 12.577934439 seconds)
loading group "simd"... done (took 2.634634212 seconds)
loading group "random"... done (took 10.606739763 seconds)
loading group "problem"... done (took 1832.498126703 seconds)
loading group "array"... done (took 26.699561931 seconds)
loading group "misc"... done (took 1.156576801 seconds)
loading group "sort"... done (took 3.952478769 seconds)
loading group "collection"... done (took 19.629270766 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.677418777 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137866044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.16886275 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.349378246 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193645882 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158481309 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163527985 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.560135043 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009988672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214470812 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143803198 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.562406351 seconds)
done (took 6.054534581 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.275880338 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.445052927 seconds)
    (2/2) benchmarking "String"...
    done (took 0.130870574 seconds)
  done (took 1.227269138 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077299975 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178700957 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098315595 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11144067 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112083741 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112046969 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095649419 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111395522 seconds)
  done (took 1.472418513 seconds)
done (took 3.712211473 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.524894131 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876381882 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.513498039 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.134046529 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160079212 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148798368 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.30551289 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.163964391 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120229031 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086912445 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170815091 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.392826907 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.483945976 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.981336232 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087696213 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128697571 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.085762238 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.716781678 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083404012 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134975941 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531882393 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.111633218 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121231489 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142809924 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190059811 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131867715 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167161162 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097902352 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.678381825 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102995835 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187047914 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100002881 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164805524 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.245761475 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096317585 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093656527 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682244659 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.178095061 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113349289 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105036727 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685881343 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082013875 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195670139 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099547153 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112686134 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186743445 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119063403 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080217046 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103417006 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09241618 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162541256 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.470780425 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107828509 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148479742 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110047304 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693425911 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098827316 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156875845 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143946475 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099336591 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096564987 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.110267264 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158829281 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112085801 seconds)
  done (took 19.722781937 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118529946 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142228021 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094867045 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140992968 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143308511 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097869244 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084870457 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095750208 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111114965 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18682091 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138926326 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145961298 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092211822 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080963095 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118781974 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249287407 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106551589 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122578313 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081671839 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107151444 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140263386 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096831274 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109247935 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110315241 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170265089 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20468908 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109119845 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123609085 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093927166 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100360094 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143026878 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161165295 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075742656 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095031343 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183237991 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121162047 seconds)
  done (took 5.167170651 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19948714 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118318727 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193339764 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177314886 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146599111 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163648456 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1192717 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267937137 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.203007418 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18387192 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114108283 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113401095 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078768533 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097785559 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134962387 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07828655 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.69201435 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183698517 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155091593 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12917244 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105510556 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086312322 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381054123 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103351497 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084781092 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10476796 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074190475 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176898515 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106581273 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.30929064 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119577983 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088479233 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134335739 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209465725 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11817489 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141565695 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103067281 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082930169 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.230655421 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094050401 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094838458 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111284385 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.131830591 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133008126 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116588644 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101925174 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110966771 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226020914 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102577556 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119759432 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.114579033 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199450783 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096790699 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100183047 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.362744723 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120001913 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088511997 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102563013 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.313822339 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136809231 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085217278 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101123257 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082044405 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104923391 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08148638 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406329185 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111995834 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.042154449 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084431433 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161599363 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103186924 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10929931 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086914987 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103848223 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100530862 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097883713 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078488771 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097980364 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078490912 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102441441 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114114478 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083754639 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101657851 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079330203 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163220482 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11771319 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100250733 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126474573 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10084893 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081078388 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128445605 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082135951 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101384162 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148243229 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088159016 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119830802 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100855102 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143820218 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081147739 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.198833528 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082582188 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124609137 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100477817 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11475363 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121064801 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09862054 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084882963 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096771377 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080690366 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16440225 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081297332 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079335497 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101674358 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112034375 seconds)
  done (took 24.012031446 seconds)
done (took 49.554355934 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.469216582 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095259637 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113566374 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11319426 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112227731 seconds)
  done (took 1.64119121 seconds)
done (took 2.348994037 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.355232391 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182703467 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121007147 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179855802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087670117 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.204600921 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.171261263 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118511043 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198360759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101865148 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177840918 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100244402 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088531884 seconds)
  done (took 2.82782303 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09697454 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121317711 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082668561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11062381 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075744713 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109486911 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092080336 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129488077 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092660374 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1023044 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076202619 seconds)
  done (took 1.797355499 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092731201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115666884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084630388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108984002 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076395293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088915402 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107526476 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116008786 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090676214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102750799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076520597 seconds)
  done (took 1.76833565 seconds)
done (took 7.094802346 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.058019597 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.495114532 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119790289 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166317178 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.341298839 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211197012 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.53390975 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13314426 seconds)
  done (took 11.955348803 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115391791 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.115428893 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083868806 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101160884 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079778378 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101516535 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082389411 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099699017 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080226005 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097558096 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081690528 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097431457 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079593351 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096143647 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082871967 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096415344 seconds)
  done (took 2.261279318 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120621434 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11756706 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104050952 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108006248 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085134898 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102079143 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087115636 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102763131 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084105567 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101263794 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106845117 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090063814 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105346463 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083199429 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103442988 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091813546 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10119826 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103081462 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087997812 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103985762 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090610175 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102402577 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104909364 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090358339 seconds)
  done (took 3.195142975 seconds)
done (took 18.119543528 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171279215 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085449246 seconds)
  done (took 0.969877534 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103935562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121197233 seconds)
  done (took 0.94149681 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109511728 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097408068 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136560303 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114883321 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08227505 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097445377 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114779836 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098839783 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082108014 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098469951 seconds)
  done (took 1.750847945 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087349671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102034299 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090462887 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.12085436 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110831445 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083787021 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102731261 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086433566 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103589101 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080757565 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106745723 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117715244 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088137006 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120481007 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086392528 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105116521 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108282978 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085514028 seconds)
  done (took 2.503508778 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082602041 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083810592 seconds)
  done (took 0.885328725 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085907036 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096367329 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084241021 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099495594 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081467563 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096792598 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081106277 seconds)
  done (took 1.34480601 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.513122588 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261760583 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336740538 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102053422 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153405169 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.36876836 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13581091 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114145872 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114189641 seconds)
  done (took 2.862049297 seconds)
done (took 11.974920058 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094176814 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.191245357 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.547777332 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118954157 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079426677 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158553702 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.269361472 seconds)
done (took 2.178231389 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355632222 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124620159 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089111297 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079880157 seconds)
  done (took 1.36916376 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081754345 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103543784 seconds)
  done (took 0.910983257 seconds)
done (took 3.009596306 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081341091 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.133072057 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079813057 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097808549 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077759811 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097913535 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077013691 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076550325 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097054904 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079949504 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095797523 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079876543 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095403578 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077155864 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076963233 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096273078 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07738761 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093233552 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076726628 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094737608 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076920287 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095397258 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07737944 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077249601 seconds)
  done (took 2.850636433 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.227243402 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097240495 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086341318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102896385 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084860064 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102561493 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102510274 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080507502 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102483691 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083483276 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100845839 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084436179 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098601764 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084482669 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099201044 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100823378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086479741 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097489854 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08309728 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101528191 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086517105 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097564426 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084597717 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103151845 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101187588 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085233259 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099780754 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081192239 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103126667 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084686613 seconds)
  done (took 3.667245468 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089776205 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076977748 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095445252 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089164644 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094702499 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081362887 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094785688 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07807137 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0959994 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078250561 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095695268 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077625563 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09476511 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078901205 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080058629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101347446 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113036385 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079016071 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078188839 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095716945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083961326 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094868723 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081124865 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095236821 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078281152 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094429076 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078632743 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076741933 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095396158 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077336531 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100280947 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084307015 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094867933 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090779739 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10102871 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077545675 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103270467 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076752305 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095193862 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077689788 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094008434 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077358256 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077700726 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106120962 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080735507 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09552321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078703007 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095566674 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078428774 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09799135 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078049569 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09424796 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080782302 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095690623 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084940688 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076653499 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096441641 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077089281 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095937723 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077620337 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094641902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077443203 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100782136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078543653 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11912722 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088938125 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095392533 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080736928 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098659743 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085645585 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096594692 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096981881 seconds)
  done (took 7.111575545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084120595 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10584874 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080030957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097069854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076522008 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077190165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102456402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095219202 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080505682 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114642383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078236661 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096268324 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080198808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098846517 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07877315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097254881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088691087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093329533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077966992 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098906146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079795762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10223917 seconds)
  done (took 2.719901191 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228744221 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14364801 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115011745 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098458938 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112504137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102030904 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086933358 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102174382 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088422933 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106359678 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086087945 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115122811 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105229046 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088465756 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10761093 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10293377 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090129352 seconds)
  done (took 2.716974697 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096297729 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09852899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106385053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099001265 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08169112 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101366455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087099353 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115722662 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100179729 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082267608 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109162928 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082984089 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100825442 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080937943 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100963597 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080955902 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100465974 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082198765 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109280535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104174553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088152478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108576718 seconds)
  done (took 2.856375621 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098871705 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100279797 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114181177 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102074597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076837922 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088063909 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099041929 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107938713 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083125008 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098559885 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079840164 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105277133 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081139059 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104524825 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081344027 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100499053 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081740751 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100060956 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07684203 seconds)
  done (took 2.616871925 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124956231 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115474189 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097844178 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126850995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115726861 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098394928 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127083949 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115459298 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097761573 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129564732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097869992 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115730157 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127143413 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104924947 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115693896 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126597751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109225985 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127092262 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115464333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097789109 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129110947 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114846872 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109772641 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115370488 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097714953 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115724705 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114984749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104909603 seconds)
  done (took 3.933199085 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082076595 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080771525 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095828379 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07817479 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095840555 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078626517 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095962476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07851698 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080348694 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095661009 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080641127 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098041843 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081009808 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097305008 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081317481 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098003761 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081714311 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078340186 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096027119 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078726679 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098480875 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081220874 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097838248 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078696167 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078009728 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098252452 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077946491 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095986055 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081118436 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096200848 seconds)
  done (took 3.361958628 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091172072 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105401118 seconds)
  done (took 0.939691096 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079996177 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115839135 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078707833 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101961705 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087484061 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099260386 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091776702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10516026 seconds)
  done (took 1.501925686 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.107836921 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119326367 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087382572 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111612379 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100897363 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118600951 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168496331 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087145692 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106578432 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08258995 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119744017 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081572493 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109835379 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104998728 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091347185 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114404882 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080177746 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109289229 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089531064 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101323968 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088250843 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115877251 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094067525 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106978888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084992353 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111548766 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113381198 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.094198915 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104787015 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095509426 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107371852 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075912938 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105242606 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088503853 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097582889 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101297637 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118498206 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087479432 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110652385 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087320124 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110586726 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076971577 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.111647677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106995858 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095766814 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105300618 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088639107 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094977892 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083325783 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103423136 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078441702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103781723 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07700566 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108801117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092543627 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118342626 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084801347 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104611484 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086387172 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103088214 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089977821 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104605581 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109635204 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094619438 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110189211 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092689716 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107633308 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077777862 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093282849 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080850643 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109417677 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107312534 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111844772 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088034795 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106164411 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080632665 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106825796 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08924311 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107615356 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111598748 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086849092 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109218334 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093897817 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10364125 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087071303 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10677596 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084725089 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10272697 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083069884 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121620287 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084974253 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098239846 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082998659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111476501 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087397725 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107073414 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083131958 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109677243 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076524043 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106017813 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088345943 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10873574 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09540732 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106866109 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088202562 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109437873 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112374137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088488684 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103971247 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079109629 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106601344 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08556991 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108589473 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076961893 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105760728 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087585344 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105273822 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094061662 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101529744 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088206868 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111247187 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09459128 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103029099 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079384945 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105490293 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08735615 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109881699 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094649586 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10227385 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077907511 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095529152 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091712805 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10486185 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088733484 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106533227 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08724856 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094434282 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080906795 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105947717 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093122726 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10424999 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10669605 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093420312 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107185426 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086667626 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110876508 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08551848 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100541325 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092855634 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105192044 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078063733 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109828422 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087040344 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103297838 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087781922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110584114 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087221688 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.1066126 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085424412 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10579281 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088122751 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101449249 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087384696 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102950161 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095414626 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10582706 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077938365 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097828742 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089893042 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102067103 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086821166 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101903364 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087331793 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106772992 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080738079 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104059734 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086086996 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117871974 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095404266 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107380688 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108666936 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095068625 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105144144 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089743476 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106274408 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089144074 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105727874 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092741895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108347685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089206906 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104547819 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081924953 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106849665 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094560973 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101275954 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081252067 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101224925 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087516422 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112255874 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087925315 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106778272 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085072128 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108104245 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092191692 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105474996 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087490729 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101584428 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087915215 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110486328 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089921702 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107287347 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094444114 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107131817 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078516167 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111220489 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085340242 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110164848 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079338435 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102687165 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083849637 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107566314 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085830117 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104645463 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077728709 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111357679 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09403984 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106943622 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084108596 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106698655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097300422 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105749987 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10923134 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089487531 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108957357 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103146889 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102509582 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088109041 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114653957 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088417732 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09622849 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092220061 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104238184 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083758666 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104600177 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085867035 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107154664 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091050219 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107433955 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077395394 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106064738 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086209863 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102213514 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080200189 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112540739 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08900335 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105583966 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097659736 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108746204 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088925661 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109047856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087875508 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107693409 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08950021 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108407525 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089153826 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105087596 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084057327 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106967386 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08354846 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101114765 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086462962 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106811186 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088468834 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109423167 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086905373 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111943878 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106227799 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089937825 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125422143 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084149715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102394808 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089019566 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109453206 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105573888 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088731314 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097101832 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094588277 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106024162 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094576918 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105064031 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080542903 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106564499 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087787629 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107597615 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089596521 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107255301 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087106378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105313681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088273817 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115479372 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084730085 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113778712 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090583677 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109242207 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088712279 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107396005 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086363717 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102036938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088067355 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108297701 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089269099 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105729705 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09032049 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107889101 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087344182 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105882394 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089198111 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108232205 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108306339 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078740983 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085076092 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102444181 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088228438 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110761156 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088940289 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105534338 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085944512 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107853448 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086725714 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098763431 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092385314 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109525827 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089231833 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116715942 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10195846 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089300996 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117556947 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078766889 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104671648 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083375887 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103070149 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09505975 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108096168 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095791899 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107017362 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085323552 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099365212 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09071356 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104783123 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078918604 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081984881 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111152862 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086169387 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105782222 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088169903 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110080993 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108679442 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093572233 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106150026 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088437614 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107435352 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081156101 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103051658 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08474384 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105737478 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089872661 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102731417 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082184227 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088143674 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108028621 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088284452 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106553941 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087224379 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113143807 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105880763 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090005506 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111133125 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079963753 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107637761 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0891919 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106467805 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085263324 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108601208 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092178943 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108408269 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09443486 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106814235 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092452594 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107127096 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083402018 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106438322 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089734104 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107593927 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084777241 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108819507 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096712688 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100338318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089850702 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107807342 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086216145 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108523059 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090603488 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108193637 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094080634 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108035603 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08955405 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110744446 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088835437 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109256408 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090343518 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10654199 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093436962 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103770302 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095615562 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109905778 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108737734 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088862997 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084995706 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107501825 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0875257 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106723005 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112961506 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09132969 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083855549 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103887056 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081670807 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107664781 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11214934 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095752237 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106868714 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090196631 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098034228 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082919949 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109139677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08672153 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106176909 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092186855 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112311205 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090183253 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105170785 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088090327 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112480774 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09400839 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110053392 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085371287 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110187221 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090572693 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108644923 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086955127 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107058836 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090299406 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11093805 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087715131 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103576768 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097740561 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112889992 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108307588 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089236319 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109857775 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088906566 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097959157 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091215746 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106961201 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092069493 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10821474 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090304346 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117458096 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084329894 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106535245 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096636951 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107539027 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094739506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099975974 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089540512 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11009059 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09000602 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099361235 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084794938 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104381179 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088973304 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103548409 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080555421 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118330396 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113011168 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090144012 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105635414 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08811275 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079886693 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100394038 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085782901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110648894 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088041862 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116845229 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084909585 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104756859 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080080413 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108566924 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090853888 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111839162 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081304996 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099473215 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085477232 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109896969 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095898352 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107698061 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088762312 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110291262 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08973973 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102358407 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112696099 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081966122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090200752 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120534752 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109120086 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092693056 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111000694 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09641122 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109117516 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081259829 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109297667 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089524797 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110110263 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08997779 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110781585 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122637435 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09191286 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105135892 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088980733 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108014347 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086426049 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116364162 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091944039 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108935932 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092261089 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107031619 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092062222 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115339772 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091083776 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.11019569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090043102 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107493161 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089069225 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106631102 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087617434 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111805557 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090705865 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108209596 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0924297 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104997431 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099812732 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11699791 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110165933 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082251415 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084396219 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106988209 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080631527 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110237086 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08301644 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10699849 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087106621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.107016674 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0930046 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11062472 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089495801 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.111432656 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088869477 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098410095 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093110205 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109385254 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092130579 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101085682 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090071459 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109875517 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093641652 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115694497 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087402845 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109388155 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106830757 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093529045 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099331385 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093746708 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087912939 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107826493 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084899375 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109601183 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091209763 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111526302 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090662048 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112231109 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109598076 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095417311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111082696 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084095488 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081796908 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11344644 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102040197 seconds)
  done (took 59.343123131 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154406542 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088000921 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099402355 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081337829 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127173793 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082634959 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100290932 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082519892 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101353799 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096255067 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101254322 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081080711 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122787327 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129057378 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125976571 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115267887 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081699929 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101536165 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081442894 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100652489 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102185958 seconds)
  done (took 2.949451664 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107729911 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119601964 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117706421 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103485904 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111162471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117936153 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097369634 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11888489 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122521152 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112071454 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104447747 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11934688 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112292679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094224128 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113711108 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11519056 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103716343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111571486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119724809 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098796768 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116602758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116865506 seconds)
  done (took 3.250025071 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09646241 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088337348 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113792898 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082296686 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108565497 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082617602 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11293915 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085083367 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113422987 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089551769 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105729587 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089474898 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113341054 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083511281 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106192142 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085715319 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113222863 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089318865 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109419245 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084336527 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128982884 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102323885 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.085006454 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086462395 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118658949 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090329469 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.109674686 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088673594 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.106804154 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089294018 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105937881 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091973513 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112893229 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086571933 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106523114 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088349912 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109364889 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.085264728 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105557452 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092925406 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104036419 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090402809 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116523332 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086056355 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104952956 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091445159 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108210461 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083890185 seconds)
  done (took 5.524596433 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125644845 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159661972 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098039801 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.157450039 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125095473 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122752435 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091117693 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150598696 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107026315 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08924903 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127149257 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124327349 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091079716 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117818686 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096871763 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111487363 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111369741 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09510712 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119828741 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09003357 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118149526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113379848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104202433 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121813553 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11379497 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08985297 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108350545 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.099115696 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12491244 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116488333 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096500587 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118586118 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130915423 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098026299 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112661719 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11131582 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.107772114 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110945068 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111709652 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088359001 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11180631 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100264405 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114915573 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127135768 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091995603 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111568908 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096262686 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111852675 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124581066 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0935641 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118949163 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123808193 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095154003 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110305496 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09606547 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128860636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111896206 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089061945 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114301587 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120504065 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096281465 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116729415 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109048567 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116464442 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118755927 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12293914 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093545758 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114099839 seconds)
  done (took 8.530435558 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098470383 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.135422349 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127215063 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10775518 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115837611 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114715509 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096638551 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.115484386 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096562505 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123114386 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114586372 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166925213 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089882387 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121403124 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096147394 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116239214 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114628815 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096504416 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115365675 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096491289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116393567 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126559596 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095780874 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127782975 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128340442 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107757709 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096983875 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114917108 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106447425 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11709959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128259395 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114974796 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097360094 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126560842 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128079243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096318087 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105610333 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095536303 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116217582 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115159008 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090254666 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126398821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095025848 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110429134 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114918064 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096087628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126618388 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127924027 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120454148 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103199717 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115754218 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126828033 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096976649 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11548042 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126461434 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115588623 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127570151 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127530697 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114979629 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107438622 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128034952 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135233664 seconds)
  done (took 7.876124973 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08833403 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086097109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104308666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084543684 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106408249 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084237043 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106442092 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08724105 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085767864 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.107264135 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086744871 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104109419 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084186909 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105900022 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085369604 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103150649 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084860212 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083466627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106082141 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084897394 seconds)
  done (took 2.674473803 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09611805 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126645749 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087910893 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116001526 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089672824 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115378077 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108555344 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091456456 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106608561 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090591501 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119282327 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100155741 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108304662 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113990985 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101079177 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115413767 seconds)
  done (took 2.496980234 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.110150996 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121132589 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133470238 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093604494 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105840343 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095970498 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108091673 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083762267 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103381834 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097197069 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114380719 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.09924182 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10765518 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086318201 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107481769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093929902 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104079989 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092650963 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106904962 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11267335 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114549726 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110555431 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090005378 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109319953 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091001336 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113037436 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094684146 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105092274 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085061302 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.1078699 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090843605 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116336857 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083413193 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113466672 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084852586 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105096681 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087302988 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108444422 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092764187 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108326913 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084493794 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11066932 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086811141 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110278144 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082446511 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109266197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082445605 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115310615 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088447501 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111043397 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106571649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096093305 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113710838 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102367922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117983341 seconds)
  done (took 6.419757071 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104585423 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110680325 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092721067 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104942008 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090856366 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.116628849 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091463787 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110050718 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090250268 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105192607 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090584167 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111438697 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090488052 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111185639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089812213 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110979681 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081881974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10884194 seconds)
  done (took 2.625257559 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094767681 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106921759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09573944 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106962744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088559278 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088339383 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104493379 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084279885 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105976473 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08740358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107282535 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089126686 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105305582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089796092 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108010054 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087423555 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10937075 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086052914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107653693 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083193271 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109459644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08586867 seconds)
  done (took 2.944301804 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10676506 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140779641 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.102364738 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150935653 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113053644 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091704498 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122311691 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092121285 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131713991 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.111010242 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091421748 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110589365 seconds)
  done (took 2.181514889 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114922513 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146686575 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085209145 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111870276 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121557226 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094488352 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112969326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093724969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126124701 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126289816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092927907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127302501 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12567695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123703998 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101086939 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122028732 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11258175 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09366007 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108359901 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135690067 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093774072 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126849507 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112599055 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094301035 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11388931 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124761838 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106006932 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128961114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113736246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106631618 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122947343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113999433 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106411279 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128610075 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11142354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126117743 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094802452 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137083207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121237556 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105110272 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112990538 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121428746 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106626016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122596603 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126385634 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093318433 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121267178 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113778487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093590808 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141859941 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121954242 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124683133 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101629895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127023316 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127002775 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143291623 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127675867 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124471492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101469692 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127520651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124337911 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101312001 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126284383 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128601685 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121958822 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127277545 seconds)
  done (took 8.495869433 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131471175 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107925961 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093075575 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129655842 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126898394 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113464351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094100061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113910439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093092991 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112098186 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161906783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11393717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105141684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125717678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113877415 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094351153 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114531348 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12472361 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090936571 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142640758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113766107 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12580096 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105578134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125936928 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130170378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12273501 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09511486 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114310277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094172769 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114878165 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121463783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094665484 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126335184 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108019589 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106232785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114858204 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093348825 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123302245 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114640734 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10143455 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126902614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136379058 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114000699 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094378039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128890614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114137171 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095049079 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11083483 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094547731 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111612166 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128267631 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129109435 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107254246 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126136115 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114799362 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094280342 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115002646 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113931143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095166136 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121981631 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125190206 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095143375 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143779028 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114188576 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094110285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126483624 seconds)
  done (took 8.344301761 seconds)
done (took 158.656202179 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.109253668 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145963732 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103333224 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173586752 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088483018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144659043 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121848423 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126599913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08778089 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110039858 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089223761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112921904 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1544821 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109425515 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089489019 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112700675 seconds)
  done (took 2.703822378 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186031288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.291032073 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109237499 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114674513 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09597034 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112494108 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09432556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117136611 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090432188 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124282883 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111595885 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092270396 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122089054 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092255571 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111579463 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092962467 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122298418 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091313045 seconds)
  done (took 2.998561834 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115449365 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166219567 seconds)
  done (took 1.11308239 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128517557 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189822316 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309935864 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167150758 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119103511 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133466735 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168642931 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129700916 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199112113 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131892162 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111123221 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117933152 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141115552 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102216397 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120155601 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096231518 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144538204 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118626768 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098139736 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117420043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118000476 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118480947 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120727108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099282928 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188666681 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13320964 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095903288 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.119709322 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117428254 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099100344 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122034498 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131364693 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110530545 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193740905 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101393283 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189982184 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104399288 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117274872 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097514894 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116902387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120417725 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100542642 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132545093 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094641078 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.118957379 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124217714 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097307548 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117626395 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104352948 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126992429 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124416677 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102371968 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189105554 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104310576 seconds)
  done (took 7.82441771 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.850368669 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163835759 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116493294 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.962911997 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151945131 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130117736 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84879852 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121598706 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268026255 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.095072306 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139598849 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130050165 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.217069486 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.282531465 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153581142 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344332103 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.724517835 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130526995 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124188996 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160358763 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1239545 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144863509 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114459022 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420143916 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118725467 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093846079 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123314248 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12799794 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169805589 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093881111 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120137866 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188406615 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.297107754 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190007694 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117531412 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093498928 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115097676 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175995981 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281080015 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227650815 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179474014 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09070868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113801914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107973177 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136821245 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090068193 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19692469 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183354471 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181858635 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119719227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127639657 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103608769 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127609181 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171151167 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112966481 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345430552 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327184157 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116539925 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123723202 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113333296 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276532878 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114978061 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212860797 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143253485 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221410034 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092350693 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825561292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175212996 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115163461 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10269472 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123652222 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12032534 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10515103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173891204 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38602472 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130929099 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118565679 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093054628 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238747075 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094938537 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113164647 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172946958 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095422485 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124172785 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13197515 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107836359 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.202279226 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.259349368 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129730784 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101080244 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12105662 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1269871 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095678487 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219994524 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227070269 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166293148 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.246376291 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106352325 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.195218629 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174937098 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126443574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181721825 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122480052 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112913335 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128691538 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223466315 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150829081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094056989 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121637729 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100596387 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154370002 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119820362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120902694 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178635411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.449539109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.195831174 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094487698 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096905496 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125884681 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170074431 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124077837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268859891 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103826538 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19684699 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102244499 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111746005 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102893964 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.193215178 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108083108 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124675346 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12776368 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102316336 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278965005 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207110438 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130766887 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242037088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18176492 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103874847 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181313285 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125091769 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177582765 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127130448 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128176355 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09543206 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813132608 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130277762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101268653 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121872535 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198923746 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093182721 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117201584 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092898496 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113081746 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788108067 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120217109 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091010499 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.11738742 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103216575 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125030891 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122206383 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099424481 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193091387 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218598484 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129686715 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122789783 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093655551 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.170214397 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119719854 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093014699 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.117390853 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093727047 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126538842 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119981993 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096659509 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182027421 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.191157501 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228613362 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.518883714 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114840127 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094799333 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240812833 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093071719 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31665388 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12319333 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234030383 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177605436 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090632164 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346826501 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.200227161 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198329024 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097869406 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180169637 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113598053 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100092485 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.193086182 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094328352 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124189963 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168438145 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133392449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10835887 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.165145344 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117887577 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237497183 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111431421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.181912184 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095897671 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129098198 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315697462 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093610998 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137315526 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.171055983 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121355667 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.094311947 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.616584514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094214918 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127693779 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125887548 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232063863 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.176081058 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101441104 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124777105 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129659581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173164363 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.222201957 seconds)
  done (took 45.876246918 seconds)
done (took 61.342849713 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311815925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277472907 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.318106354 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203803655 seconds)
  done (took 2.043221092 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.186469861 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161748158 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.13268261 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115848981 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163050628 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092095577 seconds)
  done (took 1.704716798 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.500399231 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388808688 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.353486224 seconds)
  done (took 2.09820809 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264611133 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.293662845 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367885076 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.463171716 seconds)
  done (took 2.350471799 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214294324 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132253626 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105939536 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.146369025 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.180363999 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.184841044 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149597123 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159019526 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135397653 seconds)
  done (took 2.312025411 seconds)
done (took 11.36648186 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.149906841 seconds)
    (2/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.291645772 seconds)
    (3/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.300264588 seconds)
    (4/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.181415289 seconds)
    (5/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.100839695 seconds)
    (6/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.151843498 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.255373496 seconds)
    (8/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120242402 seconds)
    (9/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09747121 seconds)
    (10/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133575313 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113557341 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.226004423 seconds)
    (13/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.272734659 seconds)
    (14/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.198534196 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12050845 seconds)
    (16/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.255625405 seconds)
    (17/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.225387024 seconds)
    (18/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188347077 seconds)
    (19/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.160235496 seconds)
    (20/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.23944802 seconds)
    (21/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.228499216 seconds)
    (22/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.212005839 seconds)
    (23/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.168909635 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.148755598 seconds)
    (25/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115629897 seconds)
    (26/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.100937863 seconds)
    (27/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119418381 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130801165 seconds)
    (29/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.253238987 seconds)
    (30/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133675908 seconds)
    (31/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.200942385 seconds)
    (32/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.227428125 seconds)
    (33/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103572475 seconds)
    (34/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098823117 seconds)
    (35/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.22622214 seconds)
    (36/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211896396 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.150734024 seconds)
    (38/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.151803806 seconds)
    (39/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092625629 seconds)
    (40/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.190909182 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.146705945 seconds)
    (42/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.208558054 seconds)
    (43/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.142885473 seconds)
    (44/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.220214202 seconds)
    (45/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.281100813 seconds)
    (46/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.18148275 seconds)
    (47/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.134506322 seconds)
    (48/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.17008429 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099690297 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119338365 seconds)
    (51/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201061841 seconds)
    (52/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156135048 seconds)
    (53/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084215123 seconds)
    (54/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095427604 seconds)
    (55/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.167810586 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121408969 seconds)
    (57/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205022462 seconds)
    (58/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.107454398 seconds)
    (59/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.103441854 seconds)
    (60/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.148924961 seconds)
    (61/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.161044673 seconds)
    (62/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093986367 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144069398 seconds)
    (64/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101431765 seconds)
    (65/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109405058 seconds)
    (66/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.101341079 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081308018 seconds)
    (68/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.131715605 seconds)
    (69/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.1002639 seconds)
    (70/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118985206 seconds)
    (71/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113659015 seconds)
    (72/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.203467964 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.150057605 seconds)
    (74/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080353249 seconds)
    (75/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195397154 seconds)
    (76/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197094008 seconds)
    (77/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.184514683 seconds)
    (78/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.12166742 seconds)
    (79/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134151281 seconds)
    (80/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133360137 seconds)
    (81/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.095931648 seconds)
    (82/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117956458 seconds)
    (83/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.20066368 seconds)
    (84/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154018083 seconds)
    (85/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11874993 seconds)
    (86/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081005264 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121867855 seconds)
    (88/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.091067093 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147311367 seconds)
    (90/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106593869 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.122431849 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101323996 seconds)
    (93/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.103156803 seconds)
    (94/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.202078219 seconds)
    (95/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17780165 seconds)
    (96/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.209282794 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123667774 seconds)
    (98/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10883614 seconds)
    (99/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116293799 seconds)
    (100/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101913929 seconds)
    (101/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220955296 seconds)
    (102/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.102457114 seconds)
    (103/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.098438832 seconds)
    (104/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.206019908 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12897179 seconds)
    (106/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.207140596 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100032003 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128732815 seconds)
    (109/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113850089 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.106137721 seconds)
    (111/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08036981 seconds)
    (112/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.168846058 seconds)
    (113/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.121975863 seconds)
    (114/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.140734356 seconds)
    (115/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104222176 seconds)
    (116/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104598168 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092693053 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120070313 seconds)
    (119/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096682532 seconds)
    (120/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.102831818 seconds)
    (121/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093526499 seconds)
    (122/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.195372602 seconds)
    (123/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.102040159 seconds)
    (124/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081181408 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130888527 seconds)
    (126/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100491924 seconds)
    (127/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.118118314 seconds)
    (128/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10905712 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.151030046 seconds)
    (130/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096864942 seconds)
    (131/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.179676207 seconds)
    (132/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102848107 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102907812 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121961269 seconds)
    (135/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081193493 seconds)
    (136/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.102118546 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110024981 seconds)
    (138/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102671367 seconds)
    (139/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084139117 seconds)
    (140/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095242311 seconds)
    (141/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.199040154 seconds)
    (142/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116350135 seconds)
    (143/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110603703 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120245661 seconds)
    (145/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.210398589 seconds)
    (146/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099016478 seconds)
    (147/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119933148 seconds)
    (148/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08093273 seconds)
    (149/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.120085215 seconds)
    (150/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081297825 seconds)
    (151/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.101686544 seconds)
    (152/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082187406 seconds)
    (153/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080817307 seconds)
    (154/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.104403038 seconds)
    (155/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097782196 seconds)
    (156/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103260532 seconds)
    (157/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197635044 seconds)
    (158/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081841513 seconds)
    (159/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.079155035 seconds)
    (160/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.121266377 seconds)
    (161/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081550165 seconds)
    (162/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.103019364 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.105617593 seconds)
    (164/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.122689402 seconds)
    (165/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.145553849 seconds)
    (166/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.131178769 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132310975 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082012788 seconds)
    (169/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136592876 seconds)
    (170/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08183887 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12168763 seconds)
    (172/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081294314 seconds)
    (173/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127795758 seconds)
    (174/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093951998 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118435594 seconds)
    (176/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099163676 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122743238 seconds)
    (178/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.13911172 seconds)
    (179/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.117991648 seconds)
    (180/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10206303 seconds)
    (181/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128647599 seconds)
    (182/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.080325734 seconds)
    (183/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127828397 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101905346 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.123480241 seconds)
    (186/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081649598 seconds)
    (187/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102994539 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102042524 seconds)
    (189/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103072043 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093859307 seconds)
    (191/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08082713 seconds)
    (192/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103708987 seconds)
    (193/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.121844938 seconds)
    (194/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106267062 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096161247 seconds)
    (196/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.112491559 seconds)
    (197/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.211377941 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.109097024 seconds)
    (199/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.103449049 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100858455 seconds)
    (201/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.152320078 seconds)
    (202/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.162112184 seconds)
    (203/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08133461 seconds)
    (204/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079710521 seconds)
    (205/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.104995812 seconds)
    (206/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090847054 seconds)
    (207/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127191132 seconds)
    (208/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089912635 seconds)
    (209/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116321288 seconds)
    (210/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081326498 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.145395125 seconds)
    (212/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.123404786 seconds)
    (213/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.104211096 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.108545124 seconds)
    (215/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136043554 seconds)
    (216/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.081259979 seconds)
    (217/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140545622 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100220175 seconds)
    (219/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.102924546 seconds)
    (220/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081769715 seconds)
    (221/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124516329 seconds)
    (222/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080846539 seconds)
    (223/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119618228 seconds)
    (224/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.11411721 seconds)
  done (took 30.864262299 seconds)
done (took 31.727112093 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.410898331 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134488354 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.128556203 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104680761 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14888685 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107852688 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129514412 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10742077 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127663086 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094416023 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118437249 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128349421 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10506072 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.146205979 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106413291 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120673613 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096231451 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129669983 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104859882 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131185248 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.148725423 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097725264 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127880045 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097518868 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148787993 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097134827 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128625391 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104012664 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127571349 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096170724 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129802169 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119844743 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107172586 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132013845 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095373011 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120433838 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095891175 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111114432 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.097256344 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121595637 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104043984 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120113793 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106554935 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121215178 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098773273 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119575304 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095143109 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131092041 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094683707 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.129302724 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097383532 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133936639 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.118487988 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095809537 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117450804 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.098419124 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.129230571 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095904374 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129034778 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096297998 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12035498 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096286017 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123894286 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096104743 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120764551 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098023902 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121674306 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09977534 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11772062 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09862942 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118150334 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09823226 seconds)
done (took 9.433483994 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101876415 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175944021 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151448635 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.128516526 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.148975538 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135792913 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.109204798 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14458466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.129380133 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120208145 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.147125089 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141954719 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134580769 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12720311 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135048511 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.10110674 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126809302 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108651034 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156604433 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143260934 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152259342 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104430336 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14979522 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141052913 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103057057 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.1556123 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103917499 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124876766 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102268055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134198252 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143577518 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104071848 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12635139 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116141088 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134465079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125103695 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112699671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123267545 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101867213 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.124183736 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136633462 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115761817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123773449 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11155859 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12437452 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104178087 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.127085937 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125710626 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105163961 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121245784 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105031956 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148680879 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126536975 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104159354 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125718609 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.1049544 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126282017 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104955666 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128026774 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104022291 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125070443 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126031222 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1057291 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144500481 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126404961 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104056616 seconds)
  done (took 9.154482741 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120329822 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159432897 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135228525 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113202318 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.13135383 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093295802 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11707207 seconds)
  done (took 1.783272967 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095086511 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148947496 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128550936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153004588 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140976362 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132586971 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136652783 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094380353 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143914581 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129314039 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.124347973 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174973232 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.119962076 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107191882 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154612286 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117854062 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131582972 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118621698 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10333578 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152224912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124776055 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118472219 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13331789 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095700372 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141645144 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097281427 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.188605056 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131319509 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095237083 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125542993 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100721317 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.214857877 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118890018 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129840527 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094663914 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148444825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.117294119 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126491329 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.148028506 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100273431 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.142183355 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.10204071 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.127711537 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12479575 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103171766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.13466386 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.108531554 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128824165 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101562439 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149135449 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13026575 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119045205 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121408084 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101070394 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129890069 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102242399 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134787451 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101092125 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149044277 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127468182 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123651061 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147405466 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.142403033 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122883235 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137979121 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118500383 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.143806256 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124545035 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105143612 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127820011 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123579983 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.124180916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130767907 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.112565025 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12795656 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124946871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148217796 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099446442 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132939418 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099498812 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123038931 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096221781 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137677578 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099510337 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123870352 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137109956 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110721351 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.126357754 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099973913 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142493266 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12382643 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.109086321 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.131209047 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100428234 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135749595 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148727169 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.106311692 seconds)
  done (took 13.081718208 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097250597 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097541645 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.127619145 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121099063 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09788431 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097108692 seconds)
  done (took 1.560825576 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127446428 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12610316 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.114192975 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130618851 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.181285969 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.147789503 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.127360259 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131019175 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.144201892 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114759443 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.147628366 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.149956438 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.123523637 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.131735895 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.125661319 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.131459581 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.150295203 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100796888 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137340624 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101891275 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137774609 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130944894 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10249366 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.144403537 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.106550592 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130970297 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10619567 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.139384557 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136315012 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107434805 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.131338702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.107891458 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129614754 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131025787 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.126779445 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.128475397 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124899128 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.109502312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129304823 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106758063 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.150088204 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101376482 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137338657 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.133547987 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107659172 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12896376 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.13382411 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106843468 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.151517289 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108119139 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135383496 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129639466 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.107000559 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133208799 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.104835893 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130717302 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133540793 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127553729 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.132571047 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.128716774 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103588718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131176873 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107932437 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133811243 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103979996 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.134644548 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127991146 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106338544 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126171241 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.106414932 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.134574015 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.102649254 seconds)
  done (took 9.979916477 seconds)
done (took 36.464901333 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.09856164 seconds)
  done (took 2.015918638 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.889913554 seconds)
  done (took 1.808651776 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.04749314 seconds)
  done (took 17.997518997 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.534501848 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.619622702 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98616708 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171899398 seconds)
  done (took 3.231692905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.985028662 seconds)
  done (took 1.924969772 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.323831494 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27419011 seconds)
  done (took 1.526170303 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.844323361 seconds)
  done (took 1.774783125 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.365064192 seconds)
  done (took 3.293274281 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361873011 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205950123 seconds)
  done (took 1.506392863 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.595001806 seconds)
  done (took 1.528747122 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.742531467 seconds)
  done (took 36.68039353 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237356756 seconds)
  done (took 1.187999796 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309892535 seconds)
  done (took 1.246847164 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.556163196 seconds)
  done (took 4.496380437 seconds)
done (took 81.147804197 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107391157 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134503777 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110477448 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131218954 seconds)
  done (took 1.417178753 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112254457 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128513558 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108595794 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129133662 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113858539 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129253789 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102796635 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13618663 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104749577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132084308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129143052 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10466044 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129567855 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104254094 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12722147 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106029456 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.13245139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104360035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129375246 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.1055673 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129100092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130002381 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107298159 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129186433 seconds)
  done (took 3.804875457 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107622523 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101280954 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.128569058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099869165 seconds)
  done (took 1.379000413 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112820257 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144056381 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118827976 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136603285 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143525724 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119082195 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126156303 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101207887 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127362448 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111530881 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126893055 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120669191 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145034238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120291976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114171172 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11878849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097611881 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144229261 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111789061 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.138926674 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10076872 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13675677 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.109074328 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140966444 seconds)
  done (took 3.916832245 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177583665 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.140032473 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14965262 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174960716 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126812486 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124550472 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.126456777 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133529074 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129081392 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.101114016 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124901481 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158048533 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131169428 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130191257 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101315438 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132097905 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108651903 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131790587 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102455351 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140239952 seconds)
  done (took 3.594918315 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108212159 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125303304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097125884 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124545655 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108111096 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.127767819 seconds)
  done (took 1.643595587 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097168768 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095081399 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.120532067 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09563581 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125484107 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095984227 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119172588 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095943379 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094877367 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122722481 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095919635 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119933766 seconds)
  done (took 2.224413505 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.224580045 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125633595 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125897425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.102044268 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130295363 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099258636 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139720917 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099483902 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.182068103 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126364655 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114943457 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178668489 seconds)
  done (took 2.598094931 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218807832 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106376393 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274333698 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380918096 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141944482 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176345899 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309226805 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175929058 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195731328 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120211178 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231065691 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140206871 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162933895 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187622812 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149054747 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192176382 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184440157 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209547736 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157042656 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215451092 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172740215 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176952584 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191222934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161317606 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145921586 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166030744 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.100649057 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136045169 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182641604 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177800078 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182726563 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157088012 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146776635 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210504494 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221506597 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210799543 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312990256 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117120577 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.222430622 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192606103 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251946965 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150029397 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202947353 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163348102 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139539042 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190041092 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165168103 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187043306 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113123541 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149767022 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192181709 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1851358 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.217426676 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120464752 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33133753 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12966894 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.154743412 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188860408 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19757256 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227911805 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175180466 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107944619 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196583208 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216706206 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190026824 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.127857547 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175436345 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133403441 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185043249 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204439539 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186186757 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175283977 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219055696 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115083043 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171708742 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178796142 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162516197 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189352709 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16963333 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128847648 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132844438 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14465969 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134557065 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168131109 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132785215 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213112537 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143598408 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.193383608 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215551621 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168077601 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169800506 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17366051 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175773652 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155660784 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101316848 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154392648 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.171939029 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165913294 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112401403 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166591724 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154127932 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135110786 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159879307 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105921978 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167387229 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.142985364 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175730198 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14553667 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136365649 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174425768 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159024913 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168272386 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180972491 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195975247 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113749826 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140232707 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202663534 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166285648 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144687009 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185225462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195839725 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174529108 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118023884 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204803345 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205156598 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123936716 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223684191 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124468915 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141953641 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.159578528 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16669376 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165257615 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.137622909 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137671229 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160595089 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202798226 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135162103 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118124128 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182129373 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135823771 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110105706 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152323744 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145657828 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149375925 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131852984 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148089631 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163448882 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16814953 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163379886 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167165311 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123832296 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229060835 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113902777 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169317884 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156505371 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098733441 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.214359527 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194305083 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111784494 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194145938 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177462785 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231721154 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172930069 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111387501 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190391157 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139217949 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100118041 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173761077 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17030307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171638526 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190447819 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229285218 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176452016 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16145525 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130472326 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202674837 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.158782012 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163141477 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156205285 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171928882 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174770065 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131489021 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105001766 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136340478 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147721921 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113216425 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140896335 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191038196 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173153175 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198628242 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169751437 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148325833 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194011501 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133401002 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173326846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180824915 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120713719 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.192818922 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191204147 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175265159 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151290769 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178546431 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128653592 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106821071 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141963205 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176130568 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113974689 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143689972 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150973474 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19354167 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184338238 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159659323 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214323091 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17689114 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230173835 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103342737 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173627241 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180391763 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16625034 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169635085 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140986284 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170939337 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189413732 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153029521 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203466359 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17363044 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177876535 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209085357 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167023506 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139159588 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131902695 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176837314 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149684094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174206869 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157198831 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11629586 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161865103 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.146218359 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133409485 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190850584 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124010569 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218896844 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.167182736 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183028575 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10880072 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152236591 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170360038 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155493973 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.099553929 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178950672 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224472771 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124815126 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166890792 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184674077 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139996835 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321796553 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198707821 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192514028 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147935698 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151265827 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171165342 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17018721 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172624061 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191526268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124707878 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191056313 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168500857 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153363024 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142729259 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129954782 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160293519 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160423684 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142413609 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163639815 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12416289 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193593639 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155517835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169314195 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174297503 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.157481136 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.136109363 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149687742 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21101186 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169185302 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187503255 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166665412 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177056368 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198570649 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133897865 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110326589 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136402009 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193206598 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113198078 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168999955 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195176772 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232751354 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169479586 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178617284 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118958491 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133971639 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169919021 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157981381 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210288398 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150690076 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.117154825 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22899657 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132829375 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140704894 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174808414 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292654719 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154279015 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185076408 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.099880734 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287073876 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134571838 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140932154 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142995959 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180823771 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141703318 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192623262 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174550543 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125563399 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172561681 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147152056 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200981047 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244985541 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181666672 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184728196 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151815947 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13942901 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172363583 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212363722 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125202968 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.154699865 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171676261 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193729314 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196628878 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142298324 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143497361 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173007748 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169228604 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182810828 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145808761 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196961707 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140401213 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176591682 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148265182 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107596839 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167665479 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194002343 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142597675 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186128794 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167404959 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112420606 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136601138 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160768856 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168240567 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125125467 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.140719954 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187533235 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137259764 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144305694 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192307223 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140283201 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168691499 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154817788 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113178948 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153712102 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153177107 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115868364 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181449303 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193257941 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139234521 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187928599 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182249111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174590489 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169726562 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124964934 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672668608 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137104584 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192760745 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128426319 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225197336 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130564433 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176003953 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172452105 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159272238 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177931446 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159860406 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228995322 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174770366 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167816161 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113446707 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153653834 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154021504 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11300266 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16232435 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171353837 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149671305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.11808157 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166284594 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156350653 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154108855 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119899242 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194852611 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157554729 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190555167 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194643662 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148896534 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175802155 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184868279 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138870706 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170944867 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181820531 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123793022 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160762387 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.140001433 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.115506045 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189643809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134183918 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170765557 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168892864 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144187077 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174694893 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145611048 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170345086 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152799477 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169852919 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108309528 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164994439 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168047151 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11129258 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138232361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166359596 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169504569 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167458083 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108009868 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.181205171 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19308492 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105519688 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144536399 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292278016 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168436936 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204045584 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163647845 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144404169 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126089808 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165142681 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163965417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170519907 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110061375 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141977631 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139447513 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188765149 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138676634 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168440092 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19427264 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171026559 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199834299 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156156403 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.273823312 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120875744 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16699265 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.14012805 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110510668 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150576239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143536954 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127220486 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230949077 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189865903 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160732682 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.127331202 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137177305 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105227814 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142886417 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172060183 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164476656 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139798012 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152361177 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.127472081 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152767927 seconds)
  done (took 80.973343182 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18874585 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154114762 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156713004 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205708473 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177236002 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266210131 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215876369 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237173365 seconds)
  done (took 2.632770318 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109764541 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14459841 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.151260442 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.1327882 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133174269 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.362655825 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145664865 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107491821 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193560436 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144856244 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131313108 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.632195418 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102661444 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135973442 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122107545 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132439828 seconds)
  done (took 3.907086937 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.326703518 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545083417 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.015226896 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254221038 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235783059 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.16356292 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.748734493 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194628314 seconds)
  done (took 12.517433141 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13877181 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152193502 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.272964164 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.184387012 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169978844 seconds)
  done (took 1.96001964 seconds)
done (took 123.503068406 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105069508 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.1335484 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105361299 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134824635 seconds)
  done (took 1.508642677 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.119147429 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0891923 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122274562 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088144693 seconds)
  done (took 1.455419719 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.502542265 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089177622 seconds)
  done (took 1.66761896 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130262143 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146553264 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.127368269 seconds)
  done (took 1.453581832 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112386059 seconds)
  done (took 1.157938641 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115955058 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111626909 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152313315 seconds)
  done (took 1.42527313 seconds)
done (took 9.708830779 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132721775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432974841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.39731518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148095475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729997064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389926692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047967739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163993264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173702703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100355966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146695334 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679722157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.070988723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350833506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.047078758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.349257574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709919681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102210877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135139173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102145936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018410808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099161569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129976794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102120734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708187436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404021381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12948325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.388539794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100264706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132276234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390638682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127187571 seconds)
  done (took 17.176503404 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144777359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189976271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136617433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103648156 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133138496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102597324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138583331 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113327347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187916817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128589357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120705742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128394819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105787389 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129008626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122758533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12845097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102902257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130946784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107949327 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130639024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119909784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127865278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101997037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130398341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100142984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141593056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100619679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141032494 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099713431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135120705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132724739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10276328 seconds)
  done (took 5.063866887 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151129256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199784671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137919397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136506526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180339167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129604043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216609314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138034375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193188273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128838307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120245389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129829528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.166471892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10202939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150989808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100865594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131674252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103438649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135783863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102020099 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149095818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09988776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130336833 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102413821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.129546941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1144709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12882104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138984535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101132794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133022289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108053384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128078063 seconds)
  done (took 5.37240676 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108800783 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135903598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117988979 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146497254 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.105864584 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13486139 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109536834 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131528947 seconds)
  done (took 2.038626101 seconds)
done (took 30.699923588 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123075056 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142232125 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116430007 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.139015937 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137124554 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.127644971 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113151411 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09948524 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.140263222 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117366767 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.129674287 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101966284 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143881271 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106286372 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.146253249 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110523279 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.151372953 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116692832 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.131042281 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111377103 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.130337507 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.122519618 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.135302449 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101658375 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.155809232 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132221706 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119668194 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134015602 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107118512 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102339756 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.147361155 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106869467 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.131197572 seconds)
  done (took 5.173182109 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.12983152 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.175461132 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098284188 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.127932293 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.170551303 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.100460422 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.156915307 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100078434 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127032244 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099494264 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097876342 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.155615073 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.162043541 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.132423644 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.178197081 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.165376478 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.126929961 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.168290222 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.152001012 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.140446899 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.159401396 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.09805417 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.162697688 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.170635718 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099715184 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.127325058 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.144042637 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159998104 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.173991962 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.133724342 seconds)
  done (took 5.253835732 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110872062 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146188645 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128212253 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203252181 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.172532219 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116815585 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143738115 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120293427 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.159201648 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100503243 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143285654 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161733175 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119482221 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14086792 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107646637 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145889201 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.122255706 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131967238 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109150472 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149897476 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11956314 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144882697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117497315 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141329656 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101292209 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141159491 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.109046023 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144533965 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136901653 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111882864 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133822104 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10706756 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132846397 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.11310986 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.13385316 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.110880408 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.153319659 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111891974 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.144686699 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165889083 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112331322 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134896789 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124858011 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178757866 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10344668 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138881945 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112969558 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141257803 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100472641 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15113532 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117131201 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.132720201 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14677571 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102215996 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128690283 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110041381 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.13300658 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.105249205 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139258599 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107365644 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151310407 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.111269389 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138384543 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105299668 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136803877 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102781287 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.129872181 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108652135 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.155946359 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108457004 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164858532 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102636971 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137184866 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111862653 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139084867 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111972064 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.132036874 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10941362 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140568466 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107860686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141611767 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105052815 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.136651625 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120822422 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147908434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139327297 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108318959 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13881325 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106141624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133494339 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116574054 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133840918 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106030602 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142153134 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.104098636 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.134696819 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108487471 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136579906 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101587224 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152153276 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107550579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.130508935 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120515424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133044331 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10621819 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.140444048 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.115427744 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.132043991 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.1070198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137856485 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101672982 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136670669 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.1059212 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.13107346 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114509415 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142941686 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107376416 seconds)
  done (took 15.991850123 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.254772154 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233934302 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204766108 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.320055402 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155476392 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.129421309 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.232286022 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.184510612 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132673939 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174426749 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190514131 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.195267174 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102663266 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165993657 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233945471 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.326621233 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16616806 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174759215 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.143537985 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155462933 seconds)
  done (took 4.952335354 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119414283 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172723569 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162853093 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.129822422 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.13466532 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11639596 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.134589716 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149171309 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105013078 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13934804 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102150775 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141323984 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106113577 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135276928 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121133612 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150303208 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106620383 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.140624026 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149654456 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109028396 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134822776 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155034934 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113337219 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162558872 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111564777 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.150102828 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101830964 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140848321 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101165681 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132592621 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10865891 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149464376 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140039602 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104672425 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.138570494 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103565597 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.128289956 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105621076 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.134787004 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.108202817 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.14962832 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10668754 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133319956 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103899763 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140708639 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101150782 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108083592 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.140802753 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138504277 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112873265 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140317081 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108634162 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.140663498 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.115354226 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.129745935 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113154146 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.146260259 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136649059 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110620768 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130011017 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102228365 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106369214 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132176133 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107944819 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138390688 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.150261116 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112600717 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133419607 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.111534922 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.137172478 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107110259 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151944265 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15298137 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102238534 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.129861761 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126105013 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100108835 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121165415 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.113068024 seconds)
  done (took 11.076476288 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132933501 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133238718 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.123388154 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168920631 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117118279 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.142335749 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.104214903 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.154125797 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.110186939 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141766516 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109742587 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14915008 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16165128 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.117985663 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.133668103 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.119124455 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.137264959 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144842632 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.153111027 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165393851 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115290221 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.138774684 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.117636437 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.145049098 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137164033 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.146890622 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166747678 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109201775 seconds)
  done (took 4.884501282 seconds)
done (took 48.380506501 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.242045318 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.366924172 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.145083387 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.144343562 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.155850601 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.171534401 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.146564761 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.338080026 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.864488627 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.135339822 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.145047888 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.145753032 seconds)
done (took 27.075853693 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.202369922 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.741420368 seconds)
    (2/2) benchmarking "String"...
    done (took 1.503612923 seconds)
  done (took 4.325928813 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.146871089 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.150536064 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.391357526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.149088086 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.165074178 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.166474347 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.150101398 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.153800835 seconds)
  done (took 15.403943438 seconds)
done (took 25.15171373 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.209876037 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.38428761 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.421619856 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.164692777 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.148619326 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.147708657 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.137127981 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.192331724 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.165622781 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.139628992 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.165431305 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.449111552 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.145038205 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.540596943 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.140291945 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.159641002 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.169659828 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.401773545 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.160046941 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.193529381 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.150751411 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.135318887 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.151578335 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.173589789 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.164895916 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.164716196 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.182453498 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.141921599 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.369552914 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.173136713 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.198078009 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.155395398 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.18517983 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.153521118 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.260818916 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.175618245 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.351593318 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.148333413 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.142825832 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.154988615 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.363777782 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.555725995 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.163898977 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.151640673 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.155139874 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.154285141 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.146514854 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.885094281 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.158000831 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.136940744 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.157055645 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.556154204 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.151455783 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.163173954 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.158963895 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.437366829 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.183373412 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.187878154 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.18227011 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.15107296 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.150524338 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.163887969 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.182072021 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.152263555 seconds)
  done (took 140.299578789 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.152604853 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.157066292 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.156727562 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.177093898 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.154267506 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.156369198 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.152733527 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.154202144 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.156219194 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.181305611 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.15141484 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.153555419 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.158857354 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.1121279 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.156073591 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.176407946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.157053698 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.177510064 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.156399516 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.156599232 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.168106072 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.159298859 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.177762621 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.159838105 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.194636878 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.246135164 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.176199194 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.177413235 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.15405222 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.158495798 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.207543025 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.222324727 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.759343459 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.010277406 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.167817627 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.178456902 seconds)
  done (took 78.549816764 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.158186604 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.154953935 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.157334793 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.187704177 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.15533285 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.722044697 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.724879967 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.879461597 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.546707015 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.49005769 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.463352853 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.159662778 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248258235 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.168906034 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.152456759 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.159863875 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.171647588 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.182628603 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.155089696 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157473072 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.723423932 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.174035004 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.209509345 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.329342564 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.168200679 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.191373525 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.553165626 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.156146429 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.188748418 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.4908861 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.207014132 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.156809323 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.551900544 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.243930148 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274075012 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.157449252 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.191873407 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.159319324 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.44082044 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.156894548 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.15964173 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.160104765 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.158753037 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.845192177 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.163177297 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.727196604 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.161934148 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.094421269 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.157729056 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.16023949 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.585105442 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.800129578 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.172410431 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.16240335 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.164861772 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.164063859 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.163769227 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.195833562 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.343135905 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278313292 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.16095266 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.160674083 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.165554912 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.194715306 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.161679627 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.232915708 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.16031403 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.60830532 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.221157682 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.274396741 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.729322263 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.164144561 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.258761489 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280234473 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.160364824 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.162108033 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.162132911 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.163140909 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.272226039 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.16124353 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.563207753 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.162668116 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336832306 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.179584699 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.436470771 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.258122311 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.162749252 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523596051 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.16271816 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.165848538 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899043544 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259381397 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.162927746 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.165647177 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.163112064 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.566290521 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712872801 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.398447009 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.159476496 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.727062349 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.171287737 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.581055872 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.705357334 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.819269835 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.162780244 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277092509 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.334971472 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.178880573 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.161931712 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.490157321 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.167760002 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.222366431 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.163929908 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.564048202 seconds)
  done (took 360.848247698 seconds)
done (took 580.769093739 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.888494231 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.834638912 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.959898393 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.861136628 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.830298957 seconds)
  done (took 10.458177907 seconds)
done (took 11.53962722 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.357591719 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.35823152 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.227712219 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.359504595 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.200364392 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.380330217 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.341823672 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.19045029 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.273025875 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.249284921 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.26977745 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221651006 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203037367 seconds)
  done (took 17.716098974 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.441946113 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.166231026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246614528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415121786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.204766047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.441599772 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466582289 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.167180679 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.31160357 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.180916363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.180854709 seconds)
  done (took 17.311091997 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.434639706 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.1665449 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23550932 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424287571 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.208027484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432509734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.467394017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.167085988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304707657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.180088473 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.180153139 seconds)
  done (took 17.289439938 seconds)
done (took 53.40031387 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.20688529 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.337876115 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.195187157 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.182945517 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.177530284 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.177020673 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.184849529 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.176484671 seconds)
  done (took 10.725470814 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.173418702 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.177084481 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.175522474 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.175796058 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.171941763 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.17547574 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.174668313 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.176041981 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.175397228 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.175677629 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.17586775 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.17405498 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.17502827 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.174468632 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.177850563 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.176781885 seconds)
  done (took 19.896359847 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.17517034 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.175069885 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.175005533 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.174325721 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.175409924 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.177076148 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.17562726 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.174895309 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.175749134 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.176112067 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.174759372 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.174987116 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.17501576 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.178894677 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.178223748 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.179265143 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.177197992 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.175493544 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.182159599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.175188264 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.176683578 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.17596077 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.177456315 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.175330291 seconds)
  done (took 29.320579488 seconds)
done (took 61.026609949 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.172366548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.168543783 seconds)
  done (took 5.430023842 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.237894679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.240227344 seconds)
  done (took 3.56731373 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.181217076 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.179429029 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.178206654 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.180152473 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.179560258 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.180243494 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.180395252 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.179252642 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.177375579 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.178770385 seconds)
  done (took 12.884180538 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.181022269 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.181885682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.177226285 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.178488685 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.178442008 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.17703895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.17997316 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.179688406 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.181353758 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.176803166 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.179921907 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.179139559 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.177900001 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.178388443 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.178918073 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.175414208 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.177942561 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.179246314 seconds)
  done (took 22.310988925 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.193811392 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.200711264 seconds)
  done (took 3.487003933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.316868059 seconds)
    (2/7) benchmarking "second"...
    done (took 1.218974522 seconds)
    (3/7) benchmarking "month"...
    done (took 1.294688405 seconds)
    (4/7) benchmarking "year"...
    done (took 1.285540595 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221451751 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.199851793 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22152871 seconds)
  done (took 9.85229887 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.17951763 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.377293333 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492704161 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.736100157 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.182972288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224935434 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.017518586 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.226584877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.212981398 seconds)
  done (took 13.742760312 seconds)
done (took 72.359567924 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.174733239 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.227193556 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.176334901 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.191372124 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.471377598 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.186110667 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.175774068 seconds)
done (took 15.69698632 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.174067399 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.163536721 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.192292611 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.177415057 seconds)
  done (took 9.800666991 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.180773289 seconds)
    (2/2) benchmarking "read"...
    done (took 1.524397711 seconds)
  done (took 4.800900513 seconds)
done (took 15.694937577 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181880819 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.182134639 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.181897732 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.184104863 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.180037546 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.183506525 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.180221323 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.181989674 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.182849792 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.182305643 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.183825666 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.183555899 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181706972 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181057919 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182241864 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180573957 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.180417239 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.180643086 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180598447 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.180343973 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179908608 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.183967337 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.179997484 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.178928812 seconds)
  done (took 29.453909699 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.182352352 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.183241654 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.182175498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.184765498 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.181779227 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.184304487 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.186009547 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.178983706 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.182620493 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.183408211 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18166906 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.185893123 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.186747969 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.182341893 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187507032 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.184264554 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.184207001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185383137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187509108 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.184367512 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.184730635 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183617651 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.184748555 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188130613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.181578799 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.183909819 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.186544367 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.182505109 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.186604471 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.183580522 seconds)
  done (took 36.623379006 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.188321263 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.189910442 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.184286275 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.185353954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.18752393 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.185857924 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.185492493 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.186675298 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.182605239 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.185268011 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.186152493 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.184186702 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.184844713 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.186260033 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.18711506 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.181765864 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.18568028 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.185090926 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.183574838 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.186464363 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.185529743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.185361198 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.187099068 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.185933811 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.185410536 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.186920825 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.185841912 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.187619735 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.185587937 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.18705946 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.185279919 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.184832027 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.186454807 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.187914297 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.186924719 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.186147045 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.191889521 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.194696512 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.18612471 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.188199108 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.188043194 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.187152197 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.187798097 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.190544533 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.190040687 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.188832455 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.189360563 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.187908735 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.188224991 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.184973567 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.188136318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.190916608 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.18542513 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.188513773 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.18566375 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.187528581 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.191372589 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.188145258 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.189227454 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.185335184 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.187888736 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.187848046 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.18741702 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.185971241 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.189639344 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.189261075 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.189597931 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.189109471 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.188148102 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.191249748 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.187746067 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.188756646 seconds)
  done (took 86.578738525 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.190352994 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.187624353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.185232773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.186709641 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187062239 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.19054412 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.18421339 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19035524 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188678672 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.190190018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191829643 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.188588295 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18896369 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.192194266 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190174388 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.189316619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.192855169 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189095315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.190997391 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.195484078 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191365935 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.190801555 seconds)
  done (took 27.272351663 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189482517 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.193817536 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.191421617 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195382499 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.19011311 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.190405256 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.193042606 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192560685 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193862625 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190435045 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190158358 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193279989 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.191888392 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191471162 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191640787 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.191455231 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193330405 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190174893 seconds)
  done (took 22.558640924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.189125219 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.191364942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.197058626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189309473 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.189395909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.193864039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193284609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.192456415 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.194643753 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.193621203 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.193962345 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193535495 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.193910851 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191693507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19376882 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.193270408 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.193255658 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18837684 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190197734 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190947593 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.192550607 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192906491 seconds)
  done (took 27.338306029 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194171201 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.192444875 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.191093881 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.191948834 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.190433096 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.193016986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.194757698 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.188540837 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.195609092 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.193410207 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191412136 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.193401068 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.193824069 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.192542513 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.193037944 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191335437 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.196387084 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.19114559 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.192224279 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.193251172 seconds)
  done (took 24.959255024 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.193605839 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194312823 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195611219 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.19506739 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.194352146 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.195346415 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194746417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.195773889 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196573151 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196472638 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.19621734 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.192457316 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195822456 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.194634836 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.19294019 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196295119 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194915505 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.194581887 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196242982 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195988431 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198880556 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196045424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196215075 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198099762 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.198522868 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197397435 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196040422 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.195642722 seconds)
  done (took 34.587343852 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198020173 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.196036755 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.194727069 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.191036258 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.195771845 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.193504971 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.196250792 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.195630495 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.198265743 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196403918 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.197972123 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.195107556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.199952111 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.198188663 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199097052 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.196772776 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197633093 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.192173104 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195581735 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196226602 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.198174205 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199278205 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.199899438 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195587213 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194039579 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.201395785 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195683701 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.198612035 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200123797 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.197986258 seconds)
  done (took 37.013124358 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.238014423 seconds)
    (2/2) benchmarking "in"...
    done (took 1.236749017 seconds)
  done (took 3.584530026 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.196972629 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199566587 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.200799877 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.197805218 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197280943 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.199227751 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.200790394 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198331182 seconds)
  done (took 10.700894638 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.197716627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.200706487 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.20021856 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.200516281 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.198511235 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.19544848 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207244242 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.221614752 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.203167029 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.199575623 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.20682299 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.206551566 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.205344259 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.200684206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.202504943 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204534915 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.203204441 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.202589973 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.197972431 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.200452383 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20108086 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201514005 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.206276937 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.202011622 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.203246052 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.208734725 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.206761655 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.203982903 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.203760562 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.205960805 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.20249049 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.198339822 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.203899907 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.198609991 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.199605402 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.202310324 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.20782666 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227165483 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.209571203 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.203930691 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.202271781 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.198327715 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.204015792 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.204781643 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.202408823 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.200286087 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.200922833 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.20104378 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.203638779 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.205678203 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.207659364 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.204909086 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.199218023 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.204558808 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.203593435 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209748453 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.225881955 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.206952727 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.212544618 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.212367019 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.216497762 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.229958328 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20481358 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.204282716 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215284134 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.22635717 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210224559 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.223763218 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.201356229 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.205093921 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.210768391 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.21917894 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.231797385 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.204272365 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.20462955 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.20488887 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.206071807 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205114184 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210162752 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229632757 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.207133827 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.204699888 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212509837 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230224628 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.205470683 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.205110213 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.205954877 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.205107519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.206200701 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.215672045 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.228196184 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.206242143 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.205722545 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.202613398 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.207371539 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.205707062 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.203814961 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.208234804 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.204263298 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.206289686 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204473261 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210313762 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.212580508 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207773108 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.205851728 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.212465509 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.207686035 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.208595826 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.214075696 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.207129109 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.207419837 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.20811637 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.210999609 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.204118741 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.210677435 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.212993428 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.203542194 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.209552979 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.205984887 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.210120464 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218302872 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.231358645 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.208969741 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.208604213 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.217285095 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.217548892 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.205193685 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.209870886 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.210919232 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.206215351 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.210490121 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.210683045 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.212386795 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.213236721 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209210628 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207091953 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.208257987 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.207595311 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.209136468 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.208229723 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.212451992 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.210570813 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.210878511 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.213248243 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.210842883 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.211516944 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.218369123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.212365788 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.211752343 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.209789762 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.205777055 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211046178 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.211053487 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.212069144 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.210060562 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209694733 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.210692141 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.211828739 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212889005 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.211265295 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212059731 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.215543771 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215167866 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.211105496 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.214496939 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.213558654 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.208553368 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.212470271 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.213644918 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.211290002 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.212629064 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.211086793 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.216614459 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.216492109 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212703964 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.211743225 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.214682016 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213550925 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213730036 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212498123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.217338734 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.219421607 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.213175574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.219650157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.213344988 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212127487 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.216031725 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.215734753 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.214151552 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212792961 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.216112857 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.218264457 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229908116 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240901604 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.215814643 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.213053444 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.215043494 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.215445423 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.216621745 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.216159733 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.21236212 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21518081 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213535178 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214920946 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.215161911 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.21662341 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.213776718 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.21525044 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.217548934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.217041012 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21653715 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.217564529 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.21908523 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.214388162 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217740481 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216210719 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.215417573 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.213502786 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.217606298 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.214850786 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.214717202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.217346873 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.220795229 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.215703122 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218064914 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21836126 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.217004639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.217173453 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.214037644 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222330213 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.217579154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223587273 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.238890813 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219419352 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.223600409 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.234351996 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.213706565 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.216964511 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.219225723 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.214321977 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.222736727 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.222217058 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.216411846 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.219109522 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.215003137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.216959292 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217393238 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.222014746 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.215816963 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.217560806 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.218547719 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.220258641 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.216145435 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.220983171 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.218203723 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.21961334 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219024604 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218082063 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.220070519 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221088878 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.216590497 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.215039987 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.215620192 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22359316 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.223468311 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.222533762 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.219726114 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.220127529 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.222188475 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.221790512 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.225387266 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.217945119 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.218787215 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2317291 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.243006455 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225953936 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.240405745 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.220767018 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226787425 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.241429661 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.222861852 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220000783 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218852196 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.219575126 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.220470211 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.219647037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223518959 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.221881805 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224506613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.224379792 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.221511833 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.221606723 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.222095542 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.221001542 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.221015698 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.22023639 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.223299571 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.222153781 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.22785587 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.223546128 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.223287807 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.223158945 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230123254 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246284271 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.223304064 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224219122 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223011796 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.220847734 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.222420592 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.218970237 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.224294137 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.227236911 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.226717718 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.228871587 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.224799806 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232883336 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.226446851 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.228126933 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.226562163 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.219409149 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.224938476 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.22018724 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.222409617 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231930869 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.241526791 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.22625607 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.224561843 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222621824 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.224429171 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.223040472 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.226763569 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223889054 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.224164152 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232746549 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.247461733 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.229716105 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226356922 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.222455365 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.223588266 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.222555945 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.223479588 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226788689 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.225209448 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.225868044 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.224644538 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.222435403 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.224404596 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.224937037 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.223362575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.22296208 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.224662742 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231742842 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.247982242 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230132158 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.223861222 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.233021987 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227137932 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230356217 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.244803662 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.226443596 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.227271286 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.225895384 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.228867941 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.226341836 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.228819377 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.226334261 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.227718731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.231052983 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227115791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.226541546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.229836408 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.226309426 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.227710126 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236159393 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250238713 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.228643761 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230051055 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.225059106 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.23079301 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.232453631 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.226442333 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.225436447 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.230611147 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240803995 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233452673 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.226171242 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.227563734 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226819611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227525514 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.226788677 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.230335394 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.229187814 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.226010827 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.23001506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.224247242 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229713718 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.230733904 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.230071485 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230350458 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.228934418 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.23957853 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.230748373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.230017933 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231543286 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.227880783 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.230317744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.227675138 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.228253913 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230664078 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230058455 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.229051916 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238376986 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.235633365 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233393942 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.234550236 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.229152462 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.228612425 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.234048505 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232015959 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.232316348 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231276293 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.230509587 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.740031332 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.2306264 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.230591576 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.230859906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.234073748 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230551332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236214066 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.237865712 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231280326 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.228350971 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232824534 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233931644 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231225586 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230308226 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.237026699 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23643156 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.243398024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.241798835 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.233887084 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.231479895 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234066091 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.239998481 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.231463468 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232953203 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.232454673 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.233300259 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.235374046 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.236983296 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233595782 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.237180987 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.234824073 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.23325589 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24141435 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.256286728 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232469836 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.233461146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.23891468 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235471225 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.230045802 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.236116354 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.235373787 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241803661 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.255477926 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235585311 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235762154 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.235690253 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.234330511 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241496274 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237887962 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.240221441 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.234375628 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.238023528 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236591191 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232341573 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232978341 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.233710417 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23626811 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236430654 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.24207501 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.234758833 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237770089 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.236819319 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.23580864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236647314 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234971471 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.234093896 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.234880087 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.232404638 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235776285 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234960114 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237984671 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.237393736 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.235905909 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.23795474 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235951842 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236414758 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.246507024 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.242754472 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.231983232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.23923582 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.236624535 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.240487943 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236316699 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.234642873 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237416003 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.23720705 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.237171304 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238520639 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.236232426 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.239731231 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254395888 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.261341186 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238108391 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.237216957 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24229325 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.239204073 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234759501 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.241761037 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.242492805 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.242689615 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.246587622 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237662307 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246632678 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263527516 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241901544 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.242306357 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.243993113 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.246668495 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.242127888 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238592334 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.239469726 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.247179471 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.255474977 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241295911 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251012224 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272424411 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.262847879 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.242044343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.238813964 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240631494 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.241883447 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.241293571 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.24178768 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.240992386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241046654 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.241375686 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.242122941 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247246843 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.242126486 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.24408973 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.242656581 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244413328 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.242917842 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.238238677 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.242104779 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.24109932 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.239842152 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.240150844 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.240249447 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.238550634 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253158829 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.268190488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.242573523 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.240852777 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238240355 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.248189723 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.24786499 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254560093 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.250620676 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.241898927 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.242094222 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.24320097 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242262508 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.244609389 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.243626124 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.242817222 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244417987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.238989162 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.256340547 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268081123 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.245662772 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.245741574 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241703809 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.242159291 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245497947 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241964324 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241922608 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.24246761 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.245690898 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248770612 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.243240635 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.244415903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.248433645 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.249930544 seconds)
  done (took 731.366492392 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241096272 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243642273 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.244711436 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239905417 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243873014 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245276654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242114555 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24484802 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243745873 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244694665 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245823302 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243176403 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243703968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24468066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245740624 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244405732 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245779736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247647997 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246783261 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245653336 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244822548 seconds)
  done (took 27.279633625 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.246103854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.244688767 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244144017 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246817469 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242685618 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249496207 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241861252 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246096982 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249249922 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244480135 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247359332 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248532147 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246095302 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.246935686 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246233726 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250988689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248490291 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244156211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.246624 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245370772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246783687 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24453255 seconds)
  done (took 28.566760521 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.244473762 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.247273159 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.246328573 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.246870574 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.248752824 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.246853946 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.246812717 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.245794423 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.250847051 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.248882624 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.249118299 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.248573742 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.255827651 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.254820304 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.253540663 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.24967374 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.251253899 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.249464536 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248553321 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.245987716 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.254766412 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.267377794 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.245537933 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.249080271 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.24911551 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.248968786 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.24902267 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.250388461 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.24849324 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256086617 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.252177627 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.250442842 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.251868145 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.252465498 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.251450337 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.254890877 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.251844356 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.247119032 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.251179463 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263503618 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.274492891 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.252855627 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.255710613 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.26961224 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.254420792 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.255878634 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.261619582 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.246417375 seconds)
  done (took 61.247981424 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.850597634 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.865046931 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.857514448 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.862717595 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.86074774 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.861868662 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.87518228 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.877891738 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.858413031 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.864648153 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.866867957 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.862787511 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.864232788 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.867024709 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.867252625 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.857944605 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.863035805 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.85893986 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.871730801 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.869150464 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.859015102 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.861639748 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.862449662 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.856879477 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.865376945 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862356502 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.862900295 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.858512127 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.862806964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.862370111 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.861887023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.871976902 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.871559349 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.855850497 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.859696162 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.859372514 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.866920622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.863317243 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.867035124 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.862605894 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.862527646 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.862922614 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.867195603 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.86726583 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876185833 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.8586699 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861158718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.861386856 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.876971649 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.861692085 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.870450158 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.864262033 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.866707121 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.86486722 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.863292052 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.868267529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.874080179 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.8756912 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.864664356 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.865041383 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.868550611 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.86805243 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.864504638 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.868923322 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.868104984 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.866125292 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.865290102 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.869726809 seconds)
  done (took 127.965789027 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254157243 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.254865635 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253873788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253919774 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254006707 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.254766447 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256532771 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.254490624 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253822396 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255077507 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254418219 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255257995 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.255767185 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.257170988 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258552866 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253913656 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255901431 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257096789 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254280182 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25711086 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.255975172 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.256161579 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257770714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256405074 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257575962 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257204477 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255916088 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.256551011 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255176832 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.257320491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25695812 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255531494 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.25819424 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258563219 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260563253 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.258492215 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257233811 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256209281 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.258465264 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256549507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257227741 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259130098 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254731476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.258145174 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257943453 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258514385 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257656028 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.258549935 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258225904 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259085481 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.257818513 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259393952 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259138321 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256878882 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256854128 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.259769756 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259203094 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258822646 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259352394 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260793875 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258518046 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.259761213 seconds)
  done (took 79.09648332 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259002348 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262940214 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.257561315 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.259310859 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259734494 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259485566 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26295601 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.260487284 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262158151 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263328014 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263984093 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25960208 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260735131 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259975861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259975667 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259921741 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261738513 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258674481 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261327527 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25745384 seconds)
  done (took 26.371839587 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.259753465 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262358704 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.259636879 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258876974 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262140523 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260460986 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.261494237 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26055072 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259613491 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260916936 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26410424 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261400831 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26159111 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258720886 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.262621373 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260780592 seconds)
  done (took 21.337733222 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.261712556 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.2634848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.261677952 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.260509189 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.259439236 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.259981421 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.26258983 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.260782193 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262734256 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269633046 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265571251 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.263313219 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.26577088 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.262615435 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.261763812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.264336037 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.262487887 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.263041965 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.266042474 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.263626696 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.260633868 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264355338 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.265185352 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.265514829 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.262952591 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.262266881 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.262224416 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.262210228 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.261696155 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.266185534 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264306654 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.262864178 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.264734251 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.26349995 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26687204 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.262662946 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.264384169 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264938961 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.263913469 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.263570741 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.265881275 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.260916371 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.266878723 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.265340345 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.264499626 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.266792622 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263084346 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.263102815 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.26444469 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.263390414 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.267125589 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.26791589 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.265117218 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.267486756 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.26425153 seconds)
  done (took 70.676374308 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269527301 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267283319 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.261321444 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.265396707 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268525115 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265100867 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.264568071 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265448167 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266045648 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.265738636 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263460608 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26751398 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266057154 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269293233 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27138889 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268389081 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.265891989 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266621443 seconds)
  done (took 23.963826667 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265481469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267298299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.269021249 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266605303 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266103425 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270001433 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267455886 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.269358935 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269942911 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267486208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26656743 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.270948258 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268104597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.26942251 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267274007 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267262434 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268712915 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269292778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266412221 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266803242 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270224523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269688438 seconds)
  done (took 29.068310094 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.267834007 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.26817593 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.266141622 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.285781037 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.290100916 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.267232379 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.265473302 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.268111907 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.290414119 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.327180289 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.321333265 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.291197981 seconds)
  done (took 16.577347504 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266068623 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269921197 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268105644 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26862678 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268749186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264812438 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266258942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266788723 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268633205 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268138638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267438633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272486186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271559884 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267942612 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27220973 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271729173 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26875099 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26719483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269031299 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270633561 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269489466 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272365763 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267011051 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270231031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269192166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270206063 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270046438 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269132109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269579216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272192186 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27046239 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269989053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269463375 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270074976 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270747637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27140876 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270307915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271552684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270897971 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268344627 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270576777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272985935 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271196761 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268706814 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274276652 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271217312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269798037 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269707025 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270484867 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273720009 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273156621 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269791059 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274225304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273476172 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274178126 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273146249 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269546758 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272122624 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272459364 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269552815 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271027934 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273540286 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271947562 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271332047 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27261733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271715144 seconds)
  done (took 85.01689282 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270708633 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270761016 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269897167 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27135484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270187608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271355902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270806995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271969234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27222171 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269276156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273670712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272502893 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273707702 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27188597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272046501 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273664964 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272943479 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273075716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273527712 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276109462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271666994 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274919491 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27540532 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273202322 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274604773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276945262 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275569626 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273440057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275460245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274275631 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27442804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275601405 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275110736 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274590221 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274603406 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274771065 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274778265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276758318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277124833 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278635832 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276104067 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278979798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276046363 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275896519 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277095214 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276917591 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274622338 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274405728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276393521 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275162094 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279012934 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274142438 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276173945 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276092536 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275725495 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275159361 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273324147 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275272869 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27593054 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277442207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273209283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27563334 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27714485 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276319642 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276673721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276252122 seconds)
  done (took 85.294036435 seconds)
done (took 1755.591657904 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.438422214 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.397764115 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278080059 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.289282379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273703976 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.299097619 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.284458092 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.27257327 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.278763039 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.27893133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279938763 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.459753921 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.273551521 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.272303364 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.276926884 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377194952 seconds)
  done (took 26.206744244 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.308705866 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.281770456 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.400862818 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.294080787 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.307607621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.474853937 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.332838061 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.279135178 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.461113691 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.299486551 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.278899681 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.304775402 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.279972911 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.27889014 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.298538537 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.482276637 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.536902763 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.274716574 seconds)
  done (took 28.350515155 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.761661002 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.307865987 seconds)
  done (took 5.250702242 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.301656748 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.282974078 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.284080717 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280443764 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.271568417 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.287749696 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.281027282 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.280425194 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.269263868 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.434508199 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.28414221 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.290950454 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.305107766 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.28380936 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276983832 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.325190856 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.446130892 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.280308335 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.279351621 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287581382 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.283510169 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401298898 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323734304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.277813769 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.41800534 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.27342076 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306331181 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.289305218 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.424636229 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.282631639 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.281232993 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.28604976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.286893507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.181509289 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.759475479 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.288741783 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311043871 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.291360709 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.280982941 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.45563773 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.286316367 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.293831101 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.277806062 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.741661019 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.421348008 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.412188069 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.294553104 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.28378993 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.285949849 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.352158234 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.287276046 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.287092944 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.327738358 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.119550745 seconds)
  done (took 82.600950955 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.317119225 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.276255484 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458811593 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302921407 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.276484433 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.272978716 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.274876476 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.583716654 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.283115977 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276608346 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.575204625 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866762505 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293230954 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.326042928 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.123548795 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.337039008 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279935716 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.296719004 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.278951469 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.278676943 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848670328 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28136212 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.293563919 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.347149989 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.319020973 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814351242 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.274953674 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.277738877 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.296037345 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.279309722 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.819767215 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.301793682 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.332383655 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.278770654 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562205425 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.673865367 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639316773 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.277095498 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.32118602 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280648382 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.305911423 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800692649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656513193 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.277374274 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.278001819 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810542722 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.278030639 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.291651079 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.283579145 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534569991 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.284438587 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283298301 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.294880788 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.282159997 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.281902686 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.353816448 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367227689 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817076531 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280035936 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.280463102 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33142394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.280007666 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.287586271 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282090967 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.285565042 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662198282 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.481892118 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284675016 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66027747 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816190813 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.294493893 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889127393 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.302164945 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.301419095 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.466444826 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282899354 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.278436717 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828717256 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.299453252 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.277544061 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641297157 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.277778599 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.579205876 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30376341 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279293742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868218562 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.288279091 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.290836938 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.281295638 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.281814271 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299316909 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302542162 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.567666049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.300047944 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.285077134 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.284046933 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.324316634 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281321818 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.281734398 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.29062135 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888144048 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.305198766 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.283666974 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283438303 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28247746 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28045229 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.285649694 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284334205 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556425152 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.28592743 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.310723788 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286722536 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28142894 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.292527705 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359655266 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.284551732 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.614419316 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.28118644 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295522813 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.287295585 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29403918 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.315148444 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283754991 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.290107191 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.186532915 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.564315448 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303680451 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.283683756 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288617675 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300217159 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289331529 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28293564 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.320478258 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.285778854 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0928361 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307446506 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.292536407 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.286684412 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.297540182 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287824992 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.291209804 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289230629 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586980856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.569255868 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.462712215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288513334 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.284231307 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.082164342 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.322776466 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468577231 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.304046318 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285081336 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540889573 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.481727138 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289425062 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.284377612 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.288371257 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547965977 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.284604348 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599506266 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851241838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303168572 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286745491 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.098517441 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025335057 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.290117634 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.288653453 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.586123676 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.305642074 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.289602975 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.288567027 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.290199232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.286449177 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.293868269 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.294601176 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.286942949 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.286907637 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.613190734 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483909086 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.304120777 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.290169609 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814482805 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299470192 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288161171 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.290725806 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.284616228 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.28977079 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.357043351 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.290195767 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.288108406 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.290355267 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.292938778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840118922 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.28623652 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.292314743 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482475771 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007622324 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.304989169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290901511 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.303648636 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.187822975 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846182055 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.309579 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.621588733 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.297902004 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.332173886 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28688563 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366772271 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841827658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289240937 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.305421428 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967723079 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.303236382 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.709366268 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.288023706 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.291339433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922150409 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.305306716 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.290827898 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.298542673 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290282902 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58910078 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.292004788 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.320660871 seconds)
  done (took 488.269107395 seconds)
done (took 631.852089053 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.292626926 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.289623831 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.280389288 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.294316786 seconds)
  done (took 10.35119732 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300219836 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300909561 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.30014186 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.299389437 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.301107797 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.300734991 seconds)
  done (took 8.998775534 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.294278201 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.290219079 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.296881484 seconds)
  done (took 8.076854497 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.514723097 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.32247212 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.64390843 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.312021566 seconds)
  done (took 8.990988227 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.296590407 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.299367693 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.299471109 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.299111684 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.302057013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.303582459 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.300693128 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.300956802 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.303293526 seconds)
  done (took 12.896414727 seconds)
done (took 50.505638411 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.386045567 seconds)
    (2/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.947677076 seconds)
    (3/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.34417612 seconds)
    (4/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.397354891 seconds)
    (5/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.309094538 seconds)
    (6/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.30225706 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.522220359 seconds)
    (8/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.303375142 seconds)
    (9/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.30882123 seconds)
    (10/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.304216632 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.334718616 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.469080991 seconds)
    (13/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.049826081 seconds)
    (14/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.387599662 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.306662574 seconds)
    (16/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.277242759 seconds)
    (17/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.58498968 seconds)
    (18/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.448328971 seconds)
    (19/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.328050971 seconds)
    (20/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.487222751 seconds)
    (21/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.647432039 seconds)
    (22/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.450716919 seconds)
    (23/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.325763257 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.345308003 seconds)
    (25/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.35311592 seconds)
    (26/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.373940741 seconds)
    (27/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.326306026 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.30142562 seconds)
    (29/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.292817574 seconds)
    (30/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.312609446 seconds)
    (31/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.341513497 seconds)
    (32/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.282798008 seconds)
    (33/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.449104477 seconds)
    (34/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.299832838 seconds)
    (35/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.395566044 seconds)
    (36/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997374801 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.401811109 seconds)
    (38/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.306325671 seconds)
    (39/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.39470213 seconds)
    (40/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.948511997 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.322087269 seconds)
    (42/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.398147022 seconds)
    (43/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.358357724 seconds)
    (44/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.065678031 seconds)
    (45/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.398009027 seconds)
    (46/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.281434483 seconds)
    (47/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.320503318 seconds)
    (48/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.348896666 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.402795233 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.30198115 seconds)
    (51/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.127759436 seconds)
    (52/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.292845842 seconds)
    (53/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.197689575 seconds)
    (54/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.328053029 seconds)
    (55/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.451684623 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.367014774 seconds)
    (57/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.398978554 seconds)
    (58/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.315045721 seconds)
    (59/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.702317334 seconds)
    (60/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.452505018 seconds)
    (61/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.389408341 seconds)
    (62/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.322710699 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.335884206 seconds)
    (64/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.42447405 seconds)
    (65/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.319293843 seconds)
    (66/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.321064443 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.948742997 seconds)
    (68/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.49305968 seconds)
    (69/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.335749492 seconds)
    (70/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.310332761 seconds)
    (71/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.310603756 seconds)
    (72/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.168104412 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.4286328 seconds)
    (74/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.067515514 seconds)
    (75/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.351860692 seconds)
    (76/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.022457071 seconds)
    (77/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.383123671 seconds)
    (78/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.337840879 seconds)
    (79/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.314354148 seconds)
    (80/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.310461208 seconds)
    (81/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.380721693 seconds)
    (82/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.305080468 seconds)
    (83/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.345402746 seconds)
    (84/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.320169504 seconds)
    (85/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.315876466 seconds)
    (86/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.513248951 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.397553453 seconds)
    (88/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.352785701 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.318560336 seconds)
    (90/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.619450289 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.338760331 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.37712123 seconds)
    (93/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.492417523 seconds)
    (94/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.380850988 seconds)
    (95/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.055309075 seconds)
    (96/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.412524384 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.42583845 seconds)
    (98/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.488265676 seconds)
    (99/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.358078239 seconds)
    (100/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.461269294 seconds)
    (101/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.405696404 seconds)
    (102/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.318177879 seconds)
    (103/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.487223915 seconds)
    (104/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.089433519 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.347386465 seconds)
    (106/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.435672065 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.393726688 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.333727474 seconds)
    (109/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.316877295 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.146255928 seconds)
    (111/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.37596687 seconds)
    (112/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.455436476 seconds)
    (113/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.536221787 seconds)
    (114/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.307344567 seconds)
    (115/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.385721051 seconds)
    (116/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.303232412 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.401547454 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.315870435 seconds)
    (119/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.308938422 seconds)
    (120/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.377259981 seconds)
    (121/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.355310406 seconds)
    (122/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.434782579 seconds)
    (123/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.449156392 seconds)
    (124/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.306311157 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.364322635 seconds)
    (126/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.31383565 seconds)
    (127/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304641417 seconds)
    (128/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.309082909 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.326884056 seconds)
    (130/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.318411099 seconds)
    (131/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.197257384 seconds)
    (132/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.446435357 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.487813243 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.353593573 seconds)
    (135/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.314424333 seconds)
    (136/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.079485679 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.403487746 seconds)
    (138/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.286616257 seconds)
    (139/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.959658256 seconds)
    (140/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.313293636 seconds)
    (141/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.297168914 seconds)
    (142/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.396176502 seconds)
    (143/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.539364165 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.314541369 seconds)
    (145/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.290240292 seconds)
    (146/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.312094199 seconds)
    (147/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.320416389 seconds)
    (148/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.288355152 seconds)
    (149/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.334384462 seconds)
    (150/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.028631152 seconds)
    (151/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.380719144 seconds)
    (152/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.294704262 seconds)
    (153/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.952164923 seconds)
    (154/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.495234336 seconds)
    (155/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.453329298 seconds)
    (156/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.196077527 seconds)
    (157/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.453066632 seconds)
    (158/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.304368058 seconds)
    (159/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.340394596 seconds)
    (160/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.491219745 seconds)
    (161/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.342378905 seconds)
    (162/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.452854408 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.332602563 seconds)
    (164/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.463827934 seconds)
    (165/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.35236063 seconds)
    (166/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.330789319 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.400595686 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.061836173 seconds)
    (169/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.539605321 seconds)
    (170/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.959739008 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.416150511 seconds)
    (172/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.424150981 seconds)
    (173/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.427262788 seconds)
    (174/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.4759208 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.308270305 seconds)
    (176/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.316960686 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.37499446 seconds)
    (178/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.363640172 seconds)
    (179/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.389917853 seconds)
    (180/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.323856115 seconds)
    (181/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.521490053 seconds)
    (182/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.378881978 seconds)
    (183/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.534728049 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.387005673 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.376282787 seconds)
    (186/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.95595658 seconds)
    (187/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.458351114 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.490917412 seconds)
    (189/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.382948912 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.344083311 seconds)
    (191/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.492766384 seconds)
    (192/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.335341832 seconds)
    (193/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.451307665 seconds)
    (194/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.50956965 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.341297081 seconds)
    (196/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.406009557 seconds)
    (197/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.391894537 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.344689136 seconds)
    (199/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.382940856 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.37520527 seconds)
    (201/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.327710915 seconds)
    (202/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.297595666 seconds)
    (203/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.076623448 seconds)
    (204/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.444855259 seconds)
    (205/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.44102426 seconds)
    (206/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.330593851 seconds)
    (207/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.406720569 seconds)
    (208/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.471492075 seconds)
    (209/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.39676634 seconds)
    (210/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.023826391 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.331400554 seconds)
    (212/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.315926008 seconds)
    (213/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.397483073 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.489142866 seconds)
    (215/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.519993673 seconds)
    (216/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.457747612 seconds)
    (217/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.705398861 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.379285787 seconds)
    (219/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.327577765 seconds)
    (220/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.9671213 seconds)
    (221/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.321992921 seconds)
    (222/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.311655073 seconds)
    (223/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.322634049 seconds)
    (224/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.415146672 seconds)
  done (took 362.200493838 seconds)
done (took 363.395700937 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364232092 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.494888975 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.318063073 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.318543246 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362193161 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.318660257 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.347997151 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.32678431 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.323110831 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.320908725 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.319262185 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.322343453 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.330592476 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.352147405 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.431254276 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.325004366 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.318360057 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321906186 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.360833666 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379761043 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364424116 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36338454 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.329366742 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.318752823 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365883346 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366484836 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.325634943 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309151511 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.31846872 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.359965304 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.314566296 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.321356971 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.367715736 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371258345 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362655433 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.322084158 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364512951 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.496728944 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.355772657 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.355464036 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325113712 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36910842 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.333051557 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.331366522 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.3709694 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.333298613 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367981862 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.44341757 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.310887917 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.30683261 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364285916 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.381601926 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.324764915 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.313256543 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.308721029 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.458622838 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.324697688 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370662364 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.32409223 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366691427 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.434742671 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371111534 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.383679854 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371507665 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.321483136 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.334911752 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.323578655 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383155907 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.321274956 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36725946 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365480748 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.328661731 seconds)
done (took 106.562556259 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.448955496 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.320891821 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.480418317 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.323881624 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.491729979 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469246657 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.318269891 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.319327143 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320898805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.18782454 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.321032429 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.320978912 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.323645306 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319367251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.457008602 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.325547894 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.318079626 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.049656826 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.320306362 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.465561906 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.312123032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321074147 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320852795 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.164050007 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.320482136 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.317142334 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.466967314 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.320721025 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.045306607 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.315773235 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.315800615 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.059019177 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.467857493 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.337684088 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.331140319 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332227937 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.494016311 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.339915422 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.453474791 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454342931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.484801978 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360004093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.317962112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.325496541 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.322800974 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.327529745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.322709685 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351173009 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.325221079 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.324743902 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.085606146 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.334695679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.325310253 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323135242 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322853534 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.355693802 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.322941182 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.327225979 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.470858234 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324824339 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.452393168 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.154008657 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.153026568 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.326028111 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.324006754 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.323736026 seconds)
  done (took 107.999983316 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.392598571 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.401752852 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.445548187 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.340846667 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377798359 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.451413521 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.341377616 seconds)
  done (took 10.971836653 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.333051163 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.330233424 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376676001 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37478963 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328017557 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.540024871 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326961949 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.339656749 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.322042977 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.405346046 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.326653008 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328437564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.334178217 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.322650261 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375675096 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.340858618 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.445333326 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.329944133 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326645885 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.483871322 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326354558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.33695479 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412858646 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.338944517 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.329987877 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.337583797 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.298259425 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328300659 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325228813 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.328764596 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327945179 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.437282967 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32959028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.328288425 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326347314 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.492113099 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.328097913 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327405381 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.332776637 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.33090292 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.331757288 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.332634311 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.33042187 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.329156514 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.329295619 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.354328014 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.329756351 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329516448 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.330629231 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331705033 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.407149319 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330822196 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.329398853 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.329279919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.410992412 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337820359 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.330219613 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.328128003 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333462766 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327364838 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486679793 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379123168 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.327822183 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37989435 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333908183 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331635585 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.330861523 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.331493195 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425299428 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.333099615 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379471192 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.327968076 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553627345 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355136239 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.333285731 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.335824047 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.33467173 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332329973 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.328614776 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336339752 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.329220059 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.334413967 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337284749 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329476127 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326150206 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.515002509 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490433319 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.32815849 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.345980855 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.34220855 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.330802005 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408899921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.332187081 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.32979385 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384445482 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.445731954 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420436247 seconds)
  done (took 137.841253507 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346721127 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.3467551 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.336280832 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.358939241 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.33416553 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.331774411 seconds)
  done (took 9.279907101 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.334421366 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.33473952 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.333051833 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.3342554 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334885466 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.33208758 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.336219307 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334160711 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338669172 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335591475 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.333507335 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335092602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334709167 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.336857681 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.33260015 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335218838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.332704196 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331689294 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.337208279 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334034167 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.336568185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.337155815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336271728 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34037187 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.339411502 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.335741509 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357501531 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334836502 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.336809414 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343884638 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.355296295 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.337225161 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338756147 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.345208352 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.34270424 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3388251 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342963638 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.336001851 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334996104 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.33823597 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.338230876 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337757861 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.339543614 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.337745921 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.340100692 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.344958418 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.344084033 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359062508 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.335244096 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338311591 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.338192835 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.337300116 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.340011217 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.337706529 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.340602556 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357516762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.344830459 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.338877928 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.335536509 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.338450154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.341684802 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.339163313 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340830512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.342156081 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336436821 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.340071329 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.342525659 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34298437 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339351822 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.339895247 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.340643541 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.338672375 seconds)
  done (took 98.640697675 seconds)
done (took 365.945582022 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.34164199 seconds)
  done (took 3.570673558 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.476085555 seconds)
  done (took 3.710383389 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.652302516 seconds)
  done (took 23.892069433 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.392778471 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.434753771 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.329843012 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.334981777 seconds)
  done (took 10.724485013 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.667975623 seconds)
  done (took 3.902114038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.330524241 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.35850115 seconds)
  done (took 5.920414619 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.676724752 seconds)
  done (took 3.909757217 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.873372111 seconds)
  done (took 4.11417627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.346133731 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.345347451 seconds)
  done (took 5.931176362 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.319169816 seconds)
  done (took 3.550877762 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.624276044 seconds)
  done (took 38.857142152 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.342636646 seconds)
  done (took 3.575968648 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.366497377 seconds)
  done (took 3.599459606 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.170658379 seconds)
  done (took 6.402027067 seconds)
done (took 122.892152689 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.333791034 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.331979201 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.329564908 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.331160076 seconds)
  done (took 10.556363277 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.391110032 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393833026 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.393713963 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393457232 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390715486 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394130908 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.367724797 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379714464 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.391002466 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.394411596 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396397507 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.391533378 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.394153105 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.3696456 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.394199711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397175272 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.394061441 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.394946082 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36988634 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395857088 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342288154 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39279642 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.391027942 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.34196543 seconds)
  done (took 34.488998872 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.835568196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411647017 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.496451579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.394308525 seconds)
  done (took 7.371969969 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419905595 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.423791088 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434378447 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477108441 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.486319852 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433687559 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.370561702 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.366633671 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.350048477 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421650521 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.471840167 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.41173363 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50377895 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.341266342 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.553688732 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.345164936 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.347981323 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422916828 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.474267981 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.50185272 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.342446914 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420566583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.426069145 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.414713323 seconds)
  done (took 35.397053151 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.351865003 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.358524078 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.344160078 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358978757 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.343204286 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.345624633 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.345527171 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.350560101 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.342100508 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.345150013 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.344083608 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.355775275 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.348262551 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.343064442 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.349567227 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345579478 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.349114697 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.346513299 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.345051275 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.349032185 seconds)
  done (took 28.1992213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.335718831 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.337069446 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.688510157 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.596576194 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.339207531 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.339665477 seconds)
  done (took 13.872148327 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.422017443 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.58529701 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341660901 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.731127436 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.810482759 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.348213933 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.346712557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.612927896 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.955021577 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943015894 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410079955 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.424305352 seconds)
  done (took 20.170254588 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.34323323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.338880384 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.359000475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.35703318 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.407721645 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.36453177 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.35229304 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.336916703 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407144117 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.422474576 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.360828655 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406614985 seconds)
  done (took 21.695805514 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434456614 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340828535 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35193544 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361341137 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340236609 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188421201 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392006179 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078227587 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.362385272 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618341259 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350176413 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43781032 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601069791 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361588702 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34487463 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.331596848 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573011454 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879807774 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343869838 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341601764 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377405426 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342325212 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348745785 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576261622 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349072645 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347426929 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.60434643 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344798267 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66206256 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356324795 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357458059 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346539015 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619961044 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046550613 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466606805 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57757518 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352612935 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367096824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.344761088 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.362567637 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344466295 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343956329 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354283409 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344336284 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345173424 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358335921 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145856679 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.371147322 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.344804046 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348206344 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638306658 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443272407 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.351023334 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347449637 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360826557 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343818603 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.353286034 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448815124 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926776037 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363506682 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362684236 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.349974462 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347765392 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346274572 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999220959 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.353036514 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.351168062 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353378374 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346859554 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343715836 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360811199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349247021 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.379663509 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349884306 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175129264 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359548296 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349446396 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933522153 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361600714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.353567555 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583406177 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347206145 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348851557 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.349951931 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349010208 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1113746 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356530461 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.33176683 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3700663 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140450621 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600695766 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371695259 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381932848 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574920683 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.333983841 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348020799 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.351348987 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348625057 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370421489 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150565976 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367942474 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.353328742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611147132 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.563835259 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366393521 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.353228631 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886809639 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375246597 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.368965214 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361830158 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589517142 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.988103388 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363926497 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351131009 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368153572 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351608954 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149343534 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363017738 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.454877386 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359261025 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646414133 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.202203886 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351347524 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418104651 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357874344 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352158923 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354138529 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354160789 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353014245 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.582308435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380928646 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.366826347 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.352077727 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352398816 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.348003529 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346304082 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.35254339 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579620296 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353726646 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632582993 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352116244 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351086139 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348331766 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.575743181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.352436338 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.690283568 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616500059 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360003248 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362629675 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37005272 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372301555 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459568309 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376180391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.36427002 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615449858 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.355175607 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.358534317 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355666294 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353843674 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362411915 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.363028083 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363037577 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005340358 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354704806 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36025911 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249051239 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.368476276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421350817 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362637869 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590491025 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.362651494 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36269258 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.359943082 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.353867656 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579418293 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367551507 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.357822877 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430725 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.893919451 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010137061 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366395324 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.355266026 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.350364761 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.350113503 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353427254 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355227384 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350282342 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58540346 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373882746 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376517011 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99155625 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352575372 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351455056 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.359132529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368797312 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.358984202 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353849568 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.354686522 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352689777 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382075991 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.37011994 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499740638 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.370294583 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356690613 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.871223193 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362122626 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358380288 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356913619 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391026028 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356190999 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210252877 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622118286 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359580641 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661316519 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391136175 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.372286251 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.356099479 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369139684 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363691221 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.376770264 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366293084 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.367049113 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358615475 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357966659 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935846104 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163742382 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937612342 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358998962 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.372855415 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363835444 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115225643 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372763802 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359389811 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616983702 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158810139 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381871962 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903379308 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.388444075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187472791 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649912504 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590822132 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357920503 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.368634137 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652290335 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572070454 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396053473 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370739967 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361900044 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.341387315 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963383102 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377323105 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438064837 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113290428 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382785976 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362262302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.44337918 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360788284 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806600452 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380198283 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361671452 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371764879 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376149395 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234557232 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365725658 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361907573 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017175336 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363751519 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.905121426 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382432096 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599390957 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.378540154 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.368592073 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.359532945 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.383115724 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.622328287 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659970509 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365530595 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368648471 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948679401 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.236247685 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.369880622 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364547487 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166285401 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369020223 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682927288 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.3758015 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376089228 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364441776 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36685335 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366502275 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.360609472 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373208914 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364162464 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896389994 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.364055112 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365364332 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394746813 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366000394 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622007082 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.378220862 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.004174953 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59629372 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377767995 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386372794 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.370381739 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375307553 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.349789875 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366284323 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365176062 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369669581 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588486085 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36518158 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.351098119 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398047162 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576483714 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364498845 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375538901 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629998816 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.364919185 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.388102207 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179410031 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395908535 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37707381 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363332328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377080869 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383928993 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436206483 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607129886 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.383283896 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.377398679 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814533606 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39820443 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366478278 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.379773889 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465141963 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37513261 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.377731567 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.135704367 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005133032 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205069217 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006477819 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657474969 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36590926 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37955509 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369127518 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529793413 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368724334 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639798498 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404896776 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.368375864 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388523939 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377740305 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378429767 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584599843 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646230589 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36904517 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376226849 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371676154 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.369912906 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379294391 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.580909291 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909263949 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972832647 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368895182 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380871396 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176047799 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665604242 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366113097 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368576434 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36966359 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.376365084 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.374535829 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.401719574 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382299828 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512690901 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662654785 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086488763 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.398414603 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.397189559 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.887921622 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370100039 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625507302 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367637441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610618162 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014615101 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12989353 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635401586 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443722643 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610961513 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.373808601 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532814863 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.369026552 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368471107 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369070999 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370556797 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.365921527 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379149978 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01703513 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637761631 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.375680454 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.367456553 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399702527 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.380407246 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598220224 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150955076 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595780485 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385475775 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374476651 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37150332 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015647152 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661466825 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377669911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.370114423 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637292172 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374655644 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395748063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.890277016 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.369223966 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988184818 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.34587686 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396272912 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385501823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139819301 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01685071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.369037504 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932218262 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373302297 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373928676 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667717932 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.378905448 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385642527 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653451374 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.381219935 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384235727 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61840741 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.014859183 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213247394 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.373978904 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38373567 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.376165012 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375096928 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39104033 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372826005 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375920788 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.841255476 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397904997 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37600218 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384250344 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.377211426 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386915889 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.376116861 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37592944 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.380282891 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.387300535 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.387804988 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39247092 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475247606 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973457907 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394223778 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.045780677 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.705098073 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63414974 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384042897 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.358908671 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.381103662 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380176405 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376654818 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374604545 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376705101 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973382958 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.38725688 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.386773359 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382028428 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.377828932 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587601676 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395167786 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621219472 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391909526 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389028981 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.363236908 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377449 seconds)
  done (took 973.788199522 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391384067 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.41133428 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.423491009 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.471573159 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411813827 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.511955777 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.426645849 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417694187 seconds)
  done (took 20.740781991 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.392864701 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.389917745 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.38197662 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.391458298 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.385669873 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.887792658 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.401803289 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.390173967 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.397429621 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.393802962 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.378533385 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.365853412 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.386727727 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.394784986 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.376765144 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.389567398 seconds)
  done (took 32.991476821 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.633167157 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.616299102 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.863213271 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.422610383 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.401819924 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.375488292 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.740272375 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.394200888 seconds)
  done (took 27.719710263 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.38962803 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.388437725 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.389337744 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.387204766 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.38824298 seconds)
  done (took 8.213013637 seconds)
done (took 1236.44030067 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.384956278 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.383559304 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.38055298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385023894 seconds)
  done (took 6.804351159 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.368658683 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.362546708 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.366149213 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.376538777 seconds)
  done (took 9.746166709 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157213637 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098892601 seconds)
  done (took 5.529207509 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.8877784 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.883461958 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.888341511 seconds)
  done (took 6.933006472 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.683786532 seconds)
  done (took 2.960901058 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.303496935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.378669529 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.062325349 seconds)
  done (took 8.020959248 seconds)
done (took 41.264292697 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.385657027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.633916367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.537211335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.38751184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.541368986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.540817215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.149378242 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385634755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.37928636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.378708218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.387884231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.542363658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.2043457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.638121695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.204505158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.637719796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.544344306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.383792737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.391782781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391723472 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.146236199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397023912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393072834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380031661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.561620277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.528592406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.387694488 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.636460245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38741051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.390970675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.52569572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.397928848 seconds)
  done (took 83.053045839 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.384092416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.397690509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.379943619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400276794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390837248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383515185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.403600016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.383929313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.388634074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.382843552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380741361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.386098208 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.380462883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.404552005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379790192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.407972281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.379797957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377035042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.390315879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377423985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.403911197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.382806108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383889053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.383589013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.384072278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.401099775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412119624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.383868114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.387474136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402886996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.387874593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.403904151 seconds)
  done (took 77.760832809 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391747012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391213962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.393795097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.38435495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.385234347 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391773211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.386049423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.396842271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394072928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.395727292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382279402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.383812061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.387944842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.386324302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405413566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.38546775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.406817442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397662709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395506476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.385653224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40249202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.385164789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.398164697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.387834911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.389350379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.387043034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.38436722 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.381990973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.385864174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.390134816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.386786174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.385027724 seconds)
  done (took 77.774034887 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.675463729 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.398869598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.399350666 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.393328124 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.398306698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.397787711 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.393127845 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.675333959 seconds)
  done (took 15.009534048 seconds)
done (took 254.870355901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.38970902 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.941246178 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.432847967 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.392242398 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.418204003 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416891348 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.62546808 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431311856 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.629385781 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.406083808 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.431777289 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.390387782 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.258509405 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.546760731 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.28615587 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.387901872 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.362491995 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.391186541 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.022379622 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.678473962 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.417189654 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.398067697 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.269203341 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.389401625 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.37419713 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.484713308 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502450529 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.620147157 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.56011213 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.482912983 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.962140803 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.388422885 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.393698734 seconds)
  done (took 65.367563475 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.397172262 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.514282639 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.395861086 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.398520516 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.51636534 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.400061602 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.395316361 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.397010106 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.39862752 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.396994751 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.397304641 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.400289489 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.403662011 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.444675465 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.522772095 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.417460738 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.398805774 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.512798295 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.40060965 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.390875557 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.443334538 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.400047129 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.405366393 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.44669653 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.401038735 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.402627258 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.512374393 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.404398233 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.400611915 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.51819206 seconds)
  done (took 44.123342431 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.399595074 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.042798741 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.187077763 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.404467757 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.397430672 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.403947329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.717063596 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.395402534 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.404438819 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.402740678 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.926475244 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399090819 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435734262 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.209984958 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.400189026 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.401595604 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398887236 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.401109349 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.03958751 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407924645 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.736436786 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.39775259 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.717418487 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.410091406 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.425436938 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400917554 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.40331402 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.29171591 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.404001043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.926545811 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.266991767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.708353163 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.22375524 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.193915423 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.257872843 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.406722225 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.403673365 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.932328091 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.408151368 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.406643574 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.712442288 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.406783725 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.19753863 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.130697698 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.423691695 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.403134605 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.299510172 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.920473764 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.665581816 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41422704 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.224241204 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.407461611 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.408155141 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.407013862 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.67995847 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.403894408 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.407184286 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.36477243 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.409249723 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.715309351 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411641847 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.407603105 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.048902233 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.404100494 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.053921428 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.403425673 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41604821 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.425518194 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.20868217 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.409610382 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.140373098 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.42336236 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.405787589 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.932711892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.046832025 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.362904711 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.406228732 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061222653 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.258175404 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.727794565 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.417336947 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.267927124 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.735918251 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416273626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.41066471 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.408855614 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.406633183 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483201455 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.729290541 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.077254798 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.139490616 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.378438575 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.731837085 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.416629538 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.405702176 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.364640787 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.404176826 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.410039203 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.208355267 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.153790859 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.424321704 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.415595237 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.151992514 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.427555576 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.743414318 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.415341299 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.226078615 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.415858766 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484907644 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.408918955 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.420942405 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.430972057 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.740210932 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.415188367 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.408039636 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.134153078 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.962348783 seconds)
  done (took 198.939736685 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.406815842 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.407412196 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.404914341 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.423957836 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.403471249 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.413692484 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.402578078 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.404048937 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.41127415 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.4028949 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.404953095 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.413234441 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.410707962 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.40338325 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.403416026 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.406410076 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.410785116 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.406441579 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.407021988 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.405317744 seconds)
  done (took 45.449450109 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.412390827 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.057940133 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.015989042 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.413325581 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.408833991 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.413614401 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.476597714 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.405503853 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.409866071 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.748738749 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.600247099 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.424648943 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.41048968 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.412887024 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.01426494 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.405681585 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.746955397 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.057910717 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.416943905 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.04670239 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399965096 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.415048724 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.413295532 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.062221153 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.74847711 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.736082089 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.481949789 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.033453468 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.410212546 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.413283595 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037608774 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.41068092 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417436432 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035494329 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.427309569 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.425563203 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.413576954 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.481146708 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.484294701 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.761413566 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.110237984 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.740971262 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.432149991 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.609229205 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.417641836 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407047101 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.034433368 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.429182279 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404787871 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.411466226 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.419641607 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.019636032 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.435452325 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.019062248 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.4340716 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.416332714 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063848247 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.019197608 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.037870678 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614653573 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.432963247 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.74611533 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.419201844 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066777022 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.434946956 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.417285214 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.416471118 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.611190095 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.086132263 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.745111317 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.771758585 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.770266338 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.419143039 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.477137676 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.427833151 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.827577991 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.483144824 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.868119299 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.773925199 seconds)
  done (took 130.278586459 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.712657231 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532467094 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.859359087 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.057441974 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.409180222 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.547146844 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.530356718 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.688593759 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.411604849 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.486882757 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.117936348 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.514994613 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.177487869 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.491424579 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.517691718 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570924484 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.846364512 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.409255749 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.093573783 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.101444748 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.408898863 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.529614702 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.001866219 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.632107121 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.411031009 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.95872237 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.401484796 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.122183235 seconds)
  done (took 54.845224329 seconds)
done (took 540.286874167 seconds)
SAVING RESULT...
DONE!
