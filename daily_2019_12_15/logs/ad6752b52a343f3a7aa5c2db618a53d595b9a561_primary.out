cset: moving following pidspec: 6434
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.381826608 seconds)
loading group "string"... done (took 0.577704797 seconds)
loading group "linalg"... done (took 7.275734775 seconds)
loading group "parallel"... done (took 0.158588757 seconds)
loading group "find"... done (took 1.172231977 seconds)
loading group "tuple"... done (took 1.794568334 seconds)
loading group "dates"... done (took 1.257062383 seconds)
loading group "micro"... done (took 0.223504192 seconds)
loading group "io"... done (took 1.01487806 seconds)
loading group "scalar"... done (took 38.112032633 seconds)
loading group "sparse"... done (took 12.127225384 seconds)
loading group "broadcast"... done (took 0.938331538 seconds)
loading group "union"... done (took 12.254550618 seconds)
loading group "simd"... done (took 4.447930229 seconds)
loading group "random"... done (took 9.125941482 seconds)
loading group "problem"... done (took 1.8396515 seconds)
loading group "array"... done (took 20.909350936 seconds)
loading group "misc"... done (took 1.689199576 seconds)
loading group "sort"... done (took 3.351695537 seconds)
loading group "collection"... done (took 17.344860562 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522727824 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124691353 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11869969 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119838941 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14777208 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112398123 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123586246 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085975122 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.787164652 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149253195 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116396418 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428562811 seconds)
done (took 5.134056857 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174521318 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0817757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082715128 seconds)
  done (took 1.282329295 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065175887 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122184817 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066325181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066853118 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067396303 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066162049 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066486485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065990274 seconds)
  done (took 1.639232924 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072646529 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068483737 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066075835 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06800685 seconds)
  done (took 1.394785168 seconds)
done (took 5.684232056 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.787755299 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203403716 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18706565 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412343894 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130116824 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158815818 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642774044 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327060161 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187876302 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080098982 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108087713 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328279071 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110429805 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645077598 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074651321 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090339823 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135612843 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.411665958 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067054387 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082304735 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088191247 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12793592 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086324991 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073915766 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145402828 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067361999 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136488004 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080102295 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066164087 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211973697 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171889428 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652694392 seconds)
  done (took 10.237746389 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095884518 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096237122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068441942 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122655203 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095852198 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069093964 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070417392 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066831195 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085987882 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127463265 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088553979 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100890108 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065160483 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068721323 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08445038 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202837146 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079166428 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081442268 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070218575 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074854103 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104624662 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077750396 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076656854 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076459617 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129197774 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179916352 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096348171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097272364 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067146902 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079229299 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114661889 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125578139 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064967789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065769561 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12349882 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093695029 seconds)
  done (took 4.548367039 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002234509 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143075703 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089962758 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134406284 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063945434 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109331726 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064728056 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080090988 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209569191 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.380470986 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592537552 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110725773 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103548248 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066866839 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0684753 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066043243 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.483495778 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094939613 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106954372 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08057457 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070017961 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068635056 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356108562 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069006276 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063209493 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067953104 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056658702 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124889637 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067339104 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951332 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127923141 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066876892 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100605109 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166829099 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091216333 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141699159 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066591684 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.193647124 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153467543 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070441986 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066103566 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083472417 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102922098 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113342808 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065100228 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0665935 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161865074 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087156305 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063934981 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079823111 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.634105597 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095007985 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153400425 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076075139 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064472287 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254764886 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088225164 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069013243 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064168766 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190546876 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135768426 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068219792 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067053969 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068121854 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068938668 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367681507 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068364855 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.901896664 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070313272 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078451204 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071806254 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069008932 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072724284 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072359605 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087852925 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063868887 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066171374 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075336631 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065559358 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066255724 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066178646 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082990758 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.378606627 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06673583 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068109026 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06447729 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089492158 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096456326 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068685977 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066295778 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09976518 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067863365 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066020396 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106527083 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066579966 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082692801 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068908668 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11288412 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068709956 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193190599 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06510487 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096033874 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069000109 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098370806 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081368299 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067540372 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.417969489 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067997424 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065130511 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06775701 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06483312 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067912474 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065641681 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063724491 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078528353 seconds)
  done (took 21.023214316 seconds)
done (took 37.93023771 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236816149 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077233051 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077152774 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077636626 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073660802 seconds)
  done (took 1.751176042 seconds)
done (took 2.940446485 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123183015 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099340457 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064761842 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096697995 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064013075 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101280506 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101428742 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081092749 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100435581 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064529653 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097191438 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063694982 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06413921 seconds)
  done (took 2.329431863 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083206091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084007516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071277702 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083649568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06539514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084856231 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08312503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09200478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083084582 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073764991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063366587 seconds)
  done (took 2.048431575 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08247153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086947106 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070068089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082442693 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063737445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08173931 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081662371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085886249 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082149793 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074317226 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063384156 seconds)
  done (took 2.032630115 seconds)
done (took 7.585843775 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076498283 seconds)
  done (took 1.245649575 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591208373 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.074034341 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081494471 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111011982 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191073517 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118787001 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272921868 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086393329 seconds)
  done (took 8.879963813 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088524419 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083533217 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075004157 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073764396 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071740126 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070509597 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073884267 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070072466 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071606859 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070123846 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071183002 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068609931 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072324213 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069066478 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071585356 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069585486 seconds)
  done (took 2.414818997 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09346518 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093132029 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076122951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077088661 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073994401 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072961679 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074446474 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072861382 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070232504 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071651136 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074020092 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073688134 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071336783 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065179394 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074040258 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074517447 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070506462 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073363175 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074221908 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075446449 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077129482 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066070298 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07294667 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075499809 seconds)
  done (took 3.0769828 seconds)
done (took 16.79623835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113645634 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070854563 seconds)
  done (took 1.363246262 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082233921 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084839835 seconds)
  done (took 1.355144839 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08158716 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064745795 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091394634 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078363021 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066041546 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065297902 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088256389 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065883352 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065588684 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065479188 seconds)
  done (took 1.918398929 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067454832 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077419834 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069212096 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081076956 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072915183 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063962757 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072001742 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067182666 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076742612 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062780826 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071014043 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08214553 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070703212 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084524288 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071442006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068273437 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070417131 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066715805 seconds)
  done (took 2.485879301 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06581552 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065923983 seconds)
  done (took 1.326776102 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066348764 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063488522 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066750138 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065718754 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063409366 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062069042 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062671636 seconds)
  done (took 1.642688542 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384357137 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113166472 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319056325 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07308986 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084057423 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263067184 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067031125 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072258994 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072545845 seconds)
  done (took 2.688938196 seconds)
done (took 13.975646788 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079193796 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088296796 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099078255 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382210351 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09216158 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06617047 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113675392 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187575641 seconds)
done (took 2.314010855 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21338933 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640235157 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404582926 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211315563 seconds)
  done (took 2.446718987 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343022603 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089203779 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059737963 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068197726 seconds)
  done (took 1.76320163 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065925056 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068639463 seconds)
  done (took 1.331914906 seconds)
done (took 6.957131841 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067314394 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085968445 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06517801 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0669593 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063476575 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066013079 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062917063 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063201141 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065854015 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065774982 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065884386 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065599975 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065518187 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065573586 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063468261 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063305088 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065700119 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063050453 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063424885 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063246375 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063175922 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065844007 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062908194 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063036349 seconds)
  done (took 2.802195155 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085311327 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066832122 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071234133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070629708 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069425657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070567959 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070639156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065662382 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070557707 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067876566 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069173586 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068991274 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068006383 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069163089 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0682624 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069447806 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070590754 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065680143 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068289555 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068896763 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070439166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065660865 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068715034 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070516627 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068934457 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070634967 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068211522 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06585905 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071274107 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068719493 seconds)
  done (took 3.293166714 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069948136 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063802825 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063620742 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070684503 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063623211 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06390363 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062495026 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063714069 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064010385 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063098752 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064899 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06292599 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063083804 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064141351 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064084186 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067141702 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079371725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06339453 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063570024 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063519814 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066993066 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063091801 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063185432 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063474857 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063074219 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062623523 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063719171 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063154057 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063665105 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063518067 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066534983 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06673776 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063177362 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070039504 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067242353 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063360239 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067542083 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062761589 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063460932 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062858971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062885685 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062904923 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063178827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069974143 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062939781 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064549968 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063095731 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064519063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064039541 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065920897 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063388715 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06352454 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.177644632 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064583802 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067750306 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062865891 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063599004 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062438529 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063789825 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062528385 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062242098 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062435305 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065412225 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063211685 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07781655 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069746915 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062756529 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064691821 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063682844 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065518633 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064147041 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076598434 seconds)
  done (took 5.996767077 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089452916 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086719761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064528856 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065160079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060887666 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063435036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069163853 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063231626 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064780202 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081338262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063620647 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064705784 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064533707 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066617203 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063610874 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064414289 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071809527 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060824231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063443267 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066762232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06361659 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069132572 seconds)
  done (took 2.716281472 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156253842 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070623154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105330895 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075398118 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070452816 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074421784 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069590129 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069449277 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069612662 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066913204 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066891495 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069180708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069418697 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066991602 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067154453 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067113516 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069405564 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06647871 seconds)
  done (took 2.58918419 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076722758 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064936225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08629061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065885055 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065395799 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067423021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069713931 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073503716 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067464168 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065286679 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073542678 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068318865 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067641187 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065715896 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067794404 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065320717 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067355994 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065239546 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073820451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069770745 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069585996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073373901 seconds)
  done (took 2.749191528 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079970109 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067740613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081654648 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068542743 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061969343 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06346381 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069809712 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066148425 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069709546 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067531087 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065124239 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063305164 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068210966 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064871336 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068273652 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065182266 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067250239 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064714072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066963354 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060869025 seconds)
  done (took 2.567095521 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087680441 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069194551 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067859211 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074193506 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067344376 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067038303 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074552967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06694914 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066886635 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088006441 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066857297 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066929856 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074849585 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071654801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066510454 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073989978 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074296373 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074073411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066406004 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066599958 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088939832 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066996247 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074185547 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066843296 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066968257 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066846733 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066457376 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071802667 seconds)
  done (took 3.218064483 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067623268 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065573736 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063420794 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063036755 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062885753 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062913464 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063130593 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063098046 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065511422 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062988315 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065835332 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065508341 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065599194 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065024845 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065547619 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065701888 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066229329 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062958093 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063016659 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063085763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065573493 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065485661 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065619138 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062985786 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063254187 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065435976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063054737 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063406806 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065635477 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062914629 seconds)
  done (took 3.15276657 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077743921 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074626408 seconds)
  done (took 1.374713457 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063631042 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079082658 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063054042 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069612601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069547798 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066939238 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073007627 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069356917 seconds)
  done (took 1.769889172 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084602762 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079410139 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069127528 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080257644 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076295408 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084142238 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136304233 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066662997 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073036721 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064370193 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080080703 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065119175 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072597428 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066073789 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071772474 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072884656 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065469994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073192119 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06846561 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06470023 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066900601 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074419253 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06865491 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061330767 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06755437 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087978253 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077036971 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06538264 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068478353 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073425547 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071236186 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060015457 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065339209 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065905539 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063761445 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075488315 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080414488 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068248429 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074500822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066219757 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07555323 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060797074 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0708044 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072072216 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075616279 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066420295 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066103178 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060755761 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063617509 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068119169 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060915611 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068166733 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059991456 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072543185 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069514199 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076819695 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064632437 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067360129 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068186057 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068957035 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072109843 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06787387 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068592554 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065167777 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075917388 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070395474 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074318999 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060482773 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059825046 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063809374 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075445096 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088568136 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071467264 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06608478 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06678497 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063691902 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069970172 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067172112 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071324401 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072167192 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066214215 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070521072 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073296449 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065771914 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068502168 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073183972 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064245455 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068170886 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063849569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082722256 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064272849 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063459151 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064173766 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076176406 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06961961 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065405947 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063874022 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073143522 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059872784 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065715856 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066688459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066911268 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075703302 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06969088 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069700553 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073408885 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072357604 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065170751 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06786654 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06186115 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065516463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064607076 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071741004 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058821694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067717049 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065412596 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064967813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072606203 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062729629 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064252798 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072018793 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070056313 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190669926 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064089492 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069349603 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066399679 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069409457 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075156298 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064851616 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061862417 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061129892 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06929765 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065926963 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06929043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070358066 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068790705 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060012269 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064583371 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071162193 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075518475 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06679984 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067503142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07266348 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068078559 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065430975 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073574268 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068746982 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064789687 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072200362 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066526479 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061163816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069336387 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069127492 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065105602 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069351747 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068782919 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06843706 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066299091 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064382045 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073292854 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067944015 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066773311 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066477136 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064315499 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076343137 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068332055 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060851918 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062939305 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07532204 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063787063 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065237432 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066096923 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068457631 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066383681 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063684598 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06482382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068033307 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075456442 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069168143 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067050408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070882066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077695802 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065812863 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068591884 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065135404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067110378 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066766492 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075276846 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071967566 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070553619 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068540795 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062714073 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071234115 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073017418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064175397 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063032217 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064357658 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069309386 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07138371 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069683268 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066651402 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063967644 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06689767 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068582992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068439667 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065328117 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065057148 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071962172 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063996074 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072047297 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066568465 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076263931 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06919104 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061080739 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068557498 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064566062 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072391074 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060880652 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06380228 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065601848 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066705495 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065139559 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068647665 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059957646 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073053665 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073723327 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06678228 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065172606 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065333937 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072695678 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067035672 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06956804 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068172759 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070796736 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075242589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063623119 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068033474 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075249272 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064977885 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058756498 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070017313 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063096083 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063293707 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063436106 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062696698 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067751029 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072156159 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070917849 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188616096 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071878901 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06665828 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067939783 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062557555 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071577805 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069317401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068797045 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073323655 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066594016 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066442382 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069784695 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065826777 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067270001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067209455 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069363713 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066856751 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068266288 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065397492 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06983166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065706829 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064716477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067272701 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065775956 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066902453 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071521599 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065834623 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065973984 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068660087 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066341078 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066717014 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066779715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065348269 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069450111 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066989604 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06608766 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068775052 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060894162 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07368522 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065564754 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073964749 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066765592 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062504006 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072809276 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068525681 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071383401 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067299106 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066349409 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067970386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065818755 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069144717 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072968302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06448936 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076916581 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074245733 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066767632 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068425851 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06627799 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067260595 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064634893 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067751273 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066474429 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066248335 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065826572 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071199104 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068868001 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066148747 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06792425 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066704722 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066331709 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067318584 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060484897 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065129728 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065110006 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065243418 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075032058 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065836617 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065608127 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064677403 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066304515 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06477237 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062559136 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073002593 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074884733 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066169028 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072349001 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065231047 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067183579 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076116646 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060254557 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06356896 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063701139 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06360104 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07290567 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065995637 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074764623 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065773585 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065040109 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062655441 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066123628 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064257146 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060357584 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063757196 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069512161 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065239578 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064788707 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066044599 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068003278 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066741496 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075043045 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064837194 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067070309 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065571599 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062252482 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064063796 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064120889 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067294954 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064881463 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062773077 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062290343 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064651361 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065661834 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065954809 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066727757 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066023334 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071205002 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064106508 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067793019 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067374178 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059437479 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.201395682 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068120435 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065977245 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06623175 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070766511 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069491253 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067650941 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074676843 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065829087 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066754803 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065978424 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063819922 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065961514 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065782724 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065600276 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065000231 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06831294 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074452971 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065032227 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070449573 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066415745 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06686798 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072452629 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066786168 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069433154 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071998921 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066662474 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067990952 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074628728 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069823494 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069254057 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066794716 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068176663 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072837342 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065532233 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072387161 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066390575 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066259073 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068024463 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063921957 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066061515 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065287111 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065231699 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072932342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.0665508 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065983661 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065317307 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064529505 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06802171 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069216426 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073663509 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068575122 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068940174 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06090239 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062705288 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067054897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063607826 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067794912 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068227505 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071985034 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068395796 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066502629 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065022719 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075426493 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072136118 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069484945 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064317854 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070409029 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066196637 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067938587 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066559545 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066366424 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067113273 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069902575 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067016028 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065146532 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072462061 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069365408 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066744585 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067216054 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06679921 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066434413 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061390834 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066906794 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067186365 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070646089 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067771594 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065687672 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076109371 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063876367 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065901178 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068957405 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065037134 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070608511 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061122979 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067235518 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066237631 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066527957 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061070749 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065053756 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063788804 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06839609 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06480937 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061699314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07639966 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075001492 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068951235 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064993087 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064770076 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0610396 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061164346 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065357425 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067378158 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067865552 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075826788 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064730497 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064930423 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06037018 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064638274 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067487742 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06824473 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062061476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059749814 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064220717 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068100198 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070085522 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063059986 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063987948 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067830219 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066910192 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195168895 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070628349 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062563202 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070119887 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079320279 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066604043 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067617779 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072753325 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074223735 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066470079 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061709262 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066794287 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069036824 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067160966 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066463 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066949169 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082264469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069207912 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065775118 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064994739 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069001987 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065567708 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074462494 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066746103 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066773796 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070431658 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068470179 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074412505 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069547218 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073341023 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069346802 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069416535 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065097253 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065979278 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06435162 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065058835 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067414993 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067987033 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071227696 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073192467 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065345079 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076654169 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075763201 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068418483 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06253299 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065620867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065461815 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061827979 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066632012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063720477 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063933497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064659454 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064815855 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067678493 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07171703 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067063925 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066208731 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065444276 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059737226 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06845942 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068605086 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066810522 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062847912 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06627971 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066694657 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069574885 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06873365 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064519324 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067809417 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068151378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067070898 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06112334 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072386107 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065156406 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067376635 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06560154 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065851687 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066056154 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069073122 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070196348 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066876235 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068219912 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069309311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068092149 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063168261 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063066362 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071238926 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064017997 seconds)
  done (took 42.232896141 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101145921 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062033661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060943737 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060668322 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072622999 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0628653 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061083992 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06226718 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062182821 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064710839 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061082161 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06128165 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070118307 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076652521 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07255793 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065739153 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060920705 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061701619 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061036302 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061983852 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069233873 seconds)
  done (took 2.70641581 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073323296 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076371234 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07488127 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081361716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070108804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06923193 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074943962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069641041 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077308474 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071738596 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078221324 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069632324 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071619431 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071755315 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071645134 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069599266 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077464562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070489403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069407101 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074355419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069857721 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074145442 seconds)
  done (took 2.901250413 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067835502 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065710799 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066964675 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060726938 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065050788 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060443261 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068807822 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063070156 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068272562 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064637129 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064377741 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064634077 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066742128 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060859415 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065170284 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06277807 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106943004 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067999769 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064823916 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066244846 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060634267 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067348732 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060872505 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061188881 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064972091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068107497 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065408264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063132547 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065279318 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063909542 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064772727 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06280453 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066552824 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0655051 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0639943 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064114761 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064905513 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064940668 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060325454 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063883438 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065369597 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060786849 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065042604 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066196071 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063395558 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062921291 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066651598 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064755353 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060523413 seconds)
  done (took 4.497664495 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078783171 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108452697 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06611085 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091153169 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079042384 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072820525 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068665021 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089297502 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062351428 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063267246 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080269849 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078070335 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064744392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069338531 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068867468 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064283585 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065641944 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064350182 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06869127 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064429025 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068944225 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071773727 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079150116 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077268219 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068252223 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063418357 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064067994 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069185156 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076859208 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06891919 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069528679 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07002506 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079621648 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070647097 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064007529 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066965817 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081140641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064791645 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066962418 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062299742 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066972969 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069069989 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071657764 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080272315 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065101198 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069182896 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064550163 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062147226 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076879053 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066780816 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072649995 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078271344 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068222317 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064735198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068758054 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079416961 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064414602 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062989086 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067978042 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07651014 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062603576 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068407941 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077817165 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066391 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071239243 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07846061 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070172634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06859556 seconds)
  done (took 6.27385874 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076099006 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093689233 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082479682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082358331 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074320655 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074696962 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074563458 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074270002 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074375975 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078837879 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07448167 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114793414 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070528472 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077317998 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074502835 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074510052 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074527793 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075013994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074159902 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074448893 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07453969 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081930667 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07469928 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082011825 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078760156 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069742368 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074290584 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074889656 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08218705 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074197216 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078858562 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075074659 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082713361 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08233323 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078379882 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073878202 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064387538 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074193766 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07457901 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074349403 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069925059 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082031333 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074257869 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069756612 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074659985 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07408926 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081455685 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078702276 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077108947 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078865108 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074730847 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082002577 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074426411 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074344596 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08191046 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085313228 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081821204 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081926296 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074265633 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082014394 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081906929 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085269753 seconds)
  done (took 6.137396149 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082635337 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073753037 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081026029 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060749009 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063523129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070856393 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063829297 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064451861 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07311745 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073553842 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075064191 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071238442 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074182842 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075849127 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071308732 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073757766 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070704638 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071033802 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073331953 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07145876 seconds)
  done (took 2.7577523 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075144578 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082168426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066301107 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070790995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068739009 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070700855 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068180407 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068639601 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066137481 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0685392 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0753123 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075259408 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066085668 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070540584 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075086512 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071271074 seconds)
  done (took 2.450694858 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084661729 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073020931 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079338279 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065361552 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066370576 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061444138 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06488942 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060431093 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062417785 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077380097 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0649569 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075184124 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06525039 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063871722 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062002164 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070321494 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061402377 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062691639 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065026009 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077562971 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068865272 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06353553 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068082073 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064943656 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067488954 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069585143 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063844657 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065404636 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062656037 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065268535 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068199426 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068588719 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062171865 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062935769 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063576229 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062692153 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064674553 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064955435 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070060866 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064344879 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063061525 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066994319 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065461018 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065560001 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061349498 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066292087 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061538231 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0670476 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062871673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06744536 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064799185 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067683625 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065732295 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072332163 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067730098 seconds)
  done (took 4.975751334 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079301778 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069084901 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061001415 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064137291 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069294258 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066260085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069169287 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066437377 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067089226 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063421943 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066971769 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068744146 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066991403 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068872277 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066506004 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068860266 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061353062 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066225251 seconds)
  done (took 2.534807923 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071288438 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065594514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073754428 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066352162 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065520118 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067944916 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063292356 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066443902 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06581184 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067478816 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066311906 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067276061 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063973531 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068038635 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065520071 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065674607 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06820875 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06364977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065594555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060975825 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067725792 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063533908 seconds)
  done (took 2.781243599 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09437203 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081772974 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139535122 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078504404 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083475624 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070990323 seconds)
  done (took 1.869958103 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091645275 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09922819 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065982631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068346178 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074566842 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068914708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068972524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069245984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07758661 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074866814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069387642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077930484 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077590348 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076673058 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074433531 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075218897 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069055582 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069571106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065285281 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082399158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069011034 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077996781 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070116798 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069096529 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069396099 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076917225 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077195277 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075143749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069286517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077870524 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074486071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06918848 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077683975 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075148227 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068099236 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077283038 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068981998 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082757919 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075314969 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076896814 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06830358 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075186601 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077641688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073943417 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077897215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069649601 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074085414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069586511 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069459775 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085429438 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075283798 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077421724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077504112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078823189 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078045349 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085621904 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075594505 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076812038 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075748947 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075250862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076817815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075393021 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077483538 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075564816 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075053056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076818022 seconds)
  done (took 6.273704038 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103523683 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06660952 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069754003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075697278 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076651869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069836212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069990159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069935341 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070084736 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066154484 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107766692 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069667147 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077068866 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076993619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069948711 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069393852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069630222 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077130308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066292196 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085106795 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069082885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076747314 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076998432 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077345185 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075423963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075302049 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069377013 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069553945 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069437174 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069073221 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07420948 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069765873 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076824058 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065950213 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076898842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069854167 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069017344 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073890523 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069372365 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075307652 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076525743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083170619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069223984 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069296636 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075550958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069038141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069070723 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066064561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069126638 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066151456 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075258857 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075280084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075723427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076980117 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069663121 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069897384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06918808 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069639842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06947907 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074782248 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076852299 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069428576 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08526112 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069425859 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069475808 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077139149 seconds)
  done (took 6.179682707 seconds)
done (took 127.998721832 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184778032 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164630149 seconds)
  done (took 1.663131093 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068871709 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09908829 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076761913 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127295403 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066294225 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099354038 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099008912 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077774493 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065802319 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06555754 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065173984 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068202228 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131121979 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065535653 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065491573 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06818192 seconds)
  done (took 2.637305784 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099247555 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162392414 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100930647 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064185534 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098557077 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072244174 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064133459 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074519989 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070642719 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064384337 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072006848 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070171297 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064552051 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070461221 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070759543 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072233734 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064743845 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072075592 seconds)
  done (took 2.759448336 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099726602 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090906557 seconds)
  done (took 1.529323847 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157273155 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104944903 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144432626 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351073594 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164418988 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147555612 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143542454 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142544718 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116117905 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138149619 seconds)
  done (took 2.941382061 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098897299 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153047346 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264834388 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116438454 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072959325 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09411222 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118098599 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077563877 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079829544 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079200356 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078953151 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075356376 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099098898 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072784064 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073358357 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074764841 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102424514 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072583857 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07399527 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075719976 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1002808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065199238 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07272103 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072542993 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076363484 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076669604 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06483102 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06458756 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07567243 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074209011 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076354128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092576928 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076694602 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105873404 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070205225 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107124708 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075953543 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073067998 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074188725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073324637 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077681117 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078018736 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071732914 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075491422 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064737447 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075560683 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065521121 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064848653 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077798284 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066007502 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077274221 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076278141 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105530177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066038264 seconds)
  done (took 5.925204135 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10384962 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10567515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070609093 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111730877 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101984866 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071697377 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102225333 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095331257 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103791127 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069531384 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067501752 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069756774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081654105 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082078369 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114452683 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106096205 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072764069 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070339349 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107061057 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104394655 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067947969 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096653434 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090494259 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102702513 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06706523 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069692429 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067533019 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069795987 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075893617 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07778759 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069003037 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079888325 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08440367 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077474805 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067155638 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067151558 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067795059 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078948114 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079288972 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078879582 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077260319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067492117 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073217746 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068652523 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069668248 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067489111 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078227728 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080179269 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07796348 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069305858 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069640514 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067534623 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069130436 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079426712 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076725099 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079749326 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079231611 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067503189 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067574031 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071814543 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080187185 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078531075 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078727864 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06853186 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0782277 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068002876 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079977939 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083269038 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068210867 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069716223 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067988679 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068875537 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069103078 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077691368 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077424686 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069111708 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069780693 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068139621 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079923952 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077861065 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067428106 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076376584 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066623255 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068149447 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069450496 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06929933 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077359097 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079950465 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069550522 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067644249 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068507562 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068394015 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066880486 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076579557 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080111602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078682891 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077180166 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068063444 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07686852 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07683552 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068851913 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077305464 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067344196 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068859577 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068136653 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076567232 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074925267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.206712396 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07127558 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069485471 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078335002 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080459683 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068871553 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078359532 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079886245 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079625649 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068160235 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081725548 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068288916 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079400453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069613542 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07918588 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069092785 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07957432 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0679729 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068170721 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068822837 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080420929 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072383871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067950824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069123453 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070842598 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079443807 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082287041 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070569211 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078508722 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077816177 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070390051 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078402108 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069014184 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079373816 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068912106 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069300573 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066824758 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081683718 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068761366 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067853888 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06828608 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079954686 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068578933 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079668246 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077419072 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067799734 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080698933 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079984575 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077178363 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079850044 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070567782 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068225172 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068005178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069153771 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077639403 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079573155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069706456 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067826382 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078392681 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078506002 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066664713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077443791 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077998147 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078122969 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067836348 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069733461 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080396535 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080648422 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077811654 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077946968 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077530472 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068303811 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077342167 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07766629 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067576346 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083624713 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067933296 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082205531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078487942 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076403014 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078261688 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080214157 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079978711 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079359266 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083137514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067909059 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067834899 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079846022 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068026841 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069007901 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077727451 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069220997 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069721979 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08256845 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068830778 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079674836 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06761679 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07871134 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067151746 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069909164 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081839728 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067199831 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068255247 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077211045 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068774927 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075517103 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078950507 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075841856 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066253949 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068044211 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210805473 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079741116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06949265 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068628021 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070617478 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078553047 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077204764 seconds)
  done (took 18.54484057 seconds)
done (took 37.342652575 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209522998 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153181147 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183082128 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119360469 seconds)
  done (took 2.098337696 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117679526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101943262 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092539769 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064798316 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099221437 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065090992 seconds)
  done (took 1.915281588 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312384056 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211506448 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188410847 seconds)
  done (took 2.08522711 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201714291 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190379879 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.424767701 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26606038 seconds)
  done (took 2.566844296 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144368787 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088426033 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067342545 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084155932 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133751874 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160747943 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10010353 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125424688 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079283851 seconds)
  done (took 2.408009095 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149134386 seconds)
done (took 12.600330332 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097397222 seconds)
    (2/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.23488912 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.123238394 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112106713 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074051432 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082607938 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077375474 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091319288 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078821073 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.20050894 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074247996 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.198633536 seconds)
    (13/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09374598 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.228692874 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.162734127 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.253073619 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116771641 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08097818 seconds)
    (19/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.1023494 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088006905 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171984387 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110307785 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065179869 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051564297 seconds)
    (25/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081183876 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072873112 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228362342 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.101810274 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074016128 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074008392 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076032589 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153912977 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07752426 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091046911 seconds)
    (35/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.111730507 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161312117 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107966377 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090232244 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073492297 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112334713 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085138836 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090225104 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124565293 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16490118 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 0.142999851 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075096745 seconds)
    (47/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183945117 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.174927667 seconds)
    (49/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.10964038 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146630819 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070380642 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067019966 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 0.132507214 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076671619 seconds)
    (55/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100021842 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069427565 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090523242 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101049475 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072480981 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139069909 seconds)
    (61/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.163324679 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.18993013 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0949997 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142920563 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07439458 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090904178 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051234311 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141303457 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068975503 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050838971 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141168934 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.066389024 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.208099735 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070554438 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160866312 seconds)
    (76/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069343288 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065489429 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073741894 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.196464792 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10831206 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088344954 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184264409 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070963232 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064528633 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074383047 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.154463247 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.194212072 seconds)
    (88/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.165586964 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075872288 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137679449 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.062529449 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076794197 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072591543 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052214567 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083840566 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179713365 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074052513 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067078989 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071227931 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164597327 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074717901 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09323853 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077256277 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072110664 seconds)
    (105/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074085793 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.230122999 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068815583 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075551892 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051619745 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182797681 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075840298 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 0.131185431 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141189323 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192040615 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080825954 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.216896797 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065432113 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163800622 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074354638 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05314638 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051810309 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074449074 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05206339 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.139342492 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076502133 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074911102 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075151369 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092700636 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073599705 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196515491 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120303104 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.085516085 seconds)
    (133/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081710124 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066257207 seconds)
    (135/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081344722 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051365278 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08955426 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071504793 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071963984 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06141501 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079228298 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194937673 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064579552 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098657931 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07217432 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110271865 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050102893 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052384774 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07832445 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072874024 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050409192 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090223186 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093008022 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076371093 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065646795 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076284961 seconds)
    (157/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077863572 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073212933 seconds)
    (159/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115278744 seconds)
    (160/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109018896 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093742267 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.17993011 seconds)
    (163/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119701571 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093753714 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100390936 seconds)
    (166/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.302805413 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078505995 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075766128 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064912135 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052108504 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065252715 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154251904 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052287706 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051652104 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066390767 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109977157 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096749419 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108172439 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155793504 seconds)
    (180/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052577034 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065152912 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050368829 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176009196 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071622387 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087590359 seconds)
    (186/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193501074 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067911835 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071440205 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050423938 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050804124 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050988492 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.049848546 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073717655 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064113295 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051536866 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064703222 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050758003 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.182319344 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050557016 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116175027 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.250885304 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070383491 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067190789 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051615418 seconds)
    (205/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15860031 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064643309 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144428435 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087487416 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06731876 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06588508 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15634748 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073239607 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050949407 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066655666 seconds)
    (215/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051212082 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.141962513 seconds)
    (217/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051419881 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073400464 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065348797 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075298248 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051716294 seconds)
    (222/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105605726 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183983338 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102097341 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063053253 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065230939 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05160085 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074901956 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088963489 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171638182 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065295518 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064948676 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065144225 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064803528 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071064494 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050938184 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065183975 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064451139 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071784607 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184638924 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090317828 seconds)
    (242/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0743025 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07026864 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110248987 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091844142 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065273841 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136319151 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0654111 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050474432 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050912862 seconds)
    (251/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.049987938 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068426144 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06886931 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073817925 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051783008 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111723475 seconds)
    (257/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050973996 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050677809 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049862223 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067131679 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0672892 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098399335 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064825997 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064711448 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127058915 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065419245 seconds)
    (267/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067603842 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069509309 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050466908 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090690415 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050699677 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071713349 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07319791 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070996728 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052513547 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051660482 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067411784 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050229526 seconds)
    (279/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060324752 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051862478 seconds)
    (281/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060911767 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182398617 seconds)
    (283/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060653736 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050428151 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050681574 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066613895 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171708402 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067033803 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093015449 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066262715 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07399195 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050774124 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064250066 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06415862 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072331704 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073254214 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051713082 seconds)
    (298/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079400332 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086331076 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069017409 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053784307 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071087298 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08824317 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050713374 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070766086 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066781966 seconds)
    (307/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06375703 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062838306 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064739576 seconds)
  done (took 30.908193081 seconds)
done (took 32.292239728 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086620684 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09223391 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074139408 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094016855 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080920168 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075717538 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072501271 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078329591 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079862326 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082265454 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07817472 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053758792 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073996875 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074270117 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074617719 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091330054 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078486352 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072919151 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072980277 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064408853 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072707597 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065343821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067006882 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053891099 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07834298 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071887165 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072436642 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074201942 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065089194 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065475981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068946473 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073502222 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065192564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078007515 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072628108 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072516007 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074607291 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076721892 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066979045 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065309608 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074218989 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06529706 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072874231 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073765391 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072649618 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071674162 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073555407 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078616013 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091107359 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067879655 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074672574 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075700239 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075857248 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072599601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069465599 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072683708 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070927497 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091286411 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073424819 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067084685 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074636908 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074490445 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070955247 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072661988 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073672584 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075168247 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075134464 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071082704 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07457336 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071310175 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06491513 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073107883 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069079499 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065493249 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076152998 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077279009 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064106136 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071757306 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072893971 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070955618 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064236541 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066815949 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066645647 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072140926 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066927541 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053421273 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069085805 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071906768 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064038676 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0729411 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072097764 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071947541 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066750157 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075151891 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064784696 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070843153 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065098115 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064763607 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066958494 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069029034 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064937057 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066731514 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074396687 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066265003 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071291979 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07849602 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064784465 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072023501 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064290807 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064366916 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079602732 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074348519 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064522472 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067099434 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064053911 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072258641 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064097017 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06445664 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064619203 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064247118 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070476828 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064441387 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066515707 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072359601 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078283297 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06463288 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067512651 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065871423 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063754775 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070380402 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064480575 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064082226 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065966673 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060879721 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06585454 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064537192 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07153446 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065720496 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.208424048 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068833307 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074140618 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071235298 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071825421 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071173156 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063611102 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058572524 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067320225 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067486187 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067037647 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064918119 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066414238 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064851995 seconds)
done (took 12.403838899 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067522511 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139751042 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097276585 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095960557 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086064542 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066968058 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07642347 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101343983 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06757327 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101776903 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088091473 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086000386 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113969727 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064588997 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065785343 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070114491 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066928773 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081363803 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100955966 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086901875 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114777218 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064895119 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092986097 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089045267 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088232785 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094109606 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068941262 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069862746 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069590184 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102502706 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088472607 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070329733 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066779124 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098709433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093654226 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083872941 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066297762 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083134083 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066114621 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06524316 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067512978 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09871712 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080368315 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080403566 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069369132 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069169101 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066757404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083995662 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090203212 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078977559 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085844462 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101549613 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068315087 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065412169 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064613634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08634106 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064801998 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068555397 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065971707 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068351897 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065642572 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06867834 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080385305 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080376995 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069774743 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079413132 seconds)
  done (took 6.774079851 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084715242 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091138599 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083637649 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082713138 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065065128 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065960063 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066033158 seconds)
  done (took 2.019153044 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067791502 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087798033 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088293182 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088791963 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081941638 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087348068 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075821183 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065906076 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087474073 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067620847 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087612484 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100538364 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069771376 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074043575 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090408008 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066063484 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090336643 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066219829 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069118442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090299984 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068455927 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095410512 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069272291 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066865091 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080921228 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066855852 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113921178 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070342817 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06759102 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069358078 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064014401 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107343609 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080201357 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074429316 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066678481 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080636606 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081480674 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06493145 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083311172 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075111963 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080459054 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066693816 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067927748 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064268699 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070716381 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076849214 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067480493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06721531 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068959469 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086685834 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06729062 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080746862 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069887087 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072250151 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067826809 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073634132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076501344 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067145663 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086766009 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068133473 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083251012 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082633986 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08013974 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082954946 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068804403 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080269774 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079995906 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069226189 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068210143 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069954199 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082165472 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064555972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067803761 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076671874 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068215962 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089613266 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08948589 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067719642 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079572347 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066729705 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066599367 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066403307 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089650563 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071647154 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066214025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070579991 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069774742 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064663417 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065338736 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069849127 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06416303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067884466 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069015734 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069458484 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068747188 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082883291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068574181 seconds)
  done (took 8.776346475 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070051852 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06889641 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070559379 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068494627 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067490023 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067941661 seconds)
  done (took 1.913190767 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096201548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070699869 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08105829 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071759116 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104091047 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086572883 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087045845 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078343119 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083335738 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078575132 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086840724 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088170641 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092349249 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072506717 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086192571 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07146985 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087051234 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074723678 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078149674 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072763143 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086000697 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071950231 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072532007 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081230856 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075343759 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071324451 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067381189 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078365157 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077903693 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07857817 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072382354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075084275 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070525266 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078363532 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086728255 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070844425 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07170559 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076908546 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072026109 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075239841 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088379758 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07262398 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073764203 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076908471 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077733511 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070274176 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076539906 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074924421 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086137855 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076720479 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07666923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070316503 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074945176 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076550531 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069600017 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077844744 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076561414 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086210424 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071859964 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069774664 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068823993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075297494 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077789224 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074544873 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078650808 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077016419 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070041681 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071920983 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072569898 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071090269 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077127509 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068021858 seconds)
  done (took 7.043171641 seconds)
done (took 27.992405662 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536900923 seconds)
  done (took 2.000531781 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618467684 seconds)
  done (took 2.10664799 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.599068358 seconds)
  done (took 8.084424519 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403137984 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.497066806 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722515075 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131763738 seconds)
  done (took 3.273601721 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70028763 seconds)
  done (took 2.19849911 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216235311 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201603713 seconds)
  done (took 1.925832025 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379325702 seconds)
  done (took 1.86640993 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.146092733 seconds)
  done (took 2.635925403 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25954508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174631226 seconds)
  done (took 1.924087533 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.497555747 seconds)
  done (took 1.985177736 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.865501945 seconds)
  done (took 6.356498798 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214667062 seconds)
  done (took 1.747465916 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243134765 seconds)
  done (took 1.733638955 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.711614793 seconds)
  done (took 3.204170369 seconds)
done (took 42.536600122 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082121636 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080385558 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.0807205 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078410263 seconds)
  done (took 1.799407949 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078822657 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073044716 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077028999 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072565976 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077237877 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073151077 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074698838 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077504618 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072423249 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073385086 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072966759 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073384652 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075154287 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074054803 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071148482 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075033028 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076421338 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073091785 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075482349 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072606211 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070726797 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075496415 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075628855 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071888562 seconds)
  done (took 3.278593023 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079672496 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073043179 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074469664 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072280783 seconds)
  done (took 1.802274887 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081505515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098405379 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090217649 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079232068 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093196985 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086673409 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068886684 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069015676 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070840898 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077849223 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068387905 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096592544 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088658893 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078303242 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080408204 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06571186 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068274101 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08762331 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078414636 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078368466 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070114629 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078049922 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068434469 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088516478 seconds)
  done (took 3.408943371 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088474338 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106704118 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082044959 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088705939 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090443112 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06529924 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088487453 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091288462 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127293866 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065543262 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070664747 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065171782 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072831148 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065335465 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081230195 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108387475 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111718198 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068640238 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097340478 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065412594 seconds)
  done (took 3.209688378 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075033744 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070801712 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065776501 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068676218 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077386866 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073074892 seconds)
  done (took 1.941916634 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070939909 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067707155 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066948606 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066434646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072000965 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067774983 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066295003 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067507664 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067631009 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067356996 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066624277 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065454321 seconds)
  done (took 2.316924079 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204631639 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068537121 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068721162 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065875325 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070590172 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066362829 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080511558 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068138463 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091454879 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066300733 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067086962 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068341572 seconds)
  done (took 2.493955079 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21158588 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076001966 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239903706 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150686147 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110807196 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117058632 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112914199 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114606959 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142584349 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100822987 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168470439 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167926651 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10813852 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137313931 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089531567 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100345448 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15432877 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16377697 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105549405 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167882704 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145542395 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126694806 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153799754 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101746051 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10653451 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121812183 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071062162 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080317129 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170292428 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133123478 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144700603 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110840563 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092273134 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177909331 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172791803 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141314519 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146974998 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083899066 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104815911 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134580181 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202437414 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091442444 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161753819 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108017012 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220141321 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133648098 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121503036 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121059717 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105983318 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090101611 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145917963 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185175123 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138156467 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087433025 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124748588 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113623405 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114183713 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113994081 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182580806 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162637019 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128686472 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071566157 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10809231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154419775 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135382273 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109747281 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125848137 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091638412 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135131674 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15624219 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120877204 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144875165 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116805996 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089105367 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120314977 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140650748 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128114813 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161617079 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125237811 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072982748 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124152169 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101892609 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080999457 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146179194 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075390101 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176815439 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099024381 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10901161 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125292148 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112492817 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109271067 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158972068 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144331593 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102397632 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064831947 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24740176 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123438989 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14570958 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088018436 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109120433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118434558 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078310367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137120868 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07591365 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123596616 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077739349 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129171834 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129300948 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077068042 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122896918 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104329072 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101241595 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132104437 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161948298 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087223971 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081229592 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169238565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122856332 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103522587 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144983294 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157311277 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101561231 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101906878 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149486674 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179746089 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089693873 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163686355 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106934696 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083751316 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087813645 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124412318 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112438025 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123708903 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081663298 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118237583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169794021 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074994633 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095752194 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134601844 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079071928 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080966793 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105912563 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104900596 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095485691 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099687065 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102800299 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135994534 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123555749 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106117305 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124086016 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098293654 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316687479 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089443581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103227445 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104969704 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070334071 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136609171 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157360651 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080251944 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164646249 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123536168 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11670741 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1199555 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083481155 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140870862 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079931272 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070666274 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144869378 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111040984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111220526 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152830316 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116088271 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125766394 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119261964 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133110822 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131035111 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130651415 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105493936 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088700861 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11246151 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12676708 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073115276 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090571413 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079430717 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10450872 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095675279 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08292955 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141785742 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124149542 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110368609 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112662112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096609151 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148853558 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076745727 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128730384 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119449255 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096138759 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153199971 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153158156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1316137 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098978996 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136977595 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070293992 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073885113 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087849448 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122430636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082349059 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082612293 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259774917 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148898225 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1310985 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136218545 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124200786 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121696838 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156801835 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070691227 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11752111 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148195331 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121587652 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104408003 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089915948 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099241371 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144575076 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107748622 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182592776 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117589637 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124734016 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153795753 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100940026 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079661288 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103197241 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135810706 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103649613 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144084397 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10022993 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088227959 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109970858 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074303072 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09847419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127050649 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118414291 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135248552 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115685311 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132597152 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077481484 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116343636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122035423 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122546232 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063863707 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121026196 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162610847 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094670489 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118784166 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153218616 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078756485 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134016956 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175100028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144321998 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084602217 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253309864 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121131432 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130014658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12050888 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141506447 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108014098 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138237072 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111225716 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087027049 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087975269 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098085503 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105175977 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095225585 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106492835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114533828 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095674265 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132042071 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104569972 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110562223 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118550496 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098143535 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09134607 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09748973 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177680355 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119531445 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170914947 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101055751 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145653012 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164518236 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074755501 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079331924 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07856311 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141146493 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08424799 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130861315 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107172012 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117577855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124059363 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143698966 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096311 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068843092 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10958208 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133280441 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12441937 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098663132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103662596 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165347971 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101266787 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079291722 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113856364 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11618016 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103046866 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171620255 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061192875 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105533699 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075787725 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079906491 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12728026 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294638915 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080907089 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1034083 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121162212 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112293224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129366989 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100914314 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108380607 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126363854 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149620573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129308556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09012705 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112438414 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129617747 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15795345 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105242968 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097506014 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173571879 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153893828 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160892777 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087226589 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11508169 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114744796 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108840915 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138859997 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08395628 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16417279 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082835303 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136322173 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103506162 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088948346 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129489577 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108448635 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088004065 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148768523 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11814459 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082924123 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077894842 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118022471 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120428925 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106614413 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075023216 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139366606 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073886287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13557998 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160117597 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080283094 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107738712 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096586295 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079301966 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105928151 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10198356 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086948616 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.238498675 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178408018 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088708749 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152728268 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134306401 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113844013 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13745829 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102628767 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641411382 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07837743 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15271929 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116545767 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174285709 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100577121 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11891638 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110420354 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123122921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146181696 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104333941 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180408268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132505585 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1159559 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079330455 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102214562 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104404117 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087359411 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108807668 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114787215 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115254455 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093338492 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116434522 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124393224 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081958414 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096380617 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157485177 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117278783 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143960655 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141251431 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08527349 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119020334 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138374109 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080322127 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121290881 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152033863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105917699 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099003895 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080475807 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100169267 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158542591 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073010481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158610186 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117922254 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256042075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114579194 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113715533 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130996821 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106827613 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123438947 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093823687 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1108674 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114128684 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081522471 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07713611 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106272994 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112447255 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098890194 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098781422 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099037286 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153129812 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072188877 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098170292 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11444111 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144878212 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175076246 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089525787 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083091724 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119670398 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114237237 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113261963 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121319294 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07876153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081905972 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081153459 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077755586 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108761312 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113524338 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114647711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111840578 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163840871 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083474971 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231563913 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095853145 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105801124 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06984368 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078227698 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096567684 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09874291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107534221 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110136039 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160588525 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095937924 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090107012 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091800139 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074288247 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083591282 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129317564 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109608235 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118722324 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098174027 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061762102 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10743377 seconds)
  done (took 59.087243434 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112476527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083099101 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096593935 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144778016 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123474638 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202872706 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154291874 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188905392 seconds)
  done (took 2.7408985 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070062041 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096237843 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103161018 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083742657 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066909352 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068869837 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23357932 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081439625 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066477966 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098985341 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079178638 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068638928 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430993974 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068523345 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069303011 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061370101 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067060957 seconds)
  done (took 3.422175797 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391173408 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613337862 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383962699 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073193804 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.467087258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089183191 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.159393183 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127669838 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073337399 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536485904 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.716336802 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123941043 seconds)
  done (took 18.370208182 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077715678 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070368864 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083725155 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08375682 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072754382 seconds)
  done (took 1.998829306 seconds)
done (took 107.417641248 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083400395 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617358208 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053313985 seconds)
  done (took 2.309453196 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086347061 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085515022 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084920018 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083485074 seconds)
  done (took 1.96461279 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077455842 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07691285 seconds)
  done (took 1.77047822 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23354822 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169484367 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096289763 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085974567 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078916688 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080425559 seconds)
  done (took 1.863796926 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074851112 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075693792 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072865123 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076899893 seconds)
  done (took 1.914297695 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080640876 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055095314 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055232827 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058034294 seconds)
  done (took 1.863560889 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089565293 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079675256 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079247816 seconds)
  done (took 1.864525649 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10503598 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086402123 seconds)
  done (took 1.807694993 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084861236 seconds)
  done (took 1.700718729 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10323133 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102277738 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132843283 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111742139 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140503683 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110127949 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084908124 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085941143 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077071841 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08708371 seconds)
  done (took 2.650706485 seconds)
done (took 21.902718278 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08262732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367948678 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360044598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090531242 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66981649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356683125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021754618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092801437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115727984 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067904567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084982309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647910363 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979163024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323520905 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963872654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415267679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649636772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067901757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068134198 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067564133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009806135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06752125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067989655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068122884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647305366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37180545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068472835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419115725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067873032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06975826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355001411 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068924239 seconds)
  done (took 16.376281759 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07280416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121053482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073532162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084704225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070160207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069865501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071883837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069205656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123040041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067547215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085491411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068430543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07194477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069032243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088050734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08565828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068452762 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069530024 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068399396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068782035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088023314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06824694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068422208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068585316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068113764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08034882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068598911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068089211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068372536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069960258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070957143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068855657 seconds)
  done (took 4.05538324 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12242386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128411795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075620519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106179155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115207015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070137681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148351015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094139224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131158168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069925368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085591451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069198256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104341126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070796069 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090128047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068359908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069150301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068459587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068333216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068456092 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088452485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068284441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068384394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069012331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068437485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08209309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068563017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068233341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068197672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070263552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071749421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068405698 seconds)
  done (took 4.317049183 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075296202 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076557028 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083438454 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084779023 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069653677 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07244248 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073122645 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069558893 seconds)
  done (took 2.240903883 seconds)
done (took 28.614648199 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082967185 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071561006 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073429577 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081938161 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073321318 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079015569 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066949376 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075826522 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072921203 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074014032 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075025428 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067366554 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071597729 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067604555 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07472825 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067617816 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079721057 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072542695 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079509662 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079896036 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070339749 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073638374 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074946643 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079851706 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079097402 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078868883 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077787859 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072974223 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069051166 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071404675 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077054691 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086470038 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070842136 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082462845 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069017954 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067810528 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0716488 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067702364 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079262207 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077073926 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070222949 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076236611 seconds)
  done (took 4.741096554 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091444565 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097369393 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08875787 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064449487 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066582043 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065637265 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089631831 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06027922 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059377407 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088483151 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055853957 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059314957 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065922846 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053958912 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059981369 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056238911 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062305534 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055695035 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060186243 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059887949 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090012423 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053495037 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078461294 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063634277 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055663542 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061390234 seconds)
  done (took 3.406826782 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075716658 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086972524 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.101053194 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131498715 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106072278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079366584 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081277833 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096281124 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089152761 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066911043 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071346952 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092972066 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09137669 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073434501 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067896835 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086794973 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083894985 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069093368 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073705698 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096455095 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086881664 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086671275 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099958405 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084770406 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067448916 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069706326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071847698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081743115 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073069067 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077555946 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071970682 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071336014 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070323955 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079612991 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071726351 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069892136 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092904593 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078042633 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07962388 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06854413 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071786915 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069675341 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093638427 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135056403 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068020775 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074485449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076229299 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077808709 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068151242 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088448072 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080168259 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068306919 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071478109 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067780444 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067999465 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082057406 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070878563 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069893717 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077704649 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071349619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093944898 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072980119 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08405768 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067817594 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076160858 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067138857 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068802067 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067308388 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096793388 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070114248 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11355779 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069533789 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069296599 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077231046 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076113923 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074704594 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068491923 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084687668 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0785797 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071799308 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077180402 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071735227 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07140573 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092559136 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070537846 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070347463 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069355343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07494591 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071217924 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06971694 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08188508 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068728967 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070673764 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087468463 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067419686 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069364553 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073890327 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072834129 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067626565 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079146265 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073102942 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069607295 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078131548 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067879068 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070930113 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080942248 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074766908 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066826308 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072295561 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074562856 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068474741 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069839335 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070872501 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070076611 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077122438 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074608598 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072341382 seconds)
  done (took 10.732768244 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167960232 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159055213 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070989223 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151724537 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077007406 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079559354 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151817278 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095935688 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068363039 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06897746 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06919962 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111271195 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106752454 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116418976 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079326857 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067638405 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084936004 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115587701 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15440674 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147823621 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085783819 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077594655 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070344523 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069165893 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070786089 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078717638 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085893917 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077092561 seconds)
  done (took 4.432858244 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083193276 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105534937 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074507948 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091877335 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092101106 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068595268 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071037705 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069800481 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081791565 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078732241 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068128469 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074031788 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075378429 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071803725 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069446611 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075136061 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075554013 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069545343 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071489838 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07391611 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078416963 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092412865 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072586372 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067346102 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07321388 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067277575 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063697868 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084443337 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06838907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095416954 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065706782 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075964729 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082270412 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069267362 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067980482 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068243657 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068476087 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067763778 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06997193 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066606168 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067088556 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057487619 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067625131 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079773089 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07523928 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056451943 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073017242 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073631514 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074038736 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065826194 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070785949 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071352998 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071315835 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075568897 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073133545 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074425212 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069570699 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074926113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077898482 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067944103 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065455408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066485402 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072797524 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065580044 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076994096 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073009476 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06661681 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068002796 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07004543 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074828421 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06837153 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071603359 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065785826 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070432628 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073068161 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07010982 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069817159 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066642646 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068059122 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068883639 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055086432 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068380031 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05355643 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071410235 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066251825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066733357 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067995427 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07303999 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080240203 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069820711 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074187164 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069566432 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067503562 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071536971 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060332572 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070721715 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083638794 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083538207 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068163601 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066485773 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082815899 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073023962 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066876034 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055724457 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075269471 seconds)
  done (took 9.224185693 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091554763 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071157989 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086505537 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094748533 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088150521 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075824222 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078126012 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069649509 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083567241 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074561828 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077257488 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068471697 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078935164 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077344233 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070622284 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078951021 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07342972 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085779408 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083250225 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069019251 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076897438 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081666998 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091038415 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082834632 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082002463 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082496417 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091630934 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072479089 seconds)
  done (took 3.91788212 seconds)
done (took 38.083889575 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.718843978 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.89154265 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.712679069 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.080348531 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.01154789 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.724435763 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.872613285 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.709286425 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.788556731 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.742932674 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.930107783 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827748097 seconds)
done (took 64.658221967 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.804327727 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.855234501 seconds)
    (2/2) benchmarking "String"...
    done (took 1.961071443 seconds)
  done (took 5.466933967 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.980331606 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.278652756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.967430587 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.715427757 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.722003072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.057712167 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.516989397 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224712001 seconds)
  done (took 30.135747105 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.804731736 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.95239932 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.380731359 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.408409923 seconds)
  done (took 15.243844139 seconds)
done (took 62.364773521 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.722834544 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.739559508 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.720343099 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.699299791 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.774184279 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.722769495 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.009963551 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.77350661 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.71678628 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.70713887 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.717956627 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.153123418 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.722639468 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.066141309 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.719103573 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.723112531 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.732390476 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.200926945 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.876396667 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.724931106 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.716236403 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.750824272 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.722390752 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.725479784 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.739643502 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.719539258 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.149519013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.716136708 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.339960742 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.71610014 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.75592857 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.21606979 seconds)
  done (took 202.143858009 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.718694479 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.739475563 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.815232285 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.751655998 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.246504239 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.904586279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.851572948 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.281940753 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.723329807 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.726820994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.020060358 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.716282415 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.022583941 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.717702833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.750011229 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.72352667 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.859961278 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.011713099 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.749817475 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.893107651 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.745687419 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.793852215 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.768762709 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.972543607 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.757092427 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.798898193 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.882651617 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.730634471 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.91697191 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.85321202 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.755819399 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.738142964 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.938434177 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.591369541 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.743958625 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.742040162 seconds)
  done (took 168.611690436 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.105813456 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.721811628 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.720227891 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72080224 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.734565047 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.720176359 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.842022754 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845059553 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.325868096 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.27772091 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772297614 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546907685 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.719064943 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791198686 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.729538936 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.723593814 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.737787593 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.747094333 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719160521 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.721632701 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844910484 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.733472689 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.844174358 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.728454951 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.722451158 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727225107 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.094955849 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719470116 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727667723 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.98508796 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.718249191 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.722357525 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615732022 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.933834278 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809545073 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.720620701 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726628611 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.72399095 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.944670591 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719252737 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.725229547 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.724892747 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898889659 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.723758964 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.843835158 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.721768699 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.229952031 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.72127887 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.723408902 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.722238464 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.578694356 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.726242078 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.404847318 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.723873945 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.723478063 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.725627213 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.722626199 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.722615712 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.729626948 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.41745173 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.796494734 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.725713776 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.726689577 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.729473793 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.725803815 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.825057055 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724449098 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.952696536 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.782015545 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.853175587 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84708583 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.72411012 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791249246 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815877012 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.722842012 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.724039651 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.723382353 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722651228 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.724167722 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.806207966 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.721273305 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.861074676 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730178284 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.72446404 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.776734024 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.793216269 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.723252003 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.610097378 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.724588282 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.72649741 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043550614 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789282827 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.720666059 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.726030329 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.725970311 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.857804805 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845507076 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491987389 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.724344153 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.355706036 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.728112895 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.877394014 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.723019431 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.903277797 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.726169962 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808850876 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.725585705 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.725397974 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72619383 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759228601 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.723110915 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.782563037 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.727912572 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.72464081 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.100910833 seconds)
  done (took 396.937922571 seconds)
done (took 771.506735993 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.394091437 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.347076313 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.461696394 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.370806442 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.346006744 seconds)
  done (took 13.577100003 seconds)
done (took 15.238590899 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.812896204 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.816204533 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745691819 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.812261312 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745578314 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.81530063 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.795113104 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.748164038 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.781080748 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.74934734 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.779127164 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748733605 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731807023 seconds)
  done (took 24.74183645 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.955962056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967728179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797096222 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961439965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.775090501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958815658 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.895757798 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.878799338 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.897389463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744289041 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.741134405 seconds)
  done (took 22.236206905 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.965911549 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977220689 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803341206 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973493716 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77869469 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961808961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892618939 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880800749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887358523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.745252749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.743155173 seconds)
  done (took 22.27024287 seconds)
done (took 70.909642111 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.73864993 seconds)
  done (took 3.398236492 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.759146903 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918278291 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.740123332 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.739826123 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.733919632 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.737422444 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.740440657 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.736365956 seconds)
  done (took 15.769720355 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.735243707 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.737436255 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.737499828 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.736392565 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.734494193 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.734044826 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.735817214 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.735150969 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.736766708 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.732298551 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.736256137 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.735863095 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.739176073 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.734800176 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.738336784 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.736721812 seconds)
  done (took 29.440229565 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.736256154 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.733309118 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735259509 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.735926431 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.73553474 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.73578593 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.736998725 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73510263 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.735302871 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.737146389 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.73558491 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.734083877 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.735558146 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.736563846 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.736268578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.739181927 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737981837 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.736261751 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.739125653 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.73450377 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.737476241 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.735114473 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.737793555 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.735872103 seconds)
  done (took 43.335045466 seconds)
done (took 93.604091523 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.615811428 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.118524524 seconds)
  done (took 8.397692215 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.740106825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.738097823 seconds)
  done (took 5.174768979 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.737709249 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.737053975 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.738714898 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.739364436 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737814137 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.738071805 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.741373392 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.739126965 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.738737744 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.740011265 seconds)
  done (took 19.055669731 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.73846487 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.738155053 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.736625613 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.741457854 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.741208262 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.737575249 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.739951305 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.736607136 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.741084962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.738141462 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.741027883 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.737039795 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.738466948 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.735485243 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.740061294 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.737428224 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.737791025 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.737179647 seconds)
  done (took 32.959414169 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.738299538 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.740444844 seconds)
  done (took 5.144138586 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.73784236 seconds)
    (2/7) benchmarking "second"...
    done (took 1.739726453 seconds)
    (3/7) benchmarking "month"...
    done (took 1.737981167 seconds)
    (4/7) benchmarking "year"...
    done (took 1.739060974 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.740087866 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.737001149 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.737616644 seconds)
  done (took 13.835614885 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.741860913 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.902062262 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.974200917 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.433884249 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.74243947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74367378 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.717110423 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.743161929 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.744826099 seconds)
  done (took 19.409083293 seconds)
done (took 105.639473279 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.573082355 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.733871756 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.053065684 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.781316554 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.7879995 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.077870187 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.749496185 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.043633556 seconds)
done (took 42.468367375 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.826438164 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.29493471 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.351968878 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.602658208 seconds)
  done (took 12.918316667 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.722019961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.26227587 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.767319997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.31300585 seconds)
  done (took 19.777209777 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.104796126 seconds)
    (2/2) benchmarking "read"...
    done (took 2.079485027 seconds)
  done (took 5.856846616 seconds)
done (took 47.049200987 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741542827 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.743264487 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.745579563 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.743328249 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.73925099 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.743019189 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.739228025 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.740036704 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.74421681 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.742189355 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.738956298 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.742861936 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.744123897 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740805242 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741447769 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741235727 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745162901 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.73912429 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738006895 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.741021083 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740584127 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744932974 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.740416411 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.742287936 seconds)
  done (took 43.471199068 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.743921937 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.742627 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.743648144 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.743878066 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.741332618 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.744848347 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.745834561 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.741701986 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.743838348 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.744781223 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742701329 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.741414737 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.746270156 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.742464792 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745784927 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.741401199 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.745808602 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740079796 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746054687 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.743339606 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.746166371 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743089435 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.742279399 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745835191 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.743592519 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744824055 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.745501865 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.745727736 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745280417 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.742199156 seconds)
  done (took 53.986246567 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.750011429 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.754307032 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.747152898 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.746141614 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.74550607 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.744465814 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.746141541 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.745028661 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.745461776 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.746158086 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.744898123 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.746956168 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.747602665 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.746678765 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743249929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.745347156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.746124633 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.748132592 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.746549486 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.747332008 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.746959163 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.748049569 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.746568751 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.747117621 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.746981223 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.746152119 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.747585778 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.746246365 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.746070427 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.746933701 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.750147739 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.750385379 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.751393583 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.754322803 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.750279009 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.749206193 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.754815082 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.759192082 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.745903686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.747684759 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.74491618 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.747386253 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.746502583 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.746658968 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.747121767 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.750642817 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.748192766 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.749092848 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.747952715 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.747815244 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.751179279 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.748699625 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.748533246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.747487344 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.746904005 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.749211376 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.748636096 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.748476693 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.750767675 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.750113999 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.750194597 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.749345065 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.748849694 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.750411162 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.748991499 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.74952027 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.750899457 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.748603655 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.74877012 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75005118 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.750279711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.749322045 seconds)
  done (took 127.551093993 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.750765196 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746143897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.744823317 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.746985382 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745636733 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.751078201 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.747685985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750998535 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745913006 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.750527796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74954231 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.748817713 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747820074 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751889937 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749664149 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.746136603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748757753 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747503828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.750432571 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750718816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750029906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.747228741 seconds)
  done (took 40.145216331 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751772481 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.751218678 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.747909336 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752029933 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.750531637 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75100683 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.75034575 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.752304344 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750743048 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747880658 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748464159 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751382911 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748231054 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748121972 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747971183 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.749008663 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753417375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.747942264 seconds)
  done (took 33.176085506 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.748223606 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.748837731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.750757335 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.747523427 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.751694435 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.751689468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749399924 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751758739 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.753004904 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.750509194 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.754009842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751119893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.751560659 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751420552 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751290181 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.74715605 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.752022573 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751039945 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753145568 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749237639 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.750561921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75346707 seconds)
  done (took 40.195825733 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753347293 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753338437 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.751736798 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.748907916 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.750960955 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752144568 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.752803732 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.751617783 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.754868513 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.755384646 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752875717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752002163 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.751592407 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.753364042 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.752794605 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752244321 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753691405 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.752147442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756208735 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.750318542 seconds)
  done (took 36.729782274 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754652383 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754789641 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754751856 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755662563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754236462 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.75483451 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755289891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.754687011 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757610041 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757959411 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754515632 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.755976003 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755857092 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.75444917 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755839019 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75626842 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754193958 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75349858 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.755649032 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754685987 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757609707 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755141779 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757747718 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753978908 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755924624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755618402 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754724819 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754778223 seconds)
  done (took 50.830330317 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756193261 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.753593039 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.751088198 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.752795542 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.753964038 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.752395032 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.752191024 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.752898144 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.75559564 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754324756 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.757197797 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.755922822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.757668504 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.755543475 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758564444 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.755299055 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754622852 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.755357133 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753551479 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754396894 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.75539033 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757626837 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.755455559 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755128692 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754251165 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.755666508 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755919156 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75380141 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756382175 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752995539 seconds)
  done (took 54.32732526 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.775693562 seconds)
    (2/2) benchmarking "in"...
    done (took 1.77546972 seconds)
  done (took 5.23282198 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.752802648 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756482492 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.756942963 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.754868617 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75334448 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.756790022 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754854909 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754704116 seconds)
  done (took 15.722677518 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.754295681 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.758944272 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.756222917 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.758423098 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.757884986 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.758852242 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763117395 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.757522061 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.759382416 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.758158744 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.76624186 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.767523272 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.760720705 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7580533 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.756480545 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75952142 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.757448597 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.757161674 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.757483504 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.758846708 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759147936 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.76023293 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75999115 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.75644349 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.759501249 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.768204164 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.762182762 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.758817752 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.759054169 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.764499254 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.760410267 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.755975413 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.759710283 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.759793684 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.756882173 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.760462725 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766724112 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758573327 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.764287465 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759135976 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758077919 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.756024166 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.761496939 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.760439568 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759842256 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.758228641 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.760790356 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.756552934 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.757207877 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.762158738 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.765873353 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75973192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.757473056 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763420048 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.76103947 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765538837 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.761887331 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.76390366 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.769733052 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.770397602 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.773601102 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.769667491 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.762511818 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.764101892 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.771673559 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.78848393 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764312631 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.757616221 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.75830951 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.762181741 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.766777072 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774897389 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.772923693 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.759698242 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.763243408 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.760815721 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763089144 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761473251 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768169343 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.765773691 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.763913302 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762409797 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.772056414 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787690469 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.762058285 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.763265393 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.760836373 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.762373256 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.762050205 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772875481 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.762527229 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.762778036 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.762430503 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.762788438 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.762301996 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.763219072 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.761381896 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762456389 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.759870875 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.761591369 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.763629241 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763756671 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.773089937 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761489003 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764560493 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.766382748 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.763684496 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761370587 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.767371683 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.764312105 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762678436 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.764555734 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.769614235 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.760206468 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766314669 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.773221406 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.763435377 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.763619138 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.763635843 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.762975366 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.771968036 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.790489547 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.761412424 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.762517138 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.768947488 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.776886376 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760894942 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.763224166 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.763440281 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.760829626 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.759530554 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.763519488 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.76208347 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.766544149 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765539532 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765774192 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.759126229 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.764807075 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.765519882 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.765076367 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.768477487 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.764434429 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.765290068 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.766686796 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.766849118 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.766096508 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.770005302 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.764877605 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.764728675 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.765482429 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.761011653 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766812813 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.766801422 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.766087151 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.766890408 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76651968 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.764933285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.767325093 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766996386 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.766194815 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764977352 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.767224343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771083021 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.767231324 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.769523345 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.765488796 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.762120351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.764489467 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.766400436 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.765345674 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.767366017 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.766597326 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.768492523 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.774022015 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.767269947 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.768063545 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.771402266 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767666472 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768273491 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768769825 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.770761311 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.776490194 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.768788385 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.773633392 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.767041907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768354914 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.766900032 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.768014152 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.767834999 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767461308 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.769062399 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.775754156 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782558937 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.779021375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.768512882 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.773073421 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.770155218 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.775375645 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.772627552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.768153482 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.769863772 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.769669124 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767962408 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770209335 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.770135685 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.769980602 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.766096349 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.769725957 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.767418099 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.770174919 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767551916 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.768883021 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768343855 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.766260877 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768728592 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.770756637 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.768297921 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.765893186 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.768676352 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.77071622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.76960133 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.767704861 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.776877036 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.768522332 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76995459 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769545659 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.769742873 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.769711489 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.772659828 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773693081 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.771143049 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.775005304 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.77061172 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.769845812 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.776793593 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.770965796 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.76940504 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.773551988 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.769673966 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.767190258 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.773993795 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.779743757 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.769186818 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.771021314 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.771640971 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770099072 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772120991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.777179552 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.768611427 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.770369269 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.771441111 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.772352351 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.767947011 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.772657789 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.772550327 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.772586363 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.772689437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772667287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.772497138 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772802295 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.7708214 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.772906775 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.773401504 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774267442 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.780088367 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.775549992 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.771881972 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.775923446 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.772421493 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.774949778 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.772171975 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.771658897 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.772694346 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785887052 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.782888404 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778667644 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.772984808 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.773299226 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778756884 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.775707828 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.777228242 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772285094 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775208422 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.772553752 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.771679446 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.771169596 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774903494 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.773949816 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772899001 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.775640663 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.777448067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.771854313 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.772994761 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.775300169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.773009704 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.772777067 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.772512785 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.773024217 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.775059748 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773819814 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.774844638 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.773062206 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776982527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772815589 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.774809345 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.775536771 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.774104428 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.773303964 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.771881494 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.774035619 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.776577705 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.783716849 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.777708654 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.785415503 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.775462256 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78434899 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.77546599 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.779537877 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.784265192 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.770610968 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.77385328 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.773799755 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.773964969 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781911131 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.775767903 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.775401248 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.778042793 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776009376 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.774877917 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.773515946 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.774765124 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772889091 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.776082577 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782057168 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.77774493 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.778049691 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776547726 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.771075532 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.774755044 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.777139599 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.773501951 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778454073 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.776214227 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.776576156 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.776931726 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.77435073 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.775647762 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.775117693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.776784991 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.772577448 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.772809371 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.781790324 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.774975588 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779044039 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.776040759 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.78286715 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776607217 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781266078 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.777465562 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.777206642 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.774872103 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.77550144 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.778842212 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.777302538 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.778485526 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.777930982 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.776655062 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.780776598 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.77693058 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.779455505 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.776385127 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.779278743 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.775781852 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786973977 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80377683 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.777391469 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783183161 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.775448893 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.779479561 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.784362965 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.779156262 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.774780825 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.779434049 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78789893 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787615414 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.776618603 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.777763218 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776798147 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777642159 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.777298671 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.778124394 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.781603582 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.778965303 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.778464098 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.777652537 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780942129 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.776969406 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.781968743 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778441726 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.779420154 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.788156204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.780019542 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.779317901 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.780960544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.778247218 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.779028385 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.780889699 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.780710447 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780364454 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778948855 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.779683898 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787651648 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.786372934 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.779586478 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.777384068 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.781909223 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.780444419 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.77938748 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780596283 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.780729482 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779131024 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.77930341 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.780196672 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.780331321 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.777541426 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.781649801 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.780324431 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.779740927 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783238288 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.787039141 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77987769 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.7801837 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.77889225 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780792732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.779775367 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.779240776 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.787144406 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78301261 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.791865231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.789132018 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.786767318 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.779265584 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.784399346 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.79152439 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.781453014 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.781420677 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.782375139 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.781989778 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.781401756 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.784827781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782177524 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.787816724 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.781584979 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.7818741 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789169846 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.78342448 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781048234 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.783473985 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.786548439 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.781840348 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.778170835 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.781540696 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.780510389 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789470333 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.782147599 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782978755 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783330926 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.778239402 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.784218057 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786598946 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.781379761 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.781404579 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.778732622 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.782276845 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781546524 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781117499 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.777882827 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.780283301 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.782329245 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.784408226 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.790258699 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.781278736 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784232458 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.782720895 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.783066541 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783082891 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782829152 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.780509131 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.779099597 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.782996093 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782439844 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.78419619 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.786015474 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.782771934 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.785149068 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.78399667 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782245546 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78546198 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.794408186 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.793570475 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.781149848 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.784578162 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.782707218 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.785832695 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784186625 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.78581057 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.784600133 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.786227103 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.783285089 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784078272 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.783326618 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.78696765 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79999501 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.783757747 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783177222 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.784929125 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789539784 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.785705734 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.782639719 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.784489278 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.785659234 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.785135453 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.792601256 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.784024324 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791953398 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785139445 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.786587527 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.789225523 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.788048894 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.792554888 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.787680612 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785141293 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.784205911 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.790234002 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.803414343 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784035175 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794289885 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816363371 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.785006208 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.786340442 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.784990635 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784096491 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.785003394 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.78727913 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.78667487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.784380314 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785582037 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.785862558 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.787475004 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79108413 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.787126393 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.786076254 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.784816253 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.7868876 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.787581597 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.783821942 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.786454914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.786011994 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.787007451 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.786054355 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.787348197 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.786643335 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801379867 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.798319464 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.78718433 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.789773462 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.785488143 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.791203393 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.791044331 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798650981 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.795724252 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.787281182 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.789065932 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.78855085 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788334106 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.785495931 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.788282773 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.787700566 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785996253 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.784315892 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.799285766 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798801532 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.791579206 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.787970079 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787238051 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.787980374 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786460983 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787665513 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789003077 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.79085021 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.788213129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794935386 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.788580466 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.786770485 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.790076899 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.795682561 seconds)
  done (took 1059.60948743 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785989409 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784250556 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.785017235 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786664803 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785459847 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785184446 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784775242 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784783861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.784316068 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785068646 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.786232677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786783046 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78675705 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789539907 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786218284 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786001012 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788101655 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784935359 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.786685872 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785221642 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786027821 seconds)
  done (took 39.215833865 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.789055154 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.787565207 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.787373895 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790573312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785958686 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.790563521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.789376126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791358243 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789779749 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790823731 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.791760126 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792005562 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.786325838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.786795197 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78965795 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793161165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.791197085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792653673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.789946682 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786828494 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789639661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789735161 seconds)
  done (took 41.085916352 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.79058736 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.792619429 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.787566829 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.78760323 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.791523822 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.788408106 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.792724343 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.790440473 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.792013779 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.792063099 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.790574643 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.791848274 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.798795994 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.79594942 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.791041094 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.789984533 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.936818911 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.791057725 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.791720339 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.791136709 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.788771201 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.796110657 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.789201822 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.790678256 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.789508162 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.792264493 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.789833386 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.792511304 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.790802516 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.791661909 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.79698267 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.79112592 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.791427034 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.792523095 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.789893153 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.79211285 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.796236546 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.792054982 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.789174969 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.793145055 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.800807784 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.815530207 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.792072814 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.796670635 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.796340519 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.790817683 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.793862355 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.799762532 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.786899961 seconds)
  done (took 89.700166076 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.790752435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.791144241 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.786896395 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.789586134 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.790289429 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.790919224 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.79256131 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791166892 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.786324508 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.78831056 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.790863814 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.788582934 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.788817706 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.790459629 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.791029067 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.790067438 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788128831 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788103829 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.78753088 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788357875 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.787165319 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.789169226 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.792259552 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.787816395 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791518309 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788726692 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.788363033 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.791208896 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.788783053 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.788349373 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.790408588 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79136545 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.791018814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.792611254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.781362004 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.78595276 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.786066364 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.783508831 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.78607973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.784526537 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.786591159 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.787103189 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.786003681 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.789763621 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.783316135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.785586752 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.778771713 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.779062117 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.779268695 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.782164147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.784481451 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.778927291 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78031765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.779000735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.782363847 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.784396291 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.779466076 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.779123427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.783215675 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.778155582 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.778267024 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.78231651 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.777943358 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.780173221 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.781233598 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.778682925 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.778331181 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.779848551 seconds)
  done (took 123.155638732 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781615873 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.778320034 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779143979 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780236274 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782977207 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.781416441 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78192751 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.783336898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.78270075 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780237989 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784074665 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.7802842 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.778038397 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.780633958 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781141109 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780071574 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.779642789 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780369845 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.777752919 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777060089 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.775190855 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78381703 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780277999 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.77954639 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784925314 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.780236413 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780311607 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.779289143 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780153785 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.777585777 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781079653 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.779333473 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.783936876 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.783152363 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.781086087 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.774181694 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.780440101 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785038257 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.778082001 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.78329925 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.775909877 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77308098 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.780682914 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.779974195 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776446111 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.780832976 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.782521234 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.783964482 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.781334092 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777936375 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.780534976 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782512685 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780255157 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778008913 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.781277161 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.782675322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773949475 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776563409 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775197969 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.779444954 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782531533 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.776005356 seconds)
  done (took 112.071347651 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778320583 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782106149 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.779199798 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.780753705 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.780004912 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776485457 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.780645336 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.78063938 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779505687 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.777712594 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776146619 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77556416 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782435156 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781469907 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780135335 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781739109 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777824563 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78049711 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778841415 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779496419 seconds)
  done (took 37.293046224 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.776109128 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.776303483 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.771732803 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778268573 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.778474708 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.766251004 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.768801015 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767830508 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767326371 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770800912 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.780995181 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.782053878 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774276966 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776021477 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.779317625 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.777891279 seconds)
  done (took 30.091798353 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.776108044 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.778864129 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.777320835 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.780413626 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.775442694 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.772423421 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.776362131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.773982481 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.775304552 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.779115797 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.779815933 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.775543174 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.776924154 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.775466831 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.772888359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.774590718 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.773537151 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.774132264 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.777941863 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.777508814 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.775278698 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.775825007 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.777575104 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.778244133 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.773368923 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.775728068 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.774221687 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.776733615 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.773784504 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.778206497 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.776563647 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.773323612 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.773241117 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.774929384 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.776813302 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.77453148 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.77784123 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.775895985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.779225949 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.78053821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.779086787 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.775523732 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.776940709 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.778032853 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.775653537 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.779396005 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.776090994 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.773436767 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.773505942 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.776149665 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.77494801 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.778369082 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.777685691 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.777635675 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.776485437 seconds)
  done (took 99.39916076 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777638064 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779048103 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.775751882 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.778218715 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.778268795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.776421848 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779337871 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.777567472 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77415383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.780383421 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777946775 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.7798537 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774257705 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777992821 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775072976 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778740742 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.774318567 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.77463393 seconds)
  done (took 33.696261881 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.77505115 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777555261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.780955438 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.775050134 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.774540596 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776597123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773281769 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.776930514 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777904553 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775397433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774294356 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.778093445 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775618511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.77594017 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775115712 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773588536 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.777233604 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774566635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.77330521 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774551814 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.77594674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771849093 seconds)
  done (took 40.767360176 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.774916545 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.771886216 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.789740748 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.795911978 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.795983609 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.807375254 seconds)
  done (took 12.436919986 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77109585 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771885146 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772181364 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772150823 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7751352 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76828295 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770526856 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768897631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771865946 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770718507 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767583481 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772364759 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773605128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770252967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773954898 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771083796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768529451 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77173761 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768278903 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772622655 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769740639 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775847041 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768592912 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772746256 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768772132 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767029717 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770311594 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768368259 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769767622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774857268 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771576895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770475275 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77147242 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768188885 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771317597 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770634342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768567662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771178949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770878881 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769426222 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770619017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769480683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771918018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76806528 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772865558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769302301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770072888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77091808 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765623943 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77109679 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771118661 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768698818 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767953442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772899901 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771749454 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773063818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767803611 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773774318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769649552 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767593644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766575412 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77006494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769843105 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767492246 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7687966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768736298 seconds)
  done (took 118.546615871 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768857241 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769847828 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768999882 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766403845 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768427704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767455136 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76516958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771473367 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769395801 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76641372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768417404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766257106 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767715963 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767199242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765231185 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766637703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768670817 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766313776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76915453 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76697434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76678585 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764795775 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763635834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765342466 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769705604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771324486 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76271283 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765697825 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767016331 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767009976 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766631027 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762926981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765677603 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.766171936 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764094207 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765676966 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766078986 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768403845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766113951 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767152479 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765913048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771654298 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767834021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763822599 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765327711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765671568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76737093 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767366369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76525683 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767538239 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766385506 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765338901 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767594008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767252521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765484597 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76673348 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764557136 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763965988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769488906 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771364277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767367392 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76810413 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770513956 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765858103 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767315972 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764794051 seconds)
  done (took 118.311952454 seconds)
done (took 2458.419102927 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.792595074 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.817109126 seconds)
  done (took 15.302096812 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.935466669 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.880275949 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.766252047 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.796486335 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.765914535 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.779008163 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.785138342 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.768780408 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.765940043 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.764211913 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.767250492 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.949362082 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.769801369 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.760812489 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.765265199 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.862204908 seconds)
  done (took 50.581805369 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.771154973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.770960096 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.782247257 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.773182653 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.771202861 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.77915403 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.802338673 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.774002811 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.8013763 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.783126588 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.84125874 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.778277206 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.766703427 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.81745831 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.782223553 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.785498916 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.857563164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.843132329 seconds)
  done (took 33.975371046 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.845604246 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.770599032 seconds)
  done (took 10.315865835 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.79848535 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.76612248 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.798944057 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.78447645 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.768211173 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.780200485 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.765771855 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.762175101 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.784037791 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.759440256 seconds)
  done (took 69.466116086 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.775210327 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.768891593 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.769575501 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.766967746 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.758496912 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.765378557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.767751998 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.769141923 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.44722426 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.802947762 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.777031035 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.774959615 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.763719876 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.769117492 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.766773992 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.79666047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.958679 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.765474807 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.767206536 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.776310981 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.768475062 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.836894623 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.781677933 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.767467558 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.799730707 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.451371746 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.775501691 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.772656656 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.894660684 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.768154851 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.768710708 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.773414861 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.773727864 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.159376308 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.066617394 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.767709733 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.778715585 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.780332032 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.769356935 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.884815867 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.773450245 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.774327275 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.639845446 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.049306462 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.889256817 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.81277972 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.144871336 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.775355893 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.774635901 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.80264746 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.775197081 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.771292796 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.786248539 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.281260632 seconds)
  done (took 127.196007262 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.766005229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.028990914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923797864 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.767562099 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0533146 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97207028 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.767960678 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815511745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.768059604 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996534539 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987586922 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876075629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.764547096 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.770053463 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.766836888 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.762283378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.924416078 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.839911875 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.769027764 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.762611041 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794588371 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012420454 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.896802947 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.769243926 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.790667853 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.978954934 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.900362223 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.876716733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.241433437 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.76676897 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831475365 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.767421362 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.771518327 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.764235609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922325824 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.861260864 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857624031 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.765792266 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764991162 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.764516123 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.436240189 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966281362 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.867972147 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.909542551 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.016260379 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.970507495 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.55548021 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.763448268 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.506582715 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928644163 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.001079915 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.000052826 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.890470522 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.767746198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.28366152 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.763241407 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.765356264 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.006070219 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994376989 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.868009636 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768171788 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.764841206 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768161729 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013522021 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.766819743 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.861603523 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771890944 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.770020632 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.863239835 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869943568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997791589 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978731895 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.802285101 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.086696617 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.243994516 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016802795 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.838067403 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002508932 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.767036791 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.76620558 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853164793 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.727353729 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.966756425 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.017346941 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.020548413 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808412902 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.492797486 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.766429529 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.001669692 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992473417 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.069920533 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007799746 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.918656598 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.089759009 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.766638729 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.767080487 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.027475879 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906000817 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.769002052 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.12658619 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003126852 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.337196047 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804265197 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108044284 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901110042 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.768686058 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.410738416 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771104449 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.997501012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.812763654 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.767414242 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.767278174 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.989436366 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.844736512 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.770405812 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.409267622 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.834276479 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.772892676 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004338189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770047729 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037015893 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779455488 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008788603 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.024431175 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.801925129 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.998966584 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.00895466 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.772148924 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019283021 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020251438 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.884882327 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.990825285 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.395714109 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.768488011 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058492529 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.769742428 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.768841499 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.9402167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.773903792 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948021756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.770820652 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107317713 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793717457 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926017825 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769814111 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.027924277 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.807596358 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824971966 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.77536995 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.90403956 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7748504 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.729140573 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.924970121 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772386772 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.77026946 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.509602607 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.770647091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926161453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.006669001 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798242955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.845636773 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.439753535 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.767297906 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855838761 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798531835 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.121589044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.772872636 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.988407716 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.774851409 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.313886571 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.769621554 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.010712136 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.954159111 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.775627846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.771484998 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.676818207 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.76845617 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.769331897 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.936031075 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.151586119 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768503507 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97578127 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.770726983 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915590104 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.774389601 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.858713587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.131163581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772322117 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.776059276 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.775309469 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.774593149 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772487002 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034945781 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.805793359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.298279114 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.909263719 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045860715 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.096290313 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.024688548 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.818626639 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.779597761 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023040746 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.774773493 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.83816943 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.773091255 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.79570623 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010406682 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777493836 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985739599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051657105 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.697216447 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825678572 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.770552825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774343852 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.728423245 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.931625154 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.866212896 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.775668182 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.771953416 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.899571355 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904641037 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985388074 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.773528568 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.111286906 seconds)
  done (took 882.259214197 seconds)
done (took 1190.790261409 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.774667623 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.773694188 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.759124488 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.776591527 seconds)
  done (took 28.789503434 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.782569096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.776705058 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.783065653 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.7771263 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.781866454 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.778739348 seconds)
  done (took 12.387381669 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.831698767 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.771453926 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.774705806 seconds)
  done (took 21.084460655 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.848062519 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.183025313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.893132876 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.21389732 seconds)
  done (took 9.848436881 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.782623071 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.782072119 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.782102456 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.781709103 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784870561 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.782806982 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.783534182 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.785060358 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.782629519 seconds)
  done (took 17.7540926 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.179105659 seconds)
done (took 95.746849307 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.871531141 seconds)
    (2/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.206276641 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.772039631 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.832032226 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.811724473 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.923330849 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.923181304 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.872021673 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.828893807 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.160700315 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.819777454 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.973869313 seconds)
    (13/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.307869594 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.369261479 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.986929078 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.426649508 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.845977872 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.789791774 seconds)
    (19/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.999216311 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.913306429 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.885594355 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.884477205 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.369106434 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.452657754 seconds)
    (25/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.253784508 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.827054422 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.857832762 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.716548702 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.914518747 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.81751843 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.790895361 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.876193841 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.814930818 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.705254525 seconds)
    (35/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.314072532 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.985396094 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.514256204 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.704804496 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.909813271 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.117548913 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.042308493 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.120964226 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.780992913 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.850363892 seconds)
    (45/309) benchmarking ("sort", Int8, false)...
    done (took 4.814928701 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.819469763 seconds)
    (47/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.996918009 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.167571667 seconds)
    (49/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.073080034 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.905745519 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.817460015 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.850279304 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 5.524808133 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.799176549 seconds)
    (55/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.003083746 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.865848002 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.009005323 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.179703236 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.901347441 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.823331424 seconds)
    (61/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.111377961 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.862383036 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.807895198 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.798246451 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.881724513 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.430381733 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.972720168 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.79504936 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.778217621 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.157373362 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.792711112 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.471352653 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.09137656 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.93058709 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.991408123 seconds)
    (76/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.923170988 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.796579396 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.88178232 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780103229 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.12671628 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.186120044 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.797104182 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.887248666 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.168584617 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.88415766 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.120767022 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.780514956 seconds)
    (88/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.380390548 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.404855956 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.9240134 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.744023592 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.087007072 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.202738467 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.778388902 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.620340902 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.802050575 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.040260536 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.874132239 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.939889407 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.870212636 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.822922446 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.583956329 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.804328 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.131812628 seconds)
    (105/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.824115193 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.933979128 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.950465169 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.001603859 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.103746547 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.982969684 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.858909453 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 5.54074095 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.797332582 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 6.799478337 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.478651051 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.804677318 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.891606911 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.985401465 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.903566843 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.361338959 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.981425827 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.827975551 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.993645543 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.233184454 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.821272924 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.069017545 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.067806459 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.774711584 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.028441025 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.107213058 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.881838081 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.119754378 seconds)
    (133/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.6124426 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.805220862 seconds)
    (135/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.788337321 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.163408795 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.821393311 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.900740275 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.814709094 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.005778024 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.329044245 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.787685549 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.089244056 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.934031114 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.829298302 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.874072576 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.877133515 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.783949599 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.490125948 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.831728962 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.171788696 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.911837061 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.802962373 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.250651065 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.799928084 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.148444794 seconds)
    (157/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.888356251 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.341715281 seconds)
    (159/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.177111411 seconds)
    (160/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.19930176 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.819586273 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.113275953 seconds)
    (163/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.807200592 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.486725623 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.15176117 seconds)
    (166/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.942300836 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.911135628 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.807433371 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.094260071 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.641834031 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.163793895 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.116372884 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.812280213 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.194196374 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.887658843 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310093069 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.786485706 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.031044589 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.90965536 seconds)
    (180/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.787146593 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.56343806 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.956166427 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.806936532 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.827249416 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.024263554 seconds)
    (186/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.405213623 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.864397905 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.825902558 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.78559613 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181547925 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288379726 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.117856648 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.838149794 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.103166671 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.80440143 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.141475761 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.966252577 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.184938429 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.929594896 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.918850096 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.440489584 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.871830502 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.503908615 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.968068671 seconds)
    (205/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.910095316 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.864317498 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.8215269 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.717248209 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.917990182 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.042534633 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.89423637 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.835134222 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.720107142 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.798766589 seconds)
    (215/309) benchmarking ("map", abs, Float64, false)...
    done (took 3.69734383 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.907166142 seconds)
    (217/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.086993309 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.01560924 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.038652818 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.593844413 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.275782588 seconds)
    (222/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.016118592 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.799276427 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.876722558 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.032249174 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.138634129 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.78472898 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.85793853 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.01367503 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.000090134 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.138390307 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.21038523 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.994600272 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.896979393 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.82330875 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.909677271 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.128719508 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.846773996 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.911354401 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.977851932 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.613220421 seconds)
    (242/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.820956123 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.2695792 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.489579126 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.971657615 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.190413846 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.693866258 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.807110962 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.243247735 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.901492234 seconds)
    (251/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.068675449 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871686005 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.8197688 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.812423444 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.266826728 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.885275998 seconds)
    (257/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954096395 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.431258384 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.011308615 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.242227538 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.06536086 seconds)
    (262/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.931381936 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.891814194 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.450946843 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.90060361 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.837569648 seconds)
    (267/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.060906403 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.887027474 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.003060543 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.234365468 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.043332063 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.841793019 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.178434357 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.029692666 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.790757695 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.630018919 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.894049672 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.185724894 seconds)
    (279/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.015499245 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.789678064 seconds)
    (281/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.830292922 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.80243991 seconds)
    (283/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.975332227 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.161749069 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.110985271 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.811905583 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.887108234 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.932820897 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864838046 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.475773239 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.000036152 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.102192532 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.897782244 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.944558076 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.829346501 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.592126664 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.950434005 seconds)
    (298/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.378463647 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.837419426 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.806267457 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.87309585 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.457449104 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.806937526 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.195930789 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.828550002 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.807311617 seconds)
    (307/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.29578793 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.352503282 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.025721495 seconds)
  done (took 995.665166962 seconds)
done (took 997.661002506 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.841592875 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835832361 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.812438059 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.838219003 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.929304947 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.848296879 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.82839692 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.817619643 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.864121521 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.866383871 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.816729997 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.852036915 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.819113018 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.816192046 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.816305644 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829304014 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.130491338 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.848777132 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.834848293 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.825101685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.832840952 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.814627618 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.864355396 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.849792898 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.82241009 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.820360817 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.822459224 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.841314269 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.932916052 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.824745488 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.821419958 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.831448896 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.127277024 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.842100772 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.81222026 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.841719024 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.826817734 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.826108569 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.821269408 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.851823383 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.27683683 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.82176753 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.821561815 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.821272998 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.818500554 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.822238523 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.817331593 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.825155661 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832473572 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.830561177 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274523729 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.836982159 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.820992376 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.819702289 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.828616498 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.81927141 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.823204095 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.832803047 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.83694647 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838114009 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.120547027 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.84674187 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.820191649 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.835364342 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.830895902 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.30673543 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.818649129 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.821441541 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.275046629 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.828338099 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.30907348 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.832160661 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.818072896 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.832761822 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.85206817 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.128526388 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.83847173 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.816429601 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.825609989 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.817657343 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.830251412 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831570868 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.823547676 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.818677654 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831755205 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.850422289 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.827360412 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.818276468 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.829120984 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.838852773 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.826424623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.829636336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.822182945 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.815239981 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.830068993 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.825555868 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.822737543 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.823045259 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.823643056 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.833194808 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.271568206 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840228894 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.81720491 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.81686371 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.818392662 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.833999691 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.27585188 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.826853296 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.843443222 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.867621804 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.822988639 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.122234962 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.850493008 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839433469 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.827419397 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.82338667 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.813342336 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.125406666 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.300705931 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.843898013 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.820116682 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.81896149 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835108871 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.824416108 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.82152836 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.133926098 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.84841461 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835311166 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.944205967 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.83017078 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.852702179 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.822143294 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.822558964 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.856483946 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838151962 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.852715312 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.826354402 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835058297 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.839224993 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.820342109 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.837234889 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.830375904 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.821049263 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.832502719 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.816089548 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.854668755 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836824683 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833020186 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.843162444 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.942822 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817547204 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123693462 seconds)
done (took 286.438443027 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.890445858 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.818850276 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.920600869 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.820892287 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.903635169 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.907241498 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.816968295 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.817032412 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.815227021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.191075325 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.814681291 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.818611656 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.820628764 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.818291532 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.9040572 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.819140756 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.817043402 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156012711 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.821487201 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.889830596 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.810122555 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.816720773 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.820322547 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.193001489 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.816550544 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.816566354 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.893267733 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.819912988 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.160318832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.812217888 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.818626389 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.161069905 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.913142716 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.838987862 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.832038477 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.826651339 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.90438902 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.825792369 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.907960506 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.904262399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.920080983 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.860283217 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.815928444 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.815120141 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.823908021 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.823519943 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.816063121 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.846936882 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.818680525 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.822602322 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.157077903 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.830236092 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.827460366 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.819846061 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.820778912 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.844522311 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.81751069 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.822524029 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.91419784 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.821531735 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.882991669 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.19928065 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.196096193 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.821489259 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.814856777 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.820370105 seconds)
  done (took 180.991246687 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.889535071 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.893357628 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.88829805 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.826115599 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.871958586 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.893785584 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.824443614 seconds)
  done (took 14.831517433 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.829725094 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.822503141 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.871432455 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875930678 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.821183573 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.968537725 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822326421 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.83467313 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.821152698 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.874989071 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.822922325 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821507247 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.830253826 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.825245115 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.870875721 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.832792138 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.939640414 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.822928621 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.827338169 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.976251422 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819697469 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.830212385 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.879523575 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.836301846 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.826240834 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.830320275 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.409156932 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.826018232 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819208179 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.823511845 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821750652 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.864479645 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.822937301 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.814467139 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.820589212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.94300858 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.823598884 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823257867 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.82552038 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.819533812 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.828098634 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.825262343 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.827727514 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.822277548 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.828422124 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.849380408 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.824624824 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.827000273 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.825849568 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829407267 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.878583083 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.827666898 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.825649388 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.823644529 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.881224015 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834037108 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.829188351 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.819961533 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.828440798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821844146 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.98156734 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.87068677 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.822931512 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.877236309 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831300382 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.829620242 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.825029002 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.824943162 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.92329112 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.825056437 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.873109916 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.825950306 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.985798665 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.851491846 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.829168293 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.828334618 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.83109993 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.826951564 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.820820377 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.835561818 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.826262624 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.834119403 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.831425588 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83368396 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82891053 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937903043 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933112899 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.820979834 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.844337754 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.832321223 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.823287925 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.883981347 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.826382026 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.825416079 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.881966306 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.941877719 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.888000627 seconds)
  done (took 201.512328787 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.83403485 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.835833718 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.830369399 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.847988497 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.826228019 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.828656406 seconds)
  done (took 12.754678731 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.831858825 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.827646931 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.828748515 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.828020996 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.832835971 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.832053408 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.830368267 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.827838278 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.834536417 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.829451345 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.831686885 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.832972448 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.827853969 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.826945582 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.828232571 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.827336007 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.828748375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.822648366 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.828065881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827995028 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.978810934 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.830015307 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826841059 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.827928184 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.83353056 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.827335199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.839624755 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.832095515 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.828851358 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.837052161 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.832544697 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.832718155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.829085736 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.83411037 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.836404998 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.830176563 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.837935393 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.832447337 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.826651729 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.83153314 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.83067998 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830540892 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.831550104 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.8308071 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.835030034 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.834383715 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.833107064 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.838389295 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.833428991 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.829615684 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.829204194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.830308451 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.832880601 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.829330295 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.834418099 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.835462574 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.841079757 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.831962495 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.83444567 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.833876213 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.829340253 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.829332135 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.834925829 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.839251413 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838073302 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.830190625 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.831625405 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.83646631 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83206731 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.831867104 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.835709259 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.829312515 seconds)
  done (took 134.784072095 seconds)
done (took 546.634206472 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.950556497 seconds)
  done (took 8.704339694 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.961923452 seconds)
  done (took 8.807777691 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.495924073 seconds)
  done (took 10.258262187 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.840306904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.867798572 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.83217868 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.849946168 seconds)
  done (took 29.161454694 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.829298853 seconds)
  done (took 8.593329278 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.844041746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.830919913 seconds)
  done (took 15.471652081 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.911992885 seconds)
  done (took 8.67693574 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.924760276 seconds)
  done (took 8.693789337 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.842778124 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.867531875 seconds)
  done (took 15.486814615 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.81747416 seconds)
  done (took 8.578760858 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.468568871 seconds)
  done (took 11.237544808 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.837499263 seconds)
  done (took 8.615224805 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.889449701 seconds)
  done (took 8.651507741 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.030749043 seconds)
  done (took 9.793367615 seconds)
done (took 162.485332846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.834045563 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.829339693 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.833066266 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.830450215 seconds)
  done (took 29.085865499 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.870882053 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.870220492 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.874099449 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.883675795 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.873403795 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.872604764 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.864059184 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.86427054 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.881446188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.874030942 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.875174277 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.875246572 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.874654182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.866954973 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.877161976 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.874774575 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.881637447 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.872291218 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.865663057 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.877219647 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.837824554 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88409033 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.876953205 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.840959925 seconds)
  done (took 46.67489792 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.038560262 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.910787453 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.99263067 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.89274467 seconds)
  done (took 9.59629426 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.890875206 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.888185564 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.905775657 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.944909839 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.966121627 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.904178258 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.863384367 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.863877482 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.849501449 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.892944994 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.968202235 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.888387362 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.993166709 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.840772052 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.025366472 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.840284408 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.839268711 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.893240193 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.944557875 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.959183046 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.842109241 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.892992671 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.898364754 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.890466125 seconds)
  done (took 47.451350191 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.840494762 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.84826883 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.846882735 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.842433658 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.838126599 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.839901495 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.845449001 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.839221548 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.860866327 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.840940157 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.839334307 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.840194359 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.842231948 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.841643498 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.841275654 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.853768163 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.854193296 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.84140142 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.842053011 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.848551814 seconds)
  done (took 38.65055801 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.832171743 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.686980268 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.185150425 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.092391645 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.833945965 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.837555064 seconds)
  done (took 31.233789923 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.854383417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.848109127 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.841411084 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.896817615 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.976046617 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.850893485 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.843627759 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.853466054 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.888093585 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906813594 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.866051157 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.869831368 seconds)
  done (took 24.263727336 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.836634413 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.837612442 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.840928652 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.853859285 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.854885187 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.84977447 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.848127478 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.836784061 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.857860196 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.862397914 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.850156402 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.854159905 seconds)
  done (took 43.956133261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926383916 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.727037578 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.888124806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554199739 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309824898 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048796038 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352342189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176017115 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.842160452 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112263649 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85863249 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945350609 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093309121 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83946221 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858367501 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.309681266 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127436202 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066729122 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861773596 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569553409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883482115 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40454302 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.705420024 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890858358 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052042646 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.968137884 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.100582735 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.79727238 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970963229 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868854668 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848343878 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840529972 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113080202 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209148069 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945387148 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851144773 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495897035 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.561475856 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.82877254 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.604203945 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580049332 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.955905713 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847263412 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840301659 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774113088 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358851216 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216395355 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.847361714 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.551797038 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.837762966 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851509291 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929875462 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.844890947 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.656541356 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797614178 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121022891 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.839332386 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846567541 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409081881 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915694364 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397423605 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.822363918 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.036036206 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587348361 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225297697 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.987133197 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.845003192 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846442922 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775539248 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.56688596 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889058176 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987422489 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.859974389 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49232011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136099857 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.874935679 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.235100682 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128863833 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.654389792 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.821061184 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071732331 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793943417 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778558915 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.702457787 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.776716879 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102831523 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877198175 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.477844047 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881545911 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174728615 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856898967 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860923667 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850701104 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069199516 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.409118371 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841801965 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.62433232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987244221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865311399 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177505455 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781082633 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.847122646 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097790499 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.056062119 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.108347639 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.356254081 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002672504 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844794027 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.928389391 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.794531947 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898137344 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.111623431 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895738214 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922081753 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898105575 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.801957344 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138765173 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869051011 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.015078674 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.875147149 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973598812 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.175499349 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13361496 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90912267 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851438284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843637964 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.661904121 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396390008 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.110827226 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.846125936 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385060167 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898380989 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.847107297 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779375366 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.449820771 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85992241 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.81695352 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069035325 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.830040905 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162109108 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780292609 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991079417 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.958551191 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.072273044 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.481644625 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.905317674 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102017971 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368563269 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.146573174 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899851735 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866525746 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962994712 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869104308 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.310083335 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146625266 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.852552627 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.854778611 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670309876 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.849767714 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850512754 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.849098004 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643643343 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124458847 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866784739 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855500114 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.737342786 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.861442099 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915397813 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853360501 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856579809 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397071391 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595822643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.857544136 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.479327566 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073193386 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858056019 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.589631028 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955541564 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.932011574 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120863635 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90319468 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.783088119 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.55865727 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.543089055 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845920123 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783733354 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.848134992 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857833606 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859567408 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.229032612 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120800948 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886227117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.586878574 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.887154739 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861152397 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.854272187 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849648356 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.391103267 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930784285 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401868494 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.899496242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98759094 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.864073611 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783795498 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853652306 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852921927 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848379737 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.807633276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901635414 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.586631615 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220935714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109373044 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.499677358 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86969284 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.616155064 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.90443939 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.893005487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631834633 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821551662 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.888906973 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877187191 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.858521957 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.59215047 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.553933467 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415756957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152786915 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151510448 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278492185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.356363552 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156849885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187684234 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085968315 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38113114 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909679953 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192739817 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799418181 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93695595 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.489208217 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190830694 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865788119 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080766759 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236618162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.674428538 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875415673 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064064402 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889419898 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.800443957 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814792124 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.059466413 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991915916 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.559199109 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042232434 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182016301 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.499502568 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.9641592 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.847925112 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.534932247 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934297184 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.568227839 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213666595 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.428745287 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.763052008 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33619384 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865358895 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299662796 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200251918 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.207501091 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.98069162 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790712199 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86451913 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86561238 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.853673226 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.852061214 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.734451971 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.106092299 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86305993 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089059274 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.158130657 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150856461 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.767003901 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.859734944 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854783376 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14663418 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.681475781 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019980674 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.32292077 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383081337 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856140792 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786630466 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789696834 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.546594162 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855012229 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832288184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077824979 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.043067795 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808012078 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398138551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100359348 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109509397 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.868962768 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123742909 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12348842 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.673692675 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883594048 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.955290796 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.502275204 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.953691479 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125453307 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090985763 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65503248 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084763151 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.880571375 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.667318431 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.856324375 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072670487 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.121292549 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.713785431 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078199916 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.575495188 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.856360387 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167860925 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910968347 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.762850576 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.002638944 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.04941478 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868445124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941635991 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867080351 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.866770125 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866404495 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90535934 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.768126146 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.972289055 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.871192151 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945856 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932839192 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.383743848 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863039727 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127744716 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204444963 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172142668 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911229421 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857441429 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866476264 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79154932 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992456758 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.303285816 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130850188 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.986748893 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.158230827 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881193763 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494773169 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254040794 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098622774 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133724648 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.749892589 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858681263 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.886381191 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.124661665 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870739459 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.070384784 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082971199 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16585165 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328017497 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.138599338 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222758816 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1317241 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.22976203 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857617406 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444780044 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.863950922 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546961625 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.899636811 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.732425507 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11721044 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86844627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234227175 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877702845 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.058437482 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.374752077 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600424698 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143434327 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844935876 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.90637252 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132701772 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.235663442 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167068127 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932451798 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869326515 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.614880608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997545504 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74561139 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.129928736 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862071258 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072068472 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.568019112 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.871247134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132513444 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163845344 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.857960306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.759741081 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870506638 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.869768118 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082893024 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1223213 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110418023 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871889663 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860837681 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.675481008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131125831 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916123804 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791433529 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.865491522 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957978578 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107417806 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878505112 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.550599117 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.573350071 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155531338 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.774349147 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883754977 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383991885 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232196901 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176756454 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400330855 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084731782 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421397855 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.85861419 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165024246 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.866779285 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388568896 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169845066 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.867927041 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.502782729 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904769088 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.132101879 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177794935 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.871259527 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.625964821 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.829470978 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084008947 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464240216 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803245069 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875042933 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.922582339 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8670674 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.993129094 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871948508 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.767880884 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837712071 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.612864122 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35561399 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.867927883 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.853117682 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.579540593 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.508141267 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898410578 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003232681 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870179617 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.577584748 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.156998144 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11848184 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.518790726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.874657771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.868166713 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867238483 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794477327 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062065244 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.244250275 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158754076 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.348466762 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.904022241 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86962092 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.081015402 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075788198 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.775107624 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995851013 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386352495 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906763912 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.635490952 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.544798838 seconds)
  done (took 1676.343652408 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.870785485 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.879327899 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.894276219 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.877355307 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89216554 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923941908 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.930239243 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.949629835 seconds)
  done (took 57.01558852 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.865249113 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.069401032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.872259084 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.86374359 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.879051306 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.867488897 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.04149317 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.871749903 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.882405461 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.876583183 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.867964675 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.865929687 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.203814453 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.890267747 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.875376999 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.863556081 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.872194768 seconds)
  done (took 74.357207702 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.867536158 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.091901318 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.93474828 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.876954197 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.810993183 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.867438844 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.983203186 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.893966146 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.868576246 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.085792662 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.514747118 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896389947 seconds)
  done (took 90.491510171 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.877316669 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.87435829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.873302404 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.875021447 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.875961549 seconds)
  done (took 11.177561259 seconds)
done (took 2182.088120832 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.228451959 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095365156 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.096614784 seconds)
  done (took 5.99021774 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.014598608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.062182443 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.181871503 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.203436398 seconds)
  done (took 10.263017452 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.156849606 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.236686644 seconds)
  done (took 6.190284437 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.273366676 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.871963957 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.26183556 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.863796379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.867717565 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.867361133 seconds)
  done (took 22.401407237 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.86947196 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.873079618 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.870657587 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.872166427 seconds)
  done (took 9.283545378 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.850316038 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.604416122 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.853347269 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.866969397 seconds)
  done (took 20.97233639 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.617334972 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.302239637 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.613779821 seconds)
  done (took 9.330947514 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.338634298 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.754903168 seconds)
  done (took 8.891499393 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.147266389 seconds)
  done (took 3.946274726 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.898217398 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.141013503 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.383870289 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.383195494 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.513116392 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.726828961 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.196520041 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.120725587 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.282011362 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.308950356 seconds)
  done (took 24.752394952 seconds)
done (took 137.455761475 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.254486596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.111009278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.081468227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.265331998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098085484 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.071979096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.272859646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.250859996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.724491337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.715051951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.222118383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.097517451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.018392267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.114583032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.02277806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.24302806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.093519759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.278773685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.959555091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.118764606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.274731846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.848646959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.062899759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.866525677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.095528026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.023405705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.442863387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.245371676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.107753579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.456041477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.025741019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.276607541 seconds)
  done (took 171.541376336 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.624744165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873815678 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.875148944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.869940524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.114081394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.876748343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.871391752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.870013369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.025914506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.008432124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.882009339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.133508682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.883233266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.869566716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.875274195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.870767188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.138917257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.677803894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.878830423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.880900119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.887457097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.012774973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.886642214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.049044401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.158890585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.887620406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.859336579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.886379496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.875691215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.850295659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.880086206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87048749 seconds)
  done (took 207.013531349 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871481268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870591627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.870322305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.870690878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.871442215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873100954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.87137834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.869954811 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.565849189 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.555409692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.879101998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.879140515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.881829191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870483389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.878245904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.871024499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.876374764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.880164822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.875083754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.882006877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.88172979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.621243956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.879849402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.652109294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.882638597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.884751635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.873345642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.899221949 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.892164746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.895022799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.891193601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.871185441 seconds)
  done (took 220.804036914 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.067532051 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.878763896 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.880391329 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.831851175 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.878850497 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.87907036 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.836064845 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.068743898 seconds)
  done (took 19.150175855 seconds)
done (took 620.322405895 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.369421155 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.222761378 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.057890378 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.906540301 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.239869115 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.943213015 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.900346504 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.962677898 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.628571885 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.971462922 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.592451052 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.917344863 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.685527067 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.92503165 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.026960393 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.95879159 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.492078459 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.589203074 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.082297728 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.048364785 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.080133903 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.840367784 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.977277289 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.66014941 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.705967363 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.87910458 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.07548195 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.499377642 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.912742509 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.067855313 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.713707785 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.288170079 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.912470282 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.899158454 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.953330374 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.933673426 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.238647109 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.910569881 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.019945543 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.642331016 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.039261371 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.517941999 seconds)
  done (took 104.094031639 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.869816873 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.868800509 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.867869366 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.868756591 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.869071849 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.868821991 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.868149739 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.86811728 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.868974474 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.868115505 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.868950937 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.87031512 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.868332856 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.869215642 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.870033223 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.869922909 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.870781007 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.870709783 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.868296961 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.869102805 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.869679958 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.869742061 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.88326231 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.869089547 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.869198016 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.870067318 seconds)
  done (took 50.432656769 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.882862406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.036557611 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.145686976 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.9025761 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.88326105 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.886604167 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.902491477 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.888561076 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.886701643 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.885524643 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.989572906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.891003384 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903352187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.137741212 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.898757071 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.884551158 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.885669522 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.884706464 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.044945523 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899476016 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.903058767 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.888540927 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.902363555 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.897790754 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.884956459 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884928047 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.887959654 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.360063745 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.894426654 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.989353535 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.928668335 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.906124423 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.330424216 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.148789541 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.938509424 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.891589943 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.883452438 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.994823686 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.891092879 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.882923494 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.902522927 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.890433703 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.134176098 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.368728065 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.898150463 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.886030547 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.371263778 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.002131464 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.926109134 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.896062249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.139967794 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.901332705 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.886607422 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.886091743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.921897943 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.89451007 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.884972575 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.232699697 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.895917208 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.903803056 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.889671944 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.884734498 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049884816 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.895254641 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039471842 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.895432605 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.891141174 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.886044445 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.138454046 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.901671757 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.382686566 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.900571158 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.885994735 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.992561903 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.043755714 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401081633 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.900169844 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053092294 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349156847 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.912016091 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.893181234 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.352266406 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.914482361 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.894521734 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.889163255 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.888472207 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.887299622 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.933187863 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.902500311 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.310909432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.389411108 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.248833931 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.916507173 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.902585198 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.888240121 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.235669375 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.896773828 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.889454849 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.133206826 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.390908075 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.901278276 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.896631796 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.364687166 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.907266698 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.911062606 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.897846257 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14461697 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.90549235 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.933800971 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.889760129 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.894422075 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.891447758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.908430155 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.896146027 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.890297952 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.354404816 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.014046683 seconds)
  done (took 234.296982874 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.883976581 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.883618452 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.882760975 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.883777687 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.881639424 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.888128374 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.882220467 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.883353205 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.888135342 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.882899963 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.883047696 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.881649581 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.884937203 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.889866563 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.923443478 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.889277877 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.54344745 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.883215104 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.88131829 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.882844718 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.53470514 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.889052914 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.883073882 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.88743681 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.881732612 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.885724223 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.889313634 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.917297938 seconds)
  done (took 167.969437947 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.89331202 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.00813025 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.908159295 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.919269171 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901031112 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.890196317 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.917174105 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.906768924 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.895870822 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.887322534 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.888842597 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.950425675 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.901820606 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.993703626 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.92078006 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.922107145 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.996280984 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.898553767 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.88993819 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.88891565 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.919575208 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.884794402 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.950180293 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.016405081 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.90678177 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.005952892 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.897250921 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.891594697 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.89058353 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008745132 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.903314644 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.950731985 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.918514638 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.908584396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.010531332 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.008719848 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00073767 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.91970113 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.893895617 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.88756628 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.888091435 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.878899126 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.009325787 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.907406875 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.891937651 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.000038077 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.90827675 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.892722211 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.900928871 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.89018637 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.90380411 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.90987578 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.956408553 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.024145558 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.924107754 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.916279816 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.916787506 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.17507674 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.904134488 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.993858292 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.885445315 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.00991598 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.913110622 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.882518356 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.894172857 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.897818421 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.920132948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.92266418 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.998882017 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.899547996 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.994606055 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.926386594 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.898038078 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.89127809 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.895667699 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.011840662 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.010488884 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926696313 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.929065011 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.922036987 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.885773506 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.893844026 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.882110447 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.909583397 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.895990574 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.00836367 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.014015777 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.900647207 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.895207112 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.895650186 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.895059087 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.918705033 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019831863 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.930133873 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.993767698 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.960233098 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.967235299 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.905998762 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.906807369 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.896828159 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.955082844 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.906654128 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.904645829 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.225382351 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.966990916 seconds)
  done (took 204.930370966 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.359711913 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.949206245 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.950991427 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.214355553 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.321912855 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784973505 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.939228206 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.940868841 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.965144507 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.135720475 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.014407893 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.967477002 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.929005678 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.915528969 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.942991429 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.964109105 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.952626716 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.266592172 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.060529993 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.045373243 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.92151738 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.254972264 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.262447497 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.389528051 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.977355109 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.293625381 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.624923428 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.195708301 seconds)
  done (took 62.365274796 seconds)
done (took 825.892948978 seconds)
SAVING RESULT...
DONE!
