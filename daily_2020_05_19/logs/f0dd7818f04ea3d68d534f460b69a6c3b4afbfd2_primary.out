cset: moving following pidspec: 25750
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304530521 seconds)
loading group "string"... done (took 0.643559556 seconds)
loading group "linalg"... done (took 8.145979273 seconds)
loading group "parallel"... done (took 0.16832655 seconds)
loading group "find"... done (took 1.320674507 seconds)
loading group "tuple"... done (took 2.001840836 seconds)
loading group "dates"... done (took 1.354789274 seconds)
loading group "micro"... done (took 0.205682768 seconds)
loading group "io"... done (took 0.944742174 seconds)
loading group "scalar"... done (took 40.888350727 seconds)
loading group "sparse"... done (took 12.871167053 seconds)
loading group "broadcast"... done (took 1.022479151 seconds)
loading group "union"... done (took 14.594912397 seconds)
loading group "simd"... done (took 5.052257187 seconds)
loading group "random"... done (took 9.848328835 seconds)
loading group "problem"... done (took 1.701127782 seconds)
loading group "array"... done (took 21.634404808 seconds)
loading group "misc"... done (took 1.645393776 seconds)
loading group "sort"... done (took 3.368767467 seconds)
loading group "collection"... done (took 18.145133607 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542253316 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127053616 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140234445 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123418325 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153924595 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120387779 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12679122 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086212521 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.92744601 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15226866 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115335312 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417704192 seconds)
done (took 5.500739202 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177795169 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089347899 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079827967 seconds)
  done (took 1.311220599 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06637541 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129848186 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068718473 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068883983 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071993214 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068594728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069130055 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068727329 seconds)
  done (took 1.688304737 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074543957 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070387216 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067719947 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070308302 seconds)
  done (took 1.4261748 seconds)
done (took 5.823044529 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.804558611 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215574338 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189065612 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41685336 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138865211 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182650477 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657908124 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330054824 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19798657 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097201015 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11688293 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.399219732 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127690766 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643739053 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077684344 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096315402 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146112845 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.476650546 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071355116 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085999818 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094869007 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13145405 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083469022 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079622638 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151671247 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071165618 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144254888 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084993951 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069045119 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.258239845 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17770379 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662280407 seconds)
  done (took 10.663049335 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104452724 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102370767 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071179227 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128142856 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101554353 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072654975 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077414909 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070166811 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092583329 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132662396 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094735034 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111787317 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068953743 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072182283 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085794294 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20153416 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080710971 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083007778 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073120131 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081515786 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110938609 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081089207 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082879556 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.086307592 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131633928 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170678119 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100666236 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100104237 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067114267 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082088405 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115362631 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130939192 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069498481 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068244824 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128469731 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097411102 seconds)
  done (took 4.714621569 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.021391181 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151495202 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091315748 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138000721 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067056065 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113932839 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067866661 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085930888 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241402176 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.447468814 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091497818 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628704489 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.125710131 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066681266 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120077196 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108646023 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076594965 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071492032 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070115832 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.295520823 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10217508 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111862893 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086174058 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073843183 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072792289 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067269675 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074050335 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066066201 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070890257 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09134718 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078664356 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.347154133 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126217629 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071318008 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.970475066 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171188234 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070276384 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108686091 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16880846 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096678945 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143670351 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069998113 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065966798 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.302205898 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067318779 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073827485 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068795996 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087329691 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112123735 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124017211 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067456961 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068728038 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172740365 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065403293 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082757188 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.236506312 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152936117 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06915753 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.306109234 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095664731 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074270714 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067222721 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.216778787 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120169935 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071140262 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070999142 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071886222 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070923273 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393731519 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066482434 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.213371618 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068666879 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078268325 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07085885 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072349883 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092946458 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081878572 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082253225 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094057582 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06937899 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07700624 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069183367 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06814647 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069265337 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096078929 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067798651 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39199711 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067977722 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073957817 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067159045 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095045781 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104141151 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070222551 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067859185 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104783517 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07086679 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068451928 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06984525 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122419798 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073001234 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114951028 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.174031216 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091407046 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097707235 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070292168 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103524485 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082232318 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073525546 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.471005332 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06637489 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074707532 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067872508 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069915598 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068839397 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080943826 seconds)
  done (took 22.614862307 seconds)
done (took 40.160583321 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24845813 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085332775 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085978661 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086151674 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086839017 seconds)
  done (took 1.816340473 seconds)
done (took 3.025008593 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12912324 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101978271 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06656038 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100255424 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06657075 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109232938 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103659345 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085903911 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102829579 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066540722 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10033384 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066805787 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066402987 seconds)
  done (took 2.387277223 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084192217 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08506676 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071035051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083518853 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064552666 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084010326 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082718912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090328081 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082603904 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073934407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064540483 seconds)
  done (took 2.063623077 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083810357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085397571 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070743069 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083179682 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064225316 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082738818 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083062335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08683651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082812826 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075911746 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064742074 seconds)
  done (took 2.05936627 seconds)
done (took 7.704084458 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078210982 seconds)
  done (took 1.257388411 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.540582357 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.646828915 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079086701 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100263743 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197099876 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111549298 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238252112 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083480518 seconds)
  done (took 8.354883799 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110262671 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070627473 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072392518 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07135739 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071237831 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072288064 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070722964 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071648686 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071045718 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072000394 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072862604 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071680855 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072059916 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071515716 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071166084 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071194431 seconds)
  done (took 2.458655824 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098774896 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096490247 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075559337 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077035227 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074910468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074135457 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076576472 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075721061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07365863 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075325032 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077794023 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075600418 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07533378 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065597794 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074552453 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076527543 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071959441 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076255847 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077502941 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07843778 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077910764 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066254399 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075256214 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076898401 seconds)
  done (took 3.14576007 seconds)
done (took 16.408519843 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105984728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069485005 seconds)
  done (took 1.360430411 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081221605 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081717818 seconds)
  done (took 1.364167278 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077894574 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063979414 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086414329 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075933408 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065610477 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065115909 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08449382 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065449968 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065483062 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065399195 seconds)
  done (took 1.91443676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065619224 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072434747 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069273094 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07891932 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070466032 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065034856 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069460285 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065563352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073352661 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063814977 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06889861 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083794556 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068812446 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085362993 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068628313 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068716583 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070506729 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067382204 seconds)
  done (took 2.481592226 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063500642 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064409036 seconds)
  done (took 1.33614394 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066454694 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063356401 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066030407 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066217322 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063889829 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062895814 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06383506 seconds)
  done (took 1.657047443 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405261071 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125182773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336904679 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07244248 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082628876 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262826704 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066254238 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072015823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071669929 seconds)
  done (took 2.739447671 seconds)
done (took 14.059026742 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081600757 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087995465 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099219739 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418281163 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095357904 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0697592 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115864837 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181606674 seconds)
done (took 2.381054447 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213536273 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.812601222 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.483020617 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206506736 seconds)
  done (took 2.719368359 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345223538 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.19829433 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078830425 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06933419 seconds)
  done (took 1.909411181 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069183555 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071871611 seconds)
  done (took 1.357604518 seconds)
done (took 7.416585084 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067042443 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091893043 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066049821 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065695084 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06685272 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066494256 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066436861 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066764918 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06604709 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066259292 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066636858 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066377801 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065945674 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066295007 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06630261 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066521845 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065957983 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066508609 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066274105 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06647367 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066515561 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065965824 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067267674 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066910341 seconds)
  done (took 2.868398281 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080989266 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067550992 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071454468 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070243841 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071579422 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070179079 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070423335 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069539138 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070292047 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068679034 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070794942 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070916297 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068233976 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070762989 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068375996 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071172945 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070631916 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068791661 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068881164 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07097115 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070711178 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068563241 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070613673 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070283316 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070829562 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070692602 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068357199 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06887066 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070322815 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070970654 seconds)
  done (took 3.332741416 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067598113 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06248013 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062958228 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071637125 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06220054 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063860607 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062865028 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063135767 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063338305 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062509197 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063833523 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062561778 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062510969 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063582559 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063411979 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067220321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081159345 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063257939 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063122433 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063389648 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06706101 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062505365 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062615011 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062792451 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065426743 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062501117 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063210919 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062713957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063279828 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062792609 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066626718 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067166556 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062605011 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071477784 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067062835 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062935716 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067025432 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062685665 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063523301 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06199662 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06166785 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062890506 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062705747 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072131536 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063332052 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063918325 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06279794 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06379579 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063495979 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065264188 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062365518 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063042399 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065632838 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064369325 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068242331 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062390832 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063649301 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063195067 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064022369 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062502874 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062238169 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062329101 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065767869 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063512133 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080231023 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071778988 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062654738 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064111907 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063306676 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065579095 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064697748 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078954321 seconds)
  done (took 5.902692036 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085480168 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087201605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067371918 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068102875 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063551795 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063870669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07226007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063514521 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068708436 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082825895 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063854572 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068311105 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06809866 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06837661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064789117 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068310339 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072323421 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063989447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063987119 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067764594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064214466 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071656419 seconds)
  done (took 2.765129765 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145994859 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06766519 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105282643 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073365378 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073079215 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074938244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06987381 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069972972 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069971625 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070044465 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070306624 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069642658 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072109859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070163998 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070418789 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070217802 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069911949 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070185964 seconds)
  done (took 2.611625163 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078746483 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069329918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088998238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069462509 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068964831 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068747714 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073595484 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074177634 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068403467 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069111173 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074052026 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068624759 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068566105 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069510138 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068982161 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068836835 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068732256 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069477692 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073730572 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073132366 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073078486 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07375034 seconds)
  done (took 2.810039346 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088361555 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068155835 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085594176 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070992184 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063842161 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06373272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069806548 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068464983 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069785263 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068127156 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068215402 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063848915 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071281958 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06852812 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070951586 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068430993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067996837 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068700604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068317873 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063612983 seconds)
  done (took 2.627899695 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08287682 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065289179 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066648039 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072785356 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066101793 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06577652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073606549 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066619828 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067009277 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087614332 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065907355 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065251518 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071165354 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069490404 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065113111 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071296671 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073521806 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07151294 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065107883 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065438331 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086925767 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065632444 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071572084 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065307301 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065072801 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065306565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066755129 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071255258 seconds)
  done (took 3.189196175 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06559086 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066004811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066691779 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066433938 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066119965 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066695447 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066579983 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066342438 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065989521 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066876117 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066239366 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065995802 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066424973 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066328884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066803804 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066275723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066106296 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066809036 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066818482 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06660437 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066039002 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066100825 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065728078 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066361207 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066477033 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066030579 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066264552 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066331875 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065765716 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066316304 seconds)
  done (took 3.230056569 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074985618 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073966559 seconds)
  done (took 1.388150275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065719763 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078838662 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061011281 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073159441 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070073157 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065232322 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071295555 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070157339 seconds)
  done (took 1.789450537 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086067667 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075369704 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064115344 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075495363 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074838872 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084903769 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12865542 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065863292 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075937176 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066355268 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084170799 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067840268 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.0759846 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070529328 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076156999 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079331494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063367107 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070447461 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067076253 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063561805 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066337502 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078898879 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075243485 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063487889 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07109457 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093279628 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082073576 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065000189 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072223549 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077566739 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076446877 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.0623505 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065591122 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065485191 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063515544 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076242377 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084723029 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072702827 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078370464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066067608 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073721018 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062893594 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073812386 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076153232 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081374988 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065272066 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064942028 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062545565 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065099291 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071304562 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063168367 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069628256 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062757336 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077602114 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073003737 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079476558 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062860984 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06923226 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069841962 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070380078 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074730023 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069913592 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074144334 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063244323 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080773056 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074696706 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076378294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062490656 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062173541 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063512312 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079462695 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092175571 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072991624 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063753883 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064078036 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061579958 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070611952 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064239191 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073004067 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074971062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063302448 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068655774 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075463634 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06849628 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069891326 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069828055 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062404858 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066557313 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064506881 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083745803 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062304038 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063477477 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06627623 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080320972 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075162447 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064677393 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066220486 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076833016 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062449142 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064599692 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064382353 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069644078 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077136166 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068241815 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068250159 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077247903 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073540794 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070798952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07207711 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061988475 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066183508 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067146176 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07670198 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062201123 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071989166 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069127639 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065361266 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077184965 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063477139 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064713839 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077953433 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076293804 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063378171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062146313 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071972468 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063498235 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065899021 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075755988 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061070634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06123366 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060786059 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070546907 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06198376 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07008479 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066142503 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06956721 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060339102 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.186095553 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069919046 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07779379 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069042759 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071435095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07612692 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071804004 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064562117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077655851 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072774656 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067887934 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075225356 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069468711 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063227817 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068081334 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071797344 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063033073 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071021884 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065899799 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070399348 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064160349 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062783588 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069302994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066320197 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067859034 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070556685 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064420492 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081022474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073035818 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063989129 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063013111 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072685578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066437961 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0650853 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067639557 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071970433 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065607522 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064736081 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064797586 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071737162 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073847285 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068865473 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066041911 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075158844 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082939307 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064619343 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072210798 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065261595 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066386305 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066279524 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080168693 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076073235 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069835679 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072298581 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062611137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074449099 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077905686 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06831428 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063626276 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06795261 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069295865 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077229238 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069286496 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066136637 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063495486 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071675959 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06850776 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072533462 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064958476 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068019548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070368932 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063255619 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069357236 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064818571 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078621214 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071540002 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061857955 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068061272 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063566786 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076439279 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064029573 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066712188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067943558 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066433227 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064363046 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072496945 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06249959 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077729699 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078158853 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071264757 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068015735 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065297304 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077895317 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071186221 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074468901 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072793738 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0752422 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08098513 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067978963 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072169179 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080709979 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065560682 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062588609 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074644485 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066781963 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06383927 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063376706 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062276982 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070680042 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069883481 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073250813 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060791815 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070046 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061990595 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065847164 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061930588 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072010988 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070107487 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067959515 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075076972 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063893235 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063431153 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070774673 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063172323 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064043657 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064079614 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070237209 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063781867 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069274353 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065798447 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069212936 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066072664 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062386304 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069922255 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064622611 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070144947 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073537189 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062892779 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068455041 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069090603 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062723019 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068772719 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066299134 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.194010894 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071484109 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070040961 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068783011 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070203621 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061784844 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075539007 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.062832185 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07599759 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069388064 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062521335 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071423091 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072388179 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070172438 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065784985 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06611831 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07085823 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064528009 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071316898 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077183447 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066288584 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080693553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076198154 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071696053 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07237548 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070869438 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071452275 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067606276 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069327549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066281494 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071106185 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064915874 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073462141 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071698702 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07005176 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071591847 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065913873 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071239313 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06629782 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063481503 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067946113 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067897566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065276103 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078217474 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.0655086 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068225281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06413057 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066296045 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064347041 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062360302 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072376079 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073455134 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066007632 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075940452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068095275 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071809842 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081065621 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060965535 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062062619 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061759863 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064982323 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075818297 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06416314 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077072925 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068733784 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066052037 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061019041 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064848701 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062328367 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061776247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061782801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072389543 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065788009 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062589063 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063982958 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070535733 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064331394 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075972445 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063026356 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068683047 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063740008 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061590903 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066906839 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06815057 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072161351 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066439945 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.0663086 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063083899 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06515174 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069779648 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071137864 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064881351 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070930227 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077645634 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065178134 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072110585 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067462866 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063044903 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072478953 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065165318 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065054943 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067380295 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073245212 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073029346 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065844125 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080108963 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065074588 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074030236 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065492469 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063135282 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063405887 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063368771 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063816218 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066087006 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064196178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07639763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061634873 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06930751 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068564534 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067372843 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073719441 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064404595 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071314329 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070367756 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066675253 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071113726 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078455886 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068827309 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072679454 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065279111 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070272765 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074507465 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06677133 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076300071 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069674006 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064575718 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070489945 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06488654 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063232762 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062839405 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061727863 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072546469 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063058078 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064832231 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064807285 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.192804633 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068916702 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06800285 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078858855 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072311955 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072916651 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063095882 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062933717 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066629759 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066788404 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070890784 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072484447 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074897125 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072047146 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068481646 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064538804 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080153267 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075325187 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072856535 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066530827 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073228387 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066303826 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072557403 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070102782 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070238839 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066312429 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073099535 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070869919 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068034477 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076222267 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073288237 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065130193 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069730963 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070075181 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068430439 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062313142 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064714559 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070020091 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072604465 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070458473 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063829646 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079533079 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064966476 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0692076 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065981554 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064875755 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073849143 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062211008 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070607346 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064544342 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064403785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062465579 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06650537 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065195007 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07057081 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067847864 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063984997 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080318722 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078123324 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070064013 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063290234 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06283329 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062011525 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061745226 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066069279 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064439768 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069922677 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078950499 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067047078 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06825844 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063938913 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065475329 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072464616 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072922345 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062884094 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063487558 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068164093 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071485715 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077016174 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064738556 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065416154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072816836 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072667264 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06363316 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068224028 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062753334 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073202896 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082701299 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065859438 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071454115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074873599 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076409083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064394571 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062776483 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064037047 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071811968 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071163569 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066714906 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066555263 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085274926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073377766 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068301493 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064255801 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072321713 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067547687 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079287856 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067095164 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066286571 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074242722 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074547415 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071931982 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074603056 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074655295 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070819944 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070874569 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064810522 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070617662 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06459997 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067738569 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066618227 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065371152 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069509519 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072582349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066662196 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080651256 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078427153 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066497003 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061781748 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066249849 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066811015 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062296078 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065151508 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063360764 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063834955 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063678649 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064220538 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070666511 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073947377 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068950719 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065344308 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06454689 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06133733 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073010191 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070572076 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069412308 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06126429 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.195460609 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066734159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074318528 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068757056 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067749542 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071691541 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071326425 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071776958 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063820103 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077225767 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064347698 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071392673 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067782097 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065564013 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066484276 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072704004 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070170378 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067410575 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072983536 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072850665 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068058964 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063431514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063212674 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074972165 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063881289 seconds)
  done (took 43.028120862 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10223216 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064906949 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063858263 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063836707 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073983024 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06514133 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064605355 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064759796 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065077797 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067227005 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064515468 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064536615 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072048492 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079969887 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074398757 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069467703 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064632034 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065652005 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063929906 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065193555 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071788665 seconds)
  done (took 2.770553335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071957641 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079920768 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076832279 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081653798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073035194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069717611 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077489419 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069130777 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077903455 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074601912 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077980088 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069249945 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075570198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074615759 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074890371 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069282034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077386642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074210457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069414413 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077974442 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069877507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077177747 seconds)
  done (took 2.948925174 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066264259 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065197323 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071241903 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063106684 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064981629 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063279934 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067956928 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063327504 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068356079 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067221459 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067410876 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067819911 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072648915 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06344174 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06860335 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063862609 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110342661 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068957505 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083388014 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065450945 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063359662 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072062051 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063012473 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063544293 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066754063 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067460121 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065684741 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063230222 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064548899 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066634843 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064324153 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062988637 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07167832 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071158356 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067262295 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066955032 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064229176 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064616132 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063352187 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063474761 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070535677 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064046815 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06782352 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071900024 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063177848 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062903529 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071178598 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064685373 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063010997 seconds)
  done (took 4.61988319 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076067322 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112158737 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070002368 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092462327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078401546 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070829913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069613346 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093632208 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064913351 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065858543 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080050441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079960604 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067504885 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069241196 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071298358 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067027562 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068287401 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066352329 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070391917 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06679525 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070592596 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071958077 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078376856 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077606198 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066570464 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06600847 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066053258 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067755016 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078143623 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069794744 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067111994 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068172097 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078446365 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069048251 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066408498 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066604336 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079542054 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067022435 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067159592 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065228798 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066062846 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067290979 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06945372 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077596652 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066547787 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071905611 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066947915 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064304365 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078453772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066336796 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071090438 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080014165 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068490495 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066974435 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068785157 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078357714 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066855461 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065297988 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066940693 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078157256 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064836494 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067738873 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079470888 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06603226 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070728996 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079343432 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072008494 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068283671 seconds)
  done (took 6.344772597 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074177195 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09586202 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081339038 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081000968 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075257464 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075334519 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075167703 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075517213 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075132071 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079700811 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075824063 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117380228 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070846053 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077030899 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075039033 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075309489 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075532883 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075213373 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07503674 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075229198 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075295194 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081184164 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074819545 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081682748 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078236695 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070570878 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075047972 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075732947 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081196944 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075032455 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078375511 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074799713 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075000149 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081607092 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078217186 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074927215 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064682746 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074912715 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074940081 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07495538 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070489301 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081618773 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074750081 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070759166 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073996135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072850784 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079152869 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075733975 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074681706 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076486522 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072819685 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079187037 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072792488 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072645358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079437876 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081600439 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078862025 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078876835 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073008908 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079573734 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07929387 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081813685 seconds)
  done (took 6.130655915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078660747 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069745967 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08120619 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061970695 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061623057 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071776627 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061619232 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062241591 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070137983 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072982358 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071941442 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071731294 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074487957 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072086501 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072108479 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074348381 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072107973 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071850312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070221136 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071741937 seconds)
  done (took 2.761374271 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077044785 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081746794 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067836314 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073419108 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067448088 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073658022 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069035947 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068506109 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069164118 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067690485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073232859 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073719635 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068241378 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072100939 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073374762 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072543248 seconds)
  done (took 2.481953546 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085053581 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069940905 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077099325 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063274714 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067721011 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064148044 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065168736 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063258797 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064144592 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078598204 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064579129 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077144204 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064846212 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063741465 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064628446 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070663767 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063881665 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065238147 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065208897 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078412944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071947793 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06620842 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068805961 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06497265 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070614608 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072382981 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066715113 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068599871 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06517581 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065713869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071135872 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071796594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064911579 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065550874 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063939066 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064684167 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065049402 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065155336 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070692086 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082992979 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063489847 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070612504 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065117909 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066244911 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064208797 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065619715 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063944617 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070566949 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065209135 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07062175 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064594459 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067657344 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065387959 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071415904 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066034336 seconds)
  done (took 5.078009058 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080039042 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067702436 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061791098 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06151715 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067022702 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068570483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067266142 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067626271 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068137767 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061821855 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068958975 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068473208 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069747329 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068107108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068033737 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067552972 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061619514 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067742069 seconds)
  done (took 2.558328872 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07525021 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068362374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073025167 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068464641 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06806772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067775677 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064098781 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063426681 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063840849 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068611394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06861682 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067894479 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063460368 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067895598 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068433639 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068480669 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068102463 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063731178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068330618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063944114 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068141987 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063422772 seconds)
  done (took 2.819567065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097753845 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084773968 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142815839 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081614572 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088391818 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073612681 seconds)
  done (took 1.910264669 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094804853 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099959391 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068718877 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068598862 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074269181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07174436 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072027642 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072466501 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076522825 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077414271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072493495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07701232 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076992306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0789355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074765743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074747703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072446684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075249383 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068819924 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081584129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072703001 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077599065 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073165241 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072198496 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072544868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079013711 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076839444 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077588354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072550274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076962073 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074927281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072357549 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077275785 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077643961 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069238805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076752632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072544281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081870137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074815839 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07847676 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069048012 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074796504 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076555053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076094082 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07680369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072332837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076308129 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072341835 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072250701 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083730881 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074502744 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078454202 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074951304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076769298 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076318918 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083275871 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077445638 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0786377 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074604984 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077179336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07830514 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075013348 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078778103 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077351434 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074504019 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078867389 seconds)
  done (took 6.370533652 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107081509 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069509728 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072437094 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077492352 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079034691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072765572 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07262253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072770445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072347314 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06968654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107865839 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073237913 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07948431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080043385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07273335 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0730234 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073118 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079227169 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070375532 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083826325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072297699 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079227929 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078981497 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07887407 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077681261 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075331621 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072660813 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07292418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073080506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072526277 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076753913 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072846597 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078783147 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069840075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079177758 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07260392 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072647662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076913091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073082424 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074738687 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078895979 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081824073 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07257307 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072188839 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077112831 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072147957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071934388 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069505316 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072335396 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069732746 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076901436 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076977357 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076919694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078504445 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07207592 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072438644 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072307538 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071974143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072193612 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074361107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080548908 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072376025 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083439248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072018421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072108344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078490512 seconds)
  done (took 6.367328273 seconds)
done (took 129.925932889 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211307129 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18489775 seconds)
  done (took 1.725024317 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07561426 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106543981 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084598776 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136380697 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070929841 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105185405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104251503 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083178699 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071138273 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07132594 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073497639 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075584017 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139231601 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071355732 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07105703 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073544372 seconds)
  done (took 2.763539774 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104780804 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17068317 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110688626 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071049765 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106271047 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07939688 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071346009 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084497115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077903007 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072858523 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079456274 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077884402 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073432194 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079881129 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077013176 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07777422 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071424967 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078585049 seconds)
  done (took 2.920274758 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103529834 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095000216 seconds)
  done (took 1.554702884 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174010711 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133912698 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201202161 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343192206 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153098849 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423751657 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140591595 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138776603 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112350645 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13537356 seconds)
  done (took 3.306283561 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106615675 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172285041 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298777865 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123293302 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078464994 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093581524 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124738657 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08413905 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086294497 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085852973 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085949297 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080681937 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105388661 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078761538 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077683518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080522752 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108882098 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076784299 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076850476 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080486106 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105787281 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070093174 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076508055 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074648383 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080541443 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080427362 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071810946 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069715277 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078330205 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075827695 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078709402 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088408071 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080472335 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106246406 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073888571 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108266266 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078497541 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076514996 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07611954 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076058823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079635839 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079515934 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078706185 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079926885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072635303 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079985279 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072847471 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070933125 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082683128 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072808798 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082182844 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081140204 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108500247 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072988334 seconds)
  done (took 6.227302074 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110044984 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105876959 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071256179 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114827731 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106782698 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072353952 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108468119 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101171766 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110401515 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07311466 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070593854 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07245052 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08194783 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084614232 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116111688 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10802241 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072717592 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070365705 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109980681 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110337666 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072170319 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103114207 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100108347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109711003 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068318752 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071151521 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069364849 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071369143 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076454022 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079715253 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069392016 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078814078 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083531819 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077020223 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068868093 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068828929 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068985221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079479417 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078956896 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078208045 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076208906 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068177073 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068846357 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070044867 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069974283 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068088511 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077163206 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078504846 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076990993 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068872973 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071286198 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070737987 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071875086 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080207158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078019932 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081903293 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080832045 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070641408 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070600516 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073762375 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081835609 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080678597 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080247482 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07178252 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080506315 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070642561 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082195844 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083078315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070506747 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074994008 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070551643 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070766076 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071437092 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078199808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07874405 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072139614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070611148 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071418939 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081108098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079089988 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070667016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078021066 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069764578 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07024711 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071974507 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072015219 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078459717 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080586069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072980736 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071191986 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071412209 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070580292 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069744393 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078118264 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080049856 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079797009 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07928329 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070887728 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079881085 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078329103 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072595883 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079513852 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071105595 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071992746 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071598937 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078711375 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078358625 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079442039 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070372319 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070547548 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078033672 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080771763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070762572 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07681026 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078347918 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075348153 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067530466 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078591653 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068272852 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076527962 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068149631 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077557926 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.200562718 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077934677 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069724442 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0690987 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071108445 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079799366 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072198827 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070960208 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07207687 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070813159 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079302865 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083925736 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07060463 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07970049 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07856493 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072379115 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079714977 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071770721 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080844408 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071502864 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072045045 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070261714 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082840343 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071315614 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070635356 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070764242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081551901 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069134495 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079608984 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07628766 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069452695 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083166619 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078450762 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075711207 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078338557 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070150803 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069243718 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068836486 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068591924 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0756767 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077918322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0703344 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069186639 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076522302 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080303579 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070499207 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079721604 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079359298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07941762 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071458913 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071699506 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082395631 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082211476 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079575746 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079829561 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080437975 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072093329 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079099869 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079843912 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071369935 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086145674 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071843241 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084231455 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079907367 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078282558 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08028105 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08142716 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081654296 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081338014 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081332205 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068804947 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071072423 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080214008 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071860368 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07091431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079063953 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072840533 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072286532 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084434379 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070028814 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080258185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068345192 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078296028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068269504 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070116642 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081892233 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069361522 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070958874 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077728913 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069101967 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077873941 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079120735 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077650499 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069038934 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072969694 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078532168 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077768534 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068833968 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06909881 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07033052 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.0768562 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075942349 seconds)
  done (took 18.77443833 seconds)
done (took 38.643412112 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204186324 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152136535 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181671677 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113897775 seconds)
  done (took 2.100841522 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110503071 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101270842 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090560247 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067224499 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096418533 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067371986 seconds)
  done (took 1.920833171 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286725562 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194151689 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176552715 seconds)
  done (took 2.04104986 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213050748 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190722957 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459667563 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286352455 seconds)
  done (took 2.628083839 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143598216 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.084738449 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066393916 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085423346 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126423278 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153075919 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094470595 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118223244 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076765134 seconds)
  done (took 2.393334934 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149430358 seconds)
done (took 12.636490734 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.279690797 seconds)
    (2/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.206217698 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103371639 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.145562686 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102096623 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097300828 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07672811 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.240149695 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216366508 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068662509 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129998377 seconds)
    (12/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073483657 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080370444 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078813827 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087151856 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082519436 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07713167 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203517231 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.419590753 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071041088 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075669363 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076303084 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.238077676 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153306611 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.196216488 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090645403 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.179825504 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080473976 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.245751575 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116799742 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08459051 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215846436 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.179986997 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169442758 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067131292 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087662601 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168809272 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073904707 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.124726752 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065027721 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119119516 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101474722 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130717501 seconds)
    (44/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.163368707 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073264031 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066597101 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071432106 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.155557687 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066481232 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.158016913 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201080491 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073571787 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091846997 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.066478858 seconds)
    (55/309) benchmarking ("sort", Int8, false)...
    done (took 0.144243569 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082484858 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.229335695 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067220919 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07647918 seconds)
    (60/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.194166959 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.19266488 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066889923 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079659567 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089843223 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149303705 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066435505 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076949139 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180342674 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075224001 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118778766 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0659468 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112711771 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074931821 seconds)
    (74/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.168167713 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100439264 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0653636 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086703181 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077035567 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098045353 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.196081564 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087600746 seconds)
    (82/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066521076 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065655742 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07694448 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071246628 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202174042 seconds)
    (87/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071548988 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.175323227 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075971572 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.21146657 seconds)
    (91/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.141135043 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069511586 seconds)
    (93/309) benchmarking ("sort", BigInt, false)...
    done (took 0.198072615 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094128367 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146713438 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184438278 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074327811 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178891783 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08020583 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075049435 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085036066 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074805158 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068212643 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.244501626 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176896557 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068697211 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.132071368 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075807379 seconds)
    (109/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076670046 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088406042 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094985888 seconds)
    (112/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092404051 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068225132 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183507882 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177705067 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076731013 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082154032 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067507764 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077432339 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.198317632 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.180410397 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073308288 seconds)
    (123/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068580739 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143756964 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075395429 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065492105 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145031779 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072495929 seconds)
    (129/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066636796 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172398624 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073967355 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074533068 seconds)
    (133/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072534396 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077201566 seconds)
    (135/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137780845 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07904108 seconds)
    (137/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094178561 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068967305 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075325433 seconds)
    (140/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078481828 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081894671 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.200243096 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076169645 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069073235 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068885002 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175465408 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067848343 seconds)
    (148/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068557006 seconds)
    (149/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075995241 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06662022 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067074879 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.080513781 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067027824 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.129084268 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076688726 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071312694 seconds)
    (157/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073329187 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 0.134894014 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070228005 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181825384 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09496181 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068083133 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073915508 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090586124 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068712886 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075656523 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076498973 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068405474 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121139631 seconds)
    (170/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066575454 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068590419 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145564081 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142887237 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066916441 seconds)
    (175/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.139200951 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120970146 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136856681 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073663893 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066972078 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067097716 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065596857 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068653617 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066373586 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067184163 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072000086 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065277242 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065584973 seconds)
    (188/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075098653 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065428274 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072542464 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066241844 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090042335 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066130033 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065915086 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131933475 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136752192 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087824652 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066337187 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074649385 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067113157 seconds)
    (201/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168862327 seconds)
    (202/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077941832 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118078058 seconds)
    (204/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077712997 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071842735 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068297639 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065556882 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072806233 seconds)
    (209/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078618354 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077901331 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133199804 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091042428 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066569004 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122074602 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08644852 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118957734 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174491795 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065633457 seconds)
    (219/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065476493 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071204901 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.164206554 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167289198 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065903491 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06517583 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065423353 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064616774 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064175329 seconds)
    (228/309) benchmarking ("sort", Float64, false)...
    done (took 0.128872155 seconds)
    (229/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.133023388 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075278958 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074905175 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071387885 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06727787 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066756912 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.069743274 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132437232 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067049416 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06705005 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072715289 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06993018 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072549292 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088884812 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093274523 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068186776 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121931762 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064266329 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.123711885 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067989762 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066051709 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064082069 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065354775 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064758206 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067778777 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065107972 seconds)
    (255/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067067138 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127416709 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06623661 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.212671019 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213117515 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065935757 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064573521 seconds)
    (262/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065062717 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065858579 seconds)
    (264/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063913239 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065043722 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132282971 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.173886925 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074308765 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066697988 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065594071 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064806607 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.065218672 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073020441 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064063832 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079082231 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073146879 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064632407 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064883952 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106119911 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066118181 seconds)
    (281/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071065988 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065324553 seconds)
    (283/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06539787 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129964118 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064814099 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076337879 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083646798 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065090662 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064040247 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064249628 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065100689 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064430761 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088094934 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072505034 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118507014 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063535304 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072378333 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073175128 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065435675 seconds)
    (300/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064715849 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071406191 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066577364 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088827663 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084210611 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064574753 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067043362 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065344654 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064643009 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06428027 seconds)
  done (took 32.755636723 seconds)
done (took 34.153006264 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096492325 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100546936 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074641022 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094148048 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083240715 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098460996 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076560846 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081533059 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084408561 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083167786 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081478801 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074969424 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077865713 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077174218 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075299268 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099055577 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082429606 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076229576 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076330456 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067393151 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075925317 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067669224 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067117677 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073822865 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078648969 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07442666 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076566113 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076414065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066853729 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067329081 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071943131 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075886837 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066509372 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078629798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075348614 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07461925 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076001201 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079068598 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065589975 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06679861 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076371431 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066633545 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074536478 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072569447 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070873437 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072828978 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074331106 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078881466 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097040926 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070601576 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076015588 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077097537 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078049335 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072224037 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071312552 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075076767 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072653654 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097071642 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074782774 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072548001 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076589715 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077999664 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075247379 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076334009 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076506872 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079071693 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08098405 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074671635 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078197916 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075528376 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067452203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076623066 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073074821 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068930423 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080095249 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081266204 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067983406 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072920013 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076219393 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077186219 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06729436 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073390898 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065790565 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071390642 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070474722 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072303167 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071523576 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073396035 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066317924 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075328382 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073573734 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07450196 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065695663 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07909336 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066351101 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072911103 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066616734 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066286074 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0659224 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071612549 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066095812 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070677425 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074829678 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065736217 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071678342 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079438361 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066231355 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073075604 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066215106 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067391742 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077395729 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07634969 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066257697 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070564714 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066938529 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073660988 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068181008 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068388359 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067842268 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067927903 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072870632 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068666718 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073583099 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072881167 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078353883 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065962842 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071005278 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070410831 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065713012 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07219828 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06659384 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065933883 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065982241 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078885769 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070096898 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065988084 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071242326 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070193198 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073702918 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065476077 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074728435 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072292258 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070032451 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071960351 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065099461 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076755233 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070217966 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069893627 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064896967 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065540862 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064697647 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065199201 seconds)
done (took 12.84927189 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071917134 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117496066 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092193158 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092885845 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083214407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067640953 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074927599 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091489885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068318871 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096569161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088440695 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088070191 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109331499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066066525 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066359011 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067665802 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068007017 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078352896 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093978697 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08846968 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10525287 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067809308 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08724854 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08608182 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083340489 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093016785 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069132828 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067283775 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069270884 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086920122 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091914928 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069479892 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067909594 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090000667 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084295882 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079842327 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06726834 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07512593 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067626971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066951848 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068087743 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086693326 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074704849 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077353412 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067964998 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074439528 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067888883 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082540656 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084535926 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074827208 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081537918 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090464501 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07071868 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082542251 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066757203 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083754337 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075829257 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067197663 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067130861 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071695872 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066912438 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069552926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077751692 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075842923 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071684211 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081222397 seconds)
  done (took 6.677006164 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087417892 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094646755 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085121948 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086112792 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068308015 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06865139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067287392 seconds)
  done (took 2.070776462 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069847311 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091068353 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089944813 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09040497 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081305787 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091104705 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074611819 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067193176 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095530159 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065939044 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086737446 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097755255 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070479799 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078665966 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091205607 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06682885 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090871465 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066762769 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067303616 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090868615 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071391064 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094073192 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078466792 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067246999 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079584926 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067511114 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099178789 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074673787 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06839784 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068604441 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068692695 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.09360753 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079270182 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080823513 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068643313 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082330015 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080763238 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070420323 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07825398 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076219927 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080445777 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068671947 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067174844 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070424558 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072808592 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080820343 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068229238 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070564074 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070320031 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089062095 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067736761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081638587 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073369078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07545032 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074346974 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073491705 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077323683 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070417996 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089057151 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070240835 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087079721 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085569895 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083017877 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086010704 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069686417 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08129264 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081363447 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070003974 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07093047 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070343944 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085821753 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07257775 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071821669 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080961088 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068781287 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094273095 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093701635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068914798 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083226253 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069105551 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068208511 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078701092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090960648 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072657011 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068243439 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071468457 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069548613 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070647077 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066742758 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072015557 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068719724 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072778044 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06849163 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070966191 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069819536 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083392281 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066676984 seconds)
  done (took 8.966704227 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072250196 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069020744 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06915197 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0685104 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067737631 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068091209 seconds)
  done (took 1.952036388 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093073649 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06860199 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080626088 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068050948 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10345078 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083587889 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083318203 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077807838 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081500828 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079945025 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083507258 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086055982 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087447684 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069977805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083267063 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068916451 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083232931 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072614646 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079335165 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070606666 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08084748 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070396415 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070887029 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086283896 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071287168 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069117346 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077324452 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079280562 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079098444 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077661188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069664585 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071476132 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074735729 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076776921 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083819744 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074643737 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067749926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074427756 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070715116 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071371601 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085915677 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07066921 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070575061 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074195448 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077127685 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077397734 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073866276 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076540045 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083282726 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073951008 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074584085 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068506178 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071360016 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074118631 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074701044 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077172411 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074045142 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083382034 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069826831 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074763768 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067707615 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071723094 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076878675 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071250327 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075041676 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073827994 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074582848 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069798492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070185023 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068282129 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07436295 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068965294 seconds)
  done (took 6.977600219 seconds)
done (took 28.17572142 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539486349 seconds)
  done (took 2.030612172 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617983593 seconds)
  done (took 2.141114069 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.554734099 seconds)
  done (took 8.074475671 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383303672 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.451204738 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.734329265 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132795493 seconds)
  done (took 3.256728253 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705658172 seconds)
  done (took 2.236541629 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238940854 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229873771 seconds)
  done (took 2.005488005 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.353352984 seconds)
  done (took 1.876996233 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.073105944 seconds)
  done (took 2.595861418 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235914308 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162009861 seconds)
  done (took 1.926429247 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44945065 seconds)
  done (took 1.978459233 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.219544361 seconds)
  done (took 5.747814925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226186313 seconds)
  done (took 1.787156246 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23511952 seconds)
  done (took 1.761698498 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.751019162 seconds)
  done (took 3.281430001 seconds)
done (took 42.236161066 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084541629 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085582213 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085255197 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08128549 seconds)
  done (took 1.840353702 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075400408 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070836911 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074630472 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070567831 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074647426 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071611179 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072960865 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07395698 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07127098 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071372663 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071246088 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071721373 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074860923 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072589196 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069824534 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073909376 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07528344 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071241744 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074243597 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071492945 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069378507 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074027544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074083733 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070186717 seconds)
  done (took 3.271962819 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081806502 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075149104 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077858985 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073578831 seconds)
  done (took 1.848019066 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080099384 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089550066 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088116904 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078841904 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09128876 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087217555 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070069581 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069913374 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070721 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079310117 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067722652 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094909268 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086233973 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077133485 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079292146 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063937546 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06587908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08512502 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077999162 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077903612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06881176 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077221597 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066490537 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087208692 seconds)
  done (took 3.415201893 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08416017 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066743504 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080726138 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091495878 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094118472 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066897104 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079979152 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093858761 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136442528 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067024436 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072934807 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066702315 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105595341 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066845486 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08151418 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110517632 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113262211 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070429554 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099304716 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067354767 seconds)
  done (took 3.260738553 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086194168 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074082376 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070831382 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066306167 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076867859 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073191577 seconds)
  done (took 1.993549098 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071148254 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069013302 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068363272 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067605288 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073298339 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068173151 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066769521 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068733725 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068736175 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068762812 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06789194 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067167899 seconds)
  done (took 2.366547587 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.197196763 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069663358 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070772607 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067047514 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070996864 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067418502 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082130083 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068559692 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094170822 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06752386 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067434009 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069841477 seconds)
  done (took 2.534879761 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195124153 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075677621 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221644608 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144376861 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102439462 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109493662 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111361663 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107924718 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132791935 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09708777 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152793431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158560324 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103274097 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128902049 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088296249 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120258721 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144190478 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155546825 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099951949 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154341479 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134744152 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122631022 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14113738 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096878997 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101032867 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112967525 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072243277 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077311888 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157778213 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122774922 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135712157 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105145487 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089702831 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16595003 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161364299 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131615592 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141661813 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082086316 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118114125 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129058978 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192762765 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087561109 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15188011 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103632385 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078168203 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125496286 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111040741 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115390853 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100494855 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087229618 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277909157 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171723589 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127576511 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084562199 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116146993 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105128101 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109176678 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113107144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168245119 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148745668 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121314065 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070243911 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106605901 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142213428 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126754669 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104964632 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117515756 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089915688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123904093 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148411709 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119269627 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135377404 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113002951 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08537109 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115146652 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130251527 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120111079 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162419815 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11828064 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071601416 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11563899 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095832678 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078726074 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14228611 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074135459 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164569499 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096303575 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121379536 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125730873 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105672798 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10515053 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14986937 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134169431 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101119348 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084416585 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099582847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114520998 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13637113 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08480195 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10455522 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110210861 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077774902 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127925292 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073614404 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116039416 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093877612 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114069565 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120676001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077649322 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116883258 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098611451 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097863025 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119888239 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146084691 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083710055 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077394314 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156311172 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117041227 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101471321 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132203227 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14481085 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115237527 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091956344 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132811118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1582691 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085874755 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147028934 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095409619 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079337855 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.100062034 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113260112 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102230534 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.114207091 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07659697 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110205465 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145699002 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071072111 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090381946 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121971893 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077388695 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076347926 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097448596 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096557089 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090578687 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094613015 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096911883 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12432992 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112783153 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098686211 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113531279 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089241581 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142860623 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080923283 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099412492 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096661875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06843361 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.116812537 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137030597 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073534194 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138211267 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.109167341 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105792417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107331101 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077797539 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121712677 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074052458 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068451043 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122856613 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104350042 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09884778 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.133703232 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.369264122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121778942 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120161934 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128649215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126471087 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12811397 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107151508 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089918851 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113929411 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127557842 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074723717 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092043872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083682396 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103371287 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09422166 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084246458 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136135196 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121015001 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113190123 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115243868 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099075422 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148006038 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081021701 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121174705 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118768143 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093315531 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146840395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144232791 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126339179 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098136749 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129927695 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072652845 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073518255 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087098867 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117863165 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082405935 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082615968 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110345471 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142079505 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120414868 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130099515 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119338569 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112713725 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149529526 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072015606 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117389966 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137271124 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117071576 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101799829 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090061544 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095801009 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136182225 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100369969 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170518841 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109807521 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118472559 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14889542 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100259342 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077862182 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101530359 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124698487 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097315337 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296044148 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099052049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086483715 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10614084 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077119809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096769964 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1202857 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112786373 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132108194 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108057101 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125544627 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076493751 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108140393 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118468986 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118578967 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084665044 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112160079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157186464 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094631858 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111839126 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142468825 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078143208 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135460659 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161649557 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135687798 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083321161 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101907301 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117444204 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124677116 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115190108 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13133922 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101342016 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131515994 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107485979 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083142696 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084912878 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092764342 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100222399 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109197061 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100602258 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110322382 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093062758 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122966949 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099423418 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107239659 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112776724 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097671765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093529386 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093509199 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164567402 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113356252 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158407619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097046001 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135131159 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150671909 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07363378 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077347964 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079071691 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131608453 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081968833 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122643659 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262125645 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115953035 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120321184 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134639856 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097242618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07270814 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109025776 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129907629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122164205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095749544 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10356174 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151828754 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11854018 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080679826 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11049508 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114791315 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102821329 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167866746 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082902772 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108830145 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078290009 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081339607 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123742904 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145901681 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08339095 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101046509 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11495309 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106994941 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120317516 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09458141 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107528408 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129498971 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142197316 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122464939 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08789226 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106690795 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122389471 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148517439 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102812952 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098038416 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163812523 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143590465 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15020391 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085475674 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11279155 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11007292 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106171581 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130504919 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081997449 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150935453 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080169777 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127110433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097659662 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086986095 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123382071 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108501885 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085687071 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136413321 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111722243 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080498185 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077591753 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258533257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114752525 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099548763 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073827923 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130262861 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072573023 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128000573 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160431839 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078745944 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101996622 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093948076 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080946336 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099776958 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099005469 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08424689 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097199493 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160224302 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086234628 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138832407 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126405278 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106979649 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130344904 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10109134 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640710069 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078270095 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142863467 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111847119 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166817963 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095821662 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113333463 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107060586 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115179568 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134538768 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098510605 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174998331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123644334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11354079 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07737828 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098550376 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099839416 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086291513 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103603082 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109641193 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109107899 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092156184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113314026 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116513145 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080586656 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093881612 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147781896 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113283543 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135626163 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131147888 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084795868 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114597305 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13192227 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07871198 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11355603 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140706579 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256445823 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101669601 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083944568 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101770072 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165363954 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073682579 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149689111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115495909 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106805512 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112274842 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106665161 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124712686 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09979537 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116499027 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090894064 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105712898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145943655 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082022296 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077585931 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101963816 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106759924 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095615964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095465931 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097445247 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14241614 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072960669 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098051883 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111273572 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136255799 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160297029 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102758555 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081819385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113484481 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113741665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110009433 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115904452 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081341659 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080790304 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082075397 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099992453 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122867992 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110470581 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115470235 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105278403 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151627989 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082888696 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22282235 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093487555 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102285662 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087129211 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079216142 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094235561 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09338359 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100047612 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106682222 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163167132 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09290153 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087868415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090186073 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073400458 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080997353 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119977627 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106039836 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113128083 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100531305 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080344443 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251996233 seconds)
  done (took 56.912757899 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120565284 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102504888 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100467324 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146544471 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121715392 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200035244 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15076688 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189274007 seconds)
  done (took 2.785338285 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071695415 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095129739 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104017579 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083308182 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067518771 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068876601 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225158811 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081742623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067418922 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092185254 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078174361 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069212475 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.440979441 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069502016 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068020515 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076592425 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068104574 seconds)
  done (took 3.484687201 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38868333 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61368822 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348622853 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076751014 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.020029837 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093432598 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.222358456 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142535963 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08219708 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551750352 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370679094 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133264422 seconds)
  done (took 18.711463318 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085548238 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078805287 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093767403 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093960346 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081003085 seconds)
  done (took 2.09401017 seconds)
done (took 106.099640469 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085402106 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.445708939 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073091849 seconds)
  done (took 2.20747902 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09469 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092214752 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092104344 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090608871 seconds)
  done (took 2.041189547 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078185578 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079782953 seconds)
  done (took 1.818631865 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233185899 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.180530413 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099145421 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086722368 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081630468 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081133506 seconds)
  done (took 1.921761046 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076004644 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074730723 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074248183 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07417654 seconds)
  done (took 1.964303842 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071099791 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068114902 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069608253 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071993589 seconds)
  done (took 1.947246552 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087299565 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086506132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080827648 seconds)
  done (took 1.921448909 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104827425 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091287943 seconds)
  done (took 1.862335376 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085068464 seconds)
  done (took 1.751818286 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091899606 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099288496 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131955808 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114690813 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139200282 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11481433 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0845738 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085305219 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079046447 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086489471 seconds)
  done (took 2.694131352 seconds)
done (took 22.389243937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083035255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376887039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362557306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090996838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670216097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357773154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994836758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094107412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144593771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072129424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088724093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654100373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991674286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334024377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976929089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333806856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654062351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071590153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071592645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071529004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983046372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071047414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070481738 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070941357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651712024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375155374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069701531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324941563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069701816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071416443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357380727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070354467 seconds)
  done (took 16.325604462 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074859684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125595372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076442633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08922919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074948447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073482017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075257344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072213301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124982507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071473729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089461431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07086902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07299835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069405467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089120073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069707465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07046909 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070508431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069810024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069957142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088498699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070320723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070374266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070731771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070379656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083300492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074934148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071836621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071654459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07183117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072974027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071055195 seconds)
  done (took 4.170373042 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120889013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129874539 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077536485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11081984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116294527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074508694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152537436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098561922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132347434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072073918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089239594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071066763 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103921526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070844922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090300845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072726991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071458566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070997314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070451061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070662852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089380804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071216191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072353121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072752833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072572249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085965307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070952223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070199699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070386162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072137334 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073467257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070617426 seconds)
  done (took 4.438193267 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073866275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07476657 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082447085 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084618975 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06984712 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072765717 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074661432 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070239141 seconds)
  done (took 2.286299645 seconds)
done (took 28.896105426 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081924927 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069002317 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071600436 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087696959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075095437 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080129509 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066153629 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07552639 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072538501 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073028065 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074699026 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068221453 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071660217 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06623612 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073361976 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067197982 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082245161 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071998673 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081134894 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081409987 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070410033 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073984521 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078376409 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083659321 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084590482 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084529187 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079808547 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075981824 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071073842 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073667911 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074712117 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08317553 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083593819 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081374644 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067866603 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067952595 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072242511 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069433579 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083075878 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077492012 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069625663 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077498005 seconds)
  done (took 4.823070644 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088978994 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093135243 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086531502 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083235218 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094856253 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085770844 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090144282 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081216351 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079373745 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086857682 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074512553 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081614085 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079302598 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073432862 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077510254 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07506718 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07954042 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074532571 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077810633 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078363039 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088089756 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073621947 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088679825 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081697546 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078804761 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083566531 seconds)
  done (took 3.832452522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077061152 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088489499 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095814124 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148476247 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115542553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082674613 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083077976 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09255171 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097411731 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069447407 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073916476 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093916139 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093805977 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075181102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069018304 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085148381 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084642173 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070685169 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076338154 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099108907 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093365918 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089104321 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098093913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088343207 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070868108 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074384561 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076425019 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088098369 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073445138 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083209796 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07407166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078428921 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072458894 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080279212 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071290781 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06833842 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093187896 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07981694 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081923642 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0694574 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078005235 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069714345 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093782255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128535823 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069211097 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072638028 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072369622 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079703158 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068062398 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096152294 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080528601 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0682182 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069209945 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067946105 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067891152 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070831923 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0705562 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071375711 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078457995 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075439353 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091159742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073546105 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086107911 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068040489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078443088 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068255699 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07188337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068780407 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097818303 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073007703 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116077795 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071799042 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069781806 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080870541 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078793 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074544212 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068336568 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086621571 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079948842 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072651669 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076969434 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072178764 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072527059 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098809718 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068776769 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068280584 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067309566 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072258229 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071767316 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069334375 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080621886 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068472002 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072135303 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086669499 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068218668 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069310018 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071996284 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071315248 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067679483 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079048864 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072282114 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069526471 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078990795 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068871779 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072594468 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08207095 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076333778 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068169915 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071730066 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072306177 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070853303 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07018355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072577335 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070807493 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075697795 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07514366 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074115561 seconds)
  done (took 10.913292548 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170079947 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161526076 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073921523 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151179918 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080376242 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083827156 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156604657 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098822995 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071049893 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072621908 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071439474 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113660801 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108871352 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120715087 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081932852 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069592715 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092325893 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118195171 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158071062 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15102973 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094618554 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080155045 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074464292 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072419583 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071568955 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079177495 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085837417 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078342541 seconds)
  done (took 4.568963697 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081843958 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105512937 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073576277 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091291687 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088599511 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06928103 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07095113 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070728181 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086171841 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078359311 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069474856 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074775132 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073426873 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072874593 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070284774 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075729629 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076244956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068560729 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073322111 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075399834 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079499878 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.0941663 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072768228 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069126015 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072227915 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069084626 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077116124 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081716961 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069520466 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104291434 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066880954 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074252254 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086440315 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069918452 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068686849 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069566013 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069185568 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069271322 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070696183 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067477531 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068221055 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072907085 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06838283 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076763677 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082150739 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071341763 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071144003 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071961524 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072105899 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06668745 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071883496 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072022879 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072160862 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076452682 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07366737 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071829215 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069899026 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095694537 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075102196 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06873407 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068654034 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068127963 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07146079 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078953772 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08456979 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071376271 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067829299 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069515099 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082123213 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081935561 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068426881 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07454082 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067144225 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071316883 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072041035 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071548255 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069920427 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06809434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069300875 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068939533 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070332684 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069099489 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068615842 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072341415 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070646581 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067746913 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069632495 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071003472 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077550923 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068677901 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072875919 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069899432 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067842824 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07187795 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074771958 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072387276 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079593408 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080200472 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069477159 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068095095 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083017495 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072099424 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06837731 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075141293 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073803208 seconds)
  done (took 9.485106284 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095814134 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07262898 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088678064 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094117882 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081550046 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078038012 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081632004 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070017039 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085396676 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074877715 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076912207 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068049118 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079930987 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079095409 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069836549 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079751688 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072181487 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087525805 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083592097 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067607119 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07787924 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081463303 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082020164 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084187871 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083206019 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084597866 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081142765 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080336046 seconds)
  done (took 3.975739382 seconds)
done (took 39.275243113 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.775591409 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.926436279 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.756299547 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.957911517 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.063349966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.771950056 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.943923787 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.751718183 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.073806685 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.792685172 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.999397642 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.998548321 seconds)
done (took 65.646179037 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.770776349 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.907424798 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007240861 seconds)
  done (took 5.60404677 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.951845128 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.72479692 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.992199449 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.755398601 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.756463758 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.023915201 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.516817025 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.192576462 seconds)
  done (took 30.652287959 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.92931979 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974757934 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.478031093 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.490984845 seconds)
  done (took 15.60915388 seconds)
done (took 63.366938544 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.7857311 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.799990119 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.758000107 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.74842686 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.838426148 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.759667651 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.184809448 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.796450851 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.753093164 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.761915201 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.754429075 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.238588557 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.763564881 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.131128706 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.753254336 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.753131601 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.765451121 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.262642028 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.906044862 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.768104195 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.773633854 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.788351889 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.761458811 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.752859297 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.753349021 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.7533011 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.146419968 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.762848123 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.59318908 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.754458564 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.812866959 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.277298989 seconds)
  done (took 203.901181345 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.75466658 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.783727049 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.838348088 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.78308267 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.173633049 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.946350571 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.859854951 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.203589782 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.75624433 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.772821216 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.074561698 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.75233588 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.096262736 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.695626692 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.794661809 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.75860324 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.995924831 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.068635177 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.793990895 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.918321762 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.774433561 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.893395087 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.85523427 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.021450824 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.792969709 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.834992254 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.781943322 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.779956361 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.943054621 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.957425603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.755775655 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.802590126 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955756515 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.628759559 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.766769916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.786662294 seconds)
  done (took 169.844737179 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.939526351 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.75832499 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.754427029 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.758521603 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.763345258 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.756763543 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.879798181 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878527548 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.414704469 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.269135539 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.75298245 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.811475275 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.757085959 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.755319415 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.527935641 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.75555597 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824255409 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.769188941 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.759697605 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.772188189 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782728367 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758671325 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759345067 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880435912 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.771309134 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754619934 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766188051 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758128429 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762468933 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.144574924 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.753606529 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.017891769 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755184543 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764625821 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.000396329 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.755934532 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758026864 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.583465228 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.813744656 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83874044 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756639695 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763619707 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.75997132 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.977044855 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.754794707 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762534145 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.758577687 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.758925332 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873271731 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.758453321 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.880259322 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759257599 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.236686758 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.755634991 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757936198 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.909333823 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.332304668 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.759817256 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.762564479 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.759868033 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760082143 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.764397535 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.050864985 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828749941 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.761328338 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.759341059 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764355923 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.759201833 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.838372433 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759422241 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.271549965 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.774595929 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.984135733 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87934215 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762948298 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.759555126 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825385671 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851172558 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.758120522 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.760096366 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.761695173 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.75906497 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.841708149 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.758856298 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.841792132 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.758182939 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.768508682 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.760403258 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812991133 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.830835886 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.757810484 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.580435106 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.759886241 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.760934871 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.003605367 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822555153 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.756011474 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.762038515 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.841361314 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879490494 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480363186 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.763770583 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.212852088 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.83323761 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758853289 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.883329826 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.762174348 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840921576 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.764017852 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.762651972 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.795000016 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.762004411 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.774220907 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.761950724 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.134976992 seconds)
  done (took 399.232742281 seconds)
done (took 776.666314333 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.382712038 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.337413699 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.441459211 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.362654628 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.3359358 seconds)
  done (took 13.556250682 seconds)
done (took 15.252814704 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840053636 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.8463422 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782614032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.843125003 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.780011312 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.843492716 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828373173 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.786120913 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.810881795 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.787683119 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.810533666 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786809929 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77143711 seconds)
  done (took 25.21482234 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989031617 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.985156857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825152953 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.984986069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800293985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.999370948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914758473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.902734455 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.902273323 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773115454 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770130539 seconds)
  done (took 22.545414222 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990479863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993814862 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.832330997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993175523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804276473 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989740385 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917510573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907647677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.902314451 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773163719 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770577158 seconds)
  done (took 22.571516956 seconds)
done (took 72.028952319 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.767723836 seconds)
  done (took 3.465913246 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.785581169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.942873969 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767776063 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.768183866 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.769121434 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.768009171 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.767087755 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.768149394 seconds)
  done (took 16.035602584 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.770067001 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769774218 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.769556518 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.768726939 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.767870777 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.768841935 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.768896903 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.769362505 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.769212628 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.768326137 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.769734379 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.769106682 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.767836803 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.770726055 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.769372303 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.770729931 seconds)
  done (took 30.007663162 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.771195287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.769518226 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.768118089 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770028212 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.76991392 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.768532851 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.771720145 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.770066978 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.770749544 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.770079826 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.771298218 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.767580766 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767750026 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.765912796 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.767023885 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767769148 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.767969092 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.767794025 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.772253226 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766989725 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.766922157 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.767138659 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.767675167 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.766985251 seconds)
  done (took 44.152974633 seconds)
done (took 95.35706053 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.497506556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.358089197 seconds)
  done (took 9.551372425 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.770055312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.767717913 seconds)
  done (took 5.299021838 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.768289044 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.766113349 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.7660516 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.768360027 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768479682 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.766445739 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.766796399 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767534662 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766680712 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.768934039 seconds)
  done (took 19.369502163 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.766328495 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.767944449 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766687817 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.766320313 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.767699374 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.766661642 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.768003931 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.767971686 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.767275373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.768010583 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.767047894 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767272721 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.766948246 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.768921858 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.768634211 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.768126169 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.766980473 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.767948321 seconds)
  done (took 33.511900418 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.767483457 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.767462775 seconds)
  done (took 5.232305664 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.768245504 seconds)
    (2/7) benchmarking "second"...
    done (took 1.768604005 seconds)
    (3/7) benchmarking "month"...
    done (took 1.768175563 seconds)
    (4/7) benchmarking "year"...
    done (took 1.7674962 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.769335033 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.768764547 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.76830689 seconds)
  done (took 14.075998011 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770376284 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.914919917 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.980162017 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.432571369 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.769516963 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.771361408 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.683169006 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.771678365 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.773382682 seconds)
  done (took 19.564622505 seconds)
done (took 108.301499419 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.588385695 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.762746915 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.030364829 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813532064 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.773874072 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.059381689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.770134617 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.02996032 seconds)
done (took 42.526990272 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.791609454 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.454771243 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.495703544 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.810976685 seconds)
  done (took 15.460857308 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.76286458 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.183017196 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.791735301 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.602643679 seconds)
  done (took 22.241813523 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.128206488 seconds)
    (2/2) benchmarking "read"...
    done (took 2.116928394 seconds)
  done (took 5.950974575 seconds)
done (took 52.146330364 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769066122 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.769641734 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.770139482 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.769963565 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.77269673 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.771096709 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.769582513 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770485247 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.76974103 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.770853492 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.768925838 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.770437183 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.769757054 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769455123 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769830719 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769358787 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769172316 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.772002221 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.771076526 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77082528 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770209998 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77134544 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.770329737 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771595289 seconds)
  done (took 44.187653164 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771760938 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.771774057 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771109222 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.77225081 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.771948836 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.772375191 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.772246189 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.771779552 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.770772104 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772357605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773133076 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.772965634 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772335881 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.772190721 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772635231 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.772348767 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773974917 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77221139 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774128061 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.772214841 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772011613 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773342433 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.77227764 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773891556 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.772906651 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770729314 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.772035846 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.772555617 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77217561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.773201418 seconds)
  done (took 54.873610584 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.772298615 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772556874 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.774242602 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.772680082 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.772504827 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.773882261 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773845875 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.772603975 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.775318259 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.7743231 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.773693253 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774748261 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.773915913 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.774936621 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.773522952 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775077975 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.77411832 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775243568 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.773451566 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.775147737 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.771657573 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.773343584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.774489748 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.774784707 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.776189062 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77634942 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.773185576 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.774915515 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.774200826 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.777194798 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.774212365 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.775001434 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.774654433 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.774896054 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.774463381 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775485174 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.775244937 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.772766461 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.775071619 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774691222 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.774253383 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.774934448 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775148275 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774752051 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.774783526 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775857796 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.774340375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.77624306 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.775796279 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.776893052 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.775328653 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.775476776 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.776073897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.775826247 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.776077147 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.776148305 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.776565672 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.776826597 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775344988 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.776297992 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.775836274 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.776159966 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.776960695 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777352301 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777847672 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.77664685 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.777258268 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.777018248 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.777389449 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.777333858 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.776178924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.776679094 seconds)
  done (took 129.510920321 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.776394929 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.777396574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.776252383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777706218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776293718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.777264632 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.776019728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776003788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777633593 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777362988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777076205 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777873692 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777458301 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777691306 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778848384 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7776335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.77851243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77727348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.778810087 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.778081822 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777063696 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.778579503 seconds)
  done (took 40.810071972 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778547266 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778793221 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.779848102 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778448947 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77706839 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778577434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.777993128 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778087737 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779845805 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781029481 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778353074 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778677808 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779115721 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778810326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778703755 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779063138 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778704979 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779035426 seconds)
  done (took 33.726252598 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.778160434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.779208418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.779790374 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.778058048 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.779938147 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.780670063 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780040183 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780060687 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.777891634 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780902712 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.778560047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779926351 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.780900927 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779911864 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7782516 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.780200427 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.780720999 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778999294 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779378243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780221773 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781059579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77945861 seconds)
  done (took 40.859917519 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780566558 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78041321 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.779669351 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778811899 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779999998 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.780308607 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.780737829 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.778527167 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.777955829 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.7800604 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780718952 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.780390899 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.779768467 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.781385383 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.780019002 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781148332 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780277482 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781631757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780250878 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.780868381 seconds)
  done (took 37.311830952 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777329711 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779232011 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778029109 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779340873 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778357915 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.777394958 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778197534 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778505888 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.778874927 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.777998655 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.778620685 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778065953 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780036987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.777913274 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778093257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779577975 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778786926 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779773356 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779103018 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779765908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78094243 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780875715 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779358626 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.779387248 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.780277859 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781028383 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780341252 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778937457 seconds)
  done (took 51.52398628 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782070045 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783130654 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.780996992 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.782339432 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.78268069 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.781844089 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.781512073 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.780926856 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782462392 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78106286 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.782159975 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.782902458 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781967427 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.782941277 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.782162643 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.782791769 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784347275 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.782540629 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782881725 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781731943 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.780815503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781999438 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.781839913 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782595797 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784814877 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.782993848 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782849564 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78422685 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782965249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782861407 seconds)
  done (took 55.184844452 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.802494483 seconds)
    (2/2) benchmarking "in"...
    done (took 1.80480629 seconds)
  done (took 5.319681142 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78404273 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782922059 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.783280498 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784242095 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.783231283 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7837867 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783547257 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78355948 seconds)
  done (took 15.980241782 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786933347 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.787962933 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.786855622 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.787817639 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787893732 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.786036604 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794556635 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.786788435 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789553135 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.787537718 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.796278439 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793574789 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.791775454 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789535466 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.788123548 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789743812 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788984172 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.789023045 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.786901323 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.788280549 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788194091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791440522 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790099522 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.789358354 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.789218895 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.800058672 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793076279 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.788385578 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788796443 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.791736894 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.788079599 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78902521 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.787569922 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.787610306 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.786653665 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.788318796 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796934877 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790708185 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.793793752 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788413473 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789064394 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.789503998 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.790099524 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.792094794 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791550634 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.788919024 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.788352659 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.788556247 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.785411961 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.792131761 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.796910388 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788483968 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.789479568 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792877962 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.792609165 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795691706 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.789095595 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.793459368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.79954886 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.801594539 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802658069 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.800317099 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792074687 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.791308349 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800126042 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.817327165 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798394436 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.790483347 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.789870472 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.791420236 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.798845422 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801864458 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.802188246 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.790552567 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791356824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.790487252 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790628639 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789589325 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797834001 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.792692701 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.790903617 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790448554 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799628717 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816124956 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.791028789 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.791970317 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792499999 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.792065925 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789437982 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802082265 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.79229331 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.792740149 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788377362 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.79271333 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.791537575 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.79149645 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.788373301 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793421515 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.791206791 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791288655 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791378717 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794211135 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.802931381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791526974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791195719 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.798212964 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.79245854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795232061 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.801135453 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.793518985 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794705963 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791830031 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.800617999 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.794485131 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796715224 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.80199966 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793338331 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.794496453 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.791488464 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.792226014 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800910947 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.822261552 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.792633263 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.792847572 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.798106138 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.805959397 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79171825 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.796061929 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.791793955 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.792283826 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791386833 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794913613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.793152544 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.795796014 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793648275 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795517767 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.792862717 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792573083 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.793791662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.793929483 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.792921898 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.795092347 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.795965818 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.795612788 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.793953733 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.796662996 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.800840693 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793212963 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.796505008 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793611959 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.793143018 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793734048 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.797870888 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.795858379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793567588 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794637213 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.795087191 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.794091652 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797686293 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.794081738 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794926054 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.793496947 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798676512 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.796177523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.794794575 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.790834655 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.792230716 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.790718275 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.792084649 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.788861579 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.792399878 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.789541197 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.795944817 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.801626428 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.791246587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.791739265 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.795151625 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790544598 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791773735 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791514166 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.795564908 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.800617708 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.791855927 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.798231961 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.792749318 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791179731 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.792434276 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.794274425 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.792330524 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792959134 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.795700994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.80027947 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804067278 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802290614 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.792233003 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.796267457 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.792992798 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.797149219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.796946776 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.793505246 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793408736 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793886032 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793799344 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793954822 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.794507708 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.793329974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.789847543 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.793777337 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.792537026 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.792812159 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792801985 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.794451831 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795626492 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.792858659 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793727221 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793412007 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.794423543 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.794043822 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.791427141 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.793118667 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.794033608 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.793941008 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.801243263 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.79396485 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79641495 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796123696 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.795919843 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.791928888 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.794947782 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798298003 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79580084 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802479629 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.792785138 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.795055702 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801047393 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.793626448 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.792735089 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.798500428 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.794937026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794201011 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798020955 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.803507585 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.795256748 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.794490871 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.794811464 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79683126 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794618552 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.801549296 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.79672358 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.794867135 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.795931588 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.793791543 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.795005038 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.798139476 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.796842016 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.795316272 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797489122 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79565968 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.795480243 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798099724 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.796324579 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.795407368 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.797383695 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799194781 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805131352 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.801324792 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.795539442 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.795847772 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.796365356 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.799530574 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.798120959 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.796213393 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.796665977 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807560011 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.805666397 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803815632 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.798051984 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.795254722 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803215612 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.795464417 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.799638093 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797053223 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798739602 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.79787127 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.796014344 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.794602768 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799379425 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.796679088 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797981814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.799471546 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.800837279 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798024419 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.798879069 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.797947212 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.79717346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.797487795 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.7968882 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.797311846 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.800849982 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79987831 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.795572037 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.798164069 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805445907 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800603982 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.800182253 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.798073915 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.797589584 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.795480694 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.797778416 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.797201668 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.801524723 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.806531303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.800295448 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.809740987 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.798275981 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808930307 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.79850348 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.800575107 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.806544177 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.798933568 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.795059579 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.796440474 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.797412 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806128779 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.798867211 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.798190191 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.802868759 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798107822 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.797822854 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.797443717 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.797800033 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797762283 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.797973098 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.807027676 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.79831351 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.803526897 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801940003 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.799609221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.800289978 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.797426506 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.797893037 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803128375 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.799484625 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.801933689 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.799843052 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.798640841 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.79860551 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.798868293 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.799725502 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.800268666 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.799266712 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807723034 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.797466745 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805699792 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.799652332 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.807725541 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.800619089 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807012786 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.801140503 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.798706902 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.802489166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.800836596 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.803179143 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.800422756 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.80328343 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.802500104 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.802291902 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.80415789 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.800574929 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.798373388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.802855302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.799903928 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.800446941 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808364281 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827074666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.802321864 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804560771 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.801019427 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.802450461 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.805274591 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.801356936 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.798659793 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.804260513 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81359211 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809172592 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.801079536 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.801509899 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802008451 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801083856 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.801016571 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.801132766 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.801863297 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.800962626 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.799782935 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.802515775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80569218 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.802282544 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.801059322 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804053865 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.801288865 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.813154245 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.802470019 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.801594741 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803255937 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.801289104 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.802676061 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.802524136 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.803039122 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802858993 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802723806 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.804405897 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810785467 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.808987156 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.806816611 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.803929493 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.80272389 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.804193567 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.801939309 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803081442 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.803645547 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802751993 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.805293469 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.804233417 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.802760222 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.799871659 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.803676188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.80328256 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803551067 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805934037 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.812628526 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804523164 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.804227621 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.802500947 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804199277 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.800291086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.804029209 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.811007308 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807878674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.815892493 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.811414778 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.807786365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.805746172 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806917024 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.813754948 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.801216813 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.805426369 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.803147615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.806181734 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.803300943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.80797995 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803621108 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.811387756 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.805953179 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.803950719 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811467958 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.807248649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804979419 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.806904568 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.809843456 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.805289639 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.805096254 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.80484468 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.805515127 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.812965621 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.807905184 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80569329 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808166742 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80242674 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.805522467 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808964144 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805369593 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.806982513 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.805208314 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.806453255 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80728328 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804589936 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806571755 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.803913234 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.803923028 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.809339741 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.812757965 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806545625 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808246903 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.806233403 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.805274972 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806591496 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806186774 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.806007535 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.806221136 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.804897765 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805594755 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.806957442 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.80856612 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803549299 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.804836157 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.809171944 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80647986 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810010132 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.817163783 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.815332032 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.805452972 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.804821201 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.805792321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.811685326 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.807491902 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.807402612 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808897509 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.809034186 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.807561124 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808467386 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.808036457 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.810646348 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82329658 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.808473234 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80906572 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.810350241 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811249828 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.807259805 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.807556267 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80680962 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.807751101 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.810461434 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.815370588 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.807972208 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814847634 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808068662 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.806543458 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.81206824 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.811087468 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.815291643 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.812124016 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808081518 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.808284467 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.812622311 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.82507268 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807585061 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816996708 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841022579 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.808024144 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.808167291 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.808472357 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809276737 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.80904102 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.808599291 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.809137254 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.80873353 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808121991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.808207038 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.808638617 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816035598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.811527811 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.809104794 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.810246905 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807641627 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.809314244 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.807879969 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.809477316 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.809450541 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.809472318 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.808967819 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.810499295 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.810043829 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821284553 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.820368299 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.810065921 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.810231068 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811138378 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.813114074 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.81370722 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820555203 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.81823104 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.811602602 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.810088799 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.812651716 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810200246 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.810266798 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.810187162 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.812346213 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811361738 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.810792741 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.822456212 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819811502 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.815673094 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.808988933 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811039187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.810720659 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.812477888 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810193573 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811204501 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.813379972 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.8087172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815994709 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.810867917 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.810322666 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.813573684 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.819838133 seconds)
  done (took 1074.790012838 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.811432 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81010059 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811808725 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.810739173 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810915373 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811405559 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811408437 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.811862328 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.810073777 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.811998634 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81095222 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81090128 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.811144438 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.81137523 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811336887 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811772451 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812072595 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811095818 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812751291 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811931325 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810821372 seconds)
  done (took 39.777474153 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.813002974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813146806 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812473445 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.811557334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811427213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.812997965 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.812002277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813001867 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.813210754 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811878793 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.816539627 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812722462 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.811659989 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.81322735 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810945125 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811706725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.814270395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811387086 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.810217798 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81172057 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811212177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.813376936 seconds)
  done (took 41.615027006 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.811834692 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.81124383 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.812613701 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.81110593 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.813424712 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.810925328 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.812561975 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.812481752 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.811862413 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811977673 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.810710539 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813504666 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.821361977 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.822833542 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.815545634 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.816101884 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.960819042 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.813880721 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.813549012 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.812174016 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.812241584 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.817678507 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.811202161 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.811733651 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.810887417 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.811554709 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.814093132 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.809030887 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.811856814 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810792024 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.816550973 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.811942354 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.813499475 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.813671156 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.813074037 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.8103905 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.816789639 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.811188953 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.810608627 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.808549085 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.818110001 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.831788476 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.80757369 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814304455 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.807600577 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.80659578 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.810294731 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.817452085 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.815820394 seconds)
  done (took 90.73877539 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.806239425 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.805595215 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.8066264 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.804492166 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.806256613 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.805394379 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.808373846 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.808294839 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.807166618 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.807606938 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.80989275 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.810201261 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808118394 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.807196852 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.8112504 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807004563 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.808840479 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809388296 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.808093933 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812794212 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.81010512 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.808680023 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.807972159 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.809349728 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.809258099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809741205 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.809449129 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.808508875 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.809460191 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.808854285 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.809183824 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.810872323 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.808564036 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.810233049 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812272904 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.809671885 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.811201671 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.809883235 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.80855115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.809086126 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.808376889 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.807294886 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.80955812 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.808613456 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8108069 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.811108272 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.809240517 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.808341473 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.811892169 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.810356983 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.81302161 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.809822306 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.809426072 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.811459704 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813425627 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.808693751 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.810806182 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.810109506 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.80955151 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.811802041 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.811973966 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810790497 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.808825481 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.808170027 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.813217462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.809542672 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.809790299 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81068103 seconds)
  done (took 124.779318018 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811797375 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.81373697 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812122822 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81089151 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.81406368 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.810276728 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812065981 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.809790204 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.813621401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812278185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810868935 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.810365356 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.813288403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809875597 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.811235065 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812106521 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811162064 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813459834 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805280828 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80410142 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.804580701 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.806301728 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.806399351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.807828423 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803779047 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.805963741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806218983 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.806570942 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805676558 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795052639 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79612423 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.799556217 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798372424 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.798444337 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.798603623 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.799526452 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796811859 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797572829 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.798842302 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799402952 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797741322 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797199879 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800905809 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.798833869 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798111939 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798704434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.801607779 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.796513888 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.799846194 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800373947 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.799142431 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800012908 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798642467 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798032558 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798482162 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.798544447 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801336217 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797066088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797689658 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.798994106 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797396319 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.79985689 seconds)
  done (took 113.572040535 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798328654 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.7984041 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.79919057 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.798020258 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795774457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797178542 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799712292 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.799451748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798805254 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.797786572 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797836658 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797297631 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798245076 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797835978 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799698441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799498757 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797533128 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797733839 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797320693 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799390481 seconds)
  done (took 37.694786449 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.799064179 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.799154395 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.800740377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796992493 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.797760132 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.799587839 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.798996147 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798750174 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80016391 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797444612 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79774488 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801431009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797595766 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797742054 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.797635371 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796551324 seconds)
  done (took 30.505352793 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.799013605 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.792384233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.795360955 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.79415332 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.794496195 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796468277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.792839252 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.797992679 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.790623125 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.795664651 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.792432778 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.794254698 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.791243704 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.790801219 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.792473459 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.792097511 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.790826366 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.792232545 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.790351987 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.793294522 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.793784397 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.790322402 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.792360416 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.789849543 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.790440365 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.790977154 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.790287881 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.788972097 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.791549275 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.790737693 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.788614976 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.791581916 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.789480713 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.793684593 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.790395779 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.790051267 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.791902579 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.791542423 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.790728614 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.791381643 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.789869437 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.789984718 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.790539753 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.791122401 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.794121441 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.790818611 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.789220763 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.790220994 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.790159443 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.789165959 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.790837068 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.790886046 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.789209584 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.791142942 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.788417821 seconds)
  done (took 100.271624805 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789296096 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789262494 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.789982303 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.789533572 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788514133 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.789913372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.789151257 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.787264633 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788509412 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.788943528 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.788452031 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.790152919 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791146957 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78830102 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788914088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789290518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789768251 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788746884 seconds)
  done (took 33.92562564 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.789477162 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.790076353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.790906995 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.789169289 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.79056721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791050391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787737532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.787112599 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793238877 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.793358421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789827339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.788541955 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78864843 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.789575246 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.795111518 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789000876 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.790432492 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790193116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.790403692 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789010673 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791382891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789767146 seconds)
  done (took 41.103654361 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.78674983 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.787556796 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.804877452 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.807283242 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.807961391 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.822756381 seconds)
  done (took 12.535759226 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788508736 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789523088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789684071 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790332776 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788049761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788171301 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78974444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78756713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789252391 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788649021 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78895066 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787730719 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789188535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789460147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7893348 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789544677 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788651149 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788548729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789425953 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787512011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789104004 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786638935 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788612686 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790624669 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788186862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788285575 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787576325 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789355456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788550272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791464451 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786670634 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789014433 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788106525 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787802308 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786984837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788848899 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788976674 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787907993 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788339471 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788353032 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.78971418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786157931 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789406939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788581123 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788635295 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786746627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793499651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790539741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790830416 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787704016 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786550051 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791278054 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788874936 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788171938 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788986778 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789692879 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788541715 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790595199 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788735568 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790343653 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789719955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788964391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791656696 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788293387 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787347847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78770747 seconds)
  done (took 119.784721065 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789223197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791418408 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788600396 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786625105 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787924192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787265701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788720064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790801479 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787852042 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78955921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788009404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789640986 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791188154 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789569759 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788308066 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787236331 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789263493 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787612772 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790395274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789129359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787820793 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787589626 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787132869 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792053623 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78910742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787372677 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788153477 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787190958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785845986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79057492 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78899493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790213472 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788147902 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787682558 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78815816 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791295743 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791000382 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789857019 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7882629 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788960511 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789415475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787206672 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787117121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789707998 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788029676 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788201424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78907193 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789101345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788178538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787933283 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788026505 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79258823 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785278241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788001288 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788422685 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791219941 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786567061 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788503251 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786758925 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785618539 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786606163 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787231446 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789494382 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787738334 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785675005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787263608 seconds)
  done (took 119.763360924 seconds)
done (took 2491.850005613 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.813835792 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.812226832 seconds)
  done (took 15.341855914 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.948228495 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.902132323 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.783787608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.824971005 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.780846966 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.78527402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.780904957 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.783614039 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.784360469 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.783990115 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.784484366 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.971353123 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.788050921 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.779985509 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.786223866 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.873154585 seconds)
  done (took 50.865454404 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.787499141 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.788503334 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.800786415 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.791003315 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.786905755 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.798157796 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.81991164 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.791029303 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.825776265 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.796357377 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.856160759 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.796616617 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.787680549 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.840226634 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797027215 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.802599399 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.885739306 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.862147937 seconds)
  done (took 34.330300573 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.863509733 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.796736598 seconds)
  done (took 10.383066735 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.807856128 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.807124849 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.859034701 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.804929808 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.804921576 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.798917752 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.786666305 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.850274742 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.810348932 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.812381575 seconds)
  done (took 69.861735601 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.796419029 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.789527208 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.78848795 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.787566099 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.784093779 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.788151542 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.788368828 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.789531802 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.442773271 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.820115508 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.795257891 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.794449752 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.787942499 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.793618869 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.788212494 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.809494135 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.899588978 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.787579086 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.787801243 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.796018828 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.790480556 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.842570211 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.803453232 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.793636993 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.817759617 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.451364673 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.7931616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.79824107 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.896576635 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.785970323 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.790062512 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.973020819 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.792046786 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248687658 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.044571761 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.795900902 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.799271992 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.794161029 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.79106192 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.909899606 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.789935386 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.795192334 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.702563646 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.025549585 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.87770471 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.836220531 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.097818772 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.804644454 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.790077822 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.817589619 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.795536947 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.787717151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.801678449 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.29370752 seconds)
  done (took 128.260741692 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787058397 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.132472656 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953158111 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789997717 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067459037 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990279977 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.784755546 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831464066 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.786965304 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010765554 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037534305 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889875272 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786064135 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.789594807 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787962019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.78507185 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940680459 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.855175531 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.787448105 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.786144404 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811929651 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026634055 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.907291972 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787561913 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.81454215 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99732598 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.904469425 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.885010985 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.5825702 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.785456203 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846308048 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.787091441 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.785224326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.783684274 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.944217743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.875214209 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.866040676 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.788666632 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.786148926 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788337106 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.441990382 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98537646 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.878681026 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.915628079 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035526453 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.988582281 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.561534599 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.785103004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.517882436 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946390248 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.013411252 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.015280446 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.90310752 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.787178206 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.123115918 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.784606419 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.785322626 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033700351 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005623338 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.883588648 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789533084 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.788639602 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.785209961 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.025094426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.789595817 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.884042155 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.786488204 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.784926879 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.883805227 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.883175127 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020219596 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997361988 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.813593348 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.130197484 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.286680914 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031886756 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.848532066 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033009216 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.789638985 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786189768 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867816034 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.625084752 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039089865 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030044374 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029312318 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821022475 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.504315418 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.793197097 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.010936224 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00650742 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.048849083 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.033981375 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.020528384 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.099965174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.786515393 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.787390906 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.013535081 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.909086578 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.793675428 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.132829794 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019795009 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.313313217 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.814615407 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089136109 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922712891 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791687013 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.418788502 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.793246891 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019686983 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.832207501 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.794412025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.791596811 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.008417489 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.780041472 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.794097455 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.439555963 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.852067535 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.791837567 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026456995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.792371596 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064890716 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793484796 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022121007 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.230373612 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819046421 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.964565711 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.037659966 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.792776238 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.030074063 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.035581644 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.905558298 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.011680446 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.504491979 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.795558911 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082227234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79597362 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.795297926 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.967805473 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.798786997 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935831196 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795468744 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087564184 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816800896 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025224655 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797853219 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047832492 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.824178826 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848536455 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.797429288 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91954622 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803145081 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.623964451 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.958331125 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.217352417 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.796120067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.348685039 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.797673709 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.939283805 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.025049096 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81416698 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867854511 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.460379943 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.796778195 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878797547 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815985417 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.18421613 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.796005604 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.047998044 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.801989921 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.797964324 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.797616271 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.034675545 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.977426502 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.799541472 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795609943 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.70471351 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.800579968 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.797616433 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.97876125 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.321485411 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.795065975 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996604634 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803480443 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922401747 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804703829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.871812284 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.132328493 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795848703 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.798407513 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.79602246 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.798031359 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799654307 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.003503279 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.818708128 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.286511794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.933544078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068651051 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.10202784 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.03658906 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.83498832 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.799903412 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051328677 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796901976 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.856977845 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.797291177 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815857434 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025139681 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79677497 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.003718618 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063009228 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.634433915 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84234791 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.797216809 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798487794 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.79708872 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.940873472 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878643094 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795456652 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796620014 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.910818403 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.916828545 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00401898 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.800125872 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.842696375 seconds)
  done (took 885.32141024 seconds)
done (took 1196.082011501 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.799189179 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798468481 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.799489441 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.797205526 seconds)
  done (took 28.924294857 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.808397877 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.799573408 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.798681954 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801290047 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.799147182 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.799838141 seconds)
  done (took 12.538508973 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.797299018 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796665689 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.799431205 seconds)
  done (took 21.124158532 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.871786347 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.186535201 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.929510412 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.213918372 seconds)
  done (took 9.93366716 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.802637776 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.802578433 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.80067002 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.801662949 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.810132272 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.809519613 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.800583077 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.802988211 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.81051756 seconds)
  done (took 17.975385208 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.922574356 seconds)
done (took 96.14929164 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.805623854 seconds)
    (2/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.01110574 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.183237778 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.929533995 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.468481673 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.864473396 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.813709352 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.798070732 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.458830682 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.960249063 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.895200678 seconds)
    (12/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.872933897 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.926121194 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.81097277 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.928009276 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.797379533 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.0939487 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.152247139 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.978347537 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.859315419 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.817833929 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.819966945 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.123237735 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.691372623 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.037902717 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.803523601 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.906293136 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.970146006 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.112276583 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.28616152 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.885369885 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.794370763 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.458316609 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.796730558 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.794079427 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.293294182 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.034439277 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.969957292 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.892972979 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.902998774 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.820294 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.796774794 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.052425042 seconds)
    (44/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.803788094 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.996413194 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.986289103 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.816790462 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.012083801 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.795813505 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.288290896 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.968170824 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.89087399 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.797194619 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 7.162647041 seconds)
    (55/309) benchmarking ("sort", Int8, false)...
    done (took 4.689590404 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.05062946 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.12438177 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.959370061 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.818751804 seconds)
    (60/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.178477174 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.188068514 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.891092787 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.802189473 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.18375485 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.801386679 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.036317578 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.820149886 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.800099518 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.822622804 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.803931094 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.04308274 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.932547834 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.880437856 seconds)
    (74/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.92935246 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.685457828 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.146683784 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.734126347 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.475726008 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.193810524 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.79788959 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.905511971 seconds)
    (82/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.91454877 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.174353752 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.802047456 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.036110578 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.533931833 seconds)
    (87/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.817588748 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.798803306 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.4993603 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.119641694 seconds)
    (91/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.044549578 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.165538319 seconds)
    (93/309) benchmarking ("sort", BigInt, false)...
    done (took 6.803090799 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.696773771 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.801639727 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.017334678 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.05890776 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.800386788 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.109685075 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045878351 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.79984346 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.277092084 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.943319987 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.596284471 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.657390453 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.180932353 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.891974472 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.041682033 seconds)
    (109/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.824281185 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.736950627 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.583610714 seconds)
    (112/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.821641424 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.911428758 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.801204255 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.965696474 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.89394851 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.635289358 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.106785919 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.808702408 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.979994103 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.959149053 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.885345963 seconds)
    (123/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.938631605 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.800232761 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.838646587 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.195248669 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.802476239 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.009971434 seconds)
    (129/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.910308011 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.992510456 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.057595254 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.929853183 seconds)
    (133/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.805294271 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.801793405 seconds)
    (135/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.416302355 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.463199343 seconds)
    (137/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.84599668 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.802547347 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.593651705 seconds)
    (140/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.827966314 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.780222988 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.117580148 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.831601964 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.18945266 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.805879759 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.137197867 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.9422627 seconds)
    (148/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.00108894 seconds)
    (149/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.804197294 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.31585977 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.442901672 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.981874505 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.907861772 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.880504424 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.83313155 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.962141974 seconds)
    (157/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.943063032 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 5.504179411 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.803433568 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.974447821 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.799894827 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.213977219 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.811957035 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.784844015 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.972089795 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.803805816 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.526674107 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.044151019 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.808373701 seconds)
    (170/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.453379878 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.076774435 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.312726927 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.804068334 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.906499694 seconds)
    (175/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.933344989 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.807273058 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.937814531 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.826672278 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.581778774 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.803151711 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.255031451 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.112528062 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.14111089 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.808611641 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.158968467 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.12220885 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.065115908 seconds)
    (188/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.820416924 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.139265231 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.8264128 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.153690723 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.143205052 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.714958506 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.144006738 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.80527575 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.267901003 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.91884276 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.040264726 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.886441264 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.804695099 seconds)
    (201/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.739846876 seconds)
    (202/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.302753981 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.810459625 seconds)
    (204/309) benchmarking ("map", abs, BigInt, true)...
    done (took 8.120056767 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.998732768 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.039885627 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.998841534 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.877275048 seconds)
    (209/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.006337353 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.06934786 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.845977346 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.473666993 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.923717586 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.945300736 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.903008376 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.809943009 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.919866103 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.538961277 seconds)
    (219/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.87992401 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.035848712 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.908041724 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.807424609 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.805371818 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.565014169 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.113626166 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.924567972 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.893990016 seconds)
    (228/309) benchmarking ("sort", Float64, false)...
    done (took 5.538029584 seconds)
    (229/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.948921953 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.464934358 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.008532346 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.93759063 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.117675826 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.81271183 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.061294552 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.807276691 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.916071891 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.886061782 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.821920985 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.869529701 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.832081632 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.428578789 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.813946272 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.115198147 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938065046 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.203876308 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.944741796 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.87041019 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.807545968 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.681917354 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.102836898 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.812057877 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.981510438 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.103586841 seconds)
    (255/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.807776034 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.576301053 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.805731169 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.244563789 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.146253597 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.207842052 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.918416233 seconds)
    (262/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.256194238 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.986010177 seconds)
    (264/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.948279992 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.80817518 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.380629717 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.26090695 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.834260699 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.91088485 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.111370811 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.813724821 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.19278069 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.839954677 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.811335327 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.620081542 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.14398544 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.182541536 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.001287577 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.938308866 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.879983877 seconds)
    (281/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.963144973 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.986129919 seconds)
    (283/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.09603318 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.836657417 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.989127294 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.372949472 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.724205833 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.810923876 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.189856648 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.141621519 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.108814908 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.998388804 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.598381388 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.594464067 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.932812611 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.889232765 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.832536052 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.80725661 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.543588876 seconds)
    (300/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.813953966 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.413256508 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.835167651 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.537229898 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.711319454 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.258415463 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.898334699 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.886984088 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.024747943 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.973286402 seconds)
  done (took 987.393588053 seconds)
done (took 989.188868884 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.836983347 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831032483 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.8130389 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.835365381 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.924439714 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859290305 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.8273582 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.816733713 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.861761093 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.864984177 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.811661954 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.858609546 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.813971661 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.813343744 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.812912544 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829729912 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.115543682 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.840269351 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.832703136 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.826839221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.83190815 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.811492258 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.863742788 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.857887581 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.820502341 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.817712654 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.816775435 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.832218029 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.930951998 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.815585783 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.819789182 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.828750523 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.116801164 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.840268924 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.811928261 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.833413532 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.828354573 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.827839393 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.822621312 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.845917225 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.201765354 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.847106798 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.815203253 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.816890774 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.817782755 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.819588261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.81452437 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.824736216 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829603098 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833502521 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.193976338 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.862659455 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.816888825 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.816394382 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.831451016 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.816268627 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.819875669 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83268261 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.834509732 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833643998 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.103219323 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.846481195 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.820510988 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.83432474 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.82458134 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.232150791 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.844169404 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.822115946 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.201317187 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.853909969 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.232809785 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.856805805 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.818542549 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.831290542 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.849195677 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.116877265 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.839373181 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.8158801 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.824870786 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.815596447 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.82761837 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833193093 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.820294001 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.816528285 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83217396 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.862162627 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.831274234 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.816722074 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.828768476 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.836482842 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.825482018 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.828909417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.822003637 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.814252383 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.830332659 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.821309333 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.820488812 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.821984724 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.822246314 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.832910143 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.202504617 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869678377 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.818561994 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.817395092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.818905179 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.831583889 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.199394837 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.849439409 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.841447585 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.866492247 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.818714334 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.102514121 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.843144457 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83598777 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.830457729 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.819226271 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.815818338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.10642855 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.222263186 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.864855772 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.818301175 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.81607053 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834262261 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.820281756 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.816981471 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.118566525 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.842942127 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.834428379 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.941209866 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.832886519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.853037205 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.816453281 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.82218717 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.869028371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.836286584 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.851120585 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.820743803 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834811319 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.835900221 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.815328931 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.832366036 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.8322506 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819008351 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.827412899 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.816803904 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.870330249 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83398825 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833194486 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.842018099 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.942576298 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817418975 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.105395664 seconds)
done (took 285.737557624 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.89827737 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.81641737 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.910086998 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.820099945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.909732378 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.897416419 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.820662016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.820136947 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.818884787 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.301721949 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.819619394 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.823592917 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.816115128 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.821741432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.888819089 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.821999904 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.819574 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.253021977 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.824353185 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.898268489 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.817587756 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.819410075 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.820129287 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.308896813 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.815925601 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.81851052 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.901904819 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.819801584 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.25814066 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.81722721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.818818698 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.263235008 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899070754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.847432428 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.827771327 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.827855535 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.912915313 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.829702169 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.88727904 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.889261403 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.915021101 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.857998838 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.817815283 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.816263041 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.82461522 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.820606265 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.82055686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.855999124 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.818174156 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.826584626 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.253241936 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.828074289 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.825976066 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.821006926 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.821243349 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.852615717 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.823209199 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.82412612 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.900056118 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.822311549 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.88919949 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.309448084 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.305571413 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.821023607 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.81899315 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.823147059 seconds)
  done (took 181.865194075 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.884899465 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.900688543 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.885193883 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.822513381 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.868988723 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.886653372 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.824638681 seconds)
  done (took 14.824147627 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.825856031 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.82320177 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.868238208 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.869590835 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.824405198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.976704264 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822528728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.831623236 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.827894744 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.850237791 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.820931306 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.822131113 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.829419412 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.821551735 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.871182118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.831509037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.937682793 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.82428126 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.823791521 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.969071304 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82716906 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.829681757 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.84586972 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.835826839 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.8198311 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.827983846 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.398987278 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823519364 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.824068092 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.822265385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.823668946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.863250502 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.821754246 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.819836982 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823321249 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935297067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.82298631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823399842 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.823405478 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.822054932 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.8234494 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.824386258 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.823491317 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.824011395 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.824872488 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.84465529 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.823268982 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.824470112 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.824457033 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823785704 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.848415703 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823259616 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.824278452 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.830037573 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.864974026 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829007935 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.824577664 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.823885072 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.824162606 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.824649837 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.971005326 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.873649969 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.82455716 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.872231249 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824652849 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.824585816 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.825850646 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.824921498 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.911475238 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.824983702 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872189418 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.82471137 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.981225271 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.845698631 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.826331368 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.826958513 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.826612955 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.826146954 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.823152595 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.832025265 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.825407439 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.825126887 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.830275119 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830751024 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.825282066 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940259507 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.9646712 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.825787327 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.826763733 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.831204189 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.827598241 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.867803993 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.825739077 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.827091255 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.880860919 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.940889062 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.852048078 seconds)
  done (took 201.249668969 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.831523434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.831605792 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.826905009 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.842782762 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.826110273 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.825481254 seconds)
  done (took 12.740496269 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.827591923 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.82973829 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.82822015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.827331618 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.828527986 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.827335657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.828534186 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828735492 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.829452353 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.827716971 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.828639882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.826093773 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.826018539 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.830375743 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.827349219 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.828168952 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.828106451 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.828944338 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.829813768 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829230247 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.082418358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.828351023 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828195878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.831956882 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.832129615 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.829438604 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841459567 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.828681623 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.831246166 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.833404137 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.833867674 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.831008299 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.830067907 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.832384534 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.833090231 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.830197285 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831851649 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.827447792 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.828972765 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.831830506 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.827182652 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.82974842 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.830227506 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.828187006 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.828831049 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.834922966 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.831571979 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.845288423 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.831854935 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.828573165 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.833330461 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.830493995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.830018046 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.827870738 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.832720819 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834838338 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.832154816 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.830030471 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.830202897 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.830348872 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.833497022 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.83174399 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.83081471 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.834398921 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838355584 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.829064422 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.832107227 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.834701038 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831612085 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.830373396 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.828441903 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.830749515 seconds)
  done (took 134.81676542 seconds)
done (took 547.259656807 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.072838909 seconds)
  done (took 8.831237268 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.999742106 seconds)
  done (took 8.822502696 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.092198347 seconds)
  done (took 9.855198917 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.85394857 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.836276252 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.837471525 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.831885955 seconds)
  done (took 29.138015458 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.026686395 seconds)
  done (took 8.786426098 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.848037117 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.824999217 seconds)
  done (took 15.49903053 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.982429418 seconds)
  done (took 8.742996758 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.86875343 seconds)
  done (took 8.640450802 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.854498038 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.84607647 seconds)
  done (took 15.487492789 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.833757525 seconds)
  done (took 8.594104411 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.992755634 seconds)
  done (took 9.861315732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.841849492 seconds)
  done (took 8.666178289 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.883412864 seconds)
  done (took 8.645230335 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.861265532 seconds)
  done (took 9.623554024 seconds)
done (took 160.955438059 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.845387569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.829639249 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.828598916 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.831857423 seconds)
  done (took 29.096896192 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.866434906 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.864231332 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.869641931 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.877908064 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.866625758 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.864884004 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.858766175 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.858096767 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.875377479 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.868750572 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.866245641 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.867216145 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.863515934 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.8564423 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.868079561 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.866076356 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.876827416 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.866357945 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.85850368 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.870337163 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.83186913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.875390476 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.869358328 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.833448186 seconds)
  done (took 46.501994439 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.021856188 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.900636446 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984751573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.884228451 seconds)
  done (took 9.553356558 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.886274131 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.886829491 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.89590297 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.935817386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.959460664 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.896729089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.858291064 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.854322479 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.840465416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.885248606 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.961694515 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.881085559 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.972372741 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.835832355 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.020202181 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.833915093 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.834368961 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.885374347 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.936610968 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.948529297 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.833115032 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.886229669 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.889044186 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.88077894 seconds)
  done (took 47.263002415 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.834202973 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.844051114 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.843278688 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.835373738 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.835955876 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.835432067 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.842420157 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.837158699 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.856822972 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.837134004 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.835482355 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.835750356 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.842346602 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.836766726 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.835983663 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.848250977 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.850393353 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.836257923 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.8406971 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.842391514 seconds)
  done (took 38.568646837 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.831264708 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.678374443 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.177068012 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.085933216 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.830817941 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.835058086 seconds)
  done (took 31.202003677 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.845721965 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.839770561 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.834171003 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.888821271 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.967576488 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.837679666 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.833681403 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.84515329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875609147 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.892616129 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.852422374 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.858380842 seconds)
  done (took 24.1386671 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.833437179 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.831572872 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.832164578 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.845511646 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.843345334 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.842337252 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.842726451 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.831610633 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.846388883 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.850684445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.841980591 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.843141296 seconds)
  done (took 43.853654701 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913816641 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.7088593 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272620639 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289814658 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358669261 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038432978 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.832812446 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.920767811 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.836548995 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105678792 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.201722593 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343137538 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092013928 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850860461 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.953888468 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.330621471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144006737 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052781228 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871873568 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522281495 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961291715 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444873347 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.482829705 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961868546 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053787413 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.975225108 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.112917676 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.799016968 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899037702 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853683202 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855098202 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850408255 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124439777 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973470389 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922141368 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856183949 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264415249 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.561216718 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.857746703 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.539604878 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.399247638 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.970981073 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855768178 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851283375 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777177566 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453435328 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94338967 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.856185836 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.553979737 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851358196 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855944402 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927881144 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.853135082 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.659833836 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533437414 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.118875888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.854027539 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853993527 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414597098 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851234819 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.554474035 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.790916507 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.937986342 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.47662411 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305821078 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.007659906 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.853011039 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855637814 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778534765 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.468997156 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970490741 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989155065 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.871266084 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493661979 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142632265 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.292721408 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906111014 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115474276 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.786572089 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.78454303 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068478116 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808966409 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782188171 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.698230597 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780964458 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052789874 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881079726 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.437952593 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879003145 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934909583 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858074334 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869376505 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85426979 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069482405 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.748109343 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854687078 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.151859479 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.109345203 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87081905 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.942415836 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78037427 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.855125506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099881142 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.057831899 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182462331 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.334514147 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943668536 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864771055 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.868306883 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.849790468 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864668817 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.118541904 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918822398 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854690909 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973106046 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.799319171 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088883648 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88791416 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.955625338 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.216009444 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095360145 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.185275685 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100039787 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915333645 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861943818 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856458228 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.534888951 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465852509 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.07462532 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.8691089 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419385669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864364943 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.853896569 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789935342 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.686491954 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.224026042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.941174938 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069198113 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.877643248 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131757603 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782364591 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993246672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.850434456 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.069964973 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.491774201 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.936165201 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105693531 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.190011964 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.180152528 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866075119 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869609458 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948910207 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87289523 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.359713656 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104577397 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.858369578 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.860272511 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.538496364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914071827 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858294088 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.860818145 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.382987412 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124833712 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879393867 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.861056897 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.731765211 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.873490708 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920256642 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862389529 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860668577 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.41726263 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.368916734 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.863429099 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.545344317 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078635392 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862173317 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.479853729 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034377925 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.870853801 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120719176 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927397306 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.785890425 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.55917805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.559984916 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858115183 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787845424 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.85930562 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862046455 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864533093 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.048395933 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126726257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9081264 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.536336514 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.964317813 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865281843 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.862470566 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86388326 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.355281109 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860243728 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417875072 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981018998 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990113205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.871810775 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786032612 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.86169876 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861255293 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.861452458 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.810511441 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912118094 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.525222383 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067056493 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109640868 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.265161644 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87033227 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.490187913 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.976445601 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.874825826 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.154517764 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455582153 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.976734261 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93606531 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.866609355 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.479745358 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.588354416 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425526159 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175061542 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172503286 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202891438 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.297990141 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.193726703 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950660872 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092022741 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387621719 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922024155 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955222323 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800845159 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879826886 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499898838 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262450444 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873572207 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079596987 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150183547 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.230604958 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997440027 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070658488 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895409653 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.739471227 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899565431 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.400881103 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88525266 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.318886317 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067939092 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947759188 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.163087927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.949497494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.864541761 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192844159 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899899506 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.570506919 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218356879 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311193544 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.332448515 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088742239 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868598367 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.304855641 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208036244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.114651698 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.995442259 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793582801 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871593606 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873342073 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.879654337 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.844680258 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.756511203 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.114350493 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875283909 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09789166 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.055870897 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236851111 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.774147849 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.872368833 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870670048 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100575575 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.676852231 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032492735 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.237495703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.456737457 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882039309 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797166325 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798408522 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.57163995 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873920041 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.837860577 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067691924 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.965252671 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.550974612 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301672751 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189652659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113016786 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.882373809 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1357412 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143166488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.360994589 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890028653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.969690007 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.173555398 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.579527639 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.085060382 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095566492 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425952395 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085635897 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301861764 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.833031385 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.865478314 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076304019 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.083162527 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.246467401 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040801505 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.579630037 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.88059221 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243250193 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925546565 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.239516713 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05084485 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.957089366 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875829776 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947151918 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872822676 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.878138827 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.877313493 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878625131 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.235222412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.984637068 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.882388295 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948820204 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877260858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.448465602 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.880508019 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13865587 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211743193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196386205 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933858901 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871552307 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881033045 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800195101 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000890365 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.31239929 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145031303 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.988489077 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.003807646 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892680295 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.286944946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182759509 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18933785 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144331874 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.756910427 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.562924475 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.002295527 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.091148719 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879134709 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.07791511 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07720953 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160617523 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435720828 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.07516927 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071324448 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145063533 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235466016 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873510702 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455303002 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.878811334 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270704978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.899322203 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.23792835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12700914 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877014893 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994584354 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876657036 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.076523363 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.323946163 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.546430344 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216327235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734021178 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.877297842 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139186982 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193872496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176018969 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9453198 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878700442 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.585167999 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005951944 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.742785831 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098559526 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873103347 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076340579 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.581943521 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.875589795 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138151456 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176436011 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.872838263 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.770760842 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884947274 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.873989779 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088204616 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071690078 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112324136 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875828593 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87503532 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.680899669 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140986389 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931971801 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799662715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.874842183 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918384556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09981763 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893636278 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.389379036 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.576475301 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139426321 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.771157544 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891441938 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334086384 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252075267 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19482054 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400452088 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082220964 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.419155684 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.757821797 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259211413 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.877177822 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361346666 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261504075 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.874870834 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.429194433 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994147899 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.137189693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199814734 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.893449239 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617146187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.900417702 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089171583 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231247657 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805883627 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879758402 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.927061732 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876171852 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.865470047 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884060667 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.794234364 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339201865 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.728201114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436757311 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.877745159 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908519535 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.233899721 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.494865452 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989654768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895912645 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876071275 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.57236697 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.162452421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121645134 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437135509 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.976796147 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.87754262 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877278746 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.796221155 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057577855 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.060946016 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152590777 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.267465423 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.991775966 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877295506 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.085082108 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078555532 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.255369035 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005303197 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062780443 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995843457 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.815843728 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.583431588 seconds)
  done (took 1661.170143697 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876332734 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.93416879 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.886256348 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.962397304 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956271835 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973734936 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.948688306 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951410645 seconds)
  done (took 57.295521528 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.873103606 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.062264109 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.883320422 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.876454195 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937367977 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.874459672 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.033848918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.88815369 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.879884087 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.881267406 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.877188065 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.876346705 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.167243748 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.89745746 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.875143806 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.877308505 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.880215873 seconds)
  done (took 74.509724767 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.87698305 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.129032105 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.908720704 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.878557353 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.860783859 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.875161901 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.927254299 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.903677576 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.883660862 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.133418629 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.173761298 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896117226 seconds)
  done (took 90.255078413 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.892087701 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.879356265 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.88136481 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.878567167 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.880044665 seconds)
  done (took 11.225067726 seconds)
done (took 2166.483157155 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.107768941 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.075755098 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.127218155 seconds)
  done (took 6.009736764 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.022149086 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.072255239 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.181800737 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.192959348 seconds)
  done (took 10.281039897 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.181567814 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.243972781 seconds)
  done (took 6.236735372 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.198549668 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.901348816 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.292382718 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.884556296 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.881922758 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.885131594 seconds)
  done (took 22.467754006 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.883166309 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.883024334 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.883135179 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.885468896 seconds)
  done (took 9.344699751 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.879090606 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.570785783 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.88008564 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.891199897 seconds)
  done (took 21.030468833 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.030402322 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.000226604 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.026309084 seconds)
  done (took 7.870306614 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.100209311 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.676074802 seconds)
  done (took 6.587135952 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.044537378 seconds)
  done (took 3.852827414 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.913312772 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.153911919 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.363693775 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.386747501 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.454898281 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.704717669 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.182988979 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.099775978 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.309887604 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.322112331 seconds)
  done (took 24.704681107 seconds)
done (took 133.693516448 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.222381189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.908209445 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.086296133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.231086381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.110693764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.084667174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.097841386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.217383279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.912578751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.899838326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.236995396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.115903863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.04170319 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.89799321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.052142898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900602639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.109643043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.241606514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.922699494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.137393581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.107558308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.879237384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.074527457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.895186596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.115092236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.037664664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.422515476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908247725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.063533183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.435241702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.040992451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.278056428 seconds)
  done (took 168.494460319 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.882416891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882936486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.88504707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.883461741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.423060982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884188893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884421721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.883639965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.285283661 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.275908775 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.882759505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.409630456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884327023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883645512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885034559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883769548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.436302028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.886557599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.883982193 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.883096067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.884381487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.243149279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884208923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.26003768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.435097884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.886486494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.883902747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885455675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.884903778 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883535624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884007749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.884091841 seconds)
  done (took 209.803448898 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.884851669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.884631035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886454546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884578633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.886543793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887515629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.886268097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884531943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.519968812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.504983009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885117997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.88743764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.888247211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883952492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.884936449 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886350017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.884558414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.884620527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.884829372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.886335672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.887557361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.617776843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906409792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.626513218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.886351516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.888985479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886071415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.89029111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887141223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.886380167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.890357006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.88554505 seconds)
  done (took 220.923076888 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.131734255 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.88948972 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.890623286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.809690439 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.891171013 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.890056178 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.88366565 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.135681477 seconds)
  done (took 19.346607128 seconds)
done (took 620.390397722 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.254197022 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.09423432 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.063271624 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.911958394 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.161859726 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.951411718 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.908529667 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.970821447 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.737500614 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.984129872 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.56936445 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.930475246 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.664681585 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.935813273 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.032896811 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.963196253 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.500095523 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.60986322 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.082266478 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.002245314 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.08193018 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.825037233 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.990137812 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.765959574 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.699051996 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.863868105 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.938342323 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.509641414 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.921647181 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.070749346 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.597569138 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.162961447 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.924967945 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.907523448 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.962038453 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.941720227 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.115819479 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.921311953 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.031914528 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.622092252 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.984236208 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.640628904 seconds)
  done (took 103.624996529 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.900755163 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.896282693 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897499129 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.896927269 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.90456 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.894355883 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.896299435 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.895963015 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.895587951 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.896212405 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.899008125 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.902356197 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.898456661 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.90381433 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.898212462 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.89980486 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.899009939 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.908989636 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.897824671 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.898924805 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.898073892 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.899537433 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.891757291 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.898571024 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.899635894 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.89709039 seconds)
  done (took 51.199566382 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.894002127 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.043498362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.13741304 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.912406003 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.891719326 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.894958403 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.910695501 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.897985009 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.893782141 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.89425401 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.982929252 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.901823698 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.909013104 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.137427192 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.907544751 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.895292814 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.892854184 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.893227026 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.05367315 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909500052 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911763345 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.899947963 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.911151965 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.909842199 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.894849459 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894949477 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.896024839 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.361537321 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.902221776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.985876094 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.936231705 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.915977238 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.305824601 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.146360089 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.94771224 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.901141822 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.895947186 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.986832103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.900186891 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.892535317 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.911213073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.900381536 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.1373165 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.426364515 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.907433989 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.895742105 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.367307433 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.996354948 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.930403616 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.899337913 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.139732989 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.910388983 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.89813414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.893118659 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.932002532 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.897301372 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.897079687 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.254547837 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.90709366 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.912253818 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.899915358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.896682031 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.059436575 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.903930452 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.048566402 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.904783259 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.900267559 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.894616903 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.139527953 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90864845 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.436905599 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.91174108 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.896170181 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.985032827 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.051441611 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.396727435 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.910095501 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.059791164 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.322827544 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.920238375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.904245467 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.349551111 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925172937 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.905444061 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.897794302 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.900191639 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.898429726 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.939855043 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.908014348 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.355158091 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.44290109 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.273431448 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.924469895 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.912273148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.89824499 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.256526345 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.907622864 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.898111664 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.131942007 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444367237 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.911641647 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.902678592 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.417235895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.913546018 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.916470079 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.905537513 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.143735731 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.913939437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.940792324 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.895825309 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.901779647 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.900448192 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.917354187 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.903363898 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.898359997 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.410716323 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.005825955 seconds)
  done (took 235.408762211 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.896221599 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.900344505 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.89813973 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.897881006 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.895413143 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.897868974 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.89735239 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.898045129 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.898815933 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.898477868 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.895491696 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.899125741 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.899642001 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.905885004 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.898456758 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.899905534 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.500453293 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.897404152 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.896881593 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.896255962 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.53881755 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.9031024 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.897833217 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.896284426 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.900055268 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.896660947 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.899514414 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.900804382 seconds)
  done (took 168.230699434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.899611691 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.010935432 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.920022024 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.929896091 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.906710605 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.898204268 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.995190738 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.918709049 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.906574839 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.897813499 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.902911609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.960100522 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.908771097 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999897134 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.933404763 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.008953129 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.005389248 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.91039985 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.90120785 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.90242854 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92857407 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.903880015 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.959697474 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.016891577 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.921328862 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.010946639 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.920721781 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.901669542 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.896989728 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.010664462 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.921506181 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.96263434 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.926384015 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.91765632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.01796631 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.018581602 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.009016551 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.006177334 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.90786103 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.904340532 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.905131455 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.900998297 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.011040646 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.92253492 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.900560429 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.015854061 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.923260192 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.90420638 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.904600997 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.905818997 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.913498079 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.920443793 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.968271893 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026012011 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.938708535 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.928922438 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.997768225 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.030244698 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.904856147 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.997559356 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.910293868 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.013301718 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.923995937 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.901956519 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.906184648 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.908328418 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.93335467 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.008229275 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.00789472 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.909947462 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.999431819 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.940136296 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.911077369 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.903965121 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.903786384 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.015557057 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015997351 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.942680576 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.937198237 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.928715578 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.909079902 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.901864088 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.904693765 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.91964858 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.913133057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018685361 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.019553061 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.912945668 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.905895108 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.904378088 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.903444599 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928356132 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.021022132 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.938100267 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.00898928 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.96921355 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.972648956 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.917884584 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.918541144 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.91231875 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.965018147 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.919665826 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.916852234 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.192874877 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.962499871 seconds)
  done (took 206.21054854 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.270117124 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.955832373 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.962561813 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.210825385 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.257688034 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.941182596 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.946918645 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.952298926 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.976026661 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.136195418 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.027173162 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.969096262 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.938571042 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.92603014 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.948951688 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.975216072 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.961924753 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291959639 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.167877761 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.094606821 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9380891 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251874567 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.264267613 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.555937861 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.999580153 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.354434115 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.519078514 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.083766715 seconds)
  done (took 62.717473931 seconds)
done (took 829.209740902 seconds)
SAVING RESULT...
DONE!
