cset: moving following pidspec: 22535
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.245179574 seconds)
loading group "string"... done (took 0.465472705 seconds)
loading group "linalg"... done (took 7.61055766 seconds)
loading group "parallel"... done (took 0.172640777 seconds)
loading group "find"... done (took 1.183419441 seconds)
loading group "tuple"... done (took 2.124109352 seconds)
loading group "dates"... done (took 1.335599479 seconds)
loading group "micro"... done (took 0.248004082 seconds)
loading group "io"... done (took 0.659979066 seconds)
loading group "scalar"... done (took 41.979137059 seconds)
loading group "sparse"... done (took 13.085482452 seconds)
loading group "broadcast"... done (took 1.171021698 seconds)
loading group "union"... done (took 14.424478202 seconds)
loading group "simd"... done (took 5.161720349 seconds)
loading group "random"... done (took 10.364868126 seconds)
loading group "problem"... done (took 2.052620323 seconds)
loading group "array"... done (took 24.401599587 seconds)
loading group "misc"... done (took 1.469111302 seconds)
loading group "sort"... done (took 3.619537167 seconds)
loading group "collection"... done (took 19.721083054 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547881162 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143991436 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133722328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150313623 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206395352 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14229021 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158027222 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.115153769 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.978174748 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18005545 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154333196 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516571053 seconds)
done (took 5.164058529 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226301249 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09691478 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105796874 seconds)
  done (took 0.87924952 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07763118 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14771612 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09556324 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078949229 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096493419 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078246079 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095880975 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077580404 seconds)
  done (took 1.353265606 seconds)
done (took 3.22724996 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748479564 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282941503 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201250209 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46254031 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.199737445 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218381692 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674834398 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36855665 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250806259 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099348542 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14278339 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387217933 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13583758 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687461651 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091818756 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125541884 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180803339 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46942255 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081917422 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109963225 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116047621 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143111409 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131327622 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092675768 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.189526802 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083115485 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199429496 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110804716 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082065067 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291059982 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200101909 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687155592 seconds)
  done (took 10.970496536 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112325397 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136173561 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099214953 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139675616 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135304217 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100755824 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08812081 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09792838 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123941883 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177450835 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115720037 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138266501 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097176586 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082741067 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116604846 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245747002 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121914081 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105072137 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103002098 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105047933 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122942209 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114886455 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110205658 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093472344 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168976258 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223600463 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112914403 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128684464 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099372915 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114267367 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144014852 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144748491 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096279142 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080536625 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173710085 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126458235 seconds)
  done (took 5.194889826 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19172957 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123841007 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171691437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166549658 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141998104 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162973801 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115351827 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249482225 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.1159674 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164277382 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14367524 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118589592 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081123011 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156759127 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083456464 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098756012 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.664618303 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124387302 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158298548 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117560501 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104581059 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085177639 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373043987 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104664472 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080113609 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100656972 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066082443 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162472894 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100849777 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138964981 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119713433 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081408911 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13515977 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211657695 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080642193 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12980125 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133797865 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079625981 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096121165 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179049477 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087095238 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096434199 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102222354 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135580352 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135977221 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099397453 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098678244 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.206329751 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082933148 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115421392 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961867571 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181144682 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104245586 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097022894 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320844241 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09672204 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097334865 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076312357 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287016873 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182112823 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093461129 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079458989 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097464992 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079968294 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09971376 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384356633 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096583421 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73794672 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088992686 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107688921 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084491208 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098098359 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104348605 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086703851 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114676537 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078727794 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098565222 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078834289 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096125136 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080133149 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093770491 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105448909 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084418129 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09653711 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147681436 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094984833 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098991619 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129827469 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102228406 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078518476 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133413154 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098835272 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08096168 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132590257 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098501822 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090591357 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099612756 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141999241 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099073067 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192846668 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09488456 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127654419 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097772898 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113612677 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1108587 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098574383 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083440125 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094691504 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076488106 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1637768 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080869115 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099253941 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082340828 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112918548 seconds)
  done (took 22.753745351 seconds)
done (took 39.603445171 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.336057885 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104446776 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104963066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103450024 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100757158 seconds)
  done (took 1.511236459 seconds)
done (took 2.245378554 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291397263 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173245236 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095838475 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168528507 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092801824 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173834702 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159273154 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111113406 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217895675 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07703285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163132976 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094322649 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077289537 seconds)
  done (took 2.654503563 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096641784 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117161711 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083541209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112114352 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07640895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113301466 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092729753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119740642 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109834723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086031676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094702278 seconds)
  done (took 1.828879147 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096487825 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114535916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083020587 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112245884 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077366373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111924039 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093703146 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118137961 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11081955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085998895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094661528 seconds)
  done (took 1.826698353 seconds)
done (took 7.02859839 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092389422 seconds)
  done (took 0.816713245 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.936718358 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.916317064 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112440851 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148967476 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.302087159 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.196942462 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476171824 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125061151 seconds)
  done (took 11.15283584 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.115665883 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.116637678 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102368028 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087459384 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106286259 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083849084 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101869791 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100761885 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084048211 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102932644 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086967604 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103387435 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102155899 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085870591 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102919358 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085163844 seconds)
  done (took 2.360501995 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120483742 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119798791 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10898223 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110373413 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087776727 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107398001 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108401204 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090517731 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103135812 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104926231 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090814469 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107007882 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104910365 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080930312 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107123484 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108988907 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086296382 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107723363 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107237993 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091101248 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107736502 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096636568 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087970398 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107654614 seconds)
  done (took 3.297192187 seconds)
done (took 18.355946616 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161109486 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110360413 seconds)
  done (took 1.003599621 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09633789 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114996952 seconds)
  done (took 0.946898981 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099043426 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097458609 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124444327 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110691361 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081024799 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097894599 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120934225 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081546772 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098397718 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081619865 seconds)
  done (took 1.731166539 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084149399 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111782649 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10297365 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096343185 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10648773 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096497302 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088917457 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100355836 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111968549 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078067066 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103583062 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116311257 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086836288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117296112 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106961264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08430539 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103515926 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100084168 seconds)
  done (took 2.536888981 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080540251 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099780116 seconds)
  done (took 0.921014556 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082908996 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095979262 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081660419 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098547841 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095947889 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077679166 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09566409 seconds)
  done (took 1.367481369 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485371444 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138487323 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258058737 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085786043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12176936 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304033049 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098513471 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085166394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105144734 seconds)
  done (took 2.482562749 seconds)
done (took 11.726205171 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093893673 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119426011 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113653618 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466037767 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106438588 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098595531 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162278446 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253904686 seconds)
done (took 2.159408088 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150090923 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328427199 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115888409 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067742887 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096755816 seconds)
  done (took 1.355776111 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080570659 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101808284 seconds)
  done (took 0.927987465 seconds)
done (took 3.183486326 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082346406 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132029974 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081009169 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098324152 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081334696 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097930556 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078898564 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099948188 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080969643 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.097960555 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.09787313 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080835992 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096749178 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079169625 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098457571 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080631745 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09636375 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078062068 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096087411 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080457849 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096312606 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080968785 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096446603 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078739295 seconds)
  done (took 2.952622045 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101379107 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098934077 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103882549 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086020098 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103048668 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08638394 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103119983 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098702302 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08729881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100151631 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101424854 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084875795 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100685993 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085923264 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100930099 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102835601 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08763242 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099320285 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08305204 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102242565 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.1041799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081347888 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102503983 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10363777 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084876783 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102641963 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08362212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099570276 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104110193 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084581754 seconds)
  done (took 3.619670374 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086296334 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095967741 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079179199 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103728633 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079365725 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098845333 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078368252 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097128612 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079532611 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097035896 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079904327 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096533025 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078693721 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098383617 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080339721 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100549975 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109361257 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079226716 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096498293 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079642748 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100440639 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078452035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097248138 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078477901 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09729133 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078126958 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096832726 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078702421 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097757171 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07872976 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099510461 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.0819476 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096859756 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085770065 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100118193 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079013202 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101432287 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078768972 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097455159 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095983821 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079226698 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096793167 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079037961 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103872887 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079685944 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098670198 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079739523 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098649977 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080576176 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100285432 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078341738 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096758015 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081315174 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098118028 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100861 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078848104 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09739389 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079024568 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098498035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078499562 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096505207 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078325899 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098810049 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079671825 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112975449 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086659958 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096623913 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080745975 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098054356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081810232 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098005342 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110898106 seconds)
  done (took 7.251448262 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083943719 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107731026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081205399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099115983 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077171958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097552037 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100657332 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080262188 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099083913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08592165 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097655802 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082218936 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098500026 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109326045 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08028191 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09920779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085972144 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095798789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079638549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10048469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097690996 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082845483 seconds)
  done (took 2.77923596 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209298105 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106701589 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143623162 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109535597 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085188491 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108095766 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104366377 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087585586 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103669833 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084459193 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102514636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104363446 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083838155 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102069413 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102536288 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085352746 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103819733 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086148707 seconds)
  done (took 2.673387934 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095273272 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100381026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104466173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100763824 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100715803 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084681621 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105783542 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110445641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084667104 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100122127 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09135038 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102906271 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102754032 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083266448 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103155317 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082349509 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102838199 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082112748 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110373249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106062381 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105467928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091972835 seconds)
  done (took 2.912769699 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097354736 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102511346 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120258218 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085173074 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097210137 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080776123 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106865615 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08228329 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109275145 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102520439 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083317625 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099790379 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089817732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100583776 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106769044 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082912791 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103288705 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082709188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102510608 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078731678 seconds)
  done (took 2.676374548 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10455661 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102061882 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102095582 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092754012 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102319704 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084363709 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111336499 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10208724 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083864657 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125694183 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101765797 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083311858 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110915376 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107591519 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101949256 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093033456 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110379485 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111725827 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08436726 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102294415 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126957609 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196322564 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110698427 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10211893 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084329611 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101629657 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102080749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089748815 seconds)
  done (took 3.697192297 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082951139 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101108401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079785497 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098987819 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079832819 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099136524 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079825518 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098048743 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082341155 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09838461 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083171045 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100647121 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082521025 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10068504 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085239218 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100707534 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082191778 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098406268 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080610774 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097958227 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082428208 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100743855 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082211584 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097935886 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079644574 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100498976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079721752 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098274452 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082767548 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098106062 seconds)
  done (took 3.481412274 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092640775 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109483054 seconds)
  done (took 0.969006593 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080537863 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117091661 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079685862 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105241174 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087847391 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101905868 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109684281 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088071284 seconds)
  done (took 1.536234834 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098614669 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112809249 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084975534 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114139926 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112209943 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096426953 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167814167 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102737742 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089136318 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099484047 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11541765 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081791911 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107038147 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083874541 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107919403 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08906129 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09897877 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089187664 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104291546 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099705331 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086156647 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113187865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085701882 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099325986 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084841185 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112792568 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11085138 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084877216 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1048046 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110577813 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089525968 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095543853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083400145 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102454839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081308257 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111669641 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114631586 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086463705 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110701994 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085184389 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113702976 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097671182 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088427879 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108556848 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093756282 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102464757 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084272498 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096474618 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099211976 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085427416 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097023055 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083437337 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096120696 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091357791 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107006988 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115670942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082850058 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104368154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085979293 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105147731 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09037731 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104720845 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085738072 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101566333 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109732203 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088306453 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109710429 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078722479 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096148329 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08222774 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110973066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126271767 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092165983 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103554588 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084494494 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099722304 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104966615 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085465872 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109884193 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092272573 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102245097 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109581458 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091811286 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102022484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086275705 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111389535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101002135 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086049435 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100101252 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098931931 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101632712 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099387374 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081041464 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111494643 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08725007 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102672344 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081697596 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110275873 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081244874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103966716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084857771 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103992734 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11229672 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089592972 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108896698 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110490162 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09105562 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10259104 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087051991 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098954539 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086021448 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105071309 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109177403 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077489343 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105241305 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085576209 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104097933 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091169075 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100182161 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084881823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110694416 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.1099248 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082520653 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099104076 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087257115 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102434956 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08823014 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10927795 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101696353 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079765269 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098485371 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087381721 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103130799 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088606327 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10827943 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105798403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07869608 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100721817 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089233483 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110295156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102967053 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084410428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107768545 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084400174 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101748382 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089165519 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104399556 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083034329 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106947147 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104486859 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079385836 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107108972 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087093882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102486079 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088009728 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106706625 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105935443 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085284906 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101212097 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089894457 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104609509 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082917404 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102101835 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082668249 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113165311 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10509201 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078665332 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100087676 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092186642 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101307527 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083717727 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102241838 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105097874 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085137688 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100775304 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08401953 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103846991 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115404455 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089051971 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104299349 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089890397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112934516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084136241 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105292054 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10356363 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085708448 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104927301 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091351548 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108243211 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109083793 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087272924 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09976098 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090189438 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110868906 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083433596 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100811956 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08284887 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106746139 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109666182 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088358222 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104845684 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082682633 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103705256 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107437927 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087219477 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102983178 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083488077 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108375196 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083887146 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110606602 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105354299 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094028875 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107157578 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079784962 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108091184 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102056674 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090802726 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099167069 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08246009 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102824207 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08589782 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102772623 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08778338 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097394316 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09164206 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111907183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103121853 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083357484 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103326021 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093585453 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104935182 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087564511 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107086423 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108664383 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097382631 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102817652 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087382763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112625003 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104283631 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078575962 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108964974 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083124593 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103412965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08454691 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101675063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087911007 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112615327 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108288086 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078281145 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106338143 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084091423 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10251448 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080377712 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109970942 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107113134 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086156376 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111942817 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08697217 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105203344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088452317 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103579719 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104952078 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085877839 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106396479 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085598491 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106138202 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083536323 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105361614 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102434146 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082546789 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105683537 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087499374 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103610488 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090306317 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103595097 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085158843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106292988 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105337638 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085524127 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104304392 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083833419 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107505427 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08549593 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104232395 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087589595 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099511497 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1110739 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084679756 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111903612 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085096084 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100528537 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090036183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106662091 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10934186 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086404894 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105367824 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087098902 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104245379 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087337793 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112522482 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102316247 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093935494 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110515835 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085413282 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107947442 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084559032 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105723541 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102801371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086765589 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104843459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085504463 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103915464 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089571772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107255464 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084718728 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105462435 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104965846 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085230761 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105475512 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079406337 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103701622 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085199377 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104781728 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09276784 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104995329 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106908737 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083824931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105956382 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084402539 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101527255 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093842434 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113673905 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106200095 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093693703 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104154983 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087195207 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114137511 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098636937 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083367306 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102342627 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082467073 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112302268 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086206048 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112701014 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08471129 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103924394 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101946678 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08656133 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102788996 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079496128 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102930967 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088301158 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10721181 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08395924 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105866362 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087926461 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106380345 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11141458 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084738714 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106476058 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08605176 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102233776 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083778767 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10341422 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088764047 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.1064012 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102257364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08287013 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104952535 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087760711 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105824181 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085487343 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10715725 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101222669 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104332159 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107659924 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089460152 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099326128 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089252101 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104664209 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085248308 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10376909 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108115771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089035044 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105401867 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09294395 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105178593 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085582705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105074706 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083002471 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105259235 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106195419 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086117044 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104224306 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087010837 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11305715 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083755676 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107083484 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104484492 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085554986 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110036083 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086932277 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107204958 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093940808 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108659865 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105790182 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092018917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108588832 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089072404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106630712 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086984773 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110976845 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103648913 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094179267 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104961289 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08709755 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.1067928 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083267656 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104973172 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085189306 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104296306 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109278287 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08651138 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104235994 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084493918 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102795099 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087321976 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109299821 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113286642 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087908729 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108888143 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081448674 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102267504 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086799118 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10316808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087666139 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10763957 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111730557 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08869283 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106236455 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084950127 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112803286 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09235572 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110954778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103401883 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090854028 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107165945 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088318331 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.1070093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08641437 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107465709 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111080865 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087926263 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105548492 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094479178 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.110843399 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087164745 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107287478 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10593382 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086593336 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101465477 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087241702 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108520442 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093292296 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108928889 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086497131 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115705258 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105515543 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086105405 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110872887 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085783912 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112477713 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081370247 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107428389 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106862347 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089163956 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101141503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085184628 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103949843 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088871528 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105239691 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081951489 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11612966 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113167688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089056379 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105371939 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085673721 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101055583 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082025505 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105416377 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08735604 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108148816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11560959 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085787252 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104894565 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081421327 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106614432 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089827161 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10975201 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083666606 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102119205 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08413516 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109512321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112611384 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085261589 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10609539 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089609645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108311018 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084761657 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110998542 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102547237 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090774463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116597776 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087533535 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106838558 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09154278 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115104697 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107025419 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081940817 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107815931 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089078738 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106771426 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087836908 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108769814 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121243103 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089770739 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105810926 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085750695 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10929658 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085491087 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115338842 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108244766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088510142 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111509322 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0889801 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116610729 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109426522 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093285495 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109001392 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089556088 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106094861 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086254648 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105374669 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084893198 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109099144 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107373539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092073509 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115694366 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085665106 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117157753 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114397572 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091590935 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103901235 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08662905 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.1070756 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081852788 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108723706 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08455483 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105860061 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10487802 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086157383 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10753603 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093253987 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108546366 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088174129 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107368129 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080706521 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108512242 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109300778 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091156784 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103727346 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087530437 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10900148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093743463 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110762175 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085925836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106062208 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105370732 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084931182 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100717454 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091797968 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105777584 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089382275 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106291919 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087843557 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108355753 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110526513 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09313735 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108999074 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089463469 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120379109 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10942559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085043666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104260752 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092747062 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105235883 seconds)
  done (took 59.268970679 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149182238 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081505269 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102804096 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082423019 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116609009 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103191794 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082555875 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10419688 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083812549 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105858666 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082794763 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102110697 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113072782 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125831095 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095082238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107808747 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101806424 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083500348 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10256583 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083574664 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112552015 seconds)
  done (took 2.93820457 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108726161 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120895425 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11854912 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123587378 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093422742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119025963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118004487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119614266 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102977422 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115034398 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12278118 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119589988 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095055519 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115411136 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114382022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097560231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122200399 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113110846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120388702 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098069366 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118114776 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118378429 seconds)
  done (took 3.310043124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087029588 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106608503 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08902831 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101688254 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086504744 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101791058 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090726997 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104867268 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090766723 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106827014 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084873642 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10699373 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108639274 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082602034 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106606049 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08530486 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154366771 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110105989 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086357664 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109215203 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102403638 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08930472 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102658817 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08330323 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105986296 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091797741 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107972129 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084514429 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106847169 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085520536 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107179848 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084280749 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109183768 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107553171 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086845622 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10621314 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087608325 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106651294 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082727289 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105134471 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087622131 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103173706 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087492494 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108706903 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085340461 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105117726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087725148 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10775695 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102067689 seconds)
  done (took 5.638669024 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108308108 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165318399 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088696805 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145469727 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124595128 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117170361 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091996091 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145079768 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107023133 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085341957 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126868314 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123761612 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107828094 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092554971 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114801256 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108072418 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089372426 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1070984 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11282068 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086883918 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112704752 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093328941 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123576624 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121451856 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112116785 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086077761 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107371996 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112478569 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100795049 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114038587 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11374754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093709611 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123515063 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109345525 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08668188 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111208618 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126239475 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108613176 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090209365 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105186214 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089702579 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112809051 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114812083 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104641331 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109615926 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112386845 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088674416 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105608425 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121632214 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09026627 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11665178 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122966059 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111886324 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088147431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113247258 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124521782 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088427378 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106971842 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091765112 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120798786 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10554849 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091686952 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122936164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11052441 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116247305 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103284984 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113509023 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112391995 seconds)
  done (took 8.38225693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097311208 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115763611 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124782672 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125567651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094936524 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115663152 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114961459 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094098248 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114997391 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121106166 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11528181 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139159068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089883334 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11907101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115621857 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094558844 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116350472 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114942016 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095006711 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115207866 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115049328 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125857643 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094833517 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125149841 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146384042 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110399835 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094424078 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116051715 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125091794 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11531331 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12781715 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095112808 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115795286 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125151221 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127921501 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094394117 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108603349 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114738048 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095026191 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115554729 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109965433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104116968 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115735268 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109999151 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095320731 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115491866 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125332097 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127982859 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119374649 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100676285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116255897 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125979044 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115144322 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094977731 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126819499 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151369461 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126560838 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124849956 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115479334 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104001149 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125740077 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133843371 seconds)
  done (took 7.937196692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111300659 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120389505 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122993673 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105039936 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085984442 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113752801 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0856131 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106825464 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118648131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097958883 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121483718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112886875 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115886471 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100471652 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113370534 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116579919 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092192808 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113245797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119150034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11333871 seconds)
  done (took 3.020146167 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097325722 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128687572 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088571023 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116802215 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112704773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094641824 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11245273 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111733382 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089203138 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112841952 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099718666 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121344242 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109801685 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094700181 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120629311 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115869209 seconds)
  done (took 2.557887714 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099872536 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122271175 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125051717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088723643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10869681 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084222684 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110244636 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10484707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085045163 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125406421 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08854107 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112772989 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109812479 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08957633 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105918129 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091635953 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106155101 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086212848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109796664 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124673651 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099262793 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109550206 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110371835 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091110157 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109467243 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093435226 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110900739 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107511461 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086649262 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110216534 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088529565 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117655543 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10639496 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087099786 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108595184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08678389 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109853694 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088886237 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113547586 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108966638 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087901639 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109590642 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08865424 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110999525 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084409122 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110546758 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105595651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095120389 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107834727 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089814698 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110004939 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111884815 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090247137 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121019528 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092134189 seconds)
  done (took 6.474301855 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102946172 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113865428 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08454875 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107878076 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091392212 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112252366 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11287935 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091286306 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111263741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08669379 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111712319 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093266291 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112175164 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113581361 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09083318 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11325107 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084795605 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111333759 seconds)
  done (took 2.686191372 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09498364 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110236774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096548776 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109998495 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088666916 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113366865 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083999832 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109480462 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108146601 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089395421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109970285 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091031193 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108441524 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091205298 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110789702 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088658251 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112885576 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108405829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089619828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105786587 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091585448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10843115 seconds)
  done (took 3.061600187 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.122582096 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130009813 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096208215 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23479425 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.108019114 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13728435 seconds)
  done (took 1.669926242 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113638528 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12659939 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111192464 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11084472 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120723387 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111469523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091190211 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112651248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122284828 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104900455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112388292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122422752 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122405661 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100238072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120193464 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119148191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112489639 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09125367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111009566 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132829149 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091283444 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122664941 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112531348 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091071197 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1139903 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122830705 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122903196 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127670407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091870911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122918055 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119377472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091556628 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123496989 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127169613 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113530769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101507801 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112677431 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13277896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119120687 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100531371 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11396854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11928872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101482393 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120338309 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122548308 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112788016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096707879 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113397812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112606094 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139741917 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098356417 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122858591 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120325226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123160098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122932729 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139737816 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105171214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122328716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119322112 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127402454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121855955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098195117 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122336165 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127199129 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120110168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122593384 seconds)
  done (took 8.443526147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106905939 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131143897 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113401193 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127485211 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101431985 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112999082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112738384 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091805411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113043627 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111902373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157550613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092247816 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122990862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12329116 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113386293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091867958 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113115296 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122747392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090881504 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139771136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113325024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122944895 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122422383 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101468323 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127085836 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119327961 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113561219 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092132972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112780645 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113038144 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098418493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113766056 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122679734 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090929921 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12249104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113549825 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09212138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120065935 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113504197 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119510997 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101423352 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132915623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113740143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112858348 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126537084 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091576336 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113201867 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090781506 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113560689 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112265445 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106095704 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128741784 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12730408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123531803 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113157686 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092185541 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113888328 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112800536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092873062 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120259699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122707463 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113218362 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140249595 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092354809 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113544147 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123405936 seconds)
  done (took 8.329938918 seconds)
done (took 159.014268324 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.10256645 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141994967 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100599433 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174334049 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107091585 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11923806 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137863372 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097451287 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111330922 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090882286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112624473 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09145069 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.177734195 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085103684 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107411114 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111787306 seconds)
  done (took 2.716192544 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207336056 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.264440756 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107114328 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112171974 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09355568 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115766028 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109582279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096321534 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116015685 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.089737986 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114939686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090585575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.110920732 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090124766 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116112372 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092762154 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112131071 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091813932 seconds)
  done (took 2.984393075 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118278493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153494052 seconds)
  done (took 1.129955034 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124227228 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187029425 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323771802 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15642121 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107275862 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129692496 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162794983 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137108367 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205051285 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129212074 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129138881 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10191291 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146891457 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.1211245 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098825772 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124575994 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148071654 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097063865 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120970399 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.121952887 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122197843 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.112681098 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121950959 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097867026 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187531318 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125494044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088906922 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.112247712 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122297947 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099168351 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119298284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131625402 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103006783 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180715147 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107710894 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182977238 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100305827 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120792215 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120292947 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096992333 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125214447 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12447832 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108717328 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.124731373 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088655368 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125040623 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111318365 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089699116 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.120245035 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102148079 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121113589 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118787356 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161664073 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124065318 seconds)
  done (took 7.824367078 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800080251 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16191465 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093563214 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.889948992 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140629329 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107586241 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78490842 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135167845 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235060875 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762463592 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134755357 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124451509 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235119663 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240410182 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.002539256 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312523656 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670374471 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103634881 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153370562 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153555332 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119434828 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137567831 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13089929 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458567581 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095239311 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113495124 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119070687 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099831236 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165027771 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.130353314 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116030035 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17821054 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248369243 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205644196 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117225381 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08981853 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114104206 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171441658 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266426517 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215318563 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180079106 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087195654 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112889724 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123366106 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111718757 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11081125 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167682112 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173264226 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192527474 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092367026 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124116466 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123474047 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12354749 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167786522 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121036722 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298046146 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310862369 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112386421 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120932388 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105946994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266285096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123187148 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223039768 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116758587 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212348159 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111372122 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783341781 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191126192 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090751855 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118525766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119663293 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094866162 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123803669 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173572761 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393958597 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126267131 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092865657 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115557151 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206889561 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126024545 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11330921 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164672208 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115572384 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099570771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128795595 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12737594 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173040995 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.237187919 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125170765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122025359 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093698048 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128466121 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11805741 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212847351 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219856913 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162282213 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210883323 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123566988 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164463685 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189990514 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098870854 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196387103 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097501971 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126732527 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124413087 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215943521 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145691997 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101297315 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117093712 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120148432 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150573628 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126783131 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098317497 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192373466 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.49171797 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16767274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10957331 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128197918 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099764693 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161346559 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119054758 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258804949 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1222299 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168923567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122147842 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088416222 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123695795 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166731458 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123453372 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123825793 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102447455 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121103322 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237839177 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21908805 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123771871 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220157389 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183455472 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119930047 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173688226 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122757397 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168269921 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120630267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121071568 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095474135 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793378302 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123815379 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098505406 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118116657 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199871611 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111406104 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102003658 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125355833 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109573005 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753601818 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12822794 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12176046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101707057 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118971294 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122428658 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097269285 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116805966 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16645661 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229399507 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122174801 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119657025 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103037713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18215394 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095504104 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125560516 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124721079 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125290042 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10082624 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.1162725 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124925534 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17054714 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162898417 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220306926 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589296135 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091279363 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127403792 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22914956 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090595831 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288095333 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119852834 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226078563 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165948378 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120973217 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30861085 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166640882 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197847524 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128243275 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175310463 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086789904 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120824307 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171200124 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113990488 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119720158 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165608739 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128424946 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105251293 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.983194857 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113050245 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229311251 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109521265 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172940069 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1189253 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101621907 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303945986 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115414246 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110722175 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193678631 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097731391 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.13106845 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.729426983 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103216922 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123315878 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119740685 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223997915 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164257022 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11918684 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098266378 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125099527 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166817383 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208554647 seconds)
  done (took 44.454934485 seconds)
done (took 59.96267324 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282793346 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219349591 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263040567 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168068125 seconds)
  done (took 1.892482793 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178418529 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153531568 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121734751 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109333675 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153230196 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088256241 seconds)
  done (took 1.684405868 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36096831 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26963777 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240136435 seconds)
  done (took 1.758023352 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293373022 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.257911427 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.362108533 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.39544172 seconds)
  done (took 2.315288401 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21754367 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13969899 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117656112 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110199386 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206287879 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255448461 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140908492 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202270954 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122717297 seconds)
  done (took 2.445593866 seconds)
done (took 10.980905673 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.260653173 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.257789241 seconds)
    (3/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.175102208 seconds)
    (4/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.257237518 seconds)
    (5/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.208901374 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.157491147 seconds)
    (7/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.199271682 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096786149 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.156754898 seconds)
    (10/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.266795596 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128456037 seconds)
    (12/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.177840304 seconds)
    (13/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.219978673 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125985745 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.197385171 seconds)
    (16/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191837155 seconds)
    (17/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.137118486 seconds)
    (18/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.226862497 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.14364219 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.194980588 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.220584478 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.168464074 seconds)
    (23/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.126004167 seconds)
    (24/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.245231708 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122082039 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.133723521 seconds)
    (27/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.226084531 seconds)
    (28/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.130669196 seconds)
    (29/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073651101 seconds)
    (30/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240617167 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122068238 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097633628 seconds)
    (33/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241149807 seconds)
    (34/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.150527907 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.12212637 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.245192606 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.198261186 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.233079429 seconds)
    (39/286) benchmarking ("sort", Int8, false)...
    done (took 0.195544169 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123365186 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091560496 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.130596901 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.242662084 seconds)
    (44/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121449482 seconds)
    (45/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.191214726 seconds)
    (46/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123291189 seconds)
    (47/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.142208935 seconds)
    (48/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095201735 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.145491067 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081810636 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.15392743 seconds)
    (52/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101235842 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.190116576 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134629485 seconds)
    (55/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093540146 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11676245 seconds)
    (57/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185938569 seconds)
    (58/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093514313 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123081912 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094135299 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136569343 seconds)
    (62/286) benchmarking ("sort", Float64, true)...
    done (took 0.233864029 seconds)
    (63/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066238502 seconds)
    (64/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118315348 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108774458 seconds)
    (66/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.164186472 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103285059 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095460001 seconds)
    (69/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.121253699 seconds)
    (70/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076712613 seconds)
    (71/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080634535 seconds)
    (72/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11811375 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071154492 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116128367 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107251378 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.128821323 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.221164032 seconds)
    (78/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097865571 seconds)
    (79/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.096357816 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102370093 seconds)
    (81/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196589449 seconds)
    (82/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132224819 seconds)
    (83/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225543571 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116590814 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104238301 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140318822 seconds)
    (87/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162275037 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.171814091 seconds)
    (89/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.15655206 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188729555 seconds)
    (91/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158782025 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.143315402 seconds)
    (93/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071939845 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123105006 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.188152472 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092587221 seconds)
    (97/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143796349 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.171133641 seconds)
    (99/286) benchmarking ("sort", Int64, false)...
    done (took 0.09332099 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089263855 seconds)
    (101/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180905742 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200191187 seconds)
    (103/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1250912 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117798795 seconds)
    (105/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125975969 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072280303 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124196083 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.175717124 seconds)
    (109/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100049431 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.096379829 seconds)
    (111/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156334103 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139671925 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072172326 seconds)
    (114/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.096395572 seconds)
    (115/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157863397 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.186071959 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118534853 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093845255 seconds)
    (119/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15224819 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072288016 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.127308635 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097454712 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116181897 seconds)
    (124/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.13017978 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100208035 seconds)
    (126/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071237001 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172664694 seconds)
    (128/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.106423186 seconds)
    (129/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120279062 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.116894072 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099836326 seconds)
    (132/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120958715 seconds)
    (133/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072846969 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16468139 seconds)
    (135/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.193377008 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092210638 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117042476 seconds)
    (138/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092775564 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115714995 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100575394 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168053042 seconds)
    (142/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.073034939 seconds)
    (143/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096072917 seconds)
    (144/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098300665 seconds)
    (145/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12589071 seconds)
    (146/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098097939 seconds)
    (147/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.180232079 seconds)
    (148/286) benchmarking ("sort", Float32, false)...
    done (took 0.173841245 seconds)
    (149/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068041848 seconds)
    (150/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120876975 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095431294 seconds)
    (152/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.094076249 seconds)
    (153/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08694555 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.189009818 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092140966 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.123345056 seconds)
    (157/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.164846045 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072509459 seconds)
    (159/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.072366698 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.096580882 seconds)
    (161/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091568742 seconds)
    (162/286) benchmarking ("sort", Int8, true)...
    done (took 0.22948278 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155727469 seconds)
    (164/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072053267 seconds)
    (165/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.072441298 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116796869 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09883688 seconds)
    (168/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.124375533 seconds)
    (169/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.136029053 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124749535 seconds)
    (171/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17931775 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090993606 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.142781542 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.117272857 seconds)
    (175/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072333725 seconds)
    (176/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.104050743 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175114194 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116804161 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092463595 seconds)
    (180/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125528869 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097478319 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.139306855 seconds)
    (183/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115321273 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.229263197 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089222599 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116861199 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.102915033 seconds)
    (188/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072559159 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.122038222 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11544677 seconds)
    (191/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070257077 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072639924 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126134527 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100839217 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116225556 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094653842 seconds)
    (197/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115982046 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091761756 seconds)
    (199/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.097654667 seconds)
    (200/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156957969 seconds)
    (201/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.098059095 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092151464 seconds)
    (203/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.120937934 seconds)
    (204/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.072727558 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122359148 seconds)
    (206/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094953297 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.116077433 seconds)
    (208/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071765249 seconds)
    (209/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118774032 seconds)
    (210/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102464971 seconds)
    (211/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.151547494 seconds)
    (212/286) benchmarking ("sort", Float64, false)...
    done (took 0.15492507 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.113812237 seconds)
    (214/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.35773649 seconds)
    (215/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069101744 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117818495 seconds)
    (217/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072338052 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.1026329 seconds)
    (219/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109765808 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072748321 seconds)
    (221/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123320607 seconds)
    (222/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094469457 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139580341 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.071929273 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139405055 seconds)
    (226/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071629167 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131306264 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073698001 seconds)
    (229/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.148262695 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100418998 seconds)
    (231/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.109516483 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133430325 seconds)
    (233/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.097257602 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091713099 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119608127 seconds)
    (236/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089775891 seconds)
    (237/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.103052107 seconds)
    (238/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092482832 seconds)
    (239/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194624435 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097759957 seconds)
    (241/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097844016 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116271981 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12707999 seconds)
    (244/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083644001 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.126670612 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.092838638 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116418489 seconds)
    (248/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083336893 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.098349023 seconds)
    (250/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.072386532 seconds)
    (251/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072092516 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143668611 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071604136 seconds)
    (254/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.098608436 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073457325 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.177407279 seconds)
    (257/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069072749 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122192431 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096235788 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130431525 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092783308 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.122700262 seconds)
    (263/286) benchmarking ("sort", Float32, true)...
    done (took 0.23572683 seconds)
    (264/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.081733336 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115831014 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097322179 seconds)
    (267/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.125950566 seconds)
    (268/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095488952 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11554643 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141403087 seconds)
    (271/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090352156 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124551717 seconds)
    (273/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068724289 seconds)
    (274/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072618486 seconds)
    (275/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118976297 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097616906 seconds)
    (277/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09733891 seconds)
    (278/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094514474 seconds)
    (279/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145981179 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092308488 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.111457898 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069977051 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108434211 seconds)
    (284/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072590325 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074750351 seconds)
    (286/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.123144353 seconds)
  done (took 37.615789932 seconds)
done (took 38.503707803 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106590205 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155404525 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099571507 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141279114 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126562614 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09131139 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118020059 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097675817 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122723779 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124919677 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098275532 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093552865 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096755773 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121155828 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096326872 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138666983 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124874802 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094343245 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118463219 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086141642 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119029545 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088331134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111973939 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069667162 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123688798 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093607333 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116266071 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119812606 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086308674 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111890105 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089837602 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117550282 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086200306 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124374508 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093830454 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118966954 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096827651 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121009519 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111572742 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086047788 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120473541 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086584274 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117605718 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094732004 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117220184 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091757422 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118684895 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09907215 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138739705 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119337119 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095855546 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.126938113 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097887822 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118298794 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091029873 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121015402 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091497627 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140945657 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12502944 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096128297 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.124467597 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100322135 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.123583545 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100868559 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125136666 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123597631 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098296917 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119285997 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097306166 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119737622 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088866506 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122329371 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089836111 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111426045 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095812244 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12141705 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085410687 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115940095 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117938199 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091110485 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111888483 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089572327 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114080201 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092487884 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114624002 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069440739 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118040231 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093185671 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113650748 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097054304 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.119625157 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094635558 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114433182 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098521155 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110978562 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092371154 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112280263 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087818539 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113334555 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090704701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111002094 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090270521 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120609615 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088865415 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117395101 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123522823 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08640317 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118070791 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086400762 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111191952 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102349811 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121497441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087876998 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118768824 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085667983 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121311601 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086228886 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112183338 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086775694 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112641428 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092502225 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111490599 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113503016 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094082208 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127640759 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086815447 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.117574287 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090990015 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.115053367 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095118721 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.117350099 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091151901 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.119804317 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084040714 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122856658 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092216177 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12572658 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093520551 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.126055893 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090713883 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12644698 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.093300059 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120432762 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091930538 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11425786 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074880459 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122437667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09304103 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.116304557 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087684076 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117005393 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090418344 seconds)
done (took 17.157427572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092568959 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190065801 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152747351 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14328956 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106922937 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111743782 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121956434 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118673947 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113713868 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142772771 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110978813 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132144677 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151635484 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090288076 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118217282 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0973981 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120386028 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.106606467 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15146472 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136639344 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162914628 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086779285 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149743051 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137073053 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123122366 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115462597 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.115709805 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093549945 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122011447 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.107705191 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136048409 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115684914 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088664543 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135384326 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105263998 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119965073 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087691178 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120908014 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087251042 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112037969 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140996761 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133538918 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092356762 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117810321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0921993 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11669399 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089282149 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122740858 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097817286 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115827557 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12675518 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156010829 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091075922 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124594153 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086732558 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124100887 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122173301 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090164101 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113950038 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090268609 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114031514 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090911809 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129913433 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140914359 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091652295 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121961804 seconds)
  done (took 8.706081442 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110317627 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145559605 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105654726 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130834683 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114323835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08804912 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115209181 seconds)
  done (took 1.759560722 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094183835 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143302692 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117730191 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142839921 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139800801 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118799121 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129453257 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090943675 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138090767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091671707 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139728394 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157234362 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092115138 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122396201 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138322532 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088764907 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13906274 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088811343 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121125001 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112687457 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116616154 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135601151 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090877903 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118761139 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11001464 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.121036569 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17090406 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10034758 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122987713 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098479538 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119299531 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.159457748 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110802522 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.133444053 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094786987 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137818316 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136715991 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092760912 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134434672 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100809223 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136265683 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096248151 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122149919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.092919233 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124334216 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103678398 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124697523 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095648455 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124409792 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143549293 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095783098 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.152437039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095673564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.126149068 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096717523 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128181128 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105076174 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12185204 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142233478 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096797478 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139435061 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112848534 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136707926 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138702084 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098174345 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134696016 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105200072 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122292219 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090686406 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119752534 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10783882 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118038035 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.09375501 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125165931 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118714368 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112256216 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143118212 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096271682 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132479899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094878826 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121371849 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120753705 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.115877058 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126559951 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096070174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125977032 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098463892 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119563812 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094574448 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125070102 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093987676 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123564059 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.101078659 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122983887 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098453255 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139153545 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123423035 seconds)
  done (took 12.378924886 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096434081 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.122959384 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09851426 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121360157 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094984701 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123252612 seconds)
  done (took 1.61854242 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122175672 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125638799 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.11157965 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127924917 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162683353 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105535954 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130517566 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129983794 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.110770351 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128517402 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129556255 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105061505 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.1392266 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121472292 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104294809 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121319547 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103592356 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126330666 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127618709 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096092915 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13710665 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121266502 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096465697 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132315948 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118801588 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095491771 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125879876 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102384413 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128870555 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123757697 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096133287 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118453197 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096225647 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125366454 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132587201 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096405717 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121054106 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118728323 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099905025 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11813051 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105479406 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125118026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127058373 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093697453 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125413872 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120932711 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093322996 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126883413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132195154 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093953744 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123128289 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095225257 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119965301 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094218377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121439127 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125938967 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095134429 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129572515 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122073929 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095874328 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118576515 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093099029 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124485808 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119001726 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10426893 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119397534 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121396727 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096415599 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125299009 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095933355 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119240103 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093522803 seconds)
  done (took 9.295526925 seconds)
done (took 34.707894943 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696074731 seconds)
  done (took 1.656228392 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.835650965 seconds)
  done (took 1.795803897 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.941892241 seconds)
  done (took 17.936703359 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499006817 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.57907547 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992372304 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179025437 seconds)
  done (took 3.21036938 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947716094 seconds)
  done (took 1.932273135 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287980075 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234592569 seconds)
  done (took 1.490758214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.791332631 seconds)
  done (took 1.770818923 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.369073596 seconds)
  done (took 2.338690238 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330031204 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182900831 seconds)
  done (took 1.489406109 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554648023 seconds)
  done (took 1.529362626 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.265075292 seconds)
  done (took 11.249113805 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273660705 seconds)
  done (took 1.266585243 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307558518 seconds)
  done (took 1.288854949 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.56301486 seconds)
  done (took 4.544546656 seconds)
done (took 54.472039437 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105338456 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127402225 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102320143 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124540171 seconds)
  done (took 1.435102877 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107590701 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12534485 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099912038 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120426921 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125796515 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096006052 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123168132 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10184698 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120949865 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09628385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121115984 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120314368 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098632591 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12297499 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092762139 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124394198 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098979254 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121233627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123676937 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096206005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119184928 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098202644 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124154615 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093920685 seconds)
  done (took 3.656959635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106207907 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125335899 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096080954 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118648603 seconds)
  done (took 1.43869424 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10642523 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137817479 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104634069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125482229 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130974727 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106138865 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117218239 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091593051 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121259662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.10019813 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115888503 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.137989318 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1064649 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124745983 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101768942 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114119598 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091094466 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13113087 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124479465 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100874258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118447173 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100317321 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115865498 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108903616 seconds)
  done (took 3.718886536 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176301152 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129742443 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140314895 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095609966 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160465513 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140137282 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088086708 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.146982676 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089957668 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135972597 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118450562 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132951319 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129541257 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088516724 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114363493 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087716471 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129778551 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129872008 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091498614 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128315702 seconds)
  done (took 3.449293913 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103622411 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123486944 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087732724 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117435792 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099659986 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121347888 seconds)
  done (took 1.643176051 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095292276 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117844026 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089775293 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114913825 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095681618 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11510678 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088678213 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114877524 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090162373 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115458791 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089445283 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114280732 seconds)
  done (took 2.232263294 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.510781976 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120470176 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121359959 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088741012 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124708066 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090280721 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129819392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091944702 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141490119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089087441 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116582795 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091565544 seconds)
  done (took 2.706505695 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241010318 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125744127 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28392408 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367985999 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156021785 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164846606 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276799876 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161070111 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196753963 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150028706 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230071202 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194896536 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151761428 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190826189 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137450197 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145099409 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18794889 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251523436 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153346277 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210371278 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205876586 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167193029 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179487953 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15137897 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11204922 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193618644 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095739791 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130374499 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20756847 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20623979 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189104849 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161630929 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147137261 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23704666 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249409034 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1975254 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279714135 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13416684 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142950523 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165115641 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264178248 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13987523 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233259589 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156022353 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104180837 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22145279 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166955934 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177097683 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145938694 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139036383 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199649489 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2399691 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192413544 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138683967 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29963239 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148939715 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157626255 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190053878 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250637725 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226769295 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188385439 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121137988 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188738453 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189312516 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211648973 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.125003131 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209202561 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146752899 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183353327 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188435551 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165518304 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204449812 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180624073 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138687316 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170565542 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173999182 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172923385 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259001236 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186964506 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123067387 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168702301 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149303405 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103771399 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194165371 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125809253 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213472897 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143799222 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164215979 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208766767 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159662445 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162363631 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219799052 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184200227 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149449297 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084619575 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153539429 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156185093 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175507931 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140504026 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159874584 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157703299 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129847059 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168191105 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098159503 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183242896 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118039227 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173926513 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183828001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128214934 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161682403 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153632253 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14999327 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177948003 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199950822 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141261658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13368946 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208985156 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178550765 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141349359 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179217032 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230321883 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11687472 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149015628 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226375341 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217243838 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140169374 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228871299 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152946078 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108459943 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133596494 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181013023 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156739466 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16199327 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133084632 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182857341 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232648463 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099479498 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139342382 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195400089 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133840033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132793048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154912039 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120067859 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138158024 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142936591 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144301903 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177274772 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17934757 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15613893 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167541417 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150656988 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248928984 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140193561 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150219616 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121897793 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12173702 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194279839 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226038943 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103816687 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234044783 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171774533 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199902026 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196526149 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107684692 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177526502 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130918346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092731449 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220500072 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167578989 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162446279 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196373416 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221314654 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180205365 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181996238 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164864407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20047975 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163844021 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156262279 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110507947 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160423333 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159268171 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123249347 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11089584 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135344142 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149820813 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142870728 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132957916 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198532286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170040856 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215885426 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158234506 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121396011 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207275592 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102413892 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178434722 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20547924 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117282544 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224839715 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192503235 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212982916 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117045468 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232740809 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093933116 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132255769 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142336185 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170891528 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13427464 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109276912 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165337481 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181378863 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209052243 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170634385 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206590473 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20078477 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190549562 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095233319 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169129805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18425229 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203617853 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153340658 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139525913 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151155935 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177397163 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1554325 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253718105 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169814445 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175837837 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231680491 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123480959 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132532676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150205573 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178488555 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154710684 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176097609 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146888399 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140015133 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1604698 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103573004 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160969904 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213420553 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161796265 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186732902 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151475063 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18583025 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128941685 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162637406 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160203084 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165430504 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08145083 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203013465 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202545373 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146980228 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166672306 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188158488 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131479946 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312866075 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234753262 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195563895 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138726013 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155601883 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161174798 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162313663 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171338713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179485922 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157462509 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187970082 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15946337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136043898 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110342279 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149817242 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152514995 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133086667 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148670399 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177892825 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137712164 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189251175 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155118656 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160015672 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172879973 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150542384 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11677136 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149904962 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242479052 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183169313 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239003525 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150233272 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178762712 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205594565 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126633113 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103991393 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134353276 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179290501 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136595231 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189804988 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214204038 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199461918 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179564915 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204455754 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111726886 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120902421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15765736 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168302695 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202672167 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149052201 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147172844 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230016392 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110476316 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133188618 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166686575 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289097181 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145352326 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194477269 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10862794 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279528395 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099935864 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131457452 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165524681 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235912171 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108390915 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178485574 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169407514 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161153976 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163993127 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150003639 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191087881 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237668185 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199164028 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210672684 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105007362 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157126574 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175814015 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220933691 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156114663 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110512161 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232266764 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194315698 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194237265 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141417551 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169565018 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168854594 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158843041 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213930398 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107519828 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23516115 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135064867 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19262209 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152880985 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138241769 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176432745 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188710428 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140583732 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186178915 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209447664 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107268863 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133473385 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166276576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178502058 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153253373 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129007386 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181697003 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126143781 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194937062 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260572982 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133196478 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155365245 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118423613 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136597375 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155486128 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157936152 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139018245 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140302417 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226571459 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133864959 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191021698 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228035558 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171744071 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175175124 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145962187 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69423548 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102604473 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221893432 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118791321 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234598191 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151993467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172656623 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159068404 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168591933 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193686555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160481667 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23201127 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220092707 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178335852 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13174131 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157608682 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156263354 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143196283 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125105699 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167894351 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159217772 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145264179 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205585644 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163777599 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106481577 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140627786 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197877074 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148004248 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183671573 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179860562 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139430796 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172590034 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214966819 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105281009 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206359572 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207661415 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142524611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149436325 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133841572 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14858797 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232880938 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125188587 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188044203 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21185974 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131260682 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195037566 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119067719 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221387909 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15836458 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185700901 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142625734 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159116072 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157850571 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137737933 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102297296 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155292929 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166545377 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151763617 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159959515 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165153097 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194103603 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123076169 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116469426 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311253658 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17667976 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214325808 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136790986 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135034291 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1613675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121557498 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.204798268 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17972831 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13601122 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107209633 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137125368 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129351571 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135895498 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156847861 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193239782 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164832444 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233945371 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108384069 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280624999 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140128719 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155203883 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088757194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133505764 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150047309 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1457383 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155695449 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193150692 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263096146 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148914802 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106721214 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149325103 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125729754 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108185506 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164432136 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164948199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177189748 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146027473 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109504022 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155776652 seconds)
  done (took 82.385576638 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17695402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133280541 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147353206 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202376824 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176168069 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269270409 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21128894 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253989921 seconds)
  done (took 2.651626669 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.099448905 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145786113 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157443253 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134136169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091716795 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119453603 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344446605 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.140446915 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116694356 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120991387 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173381959 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093701132 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.55162865 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.098787253 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.127036338 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107977069 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091517839 seconds)
  done (took 3.789867254 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.199619167 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493954935 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.063527033 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194661662 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159318699 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117846376 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70987377 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094498961 seconds)
  done (took 12.118849166 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121089076 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143490924 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123497651 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153155726 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141586197 seconds)
  done (took 1.779664824 seconds)
done (took 123.984871743 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103251413 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133630751 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097175358 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130692895 seconds)
  done (took 1.538118147 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099971537 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078288558 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10799675 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074466845 seconds)
  done (took 1.445096119 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189089777 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168646136 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.414833787 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.078690493 seconds)
  done (took 1.610154585 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122107354 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139912589 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103600673 seconds)
  done (took 1.463274318 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113226522 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134528189 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102787736 seconds)
  done (took 1.442837827 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113395796 seconds)
  done (took 1.204858155 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115399269 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145577195 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108817166 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135887572 seconds)
  done (took 1.600162868 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105701334 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129293044 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109314187 seconds)
  done (took 1.434742966 seconds)
done (took 13.182627199 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109472244 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417451512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412675771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116993505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728179383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380498874 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031692195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152123749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16545045 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092680881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139257282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671873167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060887879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.386550824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017428871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378175544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706777608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092838441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118869308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094294772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016004647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09160832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122597902 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09241322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703565094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425989455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094582204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375269738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092282938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126189059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383850538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123390227 seconds)
  done (took 16.999754511 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101307709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176665761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097462781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137697049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123744252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094337625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12734674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092686002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179198078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129547176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111240238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121619833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125403938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094379983 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141615372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092195614 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125490875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092394294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121650312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121506063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11209463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126979559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093735395 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121646588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09370458 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135714774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122880801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093158276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12194061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099364596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127487253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094587635 seconds)
  done (took 4.841558459 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146963289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181841563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12819213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126331332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174056969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123503612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198273279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11750687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182305822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122652828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139088842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093356121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156625674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129620985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113986808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123813889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096547871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12199735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09200952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123127201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139067691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092908876 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122045999 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093267246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122695989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107601081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124077489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121154454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093660878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126850251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099163666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123934235 seconds)
  done (took 5.15756552 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104664382 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130102765 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109055136 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143915758 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095456716 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125490455 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097105607 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124391025 seconds)
  done (took 2.026085899 seconds)
done (took 30.118833849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119600303 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133691017 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106560542 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134291457 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102336533 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131536542 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091499876 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133376979 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134617111 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101389012 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136446419 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091889659 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121911144 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09134616 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134313134 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09829233 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131862754 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101239742 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133083718 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131944952 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094961004 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132678498 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103616439 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132835348 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104149265 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133838747 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13673811 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100124337 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126892517 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094107789 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124171564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111911615 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130926464 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10420746 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126766352 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096767766 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123678304 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093982154 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132850374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132350461 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099227496 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132895928 seconds)
  done (took 6.017819841 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113718113 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.15016682 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112775493 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.088518954 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117995711 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080069826 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137590235 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086969083 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113312697 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108161371 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.080971177 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106073231 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078470289 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10178869 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07720216 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075984149 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108527412 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076199818 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076666432 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.1060985 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080076022 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072709086 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108303166 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078585338 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074907404 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11024431 seconds)
  done (took 3.623060634 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107749707 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140011739 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113579483 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183556885 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160410766 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09974719 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131723851 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138935782 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10916648 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120750887 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095660261 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149308994 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109078828 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129299216 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091281926 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137357098 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135368447 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094076598 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128333336 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11275905 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138553289 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102142716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140517792 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132453598 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092026213 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124891556 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096802067 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134921352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098657657 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132174536 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096476256 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124542155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122848763 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104858852 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132436694 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094437107 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142047092 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102110417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131368521 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092463412 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129623177 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122234755 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114021052 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166788918 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091233489 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129232211 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0955675 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132025194 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121102107 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111049137 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130873823 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091561414 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125125357 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091606882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121517869 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106782433 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.13034032 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094494598 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131478385 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127009764 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106378742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125045075 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108664457 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122103399 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099227675 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121727382 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093229706 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121178324 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143916937 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098300914 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167396954 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101575841 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134298819 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101293924 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130891638 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127871204 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0932918 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136773586 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102999227 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.132631873 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10159258 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126205262 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095045835 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140612702 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123421913 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09493369 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122483849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10000544 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123506033 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094460493 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136033684 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091276979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125688269 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110309172 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12298517 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122638162 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100393448 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12627269 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092007019 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135487933 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097503508 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123400098 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102579999 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122396106 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124913645 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103779994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126182337 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092319642 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127522326 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100151981 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123938543 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09348973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126892296 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093820816 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133043678 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128531525 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098211944 seconds)
  done (took 14.872109266 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235484404 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215266512 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205394998 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29119702 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135600159 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113895723 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213341689 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155892678 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123754652 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159918825 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17114399 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181002568 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139105814 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.21238997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170786926 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093200526 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143413856 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1339648 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2449926 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259002385 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144031337 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100425993 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161092863 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159508964 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138141126 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102598508 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140357173 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135049713 seconds)
  done (took 5.802928034 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116164029 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.163223904 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098076634 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145064176 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148275483 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093308026 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127780974 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093852618 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136789513 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135624512 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093272066 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129196591 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099881579 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132830356 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123620474 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103588819 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131628143 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094254605 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126164741 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097353057 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134185209 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101724335 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127282264 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121369566 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103067876 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122425919 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085931409 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143575938 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122751421 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116072332 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122607334 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10217338 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137105686 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09408632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123477484 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09539465 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126206105 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095534355 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12494616 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091265496 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123151522 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077444282 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122202952 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135884122 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099911497 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080503667 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13029783 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127896848 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09428695 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120747151 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096036529 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125080333 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096341851 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130352352 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095694607 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124042238 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096358963 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115922113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09953224 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125043034 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084617292 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124774115 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098205335 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118269583 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101246607 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127904684 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091841785 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126519791 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097124454 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129417964 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095133523 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130171281 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090424208 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126054027 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096307403 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128866393 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125562395 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092148266 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122294023 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094796948 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074773814 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124025137 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074385835 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126608896 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092820153 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122801506 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094837022 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130651671 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137723496 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095151985 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132280048 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09438692 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122799413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097513675 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113615629 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097073216 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140856019 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140902396 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094362964 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122438704 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108231009 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126512568 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092547003 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107516581 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102385304 seconds)
  done (took 12.990546624 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136841559 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.16086628 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125440121 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111665786 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157606911 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15912089 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100647823 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130978034 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095298044 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142622407 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093903222 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133526137 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094353014 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138885526 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163012538 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108201268 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.133404918 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107850266 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135389353 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168995758 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.12058534 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.151927966 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.119582684 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128830984 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128750463 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110479887 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161303758 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112015281 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138764844 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148996075 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108314013 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.168724259 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.151639053 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102105462 seconds)
  done (took 5.587739396 seconds)
done (took 49.990991073 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20833655 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.44614713 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198635435 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.175546111 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.232036604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.227403891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209003123 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203832731 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.806683992 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199874725 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.452657325 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827167669 seconds)
done (took 60.313766502 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.220318201 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338772945 seconds)
    (2/2) benchmarking "String"...
    done (took 1.469354448 seconds)
  done (took 3.934574724 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.824901691 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.220303904 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463417496 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.203693439 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204164287 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496007052 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.898883779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.57480803 seconds)
  done (took 28.18837395 seconds)
done (took 42.293514774 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.206837771 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.230152555 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.239245865 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.179792711 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309537403 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22701849 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.520246416 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.214562792 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.214649159 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.198875145 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.23188306 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.201216991 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.233893219 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.51789229 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204760533 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199073019 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.24297907 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.695075488 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.624376333 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20704012 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202473628 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.20168548 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231366657 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202351411 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.264978103 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202666313 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.215634686 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218447283 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.79758985 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.199812742 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216086594 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.723243341 seconds)
  done (took 190.701344668 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207012555 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.191739193 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.292158228 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246688351 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.652680037 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404231205 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.353250817 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.730361773 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.224291269 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.231383511 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.45467248 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207405141 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.516187962 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181123696 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.237587494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.272162274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.5384859 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.510427996 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.245724698 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.347362619 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.234684696 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.442937893 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.3634429 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.403381263 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.22706377 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.252971764 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215949678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.227553091 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.397602944 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.476546167 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.249097488 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246715897 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.835985028 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060554107 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225509713 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.23566532 seconds)
  done (took 150.268394967 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208927677 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208229459 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208785065 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239910762 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.208411659 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798786998 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79868202 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.72125795 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.365352695 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.624266312 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.471061885 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.203249805 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304558254 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202588153 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2222118 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204669317 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.224028788 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.252807394 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203793302 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20891709 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798677943 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223181844 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.293010563 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.38075495 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.219632724 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242624239 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601396813 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203915503 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243173966 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543542122 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254081436 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204346966 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604524517 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.604128317 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206608577 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325131783 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207189512 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243954384 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.210720759 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491137176 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204627873 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21027717 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212559452 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.91144765 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210164416 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.80098278 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21164169 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.163623434 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205763699 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211533597 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.74763071 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.906426463 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.228932564 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.210729384 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213676268 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210985786 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210866378 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244046366 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.624519824 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307847598 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.227400407 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.211100463 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214633872 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245100334 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210839767 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.25044288 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207262967 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.730527058 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.261731644 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314302499 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80222062 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213001713 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310921752 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327901999 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20605876 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211444267 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211884579 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211264673 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324694378 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206229055 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212174335 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.629555556 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.384500176 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.224175811 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.635476423 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308966811 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207252091 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632150101 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213181137 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.212580091 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968385926 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307010393 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208405359 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.212193548 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213245852 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.627975166 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799280869 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481406418 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214229815 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.640873655 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.213975873 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.646529091 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770324611 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.912944278 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214274687 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328693475 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3871575 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225414877 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214184907 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.634567952 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214396473 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.273557322 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209325404 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.61236756 seconds)
  done (took 367.456360887 seconds)
done (took 709.548945678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.809924828 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.804829308 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.920038602 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.797649539 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.762355485 seconds)
  done (took 10.229218626 seconds)
done (took 11.362656499 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408695346 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408308582 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278376814 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.409786241 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247081411 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426960551 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384920524 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234863302 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317497844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.299383832 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317600196 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270777972 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251403346 seconds)
  done (took 18.390712081 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535003225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.519469808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273867253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524731803 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251279735 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5427764 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416815717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428022467 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424030858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245088237 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230308568 seconds)
  done (took 16.530237369 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534722312 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.548194516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279715919 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537945778 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254405877 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539291966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415426084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425936038 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424030022 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246817187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230787806 seconds)
  done (took 16.575137123 seconds)
done (took 52.62969041 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.226277849 seconds)
  done (took 2.364004362 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262136406 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.426616476 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243382702 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.23335394 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227546475 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231481378 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232999735 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228242533 seconds)
  done (took 11.227500214 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.223117818 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228333478 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.223978512 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.227481971 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.227084316 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224797237 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.224408222 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.224466692 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225006603 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.226302848 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227059147 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.227461198 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226120742 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227942624 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227842403 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.224233122 seconds)
  done (took 20.756474334 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227199775 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.224936543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.224417293 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226310649 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.224736248 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.225979258 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227471204 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225196465 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.225597166 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.225588766 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.225412756 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.224760381 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226237875 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225760943 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226345772 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.225205199 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225472054 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.22585749 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230388861 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226050022 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226669501 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226053007 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227348363 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.226667118 seconds)
  done (took 30.567777266 seconds)
done (took 66.051708114 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.866361014 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.909192485 seconds)
  done (took 6.915705356 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.229550783 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230097515 seconds)
  done (took 3.603957987 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.229140463 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229580166 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.229178372 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228912801 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227575092 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.228665426 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228630588 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.22804272 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228988988 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227392533 seconds)
  done (took 13.42803044 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228503008 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.229621854 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22847471 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.230966631 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22916172 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228014675 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230130752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.229525661 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.229464119 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228673798 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.230020379 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.227002417 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.23088192 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229108077 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.230038162 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229375972 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.227665878 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22768307 seconds)
  done (took 23.266847768 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230764557 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.230835354 seconds)
  done (took 3.604231005 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.22825771 seconds)
    (2/7) benchmarking "second"...
    done (took 1.227718827 seconds)
    (3/7) benchmarking "month"...
    done (took 1.226859432 seconds)
    (4/7) benchmarking "year"...
    done (took 1.228279818 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228700178 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22904086 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228863569 seconds)
  done (took 9.740390773 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.231397899 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.416081469 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.507696504 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.841815773 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232408571 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.235008532 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09279955 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.236098782 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.237806136 seconds)
  done (took 14.174671936 seconds)
done (took 75.87091867 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.277406537 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.24088131 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.50079475 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.237569154 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.239431303 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.523642238 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247852855 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.349135264 seconds)
done (took 37.759223442 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.239904069 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.215532725 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.995625311 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200547891 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321729841 seconds)
  done (took 18.878055757 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.279196878 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554030002 seconds)
  done (took 4.977837455 seconds)
done (took 31.236645799 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231591715 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229707994 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23260545 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.229933473 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.232098743 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.229884175 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.232170952 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231044067 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230507377 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.230773458 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.230381885 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230258339 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22774559 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226248208 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231906689 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229593871 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.227229928 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22790137 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227419085 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230878112 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228062785 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231510844 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229354113 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227715236 seconds)
  done (took 30.660724911 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.2312184 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.228713096 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230228798 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228579923 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.228556459 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231647898 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229864752 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227368049 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229160573 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22970016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22788168 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.228447645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230662418 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229657181 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230104382 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22756282 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230700203 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227861383 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230431301 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228897734 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230024992 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227734194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228233984 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229871727 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225805374 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226672299 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230960333 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226959652 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230158191 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22704942 seconds)
  done (took 38.013879592 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235759471 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237828777 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229532046 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231334267 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230791216 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231990905 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230878991 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230517937 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231067617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230588105 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229370821 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.229913573 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.230131042 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230799928 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.230648356 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230840496 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232112263 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231260696 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.232666974 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231707755 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231339401 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231345738 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.232039863 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232425011 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232347166 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231852738 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.230750566 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.232401699 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232173948 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232173678 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232261738 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232130717 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233106257 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23278081 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231209501 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23232181 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237433354 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.239903276 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233119257 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23299828 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233601056 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234035575 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232478833 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231845902 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231984842 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.23247212 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232439855 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233185104 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233456969 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231968378 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.232103726 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.232874341 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233935541 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23276727 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.234116892 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233872205 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233400736 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232505746 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232295743 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232479182 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233252139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232860385 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232771217 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.234280547 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23401526 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234085868 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234089124 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234207683 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.234133578 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233413977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23499466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234421904 seconds)
  done (took 89.895492066 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23569808 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232670892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232763335 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232945773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232533996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236378137 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232833453 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234863911 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233035327 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234296169 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233436411 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233788049 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233374818 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236492174 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235799774 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231798745 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236426173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232635879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235413589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235941581 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235214094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234057681 seconds)
  done (took 28.298909017 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237421702 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238028287 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233714034 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235184298 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233682276 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236232466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235767446 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239036477 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236402618 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233292865 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233235795 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236364004 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234211374 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233546516 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233767785 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236196777 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237244518 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235753103 seconds)
  done (took 23.387089236 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236437406 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233850919 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236802729 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234710276 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234228004 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238062512 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234053897 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236503408 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237306467 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235969708 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238040649 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238526222 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236701306 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233579498 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23682278 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235192876 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237442056 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234585572 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239194776 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234444603 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234938483 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238040684 seconds)
  done (took 28.345088302 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239192757 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.238907871 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.236445624 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237868693 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235337298 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238004852 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238752604 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236533356 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240914025 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238307864 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236771415 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239530455 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.239620595 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237065856 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236434917 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238789763 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239873108 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23811514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240000532 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23725136 seconds)
  done (took 25.914611434 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240408227 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240778953 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241513175 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242109404 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240353053 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240802651 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24174807 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.241952734 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24158376 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242594049 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242554945 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241874546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241680041 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241287226 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241390274 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241639527 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241640315 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241965971 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242713778 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241115105 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243974839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241868669 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241420218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241982813 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243120394 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242898225 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243929562 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242089915 seconds)
  done (took 35.924587748 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241789272 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242496774 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.239523365 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239356447 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.2388762 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.239654677 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240108895 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239894969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242700462 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238795778 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.24271564 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241415792 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243339974 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.244759248 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242580507 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.24279882 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24239367 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238904436 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238234272 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240438739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.242657462 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240309881 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.24382865 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240374301 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238969957 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241827913 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239907765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240444151 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242492963 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23939567 seconds)
  done (took 38.385712894 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.258970339 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259160112 seconds)
  done (took 3.673494156 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239790046 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241069582 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242262126 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24068689 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24056179 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.240605354 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242456261 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240086507 seconds)
  done (took 11.080343302 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241564439 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243133369 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243167653 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244415642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.24352968 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242610188 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248822228 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259011802 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242716652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243004451 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.249562063 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251046379 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244701879 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241771394 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242757064 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245364077 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242655445 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244193499 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.245896032 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245944754 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245061418 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244409826 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242831363 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240546918 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.244590504 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255152587 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261070965 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244951219 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243181336 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246589645 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243934947 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24149517 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.24488791 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.244484814 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.245821672 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.244300191 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253146463 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257147516 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.249881423 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257907656 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247691747 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.241728471 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246113546 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24603954 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246681693 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245701736 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.245648702 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242637893 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245102348 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.247307674 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252550921 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243273802 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242556243 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248055991 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.244144311 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252573596 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.259491002 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249139774 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258201781 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.254834828 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271404689 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265034834 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247267567 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246332217 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256689095 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271727715 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252765382 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.263951691 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243871906 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246990453 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251591568 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275422943 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267125105 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247750943 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247450244 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24873913 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24676567 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246978857 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253563782 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266284608 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247355368 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251983083 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257051075 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270475864 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248403107 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.246692261 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248664586 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249258829 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247137042 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258531496 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.260655945 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247956898 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.246978322 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24830956 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.248880066 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248419291 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246823504 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249441726 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244748625 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24801113 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249876049 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25237399 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258460403 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24967089 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250254187 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255359778 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263925278 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248060937 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253686436 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.24962649 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248687253 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250249515 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256205625 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246001144 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252655834 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259017108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249659877 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.249542644 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249531742 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250370681 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258948775 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275737211 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251341909 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252117005 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254992071 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.261961379 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251068222 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252759908 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.251255011 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248718931 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248264169 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249873424 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251798668 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251271946 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251962729 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252364012 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248724788 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.249821499 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252069928 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251269335 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250914183 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.251061673 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250689677 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253344314 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.250378894 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.252531215 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258347318 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.267286947 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.252157839 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252584368 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249585132 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253023518 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.252232324 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252590844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.251651035 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252774363 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252057184 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253635308 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253503412 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.254107307 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253649892 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252068609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258225114 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252145436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.256637246 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.248769726 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.251173288 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253918003 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254773961 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252219598 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252717612 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252284025 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255907666 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262866401 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254939443 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25550899 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256412582 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253658575 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254900629 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256177902 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256717729 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262068659 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255992628 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260709545 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269157019 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254940635 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25685541 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254967501 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254346774 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255278456 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258065354 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264659902 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267076693 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276207489 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256342805 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260044198 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256888735 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259196373 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260186531 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255065058 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25701456 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25578308 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255565528 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257050913 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257168357 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255909343 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254673122 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.257725426 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256448889 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255188883 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256038533 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255571088 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255909904 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254113785 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256588041 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256748078 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255979205 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.254240815 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255382462 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255819045 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.25729922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256654374 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262089219 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252511851 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257811592 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256994764 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256290374 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253753814 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257527331 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25848842 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255451692 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263938661 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272347458 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.256337771 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266636049 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272048634 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.256962891 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259852106 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.259894966 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.25531218 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260804267 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267563481 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259230768 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259931838 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25788477 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257115412 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258393602 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26534491 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.273005237 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258090145 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259259509 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258388503 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255447542 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259816989 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258199763 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257780011 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26061628 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260590135 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259895374 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258454427 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259378757 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.25948184 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259991471 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262298244 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26867176 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263544711 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.25727843 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261698804 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260107091 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.264711419 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260174326 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261168771 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260404447 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271549741 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28003233 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266519588 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275530655 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261648713 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265201286 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276532953 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265516579 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26010231 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261225754 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.260046337 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261491048 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260030785 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2618657 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261676021 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261987639 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261746041 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.26486687 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260901061 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261085432 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262545752 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261423162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264126555 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26140781 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263117267 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263252589 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262274304 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.259608148 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26278764 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268812502 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279172021 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261615109 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262508455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.261467234 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26187923 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.262233571 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26199388 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.264792184 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272891105 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265744091 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272449539 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264879996 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271870032 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261449136 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266274316 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273404916 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261132627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260592894 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262212783 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264294419 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269818965 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284071695 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263197269 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269038202 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265255049 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26422341 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.265008884 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262874538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265051982 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264565532 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272270794 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277675071 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268382863 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264758166 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262530576 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264251932 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265200658 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261833661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266428091 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264982017 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265374872 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263194515 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263364941 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267431591 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264691915 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264554754 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.26357771 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266337494 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273018173 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281906627 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270998852 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266193315 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271903964 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278289552 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273730955 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281052157 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.265259262 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267676722 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.267348897 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268298932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265295974 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266646729 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267344478 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266337662 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270382365 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267456762 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267317581 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265952282 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268930388 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266306504 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277228174 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291969336 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268311434 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273146356 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.263860662 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268182875 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.274411814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267473073 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.268167904 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272486619 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279867947 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27817423 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267398812 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267625699 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268659248 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269231607 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267505355 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.268590066 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26768404 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268011738 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267039374 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267895885 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270519 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266862523 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267616496 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269424287 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269507385 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279457938 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282599361 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268860871 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269241605 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270516114 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269316723 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269193286 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26918022 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268536645 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270340679 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269855693 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277762699 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274290128 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272466142 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268132574 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.270763746 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269171441 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269150603 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271314942 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27007725 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271752458 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27011612 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.270158283 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270183878 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.269728309 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.2717021 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.269825573 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272659119 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273141216 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.278160529 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270923029 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268370598 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271518114 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271331841 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.27009702 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27094246 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277482561 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287592618 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.284156598 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280728057 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.277629638 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271701379 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273745769 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277739559 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269368249 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272955479 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272706316 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272591569 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271529142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276044847 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273615433 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278139451 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286014264 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271007769 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280207691 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286016196 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273237324 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274821555 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275298351 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272079554 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270157926 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273124843 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272052677 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27921169 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290587257 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273267812 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273263032 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272542927 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273883609 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278683714 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272384024 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272582553 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.2703958 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273821273 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273489732 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274688016 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270833109 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271957063 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272904109 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.276657959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281357181 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.271224975 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275699365 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.275517608 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274191355 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275682683 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274967932 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271629541 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273326532 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273365902 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275512303 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272874902 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275802749 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273515689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274978708 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.27746215 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275258337 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278073847 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.284278553 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283690162 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273580897 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.275355874 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.275330614 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.27748757 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275768638 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.276249258 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277201829 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.27634436 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.276420545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276586487 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276133271 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279580437 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292265287 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290126156 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275752196 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27549902 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277947586 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27692208 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.273735003 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278083648 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276639446 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.279838214 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284913815 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277640357 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281707614 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289641798 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.277656898 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280452674 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280644992 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284475124 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.27914266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277508516 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277523631 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.28159536 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293724087 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27590277 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286894609 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305405963 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291237863 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278902962 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278526815 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276619927 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.278708977 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278636027 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.280685319 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279239979 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278988545 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278326358 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.278259032 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281810779 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279283572 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.280373788 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27944071 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279040871 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279622215 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277598578 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27995217 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279811206 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279852265 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280028227 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277903266 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280186187 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292345024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.296854521 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282718138 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281159021 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277443485 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282866437 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282663252 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289776202 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288441818 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.280536694 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280802101 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.279782694 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28181503 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281157695 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279278859 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280374089 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279654699 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27926655 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293964372 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298529495 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285047463 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275342392 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281936983 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280920896 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283434005 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281255544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281530988 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283719835 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.283622623 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287273679 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282486176 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281622335 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.284342922 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290097152 seconds)
  done (took 754.865595034 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279122688 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27965446 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280482948 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279584335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27920108 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280314894 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279484205 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280709105 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280797268 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280819481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279287545 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28142777 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279843992 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281308714 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279922315 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282076156 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281463368 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280422481 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279977648 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279890303 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281964596 seconds)
  done (took 28.079136337 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.282769983 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280827182 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281008845 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284196372 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280600883 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284496386 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281064467 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28318419 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28570755 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2808166 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284738292 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283963256 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282982982 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.281215866 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281011604 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283599669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284809117 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283820219 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284823518 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282355184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284304995 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281720353 seconds)
  done (took 29.41521403 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284025185 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284268488 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.283442937 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.281230979 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285443388 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283164934 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284628018 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.284440498 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285733405 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.284611364 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.283206942 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.285293487 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290073658 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.29140162 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.285889449 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.284476646 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.429782843 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285425517 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286394431 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286187666 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.281786341 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290675162 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298700829 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.282712688 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.283797558 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287215054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287253766 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.286875025 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288095197 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.285974448 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290512298 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287068952 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.285836225 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288629799 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.28586378 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.288414403 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291653533 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286852151 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284986697 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288132492 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296403812 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.308353314 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.288865928 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293045288 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.301975399 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.287191861 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.289895316 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297160012 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.285233495 seconds)
  done (took 64.440426905 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287231877 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28737713 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.284914709 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288357304 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289176912 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288715078 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288844355 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287479623 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285645409 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.286424759 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.287928149 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286715031 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286465616 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288414316 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289751545 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285611954 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286256329 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286125117 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286352438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284569118 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.28639183 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28857885 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290028434 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287646069 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289257988 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286753788 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286088666 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.28958325 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286795421 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286513322 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.29056931 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289699773 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.288249419 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28810632 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286627774 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.290083733 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289997328 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287151724 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288151034 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287375406 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290016573 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290900528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289689313 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291233131 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287108391 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289187609 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287041173 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28598403 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.287969966 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291560148 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291240672 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28905327 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290800972 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287790395 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291683554 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29121158 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289877814 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288242587 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.291889896 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.288248485 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289614439 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291844957 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290823536 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292763315 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292689431 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289846402 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290457171 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292279976 seconds)
  done (took 88.823665572 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290881154 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290026598 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289649162 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291054359 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292134673 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.289911787 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290767593 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292663779 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29243034 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293258571 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290797563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291232169 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291980535 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292138628 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291381417 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290901457 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290315449 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292043975 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29080711 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292473431 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.292745539 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292244972 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292240598 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293322908 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293523096 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292649446 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291484941 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293372018 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293172506 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29295797 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293589107 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292772312 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293069607 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291145985 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292765105 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291538373 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291099566 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291192438 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291537835 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29278636 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293789983 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293032031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292354234 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291329375 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293087075 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293552108 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292424516 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.29518047 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293274119 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294009197 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293949162 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293776532 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292951495 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292186538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29276569 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293676936 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294821772 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293648228 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293136754 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293856893 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293888387 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296544074 seconds)
  done (took 81.33293681 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295288844 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296062981 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.293140986 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294808305 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296518007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294346958 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297809252 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.299011282 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298053083 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299021027 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297989335 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295464856 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293465773 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296895312 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293459188 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294356996 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293786989 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294824586 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296611221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293225278 seconds)
  done (took 27.116712976 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294437251 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298750853 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29428465 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29508816 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.297009033 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294155929 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297331717 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295496149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294826266 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29576119 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296896929 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296970471 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295679784 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295382245 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296688189 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295548058 seconds)
  done (took 21.93671369 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294049196 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296534335 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296898257 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295967032 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295313419 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296874866 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297854106 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29568637 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.29722094 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299254495 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299425076 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297545286 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.299705449 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298978037 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.296067836 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299737622 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.298275564 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296314507 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.300296977 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299057501 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.297502123 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.297268615 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.301106072 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299539218 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.297186514 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298770877 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296771844 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297749892 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297855628 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300137909 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.298336525 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297781673 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296782665 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.299261153 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.298491107 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.299093093 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301554625 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.301617447 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301564558 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301322497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.301080865 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298530917 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.300832967 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.301321999 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298959279 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301641994 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.298505504 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298005844 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298577103 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298462307 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301563826 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301530077 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301393848 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.302379827 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.30234309 seconds)
  done (took 72.639860115 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302492473 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302348246 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299495178 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.305801838 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302383 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.299536213 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301674101 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302490288 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300171823 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304080772 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301364765 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303711902 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299725052 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304236077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30132078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303731888 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301310016 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300026705 seconds)
  done (took 24.64273663 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301084511 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298248688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302948487 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300959572 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.302191181 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306118747 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303983887 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.305308777 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303988305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302476885 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302402915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304730327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303767619 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.305015496 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.3007394 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301072873 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.304115404 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303136914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302227611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302726105 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304493702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30432046 seconds)
  done (took 29.872717814 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.301789359 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.300931044 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299897017 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.317566052 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.317887478 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.323921849 seconds)
  done (took 9.071236799 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310712428 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303977682 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302467615 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305323751 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303699175 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302594166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303005145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301249928 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305050323 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302864641 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302842814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306239 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304616138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302831213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306311381 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306436687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305366767 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302864159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30475631 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305672917 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30530858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306340301 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303945209 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30209572 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303986227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302585775 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307053843 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305182361 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303608671 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306560243 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306124136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30632943 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306340125 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305694493 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307869212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307635328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305251749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30799649 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30690282 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303925992 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307939719 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307484578 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308599175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306572178 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309568789 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30440483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305511928 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306154652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305236902 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307801116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306710871 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305355767 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306296935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306723187 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307846809 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307416423 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305111905 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307276605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309264329 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307288724 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306452111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308739427 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306763451 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307273662 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309419919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307234705 seconds)
  done (took 87.420037997 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306634929 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307272901 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305791858 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309322455 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306569746 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307000232 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306854425 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307221903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307164131 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307207812 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309900758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307857001 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306955183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307765779 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308141817 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307999572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309016872 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308375231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307522654 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312420215 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307710429 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307778626 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3083906 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309091939 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309991077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310028982 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308294403 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310264932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308216287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306718364 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310774689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309716917 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309000445 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309608149 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308665334 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310215142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310265236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308411692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308268352 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313450618 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309862938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313480231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309927182 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310595347 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310238691 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309870305 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309138213 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309588621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309807228 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309804967 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309440002 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312288389 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310961257 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310687961 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310899401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311283326 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310115201 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310797598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310543994 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312984117 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309021432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309658038 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314152824 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311252574 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309965073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311200088 seconds)
  done (took 87.633444273 seconds)
done (took 1762.013211587 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473943353 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.427539284 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.310385892 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313570057 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302736822 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.333593983 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.302761255 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302633809 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.311117439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.310756809 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312200704 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501132005 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.306720622 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304128021 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312098834 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404477137 seconds)
  done (took 42.748136389 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.34253046 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320681884 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.432624937 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.333996844 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340866891 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.508900618 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371792225 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310704157 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.493773542 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351776205 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.912245056 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332916588 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317070674 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.455239127 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.327307764 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.504740531 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.56994216 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.907400829 seconds)
  done (took 30.351046736 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.787120789 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.310761078 seconds)
  done (took 9.315003976 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330916564 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308227995 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309572999 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306787588 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30096957 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313530418 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306436226 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303343064 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.078001822 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442474804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.313230619 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.316529786 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.325796984 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311195197 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.307831893 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.351581537 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472063697 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307455514 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308049445 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318182145 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.311332081 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395842723 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357585069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.312989807 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44233387 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.098899082 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317704951 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323758544 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464749326 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.31312071 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312484789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.314832124 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317335938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.926187117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.854471612 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.323575993 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330843346 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318026309 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314238408 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458058313 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313665121 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320280997 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.317402936 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.838037111 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441057706 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.436606596 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.573367582 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326203641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316631427 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.380010927 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306822851 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313047743 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.342059146 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.079134283 seconds)
  done (took 110.675912958 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328563318 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.694847089 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476624507 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32699072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066645257 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.988519124 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.323524019 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.606736662 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362022137 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306882713 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.644145942 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827657582 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.331533524 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.362409155 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.893750156 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.388396599 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306441725 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.100024666 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.326177004 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.301520903 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812908445 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308173623 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303858071 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.313864371 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341804293 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770287453 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.76074385 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.771145362 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325935878 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300919675 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792118704 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322873402 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.349651173 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303581814 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.571639091 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.668711419 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658995596 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.321658286 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329917063 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305470346 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.31638797 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76530899 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671216563 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32145953 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300488099 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766574573 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.320144464 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.316913829 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.314760325 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516691666 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.163094441 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302408836 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.730410685 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301023541 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.599646227 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364826898 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374329527 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805366836 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320738721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.424878986 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336584233 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309692817 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302959627 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307029558 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306815034 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.65805167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714178468 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306252311 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661674115 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.801217084 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.327554905 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845797059 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.162694944 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33312791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.357860035 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.322175788 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.939494214 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808551951 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.342245474 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303719984 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644266976 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320812387 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.638298551 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328572824 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302978264 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816775012 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.31188659 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.33958425 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.307525592 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303411608 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.083799369 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30452034 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.604571014 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.355214238 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310944915 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.308205224 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.354419988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306162644 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30688897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310138572 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848116977 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.322298545 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.282783812 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323004698 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316733775 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310166326 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.310021041 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.31177824 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537405711 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.717258256 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326829268 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310726367 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30508991 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.305813434 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.623003502 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.310919374 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.622007395 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326482078 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306536219 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333130354 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.999928178 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.378378082 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303674889 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307397104 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.225235488 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.511325181 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.323981508 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.326080089 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311093294 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32985007 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.667596092 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334617228 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.335530181 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31762599 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031718608 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.369377574 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.344046191 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.825650859 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.306531215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312635054 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32035574 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310520748 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597817845 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586593938 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612369797 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311670153 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.32321811 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002992125 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.36820792 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453482639 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325630126 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334239461 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51406662 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.480527659 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.314190781 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.899659745 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31013325 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528090468 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309049551 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625718602 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.815563276 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.329488888 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315643135 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.029735427 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.017494292 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.930890772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.31656738 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.648795201 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.288856984 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.789712169 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.314299926 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.31359932 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.898062826 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309828597 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310108522 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.313595781 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.315684858 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369850974 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485937565 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.501760775 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310795169 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774157815 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.373335946 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311557867 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323113085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.31027293 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.662413753 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318400407 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.315976658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.33978797 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.318605462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.323654407 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8001556 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.204962573 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.315959338 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469974127 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960898578 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.336792046 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316181681 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.846338939 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.544400834 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826811278 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.374282107 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.649911553 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.34189264 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355209787 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.064205998 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350919814 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.791617694 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329915914 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.311522098 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923595637 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328159329 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.384551147 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311547812 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319012832 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856782712 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329378231 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316183516 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.583570178 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332157836 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567944297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.314113425 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.34786481 seconds)
  done (took 1106.674286642 seconds)
done (took 1300.977924531 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.318523006 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312871672 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.301747561 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320606137 seconds)
  done (took 26.48773637 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333852756 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.327357231 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328359956 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324129015 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.32988375 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326437141 seconds)
  done (took 9.208875606 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.42260119 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316767586 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.322022479 seconds)
  done (took 19.296468786 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.540472011 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.652087557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.678526597 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.583103051 seconds)
  done (took 10.692154351 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330177911 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327391449 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328488885 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330069778 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.33051236 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338154961 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333510696 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331806894 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332858125 seconds)
  done (took 13.220289617 seconds)
done (took 80.137031847 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.097335216 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.733263583 seconds)
    (3/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.345275163 seconds)
    (4/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.734475765 seconds)
    (5/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.515687134 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.144619887 seconds)
    (7/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.578717299 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.581348626 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.334490363 seconds)
    (10/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.937890015 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.359883741 seconds)
    (12/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.815991981 seconds)
    (13/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.825869389 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344936922 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.304031449 seconds)
    (16/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.32218461 seconds)
    (17/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.66599759 seconds)
    (18/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.419168738 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.216429423 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.896884073 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.749984514 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.298480371 seconds)
    (23/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351895501 seconds)
    (24/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.306799107 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.127730899 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.681891317 seconds)
    (27/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.299041097 seconds)
    (28/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.344293254 seconds)
    (29/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.299426135 seconds)
    (30/286) benchmarking ("sort", BigInt, true)...
    done (took 6.337438008 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.829114812 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345502357 seconds)
    (33/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.326677039 seconds)
    (34/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.709002157 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.211606314 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.911468514 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35941353 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.326235773 seconds)
    (39/286) benchmarking ("sort", Int8, false)...
    done (took 4.407700214 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.429944778 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.265032828 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.443046457 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.404905527 seconds)
    (44/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.561260598 seconds)
    (45/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.317905002 seconds)
    (46/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347894934 seconds)
    (47/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.056496659 seconds)
    (48/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.409948636 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.34092647 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.185560012 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.317415571 seconds)
    (52/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.330724653 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.145106477 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.709971653 seconds)
    (55/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.37156602 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.437609846 seconds)
    (57/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.309001152 seconds)
    (58/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.368531076 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.3533209 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.606127638 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.333556066 seconds)
    (62/286) benchmarking ("sort", Float64, true)...
    done (took 6.329976669 seconds)
    (63/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.96883126 seconds)
    (64/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405800668 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.792039138 seconds)
    (66/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.860462955 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.589028877 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.100829205 seconds)
    (69/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.361928702 seconds)
    (70/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.743026908 seconds)
    (71/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.109353468 seconds)
    (72/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.380326435 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.857230045 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.327125628 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.883838828 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.442149284 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.310739147 seconds)
    (78/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.777850493 seconds)
    (79/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.974966963 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.330365385 seconds)
    (81/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.944099357 seconds)
    (82/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.732574525 seconds)
    (83/286) benchmarking ("sort", BigInt, false)...
    done (took 6.323747397 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.403117465 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.059957768 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.212386492 seconds)
    (87/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.330016425 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.302788198 seconds)
    (89/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.712320654 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.139266853 seconds)
    (91/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.349648435 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.296374182 seconds)
    (93/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.193951699 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.418058143 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.156560215 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372238072 seconds)
    (97/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364051912 seconds)
    (98/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.33089038 seconds)
    (99/286) benchmarking ("sort", Int64, false)...
    done (took 5.520484386 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.211688352 seconds)
    (101/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.320184586 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.571335405 seconds)
    (103/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.358742463 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.978581625 seconds)
    (105/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.325358433 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.303068757 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.563268446 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.313222785 seconds)
    (109/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370253694 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.310194254 seconds)
    (111/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.304203881 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.364921256 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.311569788 seconds)
    (114/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.713224098 seconds)
    (115/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.631077407 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.844885645 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.366364996 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.600992709 seconds)
    (119/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.820347183 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.326284759 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.38267573 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.11439184 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.049340725 seconds)
    (124/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.442839288 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589072709 seconds)
    (126/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.098708454 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.306915342 seconds)
    (128/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.788837194 seconds)
    (129/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.416011186 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.924078748 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.424583543 seconds)
    (132/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434964013 seconds)
    (133/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.933932524 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.592800435 seconds)
    (135/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.318803791 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.244646192 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.279632209 seconds)
    (138/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.335678214 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.118092034 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.352490857 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.348111683 seconds)
    (142/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.311207441 seconds)
    (143/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.306961375 seconds)
    (144/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352968237 seconds)
    (145/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41542951 seconds)
    (146/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.352173631 seconds)
    (147/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309473805 seconds)
    (148/286) benchmarking ("sort", Float32, false)...
    done (took 5.34290192 seconds)
    (149/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.306993028 seconds)
    (150/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.365924603 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.35193988 seconds)
    (152/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.313598635 seconds)
    (153/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.385796151 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.416575587 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.751027234 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370972238 seconds)
    (157/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.434066511 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.307093806 seconds)
    (159/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.536706117 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.969830664 seconds)
    (161/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.179838869 seconds)
    (162/286) benchmarking ("sort", Int8, true)...
    done (took 6.32577073 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.581891035 seconds)
    (164/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.613627385 seconds)
    (165/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.163793932 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.981861805 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353445708 seconds)
    (168/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359290059 seconds)
    (169/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.674685327 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.371774075 seconds)
    (171/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.323816229 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.368975484 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.863287941 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.32656338 seconds)
    (175/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.352898025 seconds)
    (176/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.433600223 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.304859361 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.308137521 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.744319534 seconds)
    (180/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.366800112 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.141718738 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.828100646 seconds)
    (183/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.387160816 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.448567291 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.403492632 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.205904029 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.434163006 seconds)
    (188/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.590958827 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.464196594 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.338140801 seconds)
    (191/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.58594103 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.509349662 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.996355621 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546363004 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.759748624 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.433368235 seconds)
    (197/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.794304702 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.696056459 seconds)
    (199/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.337239389 seconds)
    (200/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.309134201 seconds)
    (201/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.327494232 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.125808928 seconds)
    (203/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.39271548 seconds)
    (204/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.551230326 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.377791205 seconds)
    (206/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.420040527 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.992440343 seconds)
    (208/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.150490499 seconds)
    (209/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.380179093 seconds)
    (210/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.394766149 seconds)
    (211/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.979838979 seconds)
    (212/286) benchmarking ("sort", Float64, false)...
    done (took 5.649112306 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370747521 seconds)
    (214/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.661487609 seconds)
    (215/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.317354116 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.398755711 seconds)
    (217/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32242567 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432703006 seconds)
    (219/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.904742684 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.341246074 seconds)
    (221/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.357805575 seconds)
    (222/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.436869931 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.005596358 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.334270627 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.986617383 seconds)
    (226/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.322136845 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.756356043 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.349861951 seconds)
    (229/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.534317959 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.401000125 seconds)
    (231/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.684550519 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.834782465 seconds)
    (233/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.988799694 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.567890916 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.360504183 seconds)
    (236/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.640891385 seconds)
    (237/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.408867178 seconds)
    (238/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.343556182 seconds)
    (239/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.428799768 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365009545 seconds)
    (241/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.206375494 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348468792 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.728814098 seconds)
    (244/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.319124815 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.472529658 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.342872876 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.439603607 seconds)
    (248/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.316453968 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.883465541 seconds)
    (250/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.324230139 seconds)
    (251/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.318061188 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.826372297 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.830523109 seconds)
    (254/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.326567093 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.314406411 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.383634208 seconds)
    (257/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.337705157 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.481027944 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.359428289 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.681793526 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.352126015 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42686619 seconds)
    (263/286) benchmarking ("sort", Float32, true)...
    done (took 6.335307805 seconds)
    (264/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.710577902 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425617125 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.349178612 seconds)
    (267/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416010458 seconds)
    (268/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396343697 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.447884349 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332728028 seconds)
    (271/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.453856732 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.163206071 seconds)
    (273/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.109891543 seconds)
    (274/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.314080658 seconds)
    (275/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.468082099 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.375847072 seconds)
    (277/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.233770533 seconds)
    (278/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.495244205 seconds)
    (279/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.649094897 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.382870636 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442386274 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.775650927 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.191375548 seconds)
    (284/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.314237822 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.345005277 seconds)
    (286/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.369035778 seconds)
  done (took 943.047291353 seconds)
done (took 944.282398915 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.371318669 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364288123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.343824752 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.367575993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.455323111 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.368424817 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.353565369 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.346245188 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393552861 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392816411 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.34345729 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.367920213 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.344532976 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345435366 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.343492925 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361163013 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.436043019 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346007217 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.367040467 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355493203 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.365534868 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344000854 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.394053837 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.367074481 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.348185605 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350984747 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.353401301 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.365508548 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459780218 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350713144 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.350170189 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.355822158 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.43594096 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346221099 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342377861 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.364720976 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358642985 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354185243 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35129595 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.381775537 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.862850182 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363396347 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.347959506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.34682661 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349419955 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.352940076 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348007575 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353067782 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360381187 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364514793 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.843954259 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.379775877 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.350924573 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.347302061 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.357268755 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.346931498 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.352851411 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365976286 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364769292 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366485009 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.420134445 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.351653847 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349491607 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.363690777 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.355908826 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.880396654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.361929243 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.357985903 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.863298525 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.371094509 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.886528559 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.375204835 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.354255266 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370179516 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.384319054 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.43773604 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343459645 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355062623 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.361342711 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.351982535 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.363001286 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366918309 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35686491 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.354556581 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367556993 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.377490244 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359891938 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.353153246 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360487477 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.371236439 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357284327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.361953355 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352668622 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351373752 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360683728 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360164713 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.358218657 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355791405 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.358353261 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364743815 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.856390469 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387848796 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349476332 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.352666868 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352597935 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.370033058 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.857402539 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.369528674 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.37751018 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.399775641 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.353823798 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.424806764 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.35392842 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372844659 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363284851 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.359254164 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349412537 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.423979411 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.846952935 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.382331895 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358408108 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357144358 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369038031 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.357290473 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353388851 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.442087972 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353862067 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369881564 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.473826003 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.363936102 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383233277 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352569975 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.355678 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.377039982 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373025662 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.383707736 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355058358 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374120543 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.368935931 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350314932 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.367227762 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.363681119 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360717604 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.36530086 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351624542 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.37640961 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368425816 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371100021 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.373881203 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472855383 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.351147325 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.459423598 seconds)
done (took 229.155815242 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422190073 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.351109613 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434765439 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351837486 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462332374 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.45988237 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.351684791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353136502 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355186091 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.735552856 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352226241 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353243275 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.3532754 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.351038875 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.438785599 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352824341 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.351973439 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.699725254 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.355346624 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422061629 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.352745893 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.351340614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.351681801 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734647631 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.348554326 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.348799486 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.42207395 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351210754 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.739576602 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.345127654 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.348597788 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.69805566 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441072643 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370840178 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.362583081 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360563438 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453693576 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374216596 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434638263 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434737767 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438465954 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.392122326 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350468067 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346269058 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35454419 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354864179 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.351455135 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.382220018 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.349634018 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.351352027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.699269658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.362281132 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353160799 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353589019 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353450843 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.389652054 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352501909 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.354203484 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44496909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356003484 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417501864 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.739418314 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.734828821 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355118218 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.351546485 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353307318 seconds)
  done (took 149.839031584 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424657223 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42771034 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467823031 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372945011 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.405279566 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.471861049 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372420424 seconds)
  done (took 11.205085659 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360286098 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357161605 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413688282 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404901796 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356570689 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.534847151 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358659819 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.365767474 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.354710443 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40761862 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362240011 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356970358 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365120124 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.354518157 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402873656 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.365922171 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47179739 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358041793 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358243814 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513303251 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354851661 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.362844653 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412294545 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366780689 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358567937 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.360432817 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.172912844 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358375348 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354728213 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.358050093 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355136722 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.432089359 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360261706 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.353370017 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356003315 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475710126 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.35884277 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357630417 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358519955 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.363872011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359341397 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366091357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.359274543 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.356193117 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359344108 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383752353 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.36097761 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366367883 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.359053496 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359790783 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41352451 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358636077 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.356514438 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.362008418 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.412882692 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365397744 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359987909 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357468132 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359355798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357255936 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.514551941 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.407322351 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360378321 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407715213 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361192344 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361531667 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.35881586 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.361868593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413225038 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360671483 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40858719 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357280401 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.544148044 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382176391 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36312832 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361276593 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.362714636 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360760951 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.353744161 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364993656 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357983401 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.360196442 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365615337 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358967801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358531988 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.524894374 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467643826 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360019613 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.373280685 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36652772 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.358160987 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.41764444 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36171196 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.359952097 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412609038 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474931037 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413320925 seconds)
  done (took 156.113138525 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366572293 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368608731 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361609278 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377470036 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360161555 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.360626782 seconds)
  done (took 9.463191529 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.363204168 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.363054412 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.363388216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361888954 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363418299 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.364637251 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361935154 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36217686 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.366582606 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362509074 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363159572 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364210754 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364213462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.363006087 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362592189 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.363127975 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.36369216 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.360099582 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363507064 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363680179 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.465582688 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364796202 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365057332 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.364764815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.368031134 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.364020777 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369431227 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.363714903 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364345453 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371194242 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.383194059 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.36344889 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.365266534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.368888863 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.36953007 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.365057939 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36855308 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.366467323 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36360604 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365799475 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.366281863 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36548523 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364979914 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.365509512 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.366466972 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.370495277 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.371160053 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371811216 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.366919562 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.364901678 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366931568 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366836933 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365808287 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367858349 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366949985 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387201379 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.371489663 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367472184 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.366493891 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36840104 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.369476292 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367422958 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36780639 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.371778813 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.366453514 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.367779799 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.366806077 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371344253 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368040911 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367219482 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36705838 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364582404 seconds)
  done (took 100.762026332 seconds)
done (took 428.640120484 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.822026693 seconds)
  done (took 8.098148447 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.48218319 seconds)
  done (took 7.757891702 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.959984312 seconds)
  done (took 24.241312941 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.428667305 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.409340473 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.370713643 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.379225956 seconds)
  done (took 26.868110248 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.817943024 seconds)
  done (took 8.094162532 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.374755681 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.361289013 seconds)
  done (took 14.013004481 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.488525514 seconds)
  done (took 7.765279265 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.089230421 seconds)
  done (took 8.372856482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.388050803 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.381785127 seconds)
  done (took 14.317038094 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.351007198 seconds)
  done (took 7.627978467 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.926624773 seconds)
  done (took 12.205249038 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.361028729 seconds)
  done (took 7.641510466 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.380515116 seconds)
  done (took 7.655415116 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.002628639 seconds)
  done (took 10.278799219 seconds)
done (took 166.208221495 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.360160499 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.361584819 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.365207765 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.36081693 seconds)
  done (took 26.724112598 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403802353 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402831808 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.404793855 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.413740095 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405489842 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403882692 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394565742 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.394377917 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41413845 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40750951 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.406679966 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.404082846 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403729408 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396021148 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405425061 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40496029 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.416450024 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406568563 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396802481 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.407303806 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.370437992 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.415001176 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406215709 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371682181 seconds)
  done (took 34.933866867 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888448773 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439392299 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521406463 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.420830117 seconds)
  done (took 7.548597331 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422476514 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.424932225 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.437085672 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472901041 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.501388088 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.434498303 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.395491709 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392731228 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.378393842 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425151299 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.499401996 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.440111298 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.508417412 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37145289 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.552175401 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.371895104 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372077488 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423273269 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475052361 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499956637 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372619347 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.423074571 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427886975 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441170983 seconds)
  done (took 35.742551529 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.371096579 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389244269 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.37124632 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.371064959 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.38072435 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.371078262 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.372915494 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.373440549 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.372778205 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.378677582 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.371317906 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.383088974 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.372225049 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.373509331 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.37989711 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.373750242 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.377952956 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374270414 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.372872695 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.380264193 seconds)
  done (took 28.792165012 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.365392286 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.219479561 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716595045 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.622135757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.366739847 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.373800364 seconds)
  done (took 27.945415155 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447395307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.614832809 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37243836 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.753120718 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.845596574 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391367898 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.373942694 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.633836277 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.978764922 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.970064898 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441905915 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.454488356 seconds)
  done (took 20.562621229 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.379117544 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.374344935 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.391648767 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.390650119 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430574001 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.395709778 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.378536279 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366390087 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438769612 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.453848775 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.394995436 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.43349588 seconds)
  done (took 38.112673768 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456862796 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413047973 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.381637979 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37166601 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087778236 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582476626 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.439940074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091237116 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394428503 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643276933 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370886925 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459419867 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625700207 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376465687 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379968539 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.403268724 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614216432 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875677836 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372579031 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.640631575 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403662022 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376308082 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.657949352 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625020751 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603787201 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34873138 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.631630798 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150603412 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675014333 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384880089 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382592951 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371686857 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645157954 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04514663 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489129261 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596001548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390574238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.917432475 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.374179558 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.572582828 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382640104 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37414208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383022534 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372919283 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306234878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385972409 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112747546 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.398772613 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085008377 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373713735 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651166633 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468174165 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.376979885 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.941859509 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398088578 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399443468 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.377612455 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467542846 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963344153 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113509267 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389233262 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317135125 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390451597 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.647379349 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04577553 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.39948608 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.379218214 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379389238 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308934434 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.63360016 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400802574 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521198043 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400967321 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023761309 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097839575 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402090147 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.305182351 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941550967 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390452724 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.315826797 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603129793 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151237761 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311204328 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.321128681 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310446386 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105082319 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385262185 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.794030015 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396553932 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120452531 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624138276 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415307506 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400203076 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600213135 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.256216522 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378081498 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386202191 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503266563 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398378335 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106021141 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333160841 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381072145 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631514308 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.587402238 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384848554 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.414619232 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895160664 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397235668 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406512259 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380916877 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611666443 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.008387691 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412800987 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108668139 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402470295 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.153826734 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135391926 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394456555 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.382669077 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383473093 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634323895 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154579351 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.537873239 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445704233 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385247369 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378606579 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.660839098 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236105268 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.537030272 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.589022051 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404649084 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395978815 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.378429907 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332229338 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.391193368 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394268279 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.154874302 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601452221 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393624864 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662378785 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312786842 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527037167 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390205961 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60170085 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.645247417 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.403210557 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639550529 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380868229 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41295157 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399332729 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399881557 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480735359 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403412096 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.382442153 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645127457 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.384960798 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.384877452 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.689756215 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165498904 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388672524 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385641417 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400184029 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999829424 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375997223 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386475375 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271159079 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.395149038 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449140671 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387586945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608077735 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.347647937 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402058031 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385787926 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.38243667 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604151947 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392994516 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.5737345 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46890314 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.878772207 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032215945 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422204676 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.315672152 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.091522146 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.076846322 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383124624 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.564335384 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382187028 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609246032 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415769375 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394085651 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008841652 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410587898 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.579963428 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.398719031 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396861118 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.38818327 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384718403 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.308075547 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.167951879 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396024962 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401983397 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527858054 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.398965215 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319063034 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900860566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38957551 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385932588 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.15948992 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418814626 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.575877163 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216478157 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663683856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40379609 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664543358 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.788114094 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.427323448 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.380827079 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393695863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392948894 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.40307947 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413045733 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.396234801 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.654318158 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.833526527 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949922132 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139419862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981559317 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.749815915 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.419042334 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275175109 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118886286 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341511564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.040857597 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592375976 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137628523 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351701838 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887482992 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.675739698 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223176447 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666234126 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616775193 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728398236 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.414821786 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669392515 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599238542 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420769386 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387579405 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325581845 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.905940976 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969665896 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423989651 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466665754 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119971764 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421774517 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164871106 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.412565158 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.17059308 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820222619 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955200908 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775907867 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38858573 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39902972 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212004124 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412192873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91357227 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042750742 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408445075 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.913326595 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346177921 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616217518 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.419047869 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.385383924 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.814946818 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.396839073 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.642980858 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669068158 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32321138 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388101849 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963475677 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263638163 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.395484122 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391743438 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159982083 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396723949 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702599823 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.401418155 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.304504792 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413201713 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32225417 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325010023 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.083118492 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397593471 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366192825 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910941397 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.400694367 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39216033 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405245258 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244000727 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645853402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403944533 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017780687 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6442489 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396543623 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413423138 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394276688 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394723005 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.373788805 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.27346861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625243309 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481848885 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615536022 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.411418878 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.751887057 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460729698 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601712952 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293451826 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39662871 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647491845 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.122071912 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.393049085 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168899627 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443597475 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395193225 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402496676 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394228728 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411430033 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482111591 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618481931 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.421688347 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402828896 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821383094 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423428537 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393606933 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.405464867 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484590874 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15218445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.345585392 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.171779269 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022337421 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204695312 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047513412 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69910427 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393698303 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394804365 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326378493 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542031735 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918209801 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666645116 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523910389 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.409535471 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416926204 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402218622 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406554442 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615269258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66866696 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263442391 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393017376 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065235126 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.552333815 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405185039 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.604141425 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919591145 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986925681 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513455486 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394466737 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156721275 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688925549 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485155639 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393939142 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982953111 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.401850568 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.157019854 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400426547 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394827538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550135925 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672818728 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0772109 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424705084 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.554365536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.168529862 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.695117471 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657075272 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.938296601 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631990961 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058110969 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158883808 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660193807 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465885753 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624158521 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.522536772 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543685444 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.408968262 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277814288 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398402809 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241773101 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.108244475 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.406823277 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028328781 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686953482 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.402870588 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.39394312 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438542973 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.408527507 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619608985 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132315872 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622983711 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406412862 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396311292 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.390376257 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030971526 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706267911 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335618097 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.402989285 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65297092 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656241444 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422084067 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.850533907 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110469007 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970769458 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.370621929 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421729712 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397138081 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.169394759 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043642831 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.341366134 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92524465 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05799134 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409061069 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68132927 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.405043938 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409340998 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683931087 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.403789039 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397466933 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640179843 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058931926 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246554327 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.405818613 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.739748748 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.347760436 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625969698 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472159603 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335812726 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401765953 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.8390552 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422788784 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532762988 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415081331 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.406453058 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413274586 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.142104255 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674860852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408977302 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.392975438 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.402212261 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403924565 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504768975 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987499904 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42907447 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.078739266 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.755854303 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660029998 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403316869 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390790942 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.407062058 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405238853 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122384518 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372524029 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405221089 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994251274 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.404703146 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.42157652 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407271941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621391916 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616776408 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414399533 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636040573 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433504222 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428358156 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.264279293 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.170767644 seconds)
  done (took 1672.822411968 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421886282 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.443468564 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.433055086 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.439384746 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45102424 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429615552 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.482122336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453592816 seconds)
  done (took 52.870403428 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.416747254 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.569035754 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.435262999 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.414543475 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.41299127 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.410966754 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.896939143 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42580217 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.413499121 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413457571 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.409620244 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.404919062 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.099615042 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.413375041 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.408583186 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.403431771 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.412392493 seconds)
  done (took 66.686305841 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.699873598 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.644234532 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.613336699 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.412233508 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.455278763 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.405296632 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.701732847 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.433451419 seconds)
  done (took 54.686471771 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.425224957 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.424475487 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.424428971 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.423098679 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423592101 seconds)
  done (took 8.439954229 seconds)
done (took 2077.14347736 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.412789198 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.411844496 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.411017371 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413682355 seconds)
  done (took 6.968872062 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.393160247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.113095085 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.396657929 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40898561 seconds)
  done (took 18.632365722 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.434549198 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.413334299 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.161650004 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.064771961 seconds)
  done (took 5.547555746 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159780415 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.17101945 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.156753471 seconds)
  done (took 7.806603207 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.408603099 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.413477863 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.415552476 seconds)
  done (took 20.557546515 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.708673411 seconds)
  done (took 3.030013485 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.558020206 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.603050383 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.785044615 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.769706173 seconds)
  done (took 8.035575142 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.793059921 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.793424431 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.593021087 seconds)
  done (took 6.499206263 seconds)
done (took 91.242275825 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.449163857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432004188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.61729481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.428919965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640418759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.615554327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.609133999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.392764102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.929028966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.917459441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.424416471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.63729436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.77098022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.433444115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.771502476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.438100141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.637477004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.495102037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.11021804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348036873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.612577405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.059997547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.249638415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.076710436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.637146928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.564761289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.640907247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.437366365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.280976475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.656191601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.566352932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424028475 seconds)
  done (took 195.626284815 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425264667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408113355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409942942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408832544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409103624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.428233474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.411022114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.42675455 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426285252 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416953404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408857988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.439102164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412018942 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.409797967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408620016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409258194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.410383944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.426715317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411251264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437786123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40938786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411120121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.407210732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421805593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411491857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.412078074 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.426702931 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410782794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410952067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.411523831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411522134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410896567 seconds)
  done (took 206.622758562 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419845405 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426917242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.412255954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.440037171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.412755722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.430523065 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.431350524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.409717952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409792228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.445418076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41486548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.410266436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.429611635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410721638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416570377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412510004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422309907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410361512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411981404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.411038075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.446296832 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420224315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421759633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.411905549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436460738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.414769904 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432340803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411755628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413574316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421515131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414456501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.440231672 seconds)
  done (took 206.799020969 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.616044668 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.420495811 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424976168 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.354971852 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42349028 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422349241 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416085419 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620269885 seconds)
  done (took 15.024249629 seconds)
done (took 625.389116567 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.80953476 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.516852764 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.63226895 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442543654 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.25206767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.461998194 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44404646 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.623499496 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.360274072 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.628181387 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.710083691 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.459865009 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.865066948 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441572008 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.714686802 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.544846818 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.396791588 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.500634388 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.774794573 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.015469547 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.715422347 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.937471234 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642088786 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.371450236 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.86992644 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.93274558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.209319555 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.363199988 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.459051748 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.77813738 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.241658289 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.466046192 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509654294 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.507133632 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567037128 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.546148536 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.445101399 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.50664135 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.65122311 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.696952594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.019791512 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.172763075 seconds)
  done (took 96.530677096 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.408270735 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.406463638 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.405527645 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407638592 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.407271996 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.406709477 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.405308078 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.405293512 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.40654708 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.406229945 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.408973552 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.409798982 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.404969333 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.410074075 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.408073068 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.407914962 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.410349697 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.409790935 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.407481341 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.40748396 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.407213356 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.408882927 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.408680935 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.406846899 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411865184 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.407130104 seconds)
  done (took 37.93078649 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.430755168 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.689150994 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.857693497 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432360535 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.42907743 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432143147 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.513634888 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429419866 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.427886342 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.432225309 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.608839303 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.429769784 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465505693 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.882525021 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429375699 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.42930225 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431982031 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427024858 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.698445616 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435579095 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.534386752 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.431992186 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.51303925 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436989394 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451063898 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43058588 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432675824 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.004070452 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44944003 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.609102008 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.281990242 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.516109003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941938243 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.892458472 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.289299586 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437496286 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.432633385 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.610700911 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430036459 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.432218986 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.510659931 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428672528 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.876894401 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.090770253 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.4482448 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432666399 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020381099 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.63189925 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.692855474 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437217971 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899038904 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.433049834 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438181533 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435141148 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.697871838 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435049809 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.432745991 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.011954014 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.455472499 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.515599638 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432823847 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433898999 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.712522066 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42937277 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.697951916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43183429 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440665742 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.45247223 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.875523234 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434228469 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.119363491 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.44982407 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433746786 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.611922351 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.691587894 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.055792733 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.45677086 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.715590999 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.956986231 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.532194184 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434470049 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.99116113 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.535313692 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.435008844 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.435959853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437198479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433389985 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.486922951 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512612989 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.055054683 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.127905578 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.040803045 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535813942 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444227539 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.433662518 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.014731864 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452672677 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43234531 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.865800994 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.116834334 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452059231 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.441367314 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.120280159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453889738 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.521983404 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.438759023 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.882216548 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434049096 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.491027999 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.433996048 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.441519166 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.458664745 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.52028467 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.436247259 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.437160468 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.087383424 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635788605 seconds)
  done (took 188.804818959 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.430400111 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.44525032 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.425870236 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42557289 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.428996556 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.439666394 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.428802555 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.431087617 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.432227949 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.427064657 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.429432125 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.4289128 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.429842875 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.429742006 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.458751682 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.436930887 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.043249869 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.429429695 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.428534833 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.42793452 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.245801451 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.437225533 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.427675745 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.429396497 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.430233676 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.428784183 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.433239782 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.430383669 seconds)
  done (took 154.859748313 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.439741493 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.039093207 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.456708313 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.5767722 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.459419641 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.433588844 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.576004434 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.496060619 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.455424562 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.437304522 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436902518 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.758894785 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.438227576 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.988064836 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.643148875 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.609978482 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.990029692 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453648912 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.435988631 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.436122156 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.579868207 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.441197445 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.760052931 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.042148766 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458521008 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.07563416 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42872257 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439238734 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43727543 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.041874513 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.456677186 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.762364455 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519120304 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499174339 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.060766834 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.005198725 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.007605138 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.598669493 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.436324512 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440420187 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.441413302 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.422737957 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.042858105 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456932325 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.437556539 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035270921 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459506472 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.438508562 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.445515873 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435171204 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.500346935 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.520954914 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.784658619 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.08312754 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.549095997 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451042941 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576913005 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.826451834 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.440491111 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.98907754 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421002396 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.083090028 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.467873134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.420419354 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.4419645 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448484752 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.600900108 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.579535608 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.99171476 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.457033615 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.992122984 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.619213782 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.438341024 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.441915766 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443623865 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.080758652 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.022029666 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.619116833 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.582613018 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.650506551 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.430562567 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440496129 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.426420845 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.524665814 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.440309139 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.06845713 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.013174092 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.458961278 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.444764863 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443052961 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.442411953 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629871209 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.101421717 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.551692615 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984596278 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.80295649 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.797155689 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.451026663 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.509679804 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.459348146 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.78759441 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.452431226 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505366404 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.892822316 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.789171987 seconds)
  done (took 172.385859546 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.696845795 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.685281652 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536640554 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.599769494 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.090517007 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.024574544 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.741248221 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584411016 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559624031 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712249161 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.652875759 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535579244 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.676000998 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522198364 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.227788698 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.535882274 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.559029585 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.589620458 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.602468983 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.480515877 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.154727499 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.745038528 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.642987824 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.415460831 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.537476109 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.272776091 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.017248816 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.038661635 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.630321746 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.796533399 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.998906865 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.633733447 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.493796709 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.18411988 seconds)
  done (took 69.520659186 seconds)
done (took 721.356070042 seconds)
SAVING RESULT...
DONE!
