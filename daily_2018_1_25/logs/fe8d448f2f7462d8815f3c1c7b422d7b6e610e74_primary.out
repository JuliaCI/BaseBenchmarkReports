cset: moving following pidspec: 20132
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.156816672 seconds)
loading group "string"... done (took 0.526838983 seconds)
loading group "linalg"... done (took 8.74861037 seconds)
loading group "parallel"... done (took 0.172568653 seconds)
loading group "find"... done (took 2.521767445 seconds)
loading group "tuple"... done (took 2.143428334 seconds)
loading group "dates"... done (took 1.41165956 seconds)
loading group "micro"... done (took 0.666714977 seconds)
loading group "io"... done (took 0.727706855 seconds)
loading group "scalar"... done (took 46.975881065 seconds)
loading group "sparse"... done (took 13.257989353 seconds)
loading group "broadcast"... done (took 1.239812343 seconds)
loading group "union"... done (took 2.610135632 seconds)
loading group "simd"... done (took 3.039616872 seconds)
loading group "random"... done (took 11.503164394 seconds)
loading group "problem"... done (took 2.230002736 seconds)
loading group "array"... done (took 24.038461251 seconds)
loading group "misc"... done (took 1.660245288 seconds)
loading group "sort"... done (took 3.646041381 seconds)
loading group "collection"... done (took 17.881124811 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.775288512 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159305767 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.241015332 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.687760608 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.269920653 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.200503037 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.202792065 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.178644735 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.604037381 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.219511892 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.193702264 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409860614 seconds)
done (took 6.932810519 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.335005488 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.092885783 seconds)
    (2/2) benchmarking "String"...
    done (took 0.219240847 seconds)
  done (took 0.941498365 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096725415 seconds)
    (2/2) benchmarking "String"...
    done (took 0.142333395 seconds)
  done (took 0.865406138 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.133882032 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.185851685 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148891626 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.132237619 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.148165585 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.14804457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132571528 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148080851 seconds)
  done (took 1.672791894 seconds)
done (took 4.578260628 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.533054505 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.97446404 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.572046828 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1974827 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.338491386 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.338630586 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313665636 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.268290346 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.129555788 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097427043 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.216610869 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.493818456 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.465734131 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.006863136 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098302038 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152794723 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.165837314 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.95429498 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.119199952 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.153638128 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527091319 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.236891622 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.156599863 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.13564994 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.24092555 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.165103937 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17037257 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.142677656 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.791936061 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.179668874 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.234214035 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.123714179 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168479173 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201289805 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.274889904 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.151241798 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.793865188 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.241651139 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124497325 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.141451291 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.779335177 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.16430842 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.231025222 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144489596 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11498603 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193179728 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.144205351 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.118639606 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.153213566 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14329309 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.218745794 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.532329988 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.147112441 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.223889276 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.151518292 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.806347018 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137995333 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.322782096 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.16353665 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147112335 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130306729 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.128799493 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.216784037 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.13910989 seconds)
  done (took 23.101314423 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.207445585 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.222798185 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.138129742 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.185958379 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.181773593 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.13677147 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.129564684 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.137119897 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.155186139 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240362703 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.180492564 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.22642298 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.120486977 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.149824601 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.178942895 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.297266366 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.168692917 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.150551931 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.149974838 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.137834842 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.186905639 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.140424918 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.151092806 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.134506419 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214500409 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.2586817 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.14915892 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.164309591 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.143770364 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139811118 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186097858 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.204259084 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.117753457 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.145644788 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.219500985 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163810366 seconds)
  done (took 6.869147231 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.265183326 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.146093639 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.273780189 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.230847451 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.190864095 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.228999917 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.226211675 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.32512374 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.325016163 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.151212378 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.14452716 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.207039702 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168397837 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.153732712 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120670712 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.136992979 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.185519569 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.136931683 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.890430627 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.19211495 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201530462 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.210051132 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154325576 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.139142529 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.753231399 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.146586074 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.140848025 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.135060989 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094063377 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.261143373 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137554752 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.517272517 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.140732244 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136782397 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171894938 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.243917477 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.162296729 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.178662421 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135758165 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.141783944 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250956515 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156919602 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.120261262 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11963122 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17296834 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.171524369 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.146936669 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147218838 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177034132 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.14291933 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15063905 seconds)
    (52/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 0.241138021 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.219405157 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.239007494 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.177555773 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.143793178 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.31886612 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.147690304 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.15808404 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.148905142 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.882375312 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.176496296 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.139343902 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.121334452 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152719944 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.121262225 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160948765 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.481671472 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.123046277 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.198556298 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153436932 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.157274075 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128221818 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.14258559 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.147342049 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.143392364 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12161906 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.14372828 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.122413675 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.147288209 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.144861745 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141955451 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.12131813 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202870516 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.137142608 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.162871998 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167051687 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.12991555 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.144408403 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171399601 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124556772 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.146075085 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.195405276 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155099951 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.161180011 seconds)
    (96/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 0.752023159 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.127251335 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153628339 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.18363995 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.128068413 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.339224769 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129076005 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.18374568 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.14066854 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153733581 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.156560123 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122430884 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143624108 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.121045183 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141958433 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189662721 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.142304325 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.122234598 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.147235878 seconds)
  done (took 33.052066688 seconds)
done (took 63.651687553 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.474390964 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113376245 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.133694858 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113908073 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.134393852 seconds)
  done (took 1.683051943 seconds)
done (took 2.371188962 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.236177439 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.32921169 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.24195764 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.146959352 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211882648 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210492751 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194637547 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205797765 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216215731 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.212967616 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.141073524 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.231919406 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.221807996 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.192816458 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.141274098 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.245386329 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.189642068 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21416869 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.246924207 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14752895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.142459173 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.163416873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145817426 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146032347 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143739351 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162855008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150434773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163343619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137063313 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147082937 seconds)
  done (took 2.349101197 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.17006276 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144830192 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139857587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.15329006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142179553 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146622824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141924445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159728189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.149451997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163919246 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.140021626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.1512735 seconds)
  done (took 2.331053774 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.124141336 seconds)
done (took 9.725184071 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.181384794 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.008996576 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.193947393 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.274235622 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.36843883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.302004561 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654503426 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.23461291 seconds)
  done (took 16.055099828 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.206896204 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.153898341 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.13785773 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.152907079 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.134783963 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.152060819 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.140128019 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.154139339 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.14041833 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.154901345 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134201194 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.154896959 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.141840817 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.155370845 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.135871888 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.151897064 seconds)
  done (took 3.159143266 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.182364676 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.178973923 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.140545447 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.15993934 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.137693752 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.15954065 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.145925589 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.157434364 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.138277349 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156309642 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.145418933 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.158574553 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.140469916 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.153953307 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.142119648 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.177129987 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.140849032 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.158582541 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.160424548 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.159287423 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.158826864 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.141763014 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.156694112 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142740706 seconds)
  done (took 4.460363142 seconds)
done (took 24.380014734 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.19311137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148295926 seconds)
  done (took 1.05137291 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.195758931 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.212066664 seconds)
  done (took 1.126370381 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.157936637 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.149905045 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.165453517 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.164006085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136063502 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151138338 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.161264589 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.152220148 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134771718 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.151096028 seconds)
  done (took 2.239730333 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.144236438 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.155194312 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.151197191 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.200353521 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.14305674 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.15435615 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.138432631 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.156225495 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.140105471 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.151836108 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.140044746 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.168588714 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.155854922 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155568028 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.156704626 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14147689 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.159051616 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.139598204 seconds)
  done (took 3.468169458 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.138831924 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.137517497 seconds)
  done (took 0.994757513 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.142158322 seconds)
    (2/7) benchmarking "second"...
    done (took 0.133816283 seconds)
    (3/7) benchmarking "month"...
    done (took 0.153711556 seconds)
    (4/7) benchmarking "year"...
    done (took 0.152140052 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.135394718 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.134726559 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.151820012 seconds)
  done (took 1.727346897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.608843316 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.270532151 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.418925839 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12279235 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137387138 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367820088 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155901708 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106531048 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.123595093 seconds)
  done (took 3.060380049 seconds)
done (took 14.381840397 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137296045 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.281120106 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.675361806 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.173977005 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.136776448 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.210489243 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.341049462 seconds)
done (took 2.682594248 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357555752 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.180116963 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.119113345 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.138034546 seconds)
  done (took 1.517064351 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.130654496 seconds)
    (2/2) benchmarking "read"...
    done (took 0.146713684 seconds)
  done (took 1.007445152 seconds)
done (took 3.25471225 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.158188936 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.152746779 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.13877169 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156891668 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.13904062 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.15433499 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.138036398 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153226975 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139149048 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.152510041 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1398747 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.156301984 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.137644317 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.15563743 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13713023 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155540041 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.139365127 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152620744 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136588668 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.154734904 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139736231 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153166271 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.138259733 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155567783 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.13925565 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158044291 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.135770633 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.153194229 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138147899 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.155463503 seconds)
  done (took 5.140944922 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.270464976 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.131243753 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152548681 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.142980911 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.147986581 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136574273 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149175148 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.134433271 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.15258466 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.13485547 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.155387596 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.13403382 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.151309127 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.1360387 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.153174975 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.139023105 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.160225522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.13630957 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150093663 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.136746788 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.137331594 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.151958906 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.13475667 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.152310583 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.13459089 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.149731395 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.134785291 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.151809146 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136750815 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.151411696 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.137612206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.153251178 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.135863897 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.161510642 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.139241923 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.151403901 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.141789477 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.131522683 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.153036836 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.132229139 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.149621543 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.134279437 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.153168843 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.141236688 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.152599629 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.134625645 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152776099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.138032717 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.152617134 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.13749415 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.149006824 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.135155725 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.153597135 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.137644745 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.155085244 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.13352221 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.134509945 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149846796 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135826724 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.152938437 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.131915152 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.149829427 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.140121301 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.15340161 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.150032784 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.158030005 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135557455 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.153920444 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.137427129 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.158220534 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.137896541 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.162362761 seconds)
  done (took 11.267544879 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.142971898 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135399741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.152285553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135766905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153195217 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136408826 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.15356696 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135516198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152215797 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137436365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152179434 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135672046 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152308815 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.136118774 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135264078 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.153558792 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135560062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153010359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.135579683 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153435637 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137128256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.152361514 seconds)
  done (took 3.913783589 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.281922649 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142463493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202884687 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.148957798 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172562373 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.166486741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141215089 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159964971 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13997533 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.165293633 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146380604 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160387336 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154742386 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.166276482 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.162593524 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.147536878 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160685467 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.148380745 seconds)
  done (took 3.716730735 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.141158088 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.135768444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15497076 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135802085 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155018539 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137278342 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155834103 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137546262 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153239467 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.13614859 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.154907437 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137813974 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.136397394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15456112 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135208843 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.155242282 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.137854088 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155469596 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13703986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155967476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137817094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155302526 seconds)
  done (took 3.94985425 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154145639 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.157007768 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157263475 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161098571 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138686969 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.156114546 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144798018 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.156364335 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145104543 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.155998773 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.139869308 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.156184612 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.154437257 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.157487889 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145980816 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.15816951 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.139677378 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157401467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140652778 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.137260345 seconds)
  done (took 3.768724594 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231281331 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175706649 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.173732309 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163124584 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173899726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.154962497 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181460144 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.153393014 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173530532 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.16675223 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174677214 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.173369848 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164494245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.178394902 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154435679 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183955136 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.162190893 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181870454 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.173385088 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15573857 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.185508757 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.155700151 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.182618877 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156506985 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175011071 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.154965743 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174877672 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.178322543 seconds)
  done (took 5.573695285 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.153654165 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167188962 seconds)
  done (took 1.082568397 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.143191901 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139940263 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.16004121 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139843673 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.159987516 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140534254 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.160754161 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139313994 seconds)
  done (took 1.94442436 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.202221119 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.224752105 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.16420256 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.150821742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.223905554 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.213538193 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.196885185 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.144178619 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.1608188 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.13213945 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.215738027 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.129917635 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.159866963 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.136069615 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.160158832 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144510473 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.164221978 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.148828141 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.165893552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.14143825 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.16497003 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142867084 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161675412 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.151196737 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.154060596 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.141100556 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.163680926 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.151749137 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.159791491 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.14698455 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.17102801 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.141569956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.166706757 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.144847337 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.162746418 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.22364348 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146204358 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158266781 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.141782378 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.166625383 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165989328 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.160413375 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.140928159 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.15798546 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142965682 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.165632987 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.144111827 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.161875091 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.1347298 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.157123091 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.142863714 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.154647084 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139956341 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163161431 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.143339345 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169406328 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.148223336 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.161827029 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.143605244 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.161901436 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.141193444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.154071588 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141219459 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.164692924 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141138088 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159822076 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.139052231 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.161681111 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141556488 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.161890435 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.140038561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.17555929 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.142030412 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.166647564 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146177055 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.161991009 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137413459 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168651885 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145918251 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.166018332 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.15217024 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.189158859 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150212424 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.159280268 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.138751984 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.168482268 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.141408114 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.163334931 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.13436792 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167379823 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.141665475 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.161910198 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.132988403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.158383077 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.135980004 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.162730207 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.132696264 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160939403 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.139993511 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.164629931 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146715887 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158849776 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.141462508 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.166457843 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153957522 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.166765056 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.195512674 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.166361014 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.144460818 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.171828782 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153751591 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.160114897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.147788539 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.163239661 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.144732675 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.161221883 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.153975599 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.168925813 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.150840028 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.17457227 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151126335 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.171033148 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.152591191 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.168651024 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.144978672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.173784887 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.15876643 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.167288358 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.145043024 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.164577673 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.146756958 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.167159482 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.154262884 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.175869993 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.155021122 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165360838 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.149328648 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.171945368 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.154292585 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.1691454 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.139769238 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.158455474 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.142106295 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.160149945 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.145275734 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.161977054 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.137300334 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.155024068 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.143287782 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.156107791 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.143152078 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.168819467 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.138039023 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.164013346 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.138800125 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169784147 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.138681435 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.169039158 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148398851 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.15051733 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168713167 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.133392184 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.163547886 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.146654102 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.163835554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.137937913 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.163749274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.141804283 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.168888842 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.134315792 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.165484126 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.134733861 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.1578267 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.147567656 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.164132198 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.144861548 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.157735671 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.174214321 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175373779 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147099909 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.162151727 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.141600131 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.167398591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.1411327 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.166723133 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148666688 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.166451176 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.139207126 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.159665191 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148304057 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.157903585 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.143807041 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.160613888 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143449415 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.154909162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.144234533 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.154592436 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.147286208 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.163316103 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.147707035 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.166825107 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145119864 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16078634 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1519612 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.157517189 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.146000807 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.153851372 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147223648 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.172388743 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.149034204 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166651168 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.144366457 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159537116 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.144735096 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.169347158 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145448556 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.162212437 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.145499485 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.134935188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.156848248 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.147818608 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.166500128 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.137475728 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.16375296 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144137426 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164536591 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.139590814 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.156089088 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.146927034 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.165320403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.137991082 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163954097 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.138385359 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.162026391 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148248822 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.15690449 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.138805322 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.166816892 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.14726172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.163674037 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.142194693 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.165685422 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.149243457 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.167229968 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.143764464 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160630974 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149656596 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.162611193 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.144061781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.159440448 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.145118794 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.157148149 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.145302188 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.162594039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.139413923 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.158795232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146251198 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168618478 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.148231962 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.162811244 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.14753007 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.167990376 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.149050628 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.160669572 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.147637466 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.158013607 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.135380433 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.159128723 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.136579152 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.163492047 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139744369 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.166947696 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.141899883 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160987723 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.146489808 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163804517 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141000903 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.167614337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153731025 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.156926297 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137665472 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165419039 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143485566 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.161246874 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.139918959 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.164578546 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145431825 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.169718314 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.148525754 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.159080427 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.144313898 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.171703083 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.140526197 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.168953859 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.150691598 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.168102337 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.13942139 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.167370531 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.141146542 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166630629 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.137246978 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.16213335 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.14427047 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162476526 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.141039161 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.161795346 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.141039074 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.155565513 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.141407972 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.148612768 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.16366319 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.148218683 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.163550555 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.139949985 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.161262328 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138156548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.170471727 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.140416478 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.170160006 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.144640592 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.158884568 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.143155594 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.176350453 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.15051093 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.176810285 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.146578016 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.176473515 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.160489497 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.176905883 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.154986426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.183326516 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.162342948 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.179181225 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.159094826 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.163546019 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.148301673 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.179198969 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.1507079 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.168558359 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.146931085 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.15836099 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146178575 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.169626688 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.145494943 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.161974128 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.137092842 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.164678308 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.150616991 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.167102199 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.14778142 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.165663076 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14459081 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.159468584 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147629109 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.14863386 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.166583555 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149604904 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165352496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.148440013 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.162965081 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.149379991 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.166896378 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.138783604 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.157551818 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.141244935 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.17149036 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.138573835 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.173264039 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.153293986 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.1628698 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.143589314 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.170754264 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.141356172 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167858068 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149261045 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.162688752 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.153278287 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.16607052 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.142102646 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.169624727 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.150079207 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.158827017 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.143372285 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16267913 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151953814 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.16228707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.150149981 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165275822 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.149700412 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.167970972 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.148877978 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.169315441 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.152632101 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.158408577 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.151409309 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168733893 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.147019009 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.161631993 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142674814 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.159450365 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.144053864 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.171066975 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.143682854 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172515195 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.149444713 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.162498346 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.143135289 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.169780237 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143276226 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.17208956 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.142957989 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.165988495 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.138983498 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.167805167 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.144024052 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.171397423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.142640664 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.138259578 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172074055 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.148568076 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169748168 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.148024987 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.170664425 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.138556708 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.160204884 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.147777921 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.163596936 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154468347 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168984103 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.142707943 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163974912 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.146330741 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.167901203 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151037088 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.160650945 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.142929254 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.167031118 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146995365 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.165145997 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.139300434 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.171009157 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.144035983 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167996413 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.144290057 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.161971876 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.144671867 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.17409776 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.144602317 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.1616991 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.143660722 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173197083 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.14465264 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.163323557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139004777 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17208329 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.147091252 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173076963 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.14186575 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.16571375 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.143346478 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.168993469 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.151869092 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.164440404 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145813909 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.164851409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150830584 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170755405 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.138081032 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.162918406 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.155231389 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.169375823 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.149061357 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.168487915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.144919294 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172860103 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152999611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.168525607 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.140853695 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.161869763 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.144478865 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.160498939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.148379895 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170849633 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.144667223 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.164170523 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151120263 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170506005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.148771888 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.147586541 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.162038309 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152988878 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.163785823 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.14774702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.160747112 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.139980441 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.170046775 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151948912 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166313769 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.145869386 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.168391559 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.148902115 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.16214005 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.143356764 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.171270251 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150612123 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.173461493 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145175343 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.164581548 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.150195146 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.178272612 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146864341 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.16705621 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154288581 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.173820113 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146215148 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.165970239 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150307909 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.174695346 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.149484869 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.1745683 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.145439983 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.167510373 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.154080994 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.173830697 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155181549 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16601436 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.140873412 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.171788157 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.14423508 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.161780326 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.14978331 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.174101933 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.15311453 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.16744784 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.143587644 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176084253 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151219898 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167084927 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.143946107 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.166964506 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.15062436 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164978239 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.149742872 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.163121763 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.154172404 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.173663045 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152844947 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.178202375 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.141579061 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172876133 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.148986758 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.176147354 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.147364238 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.162154416 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.141862618 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.170770468 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.155637014 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.152711977 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.173622557 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.149182 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.171907617 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.147516137 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168310608 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.144308056 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.1750713 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.152626239 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.170016884 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.148126884 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.167398219 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147125026 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.170338922 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.152883943 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.175431847 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.147177532 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.179229512 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.153568056 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.167378307 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.144279358 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.169896096 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.149973822 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.169774607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151846387 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.166342889 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.141849521 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.174230018 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.155538514 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.168013597 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154759433 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.175946989 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.146131231 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.172163483 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155560835 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.172185974 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.14926424 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.169025784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.151644475 seconds)
  done (took 94.054204547 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196880722 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17783321 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.149523705 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170767163 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167357337 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.175346132 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149056694 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173215794 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151137526 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18105276 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.150029738 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170463761 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.164334926 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192765302 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18752063 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160133503 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171691503 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.150806879 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.171934629 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152118386 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.18594009 seconds)
  done (took 4.407025273 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.152041741 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.149154964 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172299024 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149888312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17118561 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.151281488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.171135589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149713258 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.172196953 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149214944 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.17061208 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151054539 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.148419669 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.171730693 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149021341 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172031633 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.149463177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171679068 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149901383 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.171476811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150267658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.17100247 seconds)
  done (took 4.370550542 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.176896931 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.153244824 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.171703449 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.149862617 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175285695 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.150317791 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.176895777 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.15091153 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.182373553 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.146164947 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163933237 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145359943 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170699682 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.150690238 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.167092515 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.152293231 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181330207 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.153609752 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.177718973 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150500069 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.163782045 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.152864525 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150753425 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.164282411 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.156146787 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.177102735 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.153610392 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.176180448 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.141575389 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.176505185 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.150614912 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.16786172 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.141664843 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.164694318 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.141456044 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.176645892 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.153268159 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.172951145 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.152471297 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.142127601 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.176064561 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.154663186 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.165024411 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.150679351 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.174611729 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144458876 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.177331794 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151488192 seconds)
  done (took 8.579094006 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.179992787 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.210912813 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.155219849 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.204399946 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.189683504 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.160968476 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.178311592 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183843677 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.17813498 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.155576064 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.189670428 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.165466208 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.181139474 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158337159 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.179726147 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.155719343 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179941413 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.15358051 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.181767752 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1759519 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.160559591 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.179312504 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166892507 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.18742521 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.15657686 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177292632 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154636921 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.180856906 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.164094962 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.183471746 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.159073113 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.182151582 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.187178003 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.159264266 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17783075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.157340688 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.189268716 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.157041276 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.178475826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.153441587 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.178835684 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159360131 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.178908463 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.168581645 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179523978 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.157933615 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.17897271 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153162863 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.187668854 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156675801 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.184268386 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.187581255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.158961229 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.178646824 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.158777212 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.186539775 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.156759244 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.177769138 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.157526594 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.187465916 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.154475191 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.181017657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165592066 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.180724088 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160805117 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.189903448 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.180200952 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.159183549 seconds)
  done (took 12.692092985 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186655447 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.183319742 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167562608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191492019 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.159132027 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.183406102 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159726682 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.182216831 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158845043 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187345158 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183175706 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.288147419 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162400863 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187411337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159373744 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.184875316 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159543075 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183815109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159793124 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183084258 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.160433987 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.192281014 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.16097256 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.445313294 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194023727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158210835 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182406718 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.160458229 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.193623686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159897253 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.193997058 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159578781 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.183014922 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.18985787 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.172173439 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.182536214 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155759833 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182420313 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.160015174 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.183571882 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.156086171 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191180901 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161053111 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.180623926 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.161009949 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.183594169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.169707255 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.193579869 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187823272 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.164423601 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.184143192 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167440392 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184066568 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.160274735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.190765679 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.197732519 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168484776 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.191983681 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161071832 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.191420254 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.190788424 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.177424209 seconds)
  done (took 12.178330587 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.157716292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.155823964 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.179993778 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154687772 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.178352161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155216281 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.177902084 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156541068 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177681407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157497279 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178650309 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15592953 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177968705 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.157459438 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.178015106 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157960626 seconds)
  done (took 3.546638337 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.173772307 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.195604007 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.253606543 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.158954914 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.179435874 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.163685422 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.178417286 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.158958785 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.155007731 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.185178815 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.159718283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.182516087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.194794972 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158439508 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.179147263 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.161312939 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.154144539 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.184049939 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.15572846 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.256309054 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.185671143 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.157873499 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.181333578 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.158951496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.18351738 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.159445156 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.190572327 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.156651433 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.184044489 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.157123587 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.181173766 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162861173 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.180272663 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.161208434 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.182395283 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.157349733 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.180998981 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.158021792 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.182128601 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155954211 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.18154813 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.158009339 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.180397527 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159240017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.179052004 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157635798 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.17934696 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.162498237 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.181364138 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157886174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.179294131 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.162621757 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.183770224 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.16398517 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1865207 seconds)
  done (took 10.471398586 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.167787112 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180955883 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.170692778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.178143368 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158183095 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.181730007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.159238066 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.159280635 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.183300366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15513071 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.183334572 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.159899993 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.182838591 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159382505 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182436616 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157990158 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.179033757 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158425705 seconds)
  done (took 3.955188204 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157449829 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154799205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.18050825 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154813539 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.180136206 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.15540723 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.179434408 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.156791339 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179128363 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.156713296 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177642919 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156258904 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154886303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179320266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.154595288 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179054976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.155357891 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.179632002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.15537002 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.179327413 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155892429 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.179274807 seconds)
  done (took 4.566074975 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.168606275 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.253367859 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.185600752 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.237322291 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.180103251 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.153085074 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.187231971 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179203288 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.171023733 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.17592443 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.154789241 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.176393595 seconds)
  done (took 3.128590517 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185845294 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.216935176 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159476988 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182365444 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167284266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188692226 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16302899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186462419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168983835 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196486063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185837119 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17117379 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192267818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170233461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189871964 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167048203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18697828 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163080305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182491895 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199837913 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163677362 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193063905 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164155108 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185887718 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163727481 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195038077 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170432771 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197382833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185610423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172366367 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190346178 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163988279 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195048325 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173187172 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183274278 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193025246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16507072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201038671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169356466 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193826775 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.158991412 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190374305 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170352281 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190592559 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192952422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163201956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19141815 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163583452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188324896 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183455841 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191856938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194450809 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169204368 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194948953 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170600634 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208406403 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196457909 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171347827 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192648707 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173504395 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196073974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189960174 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172248534 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198532899 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16794875 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195549142 seconds)
  done (took 12.928600525 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198936123 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.183920376 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165071299 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200176835 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17123129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189244948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163224025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187635908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163401883 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184265753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.230084125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163445992 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195996018 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172440459 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18764073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163202038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.18774353 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195363862 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161185449 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.210103687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163574754 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196014581 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172463174 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195998477 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199433944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167990427 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189778872 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16384721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188891315 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16396142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193954436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163441839 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195037604 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159417685 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195352743 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187730848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164058451 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193406361 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164567347 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194244534 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173174389 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.202869378 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18653515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165980031 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200238771 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166840713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187843345 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162213068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188666092 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161621255 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20020336 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174136308 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197914173 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197085893 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165818912 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188363681 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164605358 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189454884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163892418 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192705974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172458498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18887878 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20842704 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165871609 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188604261 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173356845 seconds)
  done (took 12.934295469 seconds)
done (took 228.901786728 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.304454193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.336032106 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150603489 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.374679504 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.150452574 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.237161758 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.73757278 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.239721816 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.176267782 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.149829157 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.174427265 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.170137882 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.533122562 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.149937056 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.173235131 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.166971333 seconds)
  done (took 32.143868285 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.339454825 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.384308079 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.166055355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.180830072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.156747467 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.181604254 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.153535996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.182966492 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.15557631 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.18631673 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.1551384 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.178316761 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.161357546 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.176120404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.155474026 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.180187096 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.161950918 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.180409224 seconds)
  done (took 4.368559528 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.174990316 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.229503214 seconds)
  done (took 1.337885394 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.187434349 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.275485282 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.380623155 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.22848404 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.177011502 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.198510528 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.205778241 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.193380392 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270173081 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167359152 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.191882995 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.177259047 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.183126239 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.18702781 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172802973 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.178055418 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.183635975 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.195655718 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169075837 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.183520029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.181199644 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.182903426 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.161028126 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.195155436 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.260713259 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167399682 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.185562541 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.156472046 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.183474217 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.172729236 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190744114 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.171252007 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.194610226 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238484634 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.159643363 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.232122519 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.185838017 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.156985876 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.19594702 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.156032027 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.184540679 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.183407955 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.168062415 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.17757375 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.156064404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.183661304 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155327454 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.180754096 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.16554236 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.184140951 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.164077938 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.189221327 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.232279717 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.159129881 seconds)
  done (took 11.247475893 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.994159191 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.2029645 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182531589 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.147596489 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203761038 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170498436 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.018625663 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181913662 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312074343 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.071323613 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.171773592 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.191590767 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301867569 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.339675943 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.368934969 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416703131 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.847048576 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194541332 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188831228 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.225448047 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187120223 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174487321 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197925883 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.504124937 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.156839982 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180775037 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163342873 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.189802614 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.236029996 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.157506972 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184057069 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259567463 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.35609786 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271987192 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157665835 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.183098579 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.156137352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.247595113 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352042958 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280980263 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.250136655 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154455843 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.179913407 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161573297 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.197692337 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.154035048 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243104993 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25190402 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25619274 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.185307762 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164786983 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.190594872 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.162034173 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.238295198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.180837659 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.424644121 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.449100077 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.158085769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187450418 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170285283 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.351490908 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.161373038 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.297579599 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.20601351 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277641437 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181383061 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.864458581 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.249157138 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156304788 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.186697156 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.161385872 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189151319 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.184608227 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.217733846 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.484596343 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187911221 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163329317 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182024643 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289303646 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.157766245 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181827215 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242420976 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159212501 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.188420979 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166187599 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189495457 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.254256384 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.336999008 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165519264 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188888155 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.164417244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193050664 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158870114 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.291399936 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.318492301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.238872924 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.292359843 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163820915 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.245714614 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249435775 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188254075 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252238395 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163104958 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195274449 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161677779 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.311542962 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.195067564 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185806944 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162579226 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.189761245 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224969524 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162747536 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189245126 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.251062096 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.545344799 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.249280274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.155939214 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187493754 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16460293 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242194512 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189556894 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.350132104 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164163367 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.249701534 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190324586 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.154642101 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.190041621 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.24823328 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166283677 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190387196 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187093387 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168681918 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.343264595 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.28382228 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193940378 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311535281 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.260136356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164258615 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.255001514 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.19008201 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250721119 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167879807 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188447726 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.184137425 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.868073115 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.16872251 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.192104031 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164257485 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.264978738 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183136607 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162104981 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182206218 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.156932928 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859106789 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187332441 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.156104632 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186425992 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163196054 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190492153 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16363026 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189794087 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244528603 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308283331 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.193051551 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163407398 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.186272631 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242447894 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.159106618 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.186066003 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158492612 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.18482629 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165737299 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.18944374 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16158376 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252250354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.240456065 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.318882575 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.644632662 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158504063 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185441553 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.305215254 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1848259 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3905011 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190618112 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.302038518 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.247186922 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156345432 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.446779292 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.249512926 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.267307377 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.164454869 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.256719153 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156274093 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190877736 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.244343807 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158221724 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191603362 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.23992124 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167682484 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.192715897 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.329412496 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185205624 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.309060917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.15712102 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252574906 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188124173 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164114551 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.418122726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161084468 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.196107794 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.241760461 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163869676 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185685858 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.950779272 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.159647704 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195435938 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164209734 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.325482916 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246332894 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165751493 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.193221748 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168043638 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.243754857 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290101516 seconds)
  done (took 61.344726994 seconds)
done (took 111.371604775 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317814783 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226380742 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.419588084 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233283662 seconds)
  done (took 2.222109267 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.334264082 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199743982 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.293566485 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.183202245 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.297764726 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157552352 seconds)
  done (took 2.446753881 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.230367765 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226315876 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226641123 seconds)
  done (took 1.669751809 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266753271 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.268493949 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.40887689 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323573179 seconds)
  done (took 2.314362249 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.331520053 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176192871 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.215761837 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.282614918 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.298617484 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269235509 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.183198582 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.234853165 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.215120995 seconds)
  done (took 3.224111893 seconds)
done (took 12.857457579 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.200212604 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.215738736 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.19026226 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.198473965 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.189838138 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.21883708 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.188458836 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.214692488 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.186744398 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.200420703 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.18433026 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.196407942 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.275437384 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.188854179 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.19604783 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.186826371 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.198147592 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.196070349 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.214547013 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.170177259 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.216523947 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.170595348 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.197712795 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.176199032 seconds)
  done (took 5.752279028 seconds)
done (took 6.742369105 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.259611609 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.180101297 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.167751175 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.196029916 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.270079356 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.177791578 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.211736293 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.170350998 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.205445189 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.169403253 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.184057601 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.183009874 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.194574932 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.241126424 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.199335478 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.186217661 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.162411631 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.205611121 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.187120642 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.233214753 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.244402314 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190705906 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.179401213 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.188095303 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.271273724 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162424418 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.195960511 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.170792752 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.210191607 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.169806018 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.195499034 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.161318536 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.210640049 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.186317244 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185627294 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.170962154 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.185831243 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.134402988 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.169607722 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.198356126 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.182411866 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.197021862 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.170814352 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.188789119 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.170224337 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.196112155 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160287598 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.199966552 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.158579108 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.197124397 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163105804 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.212618368 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.168684637 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.185354489 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.159387286 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.188325216 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.179903439 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187600122 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.182810009 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.187391648 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.162222815 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.188819357 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.172814884 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.187615708 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.169035949 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.188686934 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.170161053 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.199497176 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.170683494 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189721544 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161694111 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.195478733 seconds)
done (took 14.560406092 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.167082736 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.228197051 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.273331467 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.2465285 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.218597914 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.205572451 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.175468898 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.210193722 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.174110822 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.204339763 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.197029615 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.221776056 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.277413188 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.17731626 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.207284061 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.172810498 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.199167407 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.168245476 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.276298183 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.214689208 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.185300989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.205734635 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.186265398 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.204853962 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.164235669 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.222647457 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.194308414 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.175842187 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.190215727 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.174550823 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.211821577 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.165357815 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.194663912 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.184029327 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.211271307 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.175444065 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.206289463 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.173577281 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.192269323 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.165057843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.19974928 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.180636911 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.193524437 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.202805172 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.175487456 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.180439136 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.201296076 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.177214298 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.194013574 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.173196063 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.194411556 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.214496603 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.179764392 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.209206034 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.179561672 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.203321097 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.179661298 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.203987083 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.169623928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.20530682 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.166318106 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.197822103 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.167192986 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.212674503 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.168768137 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.206509938 seconds)
  done (took 13.933758842 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.185583085 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.22364952 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.176832593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.20601785 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.170708995 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.187705672 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.16016821 seconds)
  done (took 2.3275973 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.164295617 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.283533214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.282599648 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.282430898 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.276723663 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.289838298 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185976141 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190776548 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.198827676 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.200453472 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.282667003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.311128934 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.173734908 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.207100927 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.283157663 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.162497807 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.284862918 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.267097231 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.177352597 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.282165936 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.20982347 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.19612097 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.203801773 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164233051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.276395055 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.193202551 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.334278368 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.180049029 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202626221 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.177180098 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.206638442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.268106477 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.278069999 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.176374731 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.197761008 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.279408774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.2491574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.207717829 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.292930022 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.167338066 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.276875373 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.206346878 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.17918242 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.207410107 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.178090806 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.267446485 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.211391204 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.179443956 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.206406053 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.287957611 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.17508189 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28039902 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.203524163 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.179171898 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.201139398 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180440149 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.20951678 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.179095122 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.289281065 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.206780247 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.253572981 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.281429966 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.279385412 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.283291593 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215952808 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.282345748 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.243268317 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.206673717 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.281265705 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.179048386 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.283203661 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.206736183 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.175705781 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.274519116 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209462865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.285716416 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.256068547 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206408323 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.204297673 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.169224532 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.17536037 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.194806855 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.276257589 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.17861499 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.205042218 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182787203 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.208066283 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.177542285 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.27588823 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.217042475 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.176930818 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.204303154 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.210317595 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.17891556 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206489898 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.287123653 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.176126914 seconds)
  done (took 22.889466831 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.167942192 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.16398696 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.195630963 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.165099369 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.192529506 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.164997144 seconds)
  done (took 2.100533345 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.201737936 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.207312641 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.187116498 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.207191913 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.22604094 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.288425388 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.296916651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.202472772 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.19683912 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.220870911 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.292538134 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.295599864 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.294391923 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.182014978 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.295072259 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.211701913 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.298447904 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177923013 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.215352501 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.177380597 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.20938284 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.182069687 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.204675542 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.283533247 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.181367903 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.209102025 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.172664772 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.220848103 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.186488572 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.201550564 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.182157469 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.208178185 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.172482498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.202089377 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.29939303 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.170749483 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205526116 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.181801777 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.211713074 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.180028478 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.292848256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208836012 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.184032695 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.213315852 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.201224814 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.172900372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.209007478 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.173458295 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.297860827 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.210129571 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.183281568 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.208750892 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.180873625 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.210906255 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.1720137 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.202047836 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.182554831 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.297574224 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.213187564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.17337751 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.211197328 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.180625369 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.204516783 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.183821687 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.209718846 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.182283294 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.200176939 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.182897496 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205269333 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.181598727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.212024584 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.180771293 seconds)
  done (took 16.317259793 seconds)
done (took 58.57296214 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.626270377 seconds)
  done (took 2.675679438 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.168031142 seconds)
  done (took 2.21870585 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.219640836 seconds)
  done (took 19.303856076 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488249127 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.411546189 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.084363191 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.238015232 seconds)
  done (took 3.277678559 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.145498241 seconds)
  done (took 2.209841696 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.460073154 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.341814501 seconds)
  done (took 1.860053339 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.803856595 seconds)
  done (took 1.872730293 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.790737638 seconds)
  done (took 2.851247652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356633399 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.281425287 seconds)
  done (took 1.711911581 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.679236317 seconds)
  done (took 1.759277556 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.919259669 seconds)
  done (took 14.997576578 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.316717116 seconds)
  done (took 1.393670976 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.357604085 seconds)
  done (took 1.439900221 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.722286995 seconds)
  done (took 4.800787749 seconds)
done (took 63.437496527 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.182108555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.211491986 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.185643878 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.207971154 seconds)
  done (took 1.851319538 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.186867939 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.205410534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.185104757 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.205798453 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.189044221 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.206287984 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.180429153 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.209361151 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.180710955 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.180407816 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.21048052 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.178964788 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.211057858 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.177763331 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.206808235 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.18257277 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.212656638 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.178263748 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.209155606 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.179463129 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.209758754 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.181445907 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.212023602 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.183531359 seconds)
  done (took 5.736327941 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.178038455 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.170275507 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.202550091 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.169272399 seconds)
  done (took 1.805850635 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.192495506 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.221645643 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.193763325 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.216945054 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.196127885 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.220136184 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.178483908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.206189152 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.180639356 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.218671806 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.196473919 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.224496401 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.193277178 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.214219161 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.191843847 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.204540526 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.184342289 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.222501385 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.188790227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.221717054 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.191293386 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.21851878 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.17974111 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.220406613 seconds)
  done (took 5.965482333 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.256084245 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223104564 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.206348552 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.255593874 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.237066791 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.180552614 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.236774113 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.188030506 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.213115644 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.181882457 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.210311104 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.227630701 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.215487367 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.182513328 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.211648693 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.186541012 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.2182197 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.184665352 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.249610923 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.212230859 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.187515258 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.220066477 seconds)
  done (took 5.773532232 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.267281021 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.202725533 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.170369729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.19855688 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.184085306 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.205749568 seconds)
  done (took 2.317451026 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.17214864 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.165918295 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.195127172 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.165847609 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.198180154 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.165868839 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.194764147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.166413227 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.194926671 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.166201351 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.194529504 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.166587901 seconds)
  done (took 3.240594238 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260900191 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214804864 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345496334 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.461247196 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256654266 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249628186 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.3731204 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22339712 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.270144881 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228642127 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273200472 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226493047 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246549992 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277709174 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205601681 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.241565277 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264930244 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272553226 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235545685 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308549611 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248247217 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267663511 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256323357 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241912662 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230640817 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225934381 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.214776956 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190975831 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25862462 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258585658 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267153751 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24068529 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204817068 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280033137 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31891135 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271784391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.358491777 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227070161 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.252213643 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.256791576 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.357191365 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205083192 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285825007 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247111281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191924497 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284747895 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244178388 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.27764388 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.197935733 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238202401 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277211832 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24102083 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.263504013 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22992199 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398422642 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227114421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.205653193 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272162965 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281750735 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298204044 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24201943 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.216762131 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.263753952 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285119638 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311395079 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.20351211 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.255972085 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217795531 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22588308 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.301107194 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27588648 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25312272 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.284132077 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195031789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266483499 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260309259 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247883108 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301194779 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236651911 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.212673197 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212924711 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227884502 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219217483 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.252624825 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214592363 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31371031 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195092074 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.270021259 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269211952 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215325076 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255477798 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254478907 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254384693 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211812261 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.154560566 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237281409 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.250756289 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220754387 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221758398 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243454829 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203427358 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.220491912 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21368427 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.216190905 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263190049 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.189386083 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254807296 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264715794 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.195855246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273811507 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240452943 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.228462549 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260250876 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294187731 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224004927 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197010636 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31633796 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266002977 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.199408227 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265025201 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294376415 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.236240959 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199430653 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261048681 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289320286 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20528954 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294984893 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233543933 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228317948 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.193387557 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26905878 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252841065 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.223582397 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221621708 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.25952675 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27884966 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.191536232 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232313837 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246360646 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227115448 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21602584 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20104988 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228723829 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.204276055 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.24620842 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.200524379 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24775441 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263242626 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260398515 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220156255 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229847187 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269890174 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197357295 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.265606565 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242924097 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.183654285 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.268725556 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296145336 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19132416 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273361839 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.254382797 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27241251 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268710734 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193839424 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277387295 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19029146 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.216241958 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257844022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233766372 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256701175 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.285196405 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26944696 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.259781452 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.259219222 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213252616 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262330209 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.282208251 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249717227 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.203695091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268801832 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263568483 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.184025205 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.217805687 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.191612231 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233414437 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193977259 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233141003 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277542097 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258599156 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266768311 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23267339 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233484578 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.292394053 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.188514989 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255310246 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.271622688 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201806581 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.285726642 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289029683 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277643042 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203595923 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257480613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.215541839 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192218966 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231235875 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.253001404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203755542 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231205563 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207054766 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.289159 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264350037 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243373286 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279609824 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228850879 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.297488345 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.219246405 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.227279492 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262300796 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268004566 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.252413048 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227019013 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.255386052 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259088103 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237237759 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288169828 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266222301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24527781 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288414197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.263988903 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226697068 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209645531 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255992269 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233345682 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22494773 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240174205 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19450198 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244632777 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.230837089 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20647859 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283453064 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241400343 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269413255 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.21896655 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264279724 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2214269 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206346623 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271123769 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239061108 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.16008063 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263416633 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2873169 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213803602 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248140106 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26476033 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194131736 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.412522454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277828046 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26494589 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201700376 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235774438 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238754452 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252515836 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255916183 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27894599 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205502978 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305075367 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269918267 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.233617423 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196726208 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242144585 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212926556 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.225545697 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.248351117 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.228283261 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.239992061 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285569795 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201046068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270288174 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275498601 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.239277812 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.214466553 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234727794 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32755106 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234670973 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269670389 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.262433902 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.25950418 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245856529 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220087901 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189990002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.229766516 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281714306 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194395377 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275984361 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.257905273 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274109254 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271987411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226167198 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238181467 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.222780387 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235120251 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24555719 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27666545 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200186729 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.234591677 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284184986 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.182425167 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228441776 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255489104 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380614238 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213453563 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266917905 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.162000507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.38390655 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225201336 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199981481 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257183415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265908602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.198475105 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.282490138 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241871259 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237571354 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.255426625 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200273468 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273147318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27721977 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26624401 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271605487 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.210291881 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259505355 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254472142 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266643104 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211666024 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.245640372 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224379249 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295424098 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.271895406 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.228067277 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238242646 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268963545 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270123861 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267961958 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205961324 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281153634 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193669493 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264306837 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23539326 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189883979 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258778608 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.260093634 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197311916 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270697144 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270805705 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196753283 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226034421 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245958707 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232853199 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238663108 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.226242743 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250853332 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.228181188 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28240909 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309638992 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195008526 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.265140454 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207058901 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227704632 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235606688 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210617144 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230861722 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.243745239 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274066978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.225902922 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239568821 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264239133 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262766426 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250473732 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20914683 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.364959387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.19378441 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293739771 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250472922 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295113276 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214045177 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27887819 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271299604 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215102429 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263636516 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246147337 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.317804478 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232941687 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.267143956 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229781505 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210477978 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237154213 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.200491568 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248826223 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270183103 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208779048 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.234733836 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.265357582 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212567408 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.244887355 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207884419 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302183827 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249817948 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287801497 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.282617337 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205732842 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277531427 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273183073 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195819768 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.263703374 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271219543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210877106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252917832 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.233108444 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.205257762 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31772392 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.222682543 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227778761 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276301269 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268804112 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240238591 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.234905075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279043001 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206251809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278117963 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22543824 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.217793916 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270835723 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2308475 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.194913888 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273183291 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259183751 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.233598574 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242710434 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.244407505 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2937044 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.221390086 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201622 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3902396 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260355217 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293035322 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.190554078 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23572937 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212983029 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258088896 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.264268274 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240073445 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.228774866 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196254519 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.244699182 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.246114504 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.196949565 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272659844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280363091 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226211428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284434464 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.233762296 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.323397458 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241160001 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271875504 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.175909647 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.226929165 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208945616 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234608589 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210933189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.276528036 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318749979 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.264886052 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.244688094 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203030481 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.225543635 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198081454 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.261565196 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218198881 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269076343 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247123854 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.161039339 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240889664 seconds)
  done (took 119.814067566 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248639053 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.238132418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.252107997 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.309930456 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282920578 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.378156673 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.316454649 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.33125062 seconds)
  done (took 3.571412033 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.187582185 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.234462219 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.23919472 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.185765097 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.209608925 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.525726634 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.234190681 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.187207844 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.261535351 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.220045575 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.181088468 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.638764797 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.220038628 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.214912379 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.218141278 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.177956524 seconds)
  done (took 5.343556424 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.426596151 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.753157233 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.459132535 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.419230979 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.374655237 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.294308071 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.961546757 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.289788455 seconds)
  done (took 14.196834729 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.239439429 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.274504228 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.435070936 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.370992924 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.284257678 seconds)
  done (took 2.82535031 seconds)
done (took 173.509040239 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.193191801 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.192063071 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.226829571 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.225413051 seconds)
  done (took 2.042313921 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.234975306 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.150721449 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.185420561 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.150288881 seconds)
  done (took 1.936282037 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.466650704 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.150035362 seconds)
  done (took 1.859822383 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.213457577 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.234274436 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.204934591 seconds)
  done (took 1.88875775 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.20580769 seconds)
  done (took 1.437020291 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.190212095 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.187672434 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.310148331 seconds)
  done (took 1.919511497 seconds)
done (took 12.306006981 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.211620067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.031561382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.649408503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.20185743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.821656367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.466450233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.572146012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.249220295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.271206471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.212521852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.244868947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.76213924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.556334393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.95075346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.540642903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.948356835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.813369939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.181104395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.217516843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.181952979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.551396804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.179983969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.212639891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.181095875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.81340707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.487856826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211360712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.960144799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.211172323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.189991091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.500489915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18040176 seconds)
  done (took 23.979667226 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.183107788 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.268675894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236676937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.214565061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188505755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.214649234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.191869472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.226657387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.313740357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.180667573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.234100901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.179441652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.218245199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.180968748 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.236495556 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.180545422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.215082788 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182562887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221061439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18307286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.235787185 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180481917 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213883783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.181716776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.212177022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.198339796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213746408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.191872864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.212616507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.190859787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.217807596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182741035 seconds)
  done (took 7.919408578 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.223867813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.280509484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237216314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.252485418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.267422015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.183892632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.30387174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.24939253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.289310046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215257477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.202953044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.213090291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.220711293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.214727786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.206258464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.214230773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.184128393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.214650131 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.219111499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184912418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.233664243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182419376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213699115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183457384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.213041635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.201910554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.212637169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.193185978 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.212652142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191502156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.218704373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183091605 seconds)
  done (took 8.26373417 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.197182928 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.19581902 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.238827112 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.236916804 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.193440392 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.19475048 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.230784933 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.19105586 seconds)
  done (took 2.930144558 seconds)
done (took 44.326614629 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.206253573 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.229560131 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205501007 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.196274864 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.302929336 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.223704603 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.199439383 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.222954639 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.196920791 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.235771747 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.18207155 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.222789469 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.202987461 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.225721542 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.304827409 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.200156814 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.310465129 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.306513694 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.189723943 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.229656961 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.190762742 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.308448433 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.229177395 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.191472246 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.289297124 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.185613436 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.296709558 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.192385734 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.227555754 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.183091344 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.30793997 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.226952202 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.19088009 seconds)
  done (took 8.851057673 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.288909155 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.22825217 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.192397856 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.224916901 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194249354 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.22549165 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.326317797 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.730037248 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.226381322 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.192336674 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.189015152 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.307598248 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.231149682 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.186652506 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.226021304 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170608974 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.327929294 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.191389698 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.216486557 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.155326126 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.219622016 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.192083681 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.339317912 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.186910957 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.226128489 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.191972262 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.226131192 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.196433236 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.225212795 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.194472856 seconds)
  done (took 8.497167892 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.197622497 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.203788988 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.245315574 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.292438439 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.222142225 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.237067532 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208361619 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.237072781 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.213196897 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.220378011 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.201865953 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.255136907 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201047148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.228974489 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.184620079 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.233758831 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.201244823 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.219857526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.192798557 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.237116888 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.204584422 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.236472262 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.207299417 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.229946956 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.183501552 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.227200558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.195662489 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.229405096 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.193461647 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.234287504 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.187569334 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.221727797 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.188176994 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.253135162 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.18685619 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.23294584 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.205144013 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231702619 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.198338175 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.252182376 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.187028949 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.221837911 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.211105617 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.277035804 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.187785206 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.231647247 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.187107504 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.234390639 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.183431885 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238270409 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.260960436 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.186621383 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.239531868 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.186006594 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.216414489 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.19614118 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.185331383 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.222733913 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.200254612 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.220471195 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.205617422 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.227149149 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.197338779 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.220985193 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.197347807 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.21803317 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.185234047 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.223202676 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.21200727 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.227272406 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.22301605 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.219898145 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.198266842 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.233796427 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.197497155 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.231824594 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.185409966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23097794 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.19679182 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.223211676 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.198181937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.223552219 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.187942865 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.236010727 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.206672984 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.234666539 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.19856156 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.229620021 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.188134379 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.220928706 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203286603 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.22077969 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.190611513 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.232965049 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.187815001 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.222776616 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.198096084 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.229503473 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.183605927 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.245386989 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.190534082 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.218890482 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.212328423 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.222389942 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.192560433 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.228647195 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.228259309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.21970226 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.195796124 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.230386942 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.18714021 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.227571246 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.188338977 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.185052549 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.236318808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.202121485 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.227762095 seconds)
  done (took 26.370525967 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.403399508 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.397064418 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.287832037 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.442536301 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.234167868 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.318212217 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.393491083 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.398016645 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.185599413 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.255068936 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.276462307 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.360042429 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.187363223 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.250402451 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.399199065 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.4784068 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.217956788 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.259488101 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.256177746 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.200724738 seconds)
  done (took 7.488785894 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.195813786 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.254689807 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.209877576 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.238076135 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.199049814 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.232916552 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.18850847 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.241501634 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.199204627 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.227631011 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.192117462 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.226544982 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.201555928 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.203329109 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237754796 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.210152817 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.228068502 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.193147957 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.243264587 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.192295988 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.198164889 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.213146937 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.229919907 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.208036159 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.238806084 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.197450252 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.219362739 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.191911865 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.22721061 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.196085676 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.224068702 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.196504774 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.227498793 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.16799308 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.232358085 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.203091204 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.226521388 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.190807442 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.192673231 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.223683061 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.201210087 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.232556321 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.19620575 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.194013317 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.207097322 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.173516706 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.236163789 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.200082001 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.203279741 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.208287848 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.234102538 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.202227629 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.227502118 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.211181406 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.227651847 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.205418107 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.23149147 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.201887536 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.226219718 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.187492427 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.220039029 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.191711024 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.228798487 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.203332802 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.23261936 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.197366021 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.229165775 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.189260543 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.225366571 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.192125579 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.190774898 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.23515469 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.242466446 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.197938165 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.195451971 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.231849521 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.197628713 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.191929195 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.197337633 seconds)
  done (took 18.020799829 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.213257739 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.23255463 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.20618913 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.254381163 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.203009079 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.227731101 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.199134194 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.240780163 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.204063876 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.206273968 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.237119321 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.235066894 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.210619442 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.232498105 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.199475278 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.237274294 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.20122006 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.260079125 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.2012903 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.249866781 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.204880722 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.226912082 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.201878155 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.232907399 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.216436423 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.232361458 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215521825 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.234994565 seconds)
  done (took 7.529978613 seconds)
done (took 78.009716287 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.473022444 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.643749145 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.400569956 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.40047804 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.434751872 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.439547872 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.4076816 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.409154578 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.103080114 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.383290844 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.398728671 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.401235331 seconds)
done (took 31.244601362 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.448950036 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.071828291 seconds)
    (2/2) benchmarking "String"...
    done (took 2.08360673 seconds)
  done (took 5.458956771 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.049514245 seconds)
    (2/2) benchmarking "String"...
    done (took 2.060639453 seconds)
  done (took 5.403403024 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.394472211 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.406798153 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.797782579 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.391207569 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.39289943 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.403144955 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.397164475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.404906794 seconds)
  done (took 17.487919335 seconds)
done (took 34.488646129 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.419961229 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.661634748 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.650152527 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.375301456 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.392180996 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.392295674 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.408939184 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.445785192 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.393185844 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.375419754 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.839003136 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.673007044 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.393583384 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.802780845 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.376396777 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.40982575 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.410237462 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.719653392 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.392302805 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.407994756 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.377202924 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.404236781 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.405949162 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.400205257 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.422452824 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.393309853 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.382967834 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.392553816 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.671554066 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.428107196 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.431849881 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.409599909 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.388951861 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.397396039 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.393560644 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.404398402 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.667846074 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.404221093 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.398012551 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.400332065 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.669179875 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.404508778 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.402161099 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.398954605 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.379444263 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.411447546 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.379624775 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.519073399 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.417419332 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.415831071 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.421124419 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.803294556 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.401227418 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.401174635 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.412039815 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.715937272 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.39537842 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.526916638 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.457067722 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.403449731 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.40330267 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.3943807 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.425915955 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.400244703 seconds)
  done (took 156.773216267 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.393753401 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.400539105 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.400471926 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.41080181 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.394775987 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.402796722 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.395625888 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.397057063 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.400806505 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.431013654 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.396709416 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.396091405 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.401449653 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.351745519 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.408287854 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.419644597 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.401951064 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.399004116 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.406663009 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.396707148 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.41462167 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.398363343 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.404665869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.404564845 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.399060676 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.481711547 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.415595847 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.403493775 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.407329882 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.39631527 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.407600858 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.399367193 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.095136519 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.268069238 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.412263811 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.429021296 seconds)
  done (took 87.444162387 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.395259655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.397290477 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.397426333 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.436015632 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.398181718 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.03140814 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.06433705 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.476306595 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.705285224 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.405685271 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.397446512 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.933700264 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.684686285 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.399035863 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.493890837 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.411072741 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.404811929 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.398660532 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.495753875 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.425849705 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.39956508 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.396662919 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.064506945 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.416116812 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.802448511 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.588334676 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.398715852 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435922784 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.800967834 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.399997877 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.436471701 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.746672995 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.43712148 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399434816 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.788614669 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.593114555 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.515399282 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.402323659 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.436700907 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.399741317 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.689828817 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.40056496 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.40350187 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.401285704 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.082513525 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.401647242 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.033656501 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.398709802 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.420942393 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.401216538 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.40075266 seconds)
    (52/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 1.805077613 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.997355234 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.154657957 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.401008459 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.400640503 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.40384219 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.403038462 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.402117901 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.43890689 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.959085393 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.335293452 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.401135483 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.404726369 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.436831745 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.403650749 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.401724961 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.768716818 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.459636156 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.55542813 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.067787772 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408443795 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.499760383 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.527868916 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.401087688 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.402842965 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.40210329 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.402952323 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.517291627 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.402592364 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.231694113 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.59252902 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.402784501 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.951493733 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.506181848 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.4029754 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.829544461 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.4077308 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.403822344 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.171294142 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.501304517 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.403399814 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.403129945 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.405135201 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.238777011 seconds)
    (96/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 21.964300664 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.403938829 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.072871955 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.737939587 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.403365674 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.314991685 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.410694446 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.3718615 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.032313597 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.0781894 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.404401152 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.520732556 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.593547777 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.406968024 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.40575219 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.956134527 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.405614765 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.46334476 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.412748806 seconds)
  done (took 403.728388307 seconds)
done (took 649.243394543 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.396679745 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.391662359 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.391691525 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.391115587 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.391704455 seconds)
  done (took 13.272628411 seconds)
done (took 14.582262642 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.406822861 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.411293491 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.415198345 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.144680633 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.415099642 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.410499555 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.415041271 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.413441499 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.40954315 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.408392663 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.119872691 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.41519259 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.409340176 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.295155087 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.124676475 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.416332899 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.229008498 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.416241367 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.415964334 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.747884832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.420764349 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.492082379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.695230605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.452906093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.710344171 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.76081821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.420658483 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.57118819 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.45387484 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.429874946 seconds)
  done (took 20.469287674 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.244936312 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.711568824 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.420991685 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.476103285 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.697528362 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.455161098 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.715750935 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.746184763 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.422422344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.580759264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.43275105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.431380653 seconds)
  done (took 20.404318401 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.0939231 seconds)
done (took 91.214620975 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.451640635 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.51979268 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.453133082 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.430333454 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.426545143 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.429207551 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.430270682 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.428571391 seconds)
  done (took 12.88214707 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.426086407 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.426955327 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.427825915 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.426094311 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.425424954 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.427033482 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.426805967 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.429483195 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.428329255 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.426226274 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.427221085 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.427048676 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.425907927 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.426670661 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.425250159 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.427936771 seconds)
  done (took 24.145087057 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.429933581 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.427945041 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.426811648 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.428283813 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.425429644 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.428185437 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.428807304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.427671955 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.426825781 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.429334119 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.428552406 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.429489655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.425349431 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.427842668 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.428547096 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.427715559 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.427631577 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.429050692 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.432701978 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.428116135 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.43082318 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.427550445 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.426509734 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.428058909 seconds)
  done (took 35.5918039 seconds)
done (took 73.932093237 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.412575226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.437588733 seconds)
  done (took 6.163140745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.483945211 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.484387735 seconds)
  done (took 4.282434886 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.430645452 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.429703681 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.430007213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.430017304 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.428614088 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.430884672 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.429973476 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.426479585 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.430869641 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.430017983 seconds)
  done (took 15.611892882 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.430148025 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.42957241 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.430520973 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.430766373 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.430170218 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.429906657 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.430695011 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.429602785 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.428426351 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.428680036 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.430591391 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.430830489 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.431174381 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.429893478 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.429828772 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.428055167 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.431236645 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.429612713 seconds)
  done (took 27.055406899 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.441857122 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.449662006 seconds)
  done (took 4.208552192 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.559187354 seconds)
    (2/7) benchmarking "second"...
    done (took 1.471218066 seconds)
    (3/7) benchmarking "month"...
    done (took 1.537862003 seconds)
    (4/7) benchmarking "year"...
    done (took 1.528242576 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.473508548 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.451056341 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.474027292 seconds)
  done (took 11.812735282 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.423318095 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.717576605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.91790333 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.597494259 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.426767302 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.435654896 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.40087962 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.44682381 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.440490294 seconds)
  done (took 16.124293917 seconds)
done (took 86.572456008 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.415718749 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.490541261 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.434290643 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.434111961 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.770099063 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.471511145 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.418461547 seconds)
done (took 17.751875832 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.402261855 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.421312833 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.404349674 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.440270271 seconds)
  done (took 10.985882729 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.416756006 seconds)
    (2/2) benchmarking "read"...
    done (took 1.749263863 seconds)
  done (took 5.482808547 seconds)
done (took 17.786841305 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.434424784 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.433057216 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.433502932 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.433404791 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.433733175 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.433666778 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.433734753 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.433943933 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.433978445 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.435506764 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.434302514 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.433993612 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.433857969 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.435837784 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.434909627 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.432787927 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.434176934 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.436545883 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.436405571 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.436295488 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.436232561 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.435464341 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.433781948 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.435607744 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.434253739 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.435818191 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.435585097 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.434726307 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.435076304 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.435911659 seconds)
  done (took 44.359544993 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.440112086 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.442843643 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.435026674 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.435961653 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.434554375 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.435372475 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.437838871 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.437037274 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.435477617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.436338622 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.434452818 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.436217545 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.434369902 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.436012575 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.435545164 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.436825685 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.435783028 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.435863237 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.437336169 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.43565339 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.435016521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.438196291 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.436889129 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.438453319 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.437759314 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.434716951 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.438275599 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.436695358 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.43717074 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.439053815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.437723335 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.437566922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.436451564 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.439241846 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.437188374 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.437552683 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.441486085 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.446223162 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.43745411 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.43843938 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.438544549 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.436956947 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.437979428 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.437677154 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.438841443 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.438925419 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.439215744 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.439272445 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.439773585 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.439178677 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.438536526 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.440558813 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.439487391 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.440716954 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.43663507 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.438724664 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.439822281 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.441251907 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.43765401 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.440840803 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.437582509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.439678678 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.438556252 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.439009317 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.441371202 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.441281534 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.439866455 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.440009984 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.44153409 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.441782254 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.441424068 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.44325947 seconds)
  done (took 104.879594489 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.43990425 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.439532735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.442897942 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.440656709 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.439252762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.43992223 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.44090998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.442035758 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.439960823 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.440132038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.441000788 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.442104631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.44077298 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.442202956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.441663616 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.440625799 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.442466885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.443931681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.443410347 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.443866258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.442527328 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.443220684 seconds)
  done (took 33.039239569 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.443941337 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.44349832 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.4421299 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.444701865 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.445674772 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.443984242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.441894597 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.445981292 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.442842935 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.444126602 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.441084858 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.442779976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.445690434 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.442526637 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.444824617 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.444626289 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.442831547 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.447096231 seconds)
  done (took 27.317102608 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.44268239 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.442570964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.442975194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.446658737 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.443683062 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.44374146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.444061136 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.445299582 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.443644682 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.444140344 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.444598025 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.444180015 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.445528409 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.443832686 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.444522615 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.446097599 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.444804086 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.44475658 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.445790746 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.446113382 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.444489035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.4446288 seconds)
  done (took 33.10724687 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.444240449 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.444356202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.44510242 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.444658646 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.445365375 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.446242653 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.447301601 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.445179547 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.445363872 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.444468367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.446601513 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.446322184 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.449401717 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.447039906 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.445540202 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.448375522 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.446286152 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.448082307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.447689168 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.445623583 seconds)
  done (took 30.254278118 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.445747714 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.448521059 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.448519998 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.44752816 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.446211104 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.448755091 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.446284208 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.448944327 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.448479141 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.447362604 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.450863462 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.449143512 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.446456673 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.449093381 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.447718578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.45049804 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.447647526 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.450163145 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.449226716 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.447199634 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.449764167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.449983459 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.449473166 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.448769667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.448322542 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.449206043 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.449409982 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.448071604 seconds)
  done (took 41.888568199 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.466684211 seconds)
    (2/2) benchmarking "in"...
    done (took 1.46713823 seconds)
  done (took 4.266987898 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.450178602 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.449080663 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.449910278 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.450055601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.449972982 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.449852089 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.451019407 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.449283267 seconds)
  done (took 12.934851178 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.444300554 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.45025146 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.451970714 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.451090004 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.453085562 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.442091235 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.450842257 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.452903321 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.443332855 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.444670971 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.449653496 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.448735047 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.444355111 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.445084659 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.443033867 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.449352228 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.45371965 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.453789306 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.451139728 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.451304621 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.454924271 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.446435515 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.449053583 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.455370792 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.444215342 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.457560741 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.453667517 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.457853536 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.446484037 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.450681596 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.44661066 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.45574595 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.452787062 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.453962708 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.452231039 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.452356332 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.455428639 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.452065001 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.452035359 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.458566746 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.452963343 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.452834716 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.447535555 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.450920526 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.450575088 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.456385857 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.454827696 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.453503251 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.446455564 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.450519886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.463590927 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.445626039 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.456881122 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.451465425 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.450837729 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.458392354 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.461605519 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.449383385 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.453457653 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.457941161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.465837936 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.461433685 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.457148537 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.458470364 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.455156471 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.460424472 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.458486695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.462576541 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.457252366 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.454089504 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.455798528 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.470517668 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.467211643 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.460751252 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.456291394 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.456467638 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.450397224 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.460692846 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.457687615 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.459181437 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.460106662 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.458295871 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.454355329 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.4594349 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.451655308 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.460621606 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.45718223 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.456110034 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.449697203 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.461421782 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.467050108 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.458202131 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.449702817 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.453635446 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.458856221 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.458675991 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.449937784 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.454120259 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.463271345 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.461023188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.45873157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.454581025 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.461638125 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.463995879 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.457939429 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.460755185 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.465277974 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.45100163 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.461862175 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.467212277 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.458422693 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.45312845 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.460008746 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.463145716 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.453812125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.460856442 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.465164872 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.456613457 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.465738612 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.461528266 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.459503449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.467368522 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.464577149 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.461795482 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.454377966 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.468584663 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.459943118 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.455437823 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.466653421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.460972224 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.460048706 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.457570258 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.466199963 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.455603068 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.464592118 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.457346486 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.465366519 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.460761847 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.460835941 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.457463788 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.460376109 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.459632363 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.460098715 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.461046199 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.467552089 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.457357634 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.46906813 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.462491632 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.461031863 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.46445978 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.469039508 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.462866463 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.457968543 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.465939373 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.454675861 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.463418489 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.455491128 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.465468744 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.46310819 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.460741648 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.463211809 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.454535557 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.461306744 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.466707708 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.459825501 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.463007615 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.466957737 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.46297171 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.46393763 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.456037397 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.468232207 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.453581031 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.462534497 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.469951203 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.463461987 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.462749613 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.461839689 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.469376434 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.463533279 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.462416318 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.460025983 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.465908609 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.468897649 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.465585614 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.469600042 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.464238304 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.46391806 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.458082981 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.461241566 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.467540764 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.458016871 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.47312094 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.475227202 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.479261171 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.460217701 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.467486117 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.457060175 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.467545691 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.463228335 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.472201819 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.467031855 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.463999791 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.45908282 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.468223087 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.458904432 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.468528786 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.455502497 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.466146538 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.465104496 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.465327417 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.467370528 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.457492767 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.465437297 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.468457106 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.465350182 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.465135435 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.458665407 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.468130792 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.456893217 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.461754484 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.470114549 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.466827726 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.468393446 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.474710703 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.463518207 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.469728979 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.467582732 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.462394376 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.470435563 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.463900878 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.467467023 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.472310013 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.471087882 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.463720797 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.473251173 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.468810487 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.461233817 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.465881645 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.474289831 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.467371408 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.462306396 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.475357351 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.469276265 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.466646206 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.46727742 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.459652868 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.473247014 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.470934318 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.476867913 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.462516471 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.474052928 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.464211106 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.473445301 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.466511508 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.471601533 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.46998605 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.470461442 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.475395286 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.469166127 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.464783301 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.47143529 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.467857967 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.469494534 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.462643162 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.476184216 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.469360051 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.470491732 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.468764328 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.468283111 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.474918734 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.463593717 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.472069989 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.467773136 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.484263718 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.491975002 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.476340217 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.474250533 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.476168169 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.473084908 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.472392428 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.46805212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.468244609 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.469335085 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.469453282 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.466374312 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.47407048 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.468143316 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.476754449 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.470201155 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.47252827 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.47577977 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.471168165 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.465294234 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.475752635 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.473103212 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.472353639 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.465100509 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.47529655 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.470041477 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.474123111 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.473155969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.470347298 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.483025847 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.4743774 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.472990582 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.471883657 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.471463197 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.465505155 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.470035321 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.477504843 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.468675006 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.482562136 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.465290306 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.477557365 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.470338043 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.477795062 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.48211506 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.469917224 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.480082629 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.475313329 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.466763104 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.469519381 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.475746522 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.477964036 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.486143378 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.469983594 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.478383695 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.474177024 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.473334735 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.473729123 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.474690345 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.477721969 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.475893723 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.479679163 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.478086356 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.472978031 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.476264814 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.484454139 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.476342246 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.47546362 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.467609255 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.478662197 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.484523954 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.471726115 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.476670397 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.47069881 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.47851278 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.478038607 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.476616522 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.476623487 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.477922093 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.480454585 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.481810239 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.481338827 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.478216099 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.480813625 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.486879425 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.481891352 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.489182734 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.475032655 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.484256011 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.477986642 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.473447748 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.473862841 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.475075438 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.481884029 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.470043734 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.485964989 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.477325329 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.47592501 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.481535783 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.485391317 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.471276064 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.48064278 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.492897806 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.472710666 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.483478794 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.480488735 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.47364076 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.482441783 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.480631595 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.468907851 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.476876895 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.479893269 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.487412067 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.474672892 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.482709633 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.475107211 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.485185069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.481712104 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.481064786 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.479840798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.479719051 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.47326568 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.484735476 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.481042743 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.488614318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.479040063 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.483504652 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.477806947 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.486891354 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.492083738 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.477223234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.489068699 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.482056844 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.474837375 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.481349959 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.487161112 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.477881072 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.488753736 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.474262971 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.479439753 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.478641873 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.484091683 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.484948757 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.48464577 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.47416932 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.478223323 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.484404749 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.481572456 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.48223847 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.479655656 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.489758547 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.476483733 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.476465317 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.486386671 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.479441665 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.488307386 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.477345934 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.483530598 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.480875172 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.486193058 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.483743442 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.484621528 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.475941774 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.476655689 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.488948243 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.487962087 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.487518578 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.484436084 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.487677372 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.47903862 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.482241938 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.485191295 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.480602112 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.481385706 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.48855735 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.482190211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.481495254 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.482310019 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.486631006 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.487905484 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.488396185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.478259349 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.49212976 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.491350601 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.493871665 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.479127225 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.48195571 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.481986902 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.488927919 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.486561392 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.478826354 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.492534707 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.491319831 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.489600854 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.485882399 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.486619167 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.478358194 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.48937639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.485257976 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.486324375 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.494381659 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.484347842 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.495101332 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.489878882 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.48761873 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.480266158 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.482466831 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.482775349 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.483498142 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.490479582 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.485827225 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.487741963 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.488384989 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.494600195 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.487556757 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.488357244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.485947558 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.481113026 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.489760099 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.478813458 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.489349799 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.486491463 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.481835869 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.49237421 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.490429168 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.484383495 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.488409303 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.494614596 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.489630613 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.48319659 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.48860444 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.49197378 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.496581804 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.489353847 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.483930098 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.487913619 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.493279504 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.488534289 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.489627715 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.484820163 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.501551767 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.499685643 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.485638955 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.486898716 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.493585522 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.496409037 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.490019254 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.488254612 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.486961043 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.488013081 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.498728361 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.490410255 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.494578772 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.493677255 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.487441245 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.495957436 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.485369599 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.488999643 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.491828447 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.499125944 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.494516408 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.486149401 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.502313592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.50079995 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.489770001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.504941396 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.495928867 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.494144633 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.49813329 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.48408627 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.493798938 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.486921631 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.497624887 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.492600191 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.491837059 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.490980526 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.484215306 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.49387133 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.498376552 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.501677175 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.493258715 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.484021092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.486200634 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.496726719 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.49487191 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.49540289 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.491894935 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.4914811 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.495137475 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.488992609 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.506546431 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.508136394 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.499891664 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.494692802 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.494188463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.494647216 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.498593079 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.492435703 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.500055126 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.493909615 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.494423676 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.493165013 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.503715551 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.493798194 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.49098978 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.490400201 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.491005181 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.498551807 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.503751556 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.514301796 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.498641543 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.496713766 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.494804087 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.494766865 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.490228573 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.49647989 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.494800591 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.490360776 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.491179688 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.498850889 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.497404915 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.495866142 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.492336511 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.502533925 seconds)
  done (took 879.543756756 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.498340116 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.495682462 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.49640963 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.496918258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.49762082 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.494416965 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.496413062 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.495992289 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.494829211 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.497816629 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.495591432 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.49836391 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.498353989 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.496732824 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.495244858 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.497051111 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.497583307 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.496348348 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.498608437 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.49656955 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.497650753 seconds)
  done (took 32.804398036 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.497031839 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.497969931 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.497100165 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.498693939 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.498725537 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.496819492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.497959048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.497312946 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.498767542 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.498119942 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.498702882 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.495764204 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.496720183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.498840877 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.498181185 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.498912045 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.498541928 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.498162928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.498822204 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.497068234 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.498117147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.498524544 seconds)
  done (took 34.329322988 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.496532101 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.498945541 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.492146985 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.503653536 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.499551457 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.499194203 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.498849724 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.498300377 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.498973685 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.490088986 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.491872393 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.493673164 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.496649194 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.50611526 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.497060693 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.507329002 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.499597049 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.499568335 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.496273988 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.497035095 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.50293548 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.510104429 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.499379359 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.492568085 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.500056291 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.500316404 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.5013656 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.500741214 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.492617886 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.502540486 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.50044693 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.49369291 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.501033275 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.498271357 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.497145152 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.503121883 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.499918876 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.499919696 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.501982763 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.499958177 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.51205634 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.499181249 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.507026418 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.508991362 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.499826191 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.493512986 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.507590028 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.500601429 seconds)
  done (took 73.362186702 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.500156036 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.504159617 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.499756728 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.500243645 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.502220351 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.502601231 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.50255729 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.5019399 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.502003282 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.503497486 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.503338064 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.501256502 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.502328332 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.503436309 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.502155228 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.504246791 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.502353028 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.502677414 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.502261716 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.503812941 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.502471622 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.503636274 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.503616193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.503796009 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.502138431 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.50183738 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.504069517 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.503133876 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.502653207 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.503924905 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.503699503 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.502036046 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.504549799 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.504705532 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.503180031 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.504611833 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.50478849 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.504009222 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.504264487 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.504319204 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.505548963 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.505617828 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.503003679 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.503267298 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.506668649 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.50478712 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.505676923 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.506903652 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.505890875 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.506808958 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.505313483 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.50697557 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.505220863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.507844246 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.507146338 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.507160188 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.507335833 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.505029509 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.504969312 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.505344903 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.506740119 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.507944053 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.50676183 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.507516355 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.505973925 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.506393775 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.504545836 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.507524932 seconds)
  done (took 103.666309042 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.505344838 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.507780855 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.505838039 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.506144695 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.505646651 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.506262384 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.505245622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.505628036 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.508372479 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.506931241 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.508721397 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.508688739 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.507033451 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.509453176 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.507146173 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.506843116 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.507481355 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.508010541 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.509506273 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.507768488 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.509751329 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.510292374 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.508765372 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.508764518 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.510449752 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.508806872 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.50956391 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.509285107 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.508851592 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.508155676 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.510058929 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.510056429 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.509375244 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.510467343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.510265515 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.508999256 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.509230778 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.511598763 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.50825088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.509850297 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.511154759 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.509932152 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.508041032 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.509119021 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.509982464 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.508848936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.508988213 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.511027148 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.510984856 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.509305486 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.510092396 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.512569071 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.508921258 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.511140183 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.509918877 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.511648602 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.511016966 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.511221603 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.509628885 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.511121297 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.51024266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.511673937 seconds)
  done (took 94.942800999 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.511481108 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.513785156 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.510835346 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.512367328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.511065043 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.512169325 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.5128943 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.510722259 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.510107044 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.511948411 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.513889921 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.514279036 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.511791829 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.512880297 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.513753792 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.515266157 seconds)
  done (took 25.584448656 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.513590926 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.514067446 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.510857544 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.512145942 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.513227858 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.513565005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.512662816 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.513613957 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.512717397 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.514100013 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.512639 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.512663989 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.513080972 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.511675943 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.513360468 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.513377642 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.513880098 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.510749625 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.517063186 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.512143577 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.514886531 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.511728674 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.511972974 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.513953552 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.515628414 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.514107287 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.514307294 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.513238583 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.513651119 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.513642036 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.515188029 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.514830439 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.513154618 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.512999313 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.512040126 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.512738578 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.517199667 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.513518645 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.518068653 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.514015524 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.516780369 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.51554233 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.516390651 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.517007167 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.514015476 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.513237042 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.515869386 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.515023399 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.514543878 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.514890246 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.51575139 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.514066186 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.51447456 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.514662325 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.516050428 seconds)
  done (took 84.658201536 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.512624855 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.518542783 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.515753686 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.514877748 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.515031513 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.514914467 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.518413324 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.517875074 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.517128414 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.516913649 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.517028836 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.517014125 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.516132249 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.516268665 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.516378075 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.51846214 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.515705209 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.517579933 seconds)
  done (took 28.684266774 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.517256335 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.520966899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.518600223 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.519745262 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.518993616 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.519577784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.519999476 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.52169559 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.519867292 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.520699281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.520490175 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.519902118 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.520504788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.521243916 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.51932287 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.51993405 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.520992139 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.521584686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.519707028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.518807149 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.518854681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.522754768 seconds)
  done (took 34.831236134 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.510894352 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.509107863 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.509930991 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.523882142 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.522469743 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.548447194 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.509064646 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.508994892 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.527284915 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.534742107 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.53369687 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.519271863 seconds)
  done (took 19.649325858 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.523273383 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.521024158 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.523512953 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.522293038 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.52185687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.52180571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.520923235 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.520362243 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.520417857 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.52231408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.521159567 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.523131308 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.523302537 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.522045265 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.522811616 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.522082862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.521282644 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.524517075 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.523952814 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.522406225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.524131947 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.522492287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.523289045 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.524921805 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.522433072 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.524436386 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.522586121 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.522722165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.522346966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.524152488 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.525034203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.524532171 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.523008917 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.52522017 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.522547849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.525033983 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.52365981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524601037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.523207873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.524460754 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.525895427 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525603866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524887276 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.524814732 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.524781951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525239629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.526950021 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.525629489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.52430859 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.526600431 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.524528503 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.525791335 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52561741 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.526520974 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.526022111 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.526465363 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.525885218 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.525141161 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.5247886 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.526542345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.526559087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.524274843 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.526090061 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.527208903 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.527650649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.527364495 seconds)
  done (took 101.984584267 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.525690615 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.526943611 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.525949813 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.527132946 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525047702 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.525894106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526860971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.527341556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.522360698 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.525574731 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.526367207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.524536279 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528167276 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.52715046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528699674 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.526662489 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524409514 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.527181593 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528297361 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527159783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527258117 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527530208 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52836676 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.526051315 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528132272 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527425825 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529058827 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528415095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528282494 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527917384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528646542 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.529816687 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529167529 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.528352117 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529846829 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.529874063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527679029 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.52812991 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528972097 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.530718908 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528595056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.529033284 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529189376 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.529738008 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528814305 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528301858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.530154013 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.530741728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.530656121 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.527532128 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.530697744 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.530662623 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529920572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528877383 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.530605575 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528910555 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.530868446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529758114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528993194 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528731535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528208943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.529228306 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.53047254 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529752794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.531814751 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.532448566 seconds)
  done (took 102.268849885 seconds)
done (took 1949.675643389 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.518332939 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.516380906 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.519724683 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.670961555 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.521397458 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.180121402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.092647066 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.521132691 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.521577698 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.519851849 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.519387697 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.514855695 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.852546337 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.521741366 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.52241219 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.515940534 seconds)
  done (took 57.432030392 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.549542251 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.529470536 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.662035046 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.526336307 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.555088115 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.746166401 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.590658598 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.528782916 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.730427814 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.529472965 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.522725849 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.550537505 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.525641056 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.517974338 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.547185834 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.747491648 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.826652054 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.527912594 seconds)
  done (took 33.117003559 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.071944111 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.519798243 seconds)
  done (took 5.993205706 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.548468933 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.526864193 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.532235217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.52659272 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.520341073 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.520354762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.529312497 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.526269726 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.526000724 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.685481021 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.527783554 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.539503094 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.528529723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.529518861 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.534852349 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.57811775 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.658929309 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.536671413 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.536283512 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.533635172 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.5279481 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.703196154 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.579478862 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.536957717 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.677939162 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.53007426 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.543998952 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.542878503 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.679211289 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.538961747 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.528678643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.529625324 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.530833265 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.522419891 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.126646934 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.540803038 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.562087418 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.540096844 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.537814347 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.680652016 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.530544545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.537121739 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.523832959 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.10475858 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.656079114 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.762395968 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.5256279 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.553623921 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.533920058 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.680876601 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.534819079 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.532197481 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.595076418 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.531268402 seconds)
  done (took 96.921938034 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.562789343 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.52256547 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.710102049 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.545927833 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.524074835 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.528103505 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.522990012 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873389556 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.579731667 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.524747884 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.875626127 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.225486345 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.52924983 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.579045335 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.57990237 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.568084291 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.526417431 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.527319568 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.526849383 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.524769812 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.143568351 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.551263206 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.526109198 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.678951558 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.569361039 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.138893188 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.526762969 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.535664125 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.531806862 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.525898217 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.208151966 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.550218655 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.59406514 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.525759464 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.851473554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.990402057 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945349128 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.529025805 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.570065039 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.526775288 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.561394935 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134592306 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968595383 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.5267706 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.52840445 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.139831809 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.528776215 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.536259706 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.538658888 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.80387019 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.529078285 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.529476024 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.528189877 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.535374571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.527460628 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.603815808 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.577241112 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.141807356 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.527740248 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.529182593 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.566640589 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.533519582 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.535603911 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.530487194 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.529673055 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.974480481 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.703817851 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.53314619 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.971198645 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.204457305 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.540771645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.280986336 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.539569747 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.543874739 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.604657479 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.530030432 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.54763949 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14639594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.553687204 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.529378946 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949616152 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.535353512 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.864652622 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.550724782 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.541605274 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.176455478 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.549155312 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.600841005 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.529409576 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.541785068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.532162939 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.53677862 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.864406 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.609488778 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.530582507 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.532952686 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.584969157 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.531269056 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.543729767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.537449476 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.286683277 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.553292834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.531539791 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.546505514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.54557392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.541057356 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.533278022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.534714796 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.821527927 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.533924561 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.552477608 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.534318941 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.53128056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.535210981 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.689985488 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.539331638 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.937832102 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.549948679 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.553126763 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.535319839 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.53457172 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.545109138 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.535417842 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.56139678 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.530517133 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.862688718 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.555232663 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.566245052 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.535529495 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.537583063 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.543703921 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.54567974 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.581242114 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.54018191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.439974382 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.554509469 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.552388429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.53493796 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.54708956 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.537208849 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.554059487 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.539381346 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877337507 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.877171459 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.739835356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.538447135 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.544574417 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.437823382 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.554061801 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.723249442 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.559846474 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.537712137 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.840053073 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.728303717 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.540280646 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.534566502 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.538026863 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.829864296 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.544280083 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884254098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.255580678 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.550492846 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.551192813 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.441206307 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.303250019 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.549685967 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.539186635 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.869499956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.557928089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.53955424 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.536908955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.540697949 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.548508431 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.560751891 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.550780586 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.538341369 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.539289656 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.655371445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.737568897 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.560257764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.540006888 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175361601 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.570884255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.539402208 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.575110741 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.543829227 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.541379005 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.582185675 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.542364783 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.577891016 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.546898863 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.543894343 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.211203345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.56616821 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.541938055 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.741233101 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.386293243 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.554123294 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.54312035 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.552192435 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.587351715 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.207723682 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.6137896 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.943986714 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.560189467 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.589129862 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.548982357 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.585448099 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.205622543 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.567207265 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.553852554 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.367282941 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.557040405 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.231680029 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.54452004 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.545620035 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.311224771 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.554399838 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.542416165 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.560325486 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.554597536 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.873006546 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.55719582 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.597049926 seconds)
  done (took 547.14591953 seconds)
done (took 742.010158965 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.540580788 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.553852075 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.553944229 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.55371223 seconds)
  done (took 11.62570041 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.560424875 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.54984868 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.555351401 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.550838989 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.566399661 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.551004929 seconds)
  done (took 10.761907037 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.548630536 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.55804123 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.554609904 seconds)
  done (took 9.092036684 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.805236177 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.565930152 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.986441336 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.557445289 seconds)
  done (took 10.34237472 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.568923735 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.57091574 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.570878885 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.571048307 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.570309416 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.570471528 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.573133245 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.572387556 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.5697307 seconds)
  done (took 15.563587557 seconds)
done (took 58.80996995 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.626713048 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.634060384 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.583435681 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.598577766 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.679752526 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.634501237 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.631808313 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.635447053 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.635578129 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.586057367 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.634488676 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.582908162 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.637064797 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.759963238 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.585609165 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.630613662 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.57940827 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.729616777 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.640681732 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.592643897 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.655115977 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.586479709 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.590799444 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.548163269 seconds)
  done (took 42.428862187 seconds)
done (took 43.855391197 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.59095022 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.669297306 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.565016404 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.563384524 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.565941225 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.574165648 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.58918236 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.55669194 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.571523749 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.570746642 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.56350933 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.574445386 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.571914886 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.570473785 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.592300605 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.555922559 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.559597605 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.566438144 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.570671241 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.572299906 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.561293619 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.56080266 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.585808409 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.559349694 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.56294871 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.564718672 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.567035145 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.572803543 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.571664222 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.573105193 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.565032924 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.574199688 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.571135561 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.570309112 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.565684828 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.567804642 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.562329216 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.664527524 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.578324388 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.571477873 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.566024641 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.573625157 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.564236496 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.565273424 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.574961549 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.586955183 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.57063517 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.576235691 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.564518347 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.574843528 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.593265636 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.576475195 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.572624404 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.564290851 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.561668728 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.58965829 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.56990312 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.582162929 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.567520983 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.563573946 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.592547808 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.57961673 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.573388289 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.568905152 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.568603914 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.577596451 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.566349012 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.585142964 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.567606082 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.55904683 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.562430854 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.572504839 seconds)
done (took 122.761364413 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.682116861 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.569053708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.717246875 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.574039111 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.729559841 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.696659871 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.578865281 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.576800281 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.575494491 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.373397393 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.56965321 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.563297553 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.561822116 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.569855128 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.68159957 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.572469515 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.566828704 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.265511478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.567464558 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.701498011 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.558357804 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.567123943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.572189109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.367244621 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.558359849 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.556026951 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.703217709 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.571665705 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.264319496 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.556929602 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.555608497 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.268417816 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.703897504 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.589575767 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.583055832 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.582172914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.734604613 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.589422393 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.688722735 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.694848505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.723792069 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.610034592 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.561132217 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.561680813 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.578316752 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.573351517 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.573381616 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.601631159 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.559828758 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.572061681 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.26968073 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.580930422 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.575339048 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.574348669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.575620087 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.608091351 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.577260896 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.575840049 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.705909739 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.576988497 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.690279464 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.373019703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.369590841 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.574490353 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.567244954 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.57656588 seconds)
  done (took 124.083339643 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.633135455 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.6394208 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.691651128 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.579484554 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.616138666 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.691453685 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.579926882 seconds)
  done (took 12.86708145 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.569265678 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.574313591 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.613653739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.611044706 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.57341642 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.739443686 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.569389524 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.578197026 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.576185104 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.6134078 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.575683535 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.57544542 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.581641583 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.562940618 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.611139966 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.589929806 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.690036641 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.569544736 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.577070436 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.715842114 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.576246189 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.586967288 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.617838579 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.57765956 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.578339852 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.573161872 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.322022787 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.575269151 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.57457112 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.578765699 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.574620493 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.632145783 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.578058499 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.565496801 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.574546452 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.679303394 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.575524213 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.5768793 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.577631005 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.566637319 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.574264974 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.576713369 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.57772333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.576802678 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.575683858 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.591586498 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.577226919 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.575034799 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.576756379 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.575785896 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.618963208 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.576864735 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.578384722 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.577411586 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.622378292 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.587388012 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.578171541 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.579084582 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.575786128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.578105195 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.71832222 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.616295192 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.576771041 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.615763953 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.578571057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.577408603 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.578634901 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.577217433 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.656819069 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.57801518 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.615355451 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.578253261 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.749721509 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.592244017 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.579189834 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.571451833 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.57177155 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.579415716 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.566339693 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.575577296 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.578813733 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.569087991 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.577373861 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.576236033 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.575595414 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.727216518 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.678066326 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.57611603 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.586480764 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.576071037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.578520558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.623344178 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.579016796 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.580856862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.621102038 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.690205144 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.621321515 seconds)
  done (took 160.99244736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.58084636 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.583611437 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.573438662 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.597771779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.572827954 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.571474666 seconds)
  done (took 10.923408098 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.572188224 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.583647512 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.582211152 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.582771737 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.581504291 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.58137293 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.580274551 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.570888156 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.582893949 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.582071479 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.581121513 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.585005614 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.583799895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.581339978 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.581724249 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.581966638 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.581741695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.587944637 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.582625947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.584044232 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.568343979 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.580374859 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.583423449 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.574418486 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.585727771 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.583835737 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.596405277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.581174842 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.580293675 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.579940311 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.584884689 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.58270169 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.575512972 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.579976682 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.586222227 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.574269261 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.584569487 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.583447212 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.583195606 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.581292258 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.58444506 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.583483944 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.585117535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.584954503 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.57552879 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.578751053 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.588990225 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.596809331 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.582965551 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.586088235 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.586440885 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.584754504 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.585210961 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.587093883 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.578839943 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.579740452 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.588630112 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.583653051 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.586036333 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.579946354 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.587216709 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.584627894 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.578809714 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.589958588 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.585612043 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.587351886 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.578733702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.588198448 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.58536151 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.584415608 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.586778127 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.585335993 seconds)
  done (took 116.418521515 seconds)
done (took 426.718421421 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.053465309 seconds)
  done (took 4.502459939 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.808252095 seconds)
  done (took 4.259248345 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.011152409 seconds)
  done (took 26.469280753 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.621290663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.583989481 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.598531713 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.575576282 seconds)
  done (took 11.827970881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.211053943 seconds)
  done (took 4.659462869 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.58171354 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.596897447 seconds)
  done (took 6.630029375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.964158921 seconds)
  done (took 4.41251352 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.41835251 seconds)
  done (took 4.876298816 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.594467667 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.588550033 seconds)
  done (took 6.640425704 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.557588926 seconds)
  done (took 4.004861276 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.964552863 seconds)
  done (took 17.416266665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.603378299 seconds)
  done (took 4.05917476 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.625338284 seconds)
  done (took 4.074769277 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.662460921 seconds)
  done (took 7.1106137 seconds)
done (took 112.392265376 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.571932967 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.572981546 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.574264467 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.575209003 seconds)
  done (took 11.742355729 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.650314802 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.651936376 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.663200455 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.642804705 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.646413786 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.656389378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.615693997 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.61452706 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.643720403 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.639378873 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.655772877 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.647744558 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.657036868 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.614515685 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.639552071 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.658900325 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.644119886 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.663643711 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.61601748 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.64747541 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.588678458 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.647389059 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.641426993 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.59054136 seconds)
  done (took 40.787047514 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.095125979 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.650639479 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.73346175 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.628653121 seconds)
  done (took 8.559842864 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.694572169 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.695322084 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.710370625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.744867103 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.794645659 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.709069638 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.616894996 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.611989878 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.59883161 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.694044535 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.766850467 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.69344106 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.910585493 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.593724375 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.907708861 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.589646771 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.589384131 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.694532794 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.742620695 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.776616017 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.591585402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.69506653 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.699968299 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.69764082 seconds)
  done (took 42.274279991 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.598526139 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.609201696 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.590970639 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.607671562 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.59215742 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.593172853 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.593087483 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.599875795 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.592442339 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.592221047 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.592457119 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.608232864 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.593285604 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.593838778 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.600531305 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.595408471 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.596016336 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.601385864 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.601879798 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.594976865 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.595193849 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.601292547 seconds)
  done (took 36.598871794 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.577705002 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.578088031 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.928817105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.831028092 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.57944199 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.593302908 seconds)
  done (took 15.545812251 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.669978212 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.821827348 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.584960376 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.023593973 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.105563148 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.583495887 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.586148581 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.867315604 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.248335144 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.278782316 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.635796656 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.666738098 seconds)
  done (took 23.529174649 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670906368 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.593021038 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.60928275 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66208852 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602624941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.590492542 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.674004794 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17847461 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.600838317 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866057333 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603106533 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672707477 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.837908475 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605616571 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.602424789 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.570334491 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832382367 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196239958 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595726791 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589563763 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624344301 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.608932591 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.589650869 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887801446 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.606405825 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.591970666 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.881189747 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.591653058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937069581 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912242111 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910986781 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.597469301 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866646824 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114233858 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705921834 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849928578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601578044 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.6128501 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.590558718 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.597372511 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.596408053 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.599885341 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908067209 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596909758 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.59141494 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60869302 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182677869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.61164168 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.595123493 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.598384475 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914105986 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687871726 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.60009827 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.5932052 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597300745 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607838013 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.598773884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715818977 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236867523 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595843492 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606529645 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.602454415 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.585686548 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607014064 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331808049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.604102223 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.601936615 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599568004 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596623575 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.594250093 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618820849 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59441232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.612472823 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594528128 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52475657 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602636487 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.622397489 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25852923 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607016155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.60235839 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823285445 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595639712 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594815319 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.595380854 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.594195105 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.502437728 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604544472 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.571128652 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626853421 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175421311 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871939106 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631212732 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623577326 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815751642 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.571757083 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595179189 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.61413294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59888104 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618273744 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.181177756 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605442066 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.604421647 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84617066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.81202357 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611035992 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.585061481 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197951233 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612084634 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.63816446 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.610374207 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868312889 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.324069632 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929778264 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6027253 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632940666 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.600288705 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.572734993 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600680472 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.612644079 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.620709941 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915903545 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.580444965 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599843074 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672157387 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600398318 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.598032242 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598028126 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602120251 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.599835461 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.846538416 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616931426 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934089033 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.611101126 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600904475 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.613687117 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618606068 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.603104734 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.821346389 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601220056 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884352238 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60029229 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59993148 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599864712 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.821387759 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.618586504 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.608862538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94291435 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602604617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608297529 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931350575 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638061114 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712700514 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634519276 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.615790089 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858588498 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.608044735 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.609522787 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601843345 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.604007013 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607974437 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.609203818 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595465615 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322966638 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57556739 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.609036455 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.60322629 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.620038346 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676755957 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611649787 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865038078 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.61331854 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625712042 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.61372102 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.609893262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831508583 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933666848 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.615311189 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781730766 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.190320707 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351710238 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62809696 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.602958699 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.605772917 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.606755849 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.604542783 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603191462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.608365741 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866963205 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95287094 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.617358458 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348625988 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619446504 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.603889337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.617709439 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933056344 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.623825131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606551133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.612798051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626976725 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620549138 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942445891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836789617 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.621296745 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.604022637 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.123464002 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614366189 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.607864049 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6058338 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636454725 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.615044387 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263651398 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954998981 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603758278 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939986271 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.624117334 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.635884045 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.606651006 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610693027 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628550676 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.632311261 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623876265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.871413329 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.621699017 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618246106 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248458667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549945283 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.299045263 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.622145748 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.625434749 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.615611216 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19519598 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616352446 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611253938 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890463934 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19455107 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613791745 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195462902 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.6341705 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.533243948 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936122415 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845604288 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615148308 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.62051759 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945029482 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832286214 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636818092 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.622871581 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613819197 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.585749499 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233206517 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.625334088 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799641641 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195473304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619751811 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.620285167 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.683614996 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.637261263 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11326677 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.617406551 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608563832 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.615822256 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.625321428 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248190561 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.618120621 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609324014 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353625334 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633763379 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.215571314 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626847405 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881392932 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.953177236 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.931118177 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.62464173 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.626650064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.869820181 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943163357 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623582684 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.623680855 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275626871 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.482684351 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.619944573 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612411433 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.603962367 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620278075 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969813465 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.62761525 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.63403456 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621421601 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.612197633 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613369813 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.614184962 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.618590798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580412519 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221980871 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.617444095 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606194175 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.61735014 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626064828 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860015767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.631614928 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330238257 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85317132 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603022922 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650768914 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.623349899 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618107368 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.601365238 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.614138232 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.613702578 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650378622 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843635422 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.614257834 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.590028931 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.700456258 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835202236 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.613811768 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.622089592 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896885196 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.621055626 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.62725925 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571821931 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655613717 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.619507382 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625561576 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.619253704 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647516052 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690472078 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882367151 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.952212445 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951041516 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128007789 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629328243 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628351568 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.631982045 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698262552 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626423496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.628869759 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.622492597 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32770573 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5723956 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357587225 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954437822 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.627187484 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627855543 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616716309 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856637467 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.617341905 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892988469 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617675308 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.61579276 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646724586 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624701825 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637022337 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836696768 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889797901 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618338572 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618113217 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64607875 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.617868462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952409497 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.837747378 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231051413 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293520734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622062774 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.635333332 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221196071 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903259508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620436928 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619267481 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61819564 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.618206862 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.630223038 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.653472449 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.622734835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850744723 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951256902 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16685448 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954637232 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.66216517 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.493438214 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635900185 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878469655 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457325325 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885341635 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355267153 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484549975 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886266035 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694410744 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889667584 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.62998595 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85738156 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.626879546 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.629667817 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620709596 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622705668 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.620724511 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94809185 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353864702 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885217147 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.626965808 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.633070823 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657972973 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.888545477 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.854428666 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55206709 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.842533515 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956729331 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637529457 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.623679832 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349094405 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962723463 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63211116 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.628548421 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899318332 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.632915657 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657889888 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.494797871 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.623015272 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303309223 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.836437882 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644562557 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632493924 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491252973 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356021149 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.638127669 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250204233 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.626813264 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624846039 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90838148 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.632316 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.6377431 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920096042 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.629826342 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.639322675 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904200266 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.349748222 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.528446081 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.636567469 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635297682 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.635765927 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625476886 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705903011 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635336022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.634552755 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.124756338 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.635414157 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625704454 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637826817 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.63926027 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643580864 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.635930295 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626680769 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.630988862 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.625831722 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.620837854 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.64684037 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753687822 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261111454 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626194388 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.241914549 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.95946014 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872822291 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.630127058 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.608837307 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.633826586 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627696492 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623947834 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625653358 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.645791559 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312652328 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.63696245 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.9678033 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64356864 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.838237987 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837466954 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.639051953 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907075471 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648772099 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655669373 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.600668019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625735973 seconds)
  done (took 1103.533292582 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.654642022 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.686585818 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.635912634 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.719334792 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.67267922 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.689130606 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.749371131 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.68385203 seconds)
  done (took 22.981274797 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.626826676 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.637700883 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.629095896 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.63406135 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.624455341 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.195615201 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.633490633 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.639044888 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.647958391 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.629238623 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.632499208 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.366944651 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.635547314 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.622003099 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.632385393 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.636902099 seconds)
  done (took 36.924812438 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.10751914 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.655440439 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.537540592 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.700391783 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.66492607 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.643375433 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.208198311 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.632471553 seconds)
  done (took 30.640869948 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.633459333 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.634775763 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.637538179 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.638523694 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.63437435 seconds)
  done (took 9.672061343 seconds)
done (took 1384.241369151 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.635840469 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.637120408 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.636722212 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.637099463 seconds)
  done (took 8.038555854 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.607427312 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.605005325 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.60647386 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.621006777 seconds)
  done (took 10.933019063 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.072594632 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.326368161 seconds)
  done (took 5.88967267 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.629664459 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.395775198 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.381400063 seconds)
  done (took 8.899391226 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.934750109 seconds)
  done (took 3.42908937 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.048096524 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.123051463 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.641589298 seconds)
  done (took 8.307743528 seconds)
done (took 46.990809705 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.626083668 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.400016994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.792322171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.623310369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.806418919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.79946378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.914700169 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.622882786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.653890342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.648476178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.635354661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.805183121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.904539132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.387782341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.906322792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.387336698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.796685993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.629155632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.636073878 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.638513987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.927003565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.636921019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.637036079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.650703804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.814014633 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.785126395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.62570847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.401759255 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.628130191 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.631867075 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.796431934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.629662533 seconds)
  done (took 91.273767754 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.624216247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.637500268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.65690548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.632477627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.641401511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.634422287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.635348862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.635126741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.637958554 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.63815405 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.634772617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.635584388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.633028669 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.625958073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.624693589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.623565062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.632712101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.635316333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.624841556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.646360132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.628287109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.625304089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.625448888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.635516346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.642268195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.625734713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.64377385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.646353409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.636155107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.641395647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.636163367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.637334508 seconds)
  done (took 85.806233293 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.628112441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.649587089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.636339945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.641445377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.653000062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.637528358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.639342617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.635714623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.635690585 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.637232562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.637916573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.637443987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.640735145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.636677084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.656081734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.627601608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.636234935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.653963921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.63829065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.639473473 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.637565349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.637027567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.637368228 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.659366263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.636703836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.641197458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.643455827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.636326642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.64798155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.641028747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.640577531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.638919879 seconds)
  done (took 85.993475448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.870034174 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.642259467 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.648374164 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.635668094 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.649750429 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.646963793 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.640225004 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.876497873 seconds)
  done (took 17.108813791 seconds)
done (took 281.678020689 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.638329372 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.648621487 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.674851606 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.638878817 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.685279755 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.668197624 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.889708931 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.677427318 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.870056443 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.66452448 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.66731832 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.652941262 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.623027093 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.809778373 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.651277602 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.655467806 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.656318016 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.644585663 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.662789751 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.91017632 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.679483646 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.650564054 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.667812077 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.640007829 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.649564542 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.728037341 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.729456593 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.826538693 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.784649099 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.723172499 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.644637755 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.676884132 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.654851548 seconds)
  done (took 75.546699206 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.638919307 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.649605972 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.646682661 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.648763657 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.649053819 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.650069327 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.640950733 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.64845308 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.649116315 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.647679121 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.650909439 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.649675583 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.651371741 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.650418688 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.650726576 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.632633014 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.638434213 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.648523945 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.641699254 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.630854373 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.649724134 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.649110444 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.648475162 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.646557484 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.651570052 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.652457932 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.650308705 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.654125852 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.649322011 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.650130885 seconds)
  done (took 50.921406218 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.649849057 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.650566046 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.644872451 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.660993264 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.643079911 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.648627106 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.001739082 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.661725161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.646211671 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.646075603 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.639286079 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.65396829 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.699942577 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.655743071 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.647751327 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.653329471 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.649293671 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.643409055 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.651851592 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.670003638 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.013443165 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.665713877 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.999087536 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.672143294 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.650846641 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.646256896 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.649286132 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.638182889 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.650610026 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.64201455 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.62926652 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.004543946 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.650659831 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.656887425 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.635465104 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.665687657 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.653831367 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.655291642 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.664411168 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.648208306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.00003233 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.657466235 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.640746096 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.650910137 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.648872546 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.655463974 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.641809806 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.676952003 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.956052786 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.662712499 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.644305569 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.649916212 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.656125721 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.648239416 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.946415962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.661295934 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.647042335 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.638814073 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.663705817 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.004274992 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.667746817 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.6498912 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.641109031 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.679945753 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.65154083 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.658963824 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.663474619 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.649763746 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.640022467 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.663531175 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.642321228 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.652226798 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.656671066 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.640762613 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.643156985 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.641334291 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.652649393 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.643069887 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.652053596 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.001189463 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.664321855 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.660128014 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.02082849 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.667776249 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.661261397 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.659026743 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.658318145 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.721452222 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.001837378 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.629892006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.664667016 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.665306214 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.020143127 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.66916153 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.65203412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.648849461 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.65947229 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.658206528 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.657508346 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.646193968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.652286405 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.66723555 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.646096635 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.653708687 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.015220649 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.66693174 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.658883771 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.651793259 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.771731849 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.659731982 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.664787723 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.656199494 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.025812341 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.667841582 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.661703242 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.646500864 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.645726292 seconds)
  done (took 238.060613336 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.649321514 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.649107544 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.652798322 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.646061138 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.644569657 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.655836293 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.64851014 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.650541407 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.652120446 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.64850307 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.649837389 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.655993838 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.654828611 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.64704331 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.652792288 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.649048198 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.646661994 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.653652255 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.650996689 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.646478456 seconds)
  done (took 50.516522259 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.662954101 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.375205391 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.331390168 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.673380521 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.663372314 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.652607288 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.723283858 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.664063921 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.663153152 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.038050848 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.88116334 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.674413087 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.660575382 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.662180532 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.32662697 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.653337919 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.024504277 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.345506529 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.664556097 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.349853099 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.641982693 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.662303264 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.654883498 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.351021701 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.036296592 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.018232756 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.728161836 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.368257048 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.667498366 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.666570349 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.391183483 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.675387624 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.657763742 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.385942462 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.718652409 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.682002759 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.665417468 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.726727056 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.728589725 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.043891056 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.363252574 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.025681202 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.676020933 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.857631263 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.665849995 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.641825985 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.361912854 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.665681973 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.642213168 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.6690392 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.673439643 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.35305462 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.668503193 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.356654197 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.677883891 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.666001126 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.396025108 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.370439864 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.356796143 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.884817494 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.655230475 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.026716726 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.675471045 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.407132754 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.674433026 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.66667733 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.667417847 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.877289349 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.383715671 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.036387663 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.047833743 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.044838774 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.670445165 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.74154711 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.669699922 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037062048 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.739941721 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.122825413 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.031175957 seconds)
  done (took 151.827273253 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.969448565 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.768869855 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.108906162 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.309667867 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.233895179 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.813092781 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.793440956 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.934487946 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.675436453 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.779123261 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.44319491 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.764625993 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.468090052 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.736668244 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.778132187 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.795639045 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.136625066 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.654895608 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.381443649 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.419953598 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.673694187 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.783938672 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.471235036 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.076822622 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.656567638 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.465742483 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.659765637 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.252139214 seconds)
  done (took 62.522706142 seconds)
done (took 630.89366607 seconds)
SAVING RESULT...
DONE!
