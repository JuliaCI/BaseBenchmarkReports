cset: moving following pidspec: 13019
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.263382513 seconds)
loading group "string"... done (took 0.644489046 seconds)
loading group "linalg"... done (took 7.743612491 seconds)
loading group "parallel"... done (took 0.156087831 seconds)
loading group "find"... done (took 1.2204982 seconds)
loading group "tuple"... done (took 1.813522418 seconds)
loading group "dates"... done (took 1.272730369 seconds)
loading group "micro"... done (took 0.221263196 seconds)
loading group "io"... done (took 0.927290598 seconds)
loading group "scalar"... done (took 38.435706508 seconds)
loading group "sparse"... done (took 12.127786403 seconds)
loading group "broadcast"... done (took 0.983230239 seconds)
loading group "union"... done (took 13.142011689 seconds)
loading group "simd"... done (took 4.506588253 seconds)
loading group "random"... done (took 9.115825937 seconds)
loading group "problem"... done (took 1.800979172 seconds)
loading group "array"... done (took 20.108732937 seconds)
loading group "misc"... done (took 1.67557548 seconds)
loading group "sort"... done (took 3.14521875 seconds)
loading group "collection"... done (took 17.367241083 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537500059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130264571 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141362746 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128534257 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157124018 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123970455 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131829054 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091834365 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.871101216 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157133761 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120647991 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414640966 seconds)
done (took 5.416605496 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178846621 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090814729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088893084 seconds)
  done (took 1.257907534 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071987596 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131140116 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072604843 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073540503 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073477864 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072633073 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073327792 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072452374 seconds)
  done (took 1.648041861 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077789823 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074335742 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071945913 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07405274 seconds)
  done (took 1.379165063 seconds)
done (took 5.62641564 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.783279453 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217673219 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191088467 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401222575 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137366467 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184015533 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657679953 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32498919 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196559244 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083552928 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116377503 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.355943222 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128978928 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648608708 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083270281 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096873049 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142635238 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430653131 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075193532 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089252245 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094770285 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133890994 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093083028 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081377889 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156569626 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073563505 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14100142 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086007196 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071785491 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21907483 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178396956 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67124476 seconds)
  done (took 10.457687222 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1040129 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104745176 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07713231 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134245847 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104398674 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077494023 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082058328 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075788603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.102153409 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.138452193 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.099027526 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.114189707 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074257738 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077319542 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091241425 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.218140604 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088976383 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090305069 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078460115 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08641363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116824605 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083520014 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085280374 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085929619 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137712778 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188693486 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105292032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.106020174 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074399101 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090200345 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122267732 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13620822 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072033648 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073268202 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133955679 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103102108 seconds)
  done (took 4.849632079 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.9963961 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147387491 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096396293 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14066273 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072658795 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114679332 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.077061367 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119587918 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21779185 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087540079 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.464361051 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.58543749 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.118049027 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118460733 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109428122 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075565377 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076702024 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074750981 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513468463 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109798301 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117455653 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089134397 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079167966 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077497106 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.073948349 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074547017 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071982786 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07638085 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121810189 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081387674 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071382528 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.308553142 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130268851 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076017128 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952953152 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.174338181 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.212313554 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109792879 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178540533 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07188103 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097628994 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147720292 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076282496 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073712859 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167304097 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072733047 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078512205 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073865346 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093035324 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111692989 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128331846 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073316671 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074571028 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179220243 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072977828 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087567296 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.164744064 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161332014 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072414107 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298496228 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099235227 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078253071 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073053608 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.1884067 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127854341 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074810274 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074926998 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076305136 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076835619 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381202311 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074464709 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.052703769 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076511824 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086314823 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077771348 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076512856 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080610031 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081046398 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097007986 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076526825 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082218108 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073420147 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073774017 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074768135 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091985022 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.483199965 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074745093 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076884653 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07334907 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098932286 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103406749 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076268468 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073747238 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107554334 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077024112 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075593357 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071217116 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074643206 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092076531 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079035619 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12148276 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075276413 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100722329 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103967227 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074862747 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10648817 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085085645 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073702354 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.415617929 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072150573 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075768398 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073232393 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075321919 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07391254 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089064848 seconds)
  done (took 22.698095772 seconds)
done (took 40.081792161 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249135634 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077621522 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078241739 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078427966 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077335693 seconds)
  done (took 1.725792951 seconds)
done (took 2.880538926 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127096072 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10641962 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07232116 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105044878 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072044122 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10787752 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109608454 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084653904 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106969319 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072156297 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104741163 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072511805 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072252338 seconds)
  done (took 2.37808346 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088513693 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090672979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077762556 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090836208 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071098445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090708497 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089426175 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096934364 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08937583 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080334113 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071048052 seconds)
  done (took 2.082724422 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087453893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092086349 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077915097 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090602567 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074085009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08983264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08945707 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093022683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089948263 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081903138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071701486 seconds)
  done (took 2.082383636 seconds)
done (took 7.683185066 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082370804 seconds)
  done (took 1.215415324 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.549752467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.128532582 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08501228 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111564748 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199221175 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119475563 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.252548326 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089354825 seconds)
  done (took 8.830165693 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095127765 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076571284 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078300141 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090664539 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077598309 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079615805 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077446886 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079636126 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078195893 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079523646 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076271159 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076600031 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078742258 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078546202 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076566552 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079106775 seconds)
  done (took 2.485146711 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097765854 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098351052 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081377475 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082676778 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080121085 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079592758 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080326948 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.079465754 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.076201804 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079047267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082597249 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080420716 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.077962871 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069122347 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079402076 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082374926 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075754865 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07951717 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080219385 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080704002 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080634835 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068880062 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077443338 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079142678 seconds)
  done (took 3.162254071 seconds)
done (took 16.837675702 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111105142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072937984 seconds)
  done (took 1.324074947 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084720383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087480399 seconds)
  done (took 1.321143629 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085415243 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069799841 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092771156 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081632058 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070684416 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070295518 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090483638 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07053815 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07069738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070971382 seconds)
  done (took 1.922518223 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072325689 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080327715 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074808387 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084979462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077725403 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068715038 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076037597 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072278786 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08029806 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06821719 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075583226 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08815691 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07534032 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089682301 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075885142 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073134609 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075369716 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071963931 seconds)
  done (took 2.531686343 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070239702 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071063258 seconds)
  done (took 1.295818505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071533605 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068518049 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071281921 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071506151 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068639223 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067863618 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068251234 seconds)
  done (took 1.637815259 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391970421 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120313245 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306975944 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077913167 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086950765 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2580486 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071782944 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076742318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077391892 seconds)
  done (took 2.655578956 seconds)
done (took 13.84392296 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086362037 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09256743 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101919337 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386196347 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099057093 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073587007 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119295848 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18742124 seconds)
done (took 2.312272818 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214776389 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.666099772 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410807566 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214740479 seconds)
  done (took 2.450321445 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344959687 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095933327 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067401354 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075603555 seconds)
  done (took 1.748282442 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072086202 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075227079 seconds)
  done (took 1.310904864 seconds)
done (took 6.889866385 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072544796 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.203401484 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073127448 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070580183 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071554736 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06970357 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069360715 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071999162 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069660662 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071655775 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071676491 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071674096 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071872765 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071461708 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070980785 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07339007 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070751729 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071470977 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073000579 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070934833 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074034193 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073588662 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070897674 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070946264 seconds)
  done (took 3.041341084 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088687384 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072041584 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076644723 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075796258 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073981499 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.076264637 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076942333 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072342122 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075639805 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073887096 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073825127 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073553676 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073539737 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073676792 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073915454 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074086359 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075552095 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072645185 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073940944 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073954798 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076184207 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07173046 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073803205 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075957861 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073885632 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073265606 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074022254 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071481231 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075643374 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073607839 seconds)
  done (took 3.413645515 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075859008 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068273549 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069197444 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076648042 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068589922 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069468116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068134998 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069131653 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069387858 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068498428 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069401012 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068954256 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068588163 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069262969 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069383854 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073163925 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085101808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069205246 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068463645 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068952486 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074916538 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068350795 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068399422 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069293726 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068643251 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068211118 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069519764 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068608999 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069692045 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068841996 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072177918 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072745916 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068387525 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076395198 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072657626 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068575328 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072979889 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06803022 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068957826 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068677709 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068159788 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068278848 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068309181 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076164988 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068470716 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069636034 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068774987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069808837 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068939848 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070583782 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068118024 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068615489 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070325243 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069537319 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073536216 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068128646 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069603734 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068512263 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069297399 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068514721 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068258782 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06840014 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071928306 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070545756 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08673175 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077924443 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071049371 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072051754 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070225351 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072064429 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070584411 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084218823 seconds)
  done (took 6.265523614 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093141662 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092713846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071578312 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070434355 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067379225 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069104373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074592049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069557029 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071252539 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088498545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069361172 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071293921 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071248005 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073257194 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069702346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071376471 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077283311 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066999296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070130706 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074812097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070954399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07590753 seconds)
  done (took 2.816716221 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15410269 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075312699 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110399625 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080231917 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075331618 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079983153 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074802986 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074981889 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075383859 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073192692 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073483238 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074951499 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07505978 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073914911 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075205162 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075267661 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077421335 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075391396 seconds)
  done (took 2.653387195 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083744936 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072432357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093747385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072049481 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072476376 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07386203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075714137 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079274295 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.074070003 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071854126 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079602447 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075334911 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076185486 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074127512 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075144892 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072477241 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076129514 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073322734 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081197402 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078215073 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07798955 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081419061 seconds)
  done (took 2.869962908 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085534431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074164316 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087035214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073236589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067699924 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06907224 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075477263 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071292787 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075750397 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073184196 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07148598 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069604117 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07364984 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071596703 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074330804 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071524745 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073899119 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073398364 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075830831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068374588 seconds)
  done (took 2.65594987 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089916788 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072777652 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07293182 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079995475 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072646879 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072742883 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078997725 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072393705 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073325875 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093293732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072649289 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073336913 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079453755 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079428632 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072817555 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078836488 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079159861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079961251 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072948493 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073427419 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093763906 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072553077 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07909653 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072555679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072958052 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073407207 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072687033 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07672812 seconds)
  done (took 3.336553018 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072537443 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072457137 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069707926 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06955658 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06961688 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069379089 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069579968 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069321709 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071874939 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069403052 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.072318557 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071852735 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071699958 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071918689 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073224478 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073370847 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073639335 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071202309 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070567095 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070615881 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072467244 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072718508 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072252478 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070054649 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069963949 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071955204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069270868 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069078799 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071643321 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069346352 seconds)
  done (took 3.317041551 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080059069 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077842604 seconds)
  done (took 1.343816668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067972337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086670932 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068595193 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076853415 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074671944 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072355284 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078009356 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074799004 seconds)
  done (took 1.781248671 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086850182 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08069499 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072098402 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081493464 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079967807 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087848642 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128709061 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071402877 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078340969 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070160987 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084841678 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072970573 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080349588 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07432683 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078735086 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082303419 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070879012 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077979409 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07417651 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070656311 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072964743 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081254637 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076713463 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.0687232 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074615444 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096821447 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084776453 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072587351 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076985122 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081575345 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080693322 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066831876 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.071772997 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070924068 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069439347 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080273731 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085596703 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076814356 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082079022 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073704692 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081617351 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067848981 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077195157 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080417816 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084436765 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071210766 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071192905 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066407719 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070326173 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074142554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066796672 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072863425 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066268748 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079289925 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075612761 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082389658 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070079268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073697387 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07519469 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074882103 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078795824 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074548098 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075529004 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070952921 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082280088 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076785633 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079687056 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066560209 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065884034 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069593011 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081245695 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094862229 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077966882 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071467478 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072043268 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.070349378 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076935713 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073320127 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07850458 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080141249 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072563396 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076731501 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079764123 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072613248 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074468141 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077718961 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069643524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073608566 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070405098 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087464758 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072545335 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069050371 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069765659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081824871 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075293638 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06971686 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069775532 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079360833 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065931353 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071152601 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07166839 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071954125 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079372986 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073351166 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073411961 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078880673 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076765997 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071448667 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073075231 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067244764 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.19588929 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072504054 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082093536 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068870055 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078289981 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.075924589 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074479129 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083319327 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072981467 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073391963 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082376007 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079286445 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070247534 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.069111256 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074907913 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071868959 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074797722 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080439988 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07027541 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066573128 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066549533 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075365646 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071360117 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076231071 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075374686 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076053383 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065952304 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069380058 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07559722 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080488906 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074027439 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075287122 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080307775 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075275984 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07217236 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079800444 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075240154 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072526628 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079180248 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074700896 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068472478 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075287742 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07659435 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071740251 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078172298 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075660592 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076077542 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.07265614 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072167861 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079051189 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072721267 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07291227 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074044832 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07221366 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084273369 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076089268 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06815924 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070844613 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080490186 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072280903 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07222336 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073191031 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076106086 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073409501 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071237542 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072430416 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076177668 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081236141 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076618299 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073856042 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078798255 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086448275 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072580961 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076366565 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072934099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073616605 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073992738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083153506 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080318772 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077316301 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076533222 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070066421 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079343545 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082159015 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07305217 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.07118543 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073760737 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077036979 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.081097676 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077090678 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073739299 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07186652 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075020312 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075699362 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076296402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072607994 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073354225 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.077430532 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071231159 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078422554 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072947043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083312015 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075941131 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067692814 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073221346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070331984 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079140046 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067231763 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071111742 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072701831 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072705503 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071177073 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075323402 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065784658 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.20617982 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081444343 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076047249 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0747427 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074494463 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082380409 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077184287 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07845622 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078182679 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080835604 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084764467 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073061728 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080836245 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084594609 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074084649 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067905041 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079975221 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071463154 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071609416 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071637916 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069171212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075846587 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078892078 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078374554 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065804889 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074874207 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06991488 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071450163 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066802638 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076269769 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.075096125 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073102909 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078999293 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07146886 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071485825 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075950465 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070748736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071585902 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072599115 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076084542 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.072880687 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074324885 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.072888066 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077283344 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072981899 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070968204 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075452299 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072874411 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074307183 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077560975 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070581416 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071987245 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074132116 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071337879 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07250237 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07291842 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071207551 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075172421 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073095679 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072641681 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074370896 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067199898 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080681718 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07133701 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080185717 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074584887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0702403 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078137185 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074400519 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075843607 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07143141 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071701209 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074208212 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072128949 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076123388 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081365265 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072238518 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08531592 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080177635 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074425306 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077153408 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074357785 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075487221 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073307531 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07604702 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073615544 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074688649 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073581111 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077359402 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.075319774 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074773272 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07577344 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073570464 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074960802 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074150261 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067811169 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072115148 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073150623 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072467852 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082034643 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072615678 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073345611 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071465967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073402988 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.071503556 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.069326946 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078249703 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077842967 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070150535 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07719094 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070144347 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07221775 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080947803 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064700069 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068495189 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.197595364 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071656255 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08200517 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07466405 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085411213 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075475346 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074536078 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070384482 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073583226 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072207521 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068342348 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071826268 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077766645 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073897277 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07255976 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072915754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076746583 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073640198 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082532099 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073038593 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075806123 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.073397393 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071656569 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073318996 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073928487 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07726204 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074595886 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072615849 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070803772 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072464583 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074530444 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075488584 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072965819 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076294405 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080947818 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073315005 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077728789 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07646975 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067642267 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077560982 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072510684 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07268764 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073095165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080563748 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07723221 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074313137 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08362667 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072531826 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074795561 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073637442 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070840118 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072406039 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072313567 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072489059 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072210508 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072185051 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079796642 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069234563 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074665719 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072165671 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072882948 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07815309 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071576403 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074702172 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076652896 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072775199 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073847941 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080009096 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074463496 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075439008 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071699514 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073296226 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077720752 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071459904 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078565486 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072972758 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071553152 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073768724 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070138491 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07103272 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07087359 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070462157 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077472913 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072100012 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07355508 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073211335 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071504809 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075385547 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075875678 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081932293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07642782 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077163679 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068553619 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071437636 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074772377 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.073318738 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.076044601 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077246227 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079810042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076204811 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074506143 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072472419 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082542657 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079808333 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.078068058 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071304141 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075583539 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071020708 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07374228 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072825076 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072036765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071428133 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074293013 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07256525 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070220117 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076703138 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074267932 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200975866 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075321844 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074960037 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074700828 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068726888 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074948964 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076740184 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079805285 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077623942 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073589484 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085161777 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072783508 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074833605 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076450532 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072101996 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076846561 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.067114116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074196036 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072783649 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072347635 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068601276 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074248279 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072659248 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077140145 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073416488 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068850687 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085671531 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083904221 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077386341 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072581904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072401303 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068582416 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068432048 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073652355 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07419397 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076156811 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085541019 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07387973 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073706321 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06859151 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073385575 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076375543 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075586928 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068661269 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067153012 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.072384451 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075438327 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078153027 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070390448 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070440304 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075122555 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074146894 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069467533 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07424836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068629521 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075964851 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083965263 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071510183 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073760918 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078234177 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07994224 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072077048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.067158258 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071641568 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074960419 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073692322 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072271501 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072349623 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086269652 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075449576 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072046242 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070190705 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077331949 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.072884587 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081173138 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073012171 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071871344 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077733813 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07431237 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07889825 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076040411 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078890543 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075251782 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075003543 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070596332 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073073228 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071602505 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073067177 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073282649 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07271489 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075510617 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078210882 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071637776 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082378995 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081248749 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073970792 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068485738 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071268989 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071187657 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066291246 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071151341 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069456007 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069427559 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068994676 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070071551 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073418558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075763921 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072641182 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070992547 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069769129 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065050698 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074163855 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073016328 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072438772 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067277537 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069810496 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.200614662 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07769029 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074556266 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071317696 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074775138 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074419109 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074448543 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067175682 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079972913 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07087108 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074575897 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071601334 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071597921 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07261302 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075514874 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075953168 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072684784 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074304622 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075785651 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073046114 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06936298 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069287474 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077390187 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070552614 seconds)
  done (took 46.322476724 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104721982 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069058981 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067197236 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067331553 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076872049 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068127102 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067170627 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068094198 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067893848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070124494 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066861879 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067049213 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074673616 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082080663 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077546726 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071866374 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067026658 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068896079 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067085225 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068225773 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074869232 seconds)
  done (took 2.78084455 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078015844 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082622119 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079673512 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087315822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075771598 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075134542 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080066921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074395947 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083463615 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077587893 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082458319 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075232253 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077958662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077455077 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077365404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074682988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082910115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076039673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074754127 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079948546 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074826194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080078629 seconds)
  done (took 2.987057547 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071470606 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.07095972 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074032454 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066535743 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070828252 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066016264 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074408892 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068904665 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07339759 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070941924 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.071505503 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.071077527 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082219268 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066334941 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071989562 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068946761 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111908198 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073661742 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070712596 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071695041 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066753951 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073450879 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066108402 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066522219 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070608014 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073325688 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071689634 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069230652 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070333618 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070381692 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070565077 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069040272 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072975843 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07235404 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070571191 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070742549 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072910001 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07126506 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066962102 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06913886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072090935 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067986264 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071090401 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088392479 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069061105 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068753457 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073393867 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070624771 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06631978 seconds)
  done (took 4.782203592 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082018967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112548706 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072617145 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093092333 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083482457 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076630873 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075429625 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093853947 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068020766 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069285672 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085669237 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082737797 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070143694 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074244462 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076830126 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070354151 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070867282 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069040774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073066307 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069726051 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073610008 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076646142 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083748548 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083054073 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0747417 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069740192 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06985568 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074048566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081636033 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074139106 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074159191 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07536649 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084253168 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075235751 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069797155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072546233 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085619271 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070414407 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072572364 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068027219 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073302725 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074409551 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077280145 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085650348 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070476262 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075181899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070517763 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067759379 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081749416 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073029202 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077339185 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083854377 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074211138 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070399379 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07468128 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084480781 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070237911 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068654152 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073038416 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081443732 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06862179 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073618649 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083210464 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072261564 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076481736 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083397749 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075135926 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073679806 seconds)
  done (took 6.590421517 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08006446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100929915 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087445025 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087585389 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080228394 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080600407 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080554556 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08039511 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0801339 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084371457 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080460327 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120031607 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085088224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082438376 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08069608 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081658638 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081930908 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083043111 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082099661 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082124971 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083191989 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089250536 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082821319 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089359625 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08667604 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07914582 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082702464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08309513 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08975793 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08253086 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086248301 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.081666873 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080391499 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086932738 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083141889 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0802926 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069821816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079938941 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080444087 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079863014 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075822527 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087313472 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080007795 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076176193 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080258089 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080287932 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087151661 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083558282 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083106293 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084413104 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080477051 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087262488 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080188181 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08092159 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088297647 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090650119 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087431692 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089914564 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082895091 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089656531 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090010083 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092167602 seconds)
  done (took 6.519532865 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086112352 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07836627 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088489098 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066819257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069094435 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077223554 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069696308 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069372471 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077984596 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077908352 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080063819 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077018425 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079613799 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079632129 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076805004 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079597382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077320947 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077155486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077786239 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076678507 seconds)
  done (took 2.846724877 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080236404 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088198028 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072435872 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076848191 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074437936 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076337834 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073590069 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074443207 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072306884 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074128827 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080662981 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080273806 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072520121 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076742566 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080629557 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07670071 seconds)
  done (took 2.520827356 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087755839 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077163634 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083386574 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071663964 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072917207 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068769583 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071363694 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067187993 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067844723 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083490788 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070681941 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082020077 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070872052 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069463883 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067500058 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076454839 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06718908 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068245175 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070837783 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082566414 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076817174 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071085887 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076608568 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072920409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075702519 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077348777 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071794901 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07433155 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069973974 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072954272 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076075564 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077289141 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069905619 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070605709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071945825 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06963212 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072556597 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072840022 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077999253 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072985257 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071145786 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.074685368 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072132038 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072690328 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067348156 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071950859 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067455549 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074308076 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069742557 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073761039 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070790607 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073635567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071451628 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07811591 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07347407 seconds)
  done (took 5.324464607 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085058876 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075059987 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067837035 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070905831 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07633758 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074464826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076465863 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074330577 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075013004 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071232365 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073122099 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074638048 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072969619 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075051209 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073341273 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074646605 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066758755 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072649767 seconds)
  done (took 2.63361997 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077004861 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071860352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078832051 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071348359 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070902196 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073617805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067532338 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069831885 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069879933 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071799766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071564454 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074113123 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06970793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074177519 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071760024 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071561418 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074174899 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069763297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073161023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06909709 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076138172 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071626274 seconds)
  done (took 2.884779962 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099669135 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.091838923 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.148449892 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.087158144 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.094523336 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.080677969 seconds)
  done (took 1.900277687 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097552604 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106227348 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073296247 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077630465 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083211896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077669708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077409354 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078039567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085014113 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081723656 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078704342 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083191268 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082666099 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082283684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080296405 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080926934 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075730411 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07580904 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073158842 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089368561 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077094305 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084573293 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077945127 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077737046 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077904395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084565358 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085612757 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082790617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077749266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085388588 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082878924 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078154535 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085654142 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082969723 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077528199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085343972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077806004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090152529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08189519 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082358015 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074576968 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080617386 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083308159 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079494495 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083286321 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075679607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079926519 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075579668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076242795 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089267809 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081151035 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082062769 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080607821 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083558877 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082848123 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090058469 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082262481 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083840343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083581747 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082703336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084342547 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083053004 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084818093 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083365876 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08293104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083536777 seconds)
  done (took 6.71118291 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109937347 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073426756 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07881071 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083436395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084659769 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077956609 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077965589 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076611388 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076277151 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074080304 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114316837 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076070157 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08279003 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082677781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076695304 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077918774 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078091081 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08481114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074675296 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092283367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077829201 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084681498 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084939404 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083645549 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081453077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081344453 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075810292 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075824167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076122982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076020268 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079836638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075867449 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08265895 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072899629 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083691456 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077949647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077800063 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082238166 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077037064 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081437072 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083596119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088275185 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075845378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075779969 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08069981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07574299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07590008 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072976147 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076548875 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073792121 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081721592 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083404031 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08188455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08348062 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078221607 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078311035 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077810501 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07756219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07791441 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08316441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084720787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077816427 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091740952 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077647009 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077843352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084767181 seconds)
  done (took 6.639894107 seconds)
done (took 136.103973802 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199729082 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17562865 seconds)
  done (took 1.664405372 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074699794 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10204613 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085098473 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137835725 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072412046 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107482254 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104891972 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082613147 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073171875 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074398491 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074236237 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076700252 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140187899 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07251724 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072191024 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074337051 seconds)
  done (took 2.732482102 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103077438 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163818367 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109938482 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072852643 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105830847 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080393475 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.075811964 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082406412 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077301617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072083587 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079348522 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077561195 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072808397 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076919139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076087921 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077591166 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071003189 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077284055 seconds)
  done (took 2.861985889 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102176908 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095353843 seconds)
  done (took 1.505775281 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163711667 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138265641 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207772924 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344684848 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161636973 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147609916 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148593171 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147728692 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118015979 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141809653 seconds)
  done (took 3.026381584 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105652871 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155827194 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.283917299 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124403794 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080657758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.0973532 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123508256 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084583799 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084909465 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084283158 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084568671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081576207 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104992199 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078487767 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080962452 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081578865 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107625235 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079511603 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080394196 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080314119 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106083038 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072572429 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079509794 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079660609 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081457449 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081976221 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071894671 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072095673 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080886083 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080515319 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081454177 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09488603 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081386325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106836332 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07705295 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107533349 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081467078 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07823161 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080511467 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078096686 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082887552 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082733849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079762583 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081392755 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071740729 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081444565 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071858707 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071875035 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082119607 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072788223 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082627258 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081348613 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106629881 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072675418 seconds)
  done (took 6.213718834 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112469558 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111091319 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076326208 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117325409 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110353601 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0751421 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110283145 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103475635 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112755923 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075792134 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074114067 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075876686 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084355317 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08564699 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.12209078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113027699 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078066003 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074862565 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1126877 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112676932 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074429752 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106484695 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102238674 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111480965 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073301676 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075275617 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073831648 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075434411 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080728952 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08260205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07410827 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083444379 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08768408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081406138 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073155138 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075045533 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075919842 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084586777 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083194616 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084404597 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081859787 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073269879 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074452263 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074827375 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074581967 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073096691 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082006762 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083186472 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082385021 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073672335 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075518948 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073925524 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074359076 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082962452 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081176783 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083557105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083682162 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074166599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0740068 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076751944 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083419966 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083607303 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082985333 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076994847 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083664821 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074634408 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084951013 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086933623 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074168178 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075732075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073612783 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0737614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074625811 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081153618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081575467 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074992178 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073727266 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073871697 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083084897 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081850561 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074280658 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080620578 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072930492 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073369003 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075010733 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074975771 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080194832 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082120941 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074780108 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073367401 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073201366 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072497637 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071872621 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078821799 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080684192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080669208 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079880692 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073585858 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080462345 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079406427 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.206482722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08354859 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075564518 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076515181 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076095613 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08267764 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082089632 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083793987 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074361671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074384491 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081683462 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084209839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074018422 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081074377 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084482212 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08267457 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074899098 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084915003 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074507448 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083038996 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074421367 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083531472 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074752772 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082827418 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074044707 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072541248 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074092854 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082910272 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074818927 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073541058 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075384026 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075350273 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081474654 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085138985 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075653111 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082230374 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081341486 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075582512 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081732004 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074235874 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082841942 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073717215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075445784 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072925165 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084950559 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074193204 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073502041 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07373699 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083659438 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074285326 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08368481 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080986463 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073379393 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085115865 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083518184 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080778831 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083495262 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074852132 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073646427 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073875655 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073679142 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080868172 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082445972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075521263 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073798358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081029042 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083078811 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073306528 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081522902 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082048044 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0818993 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074067312 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073889231 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084492518 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08366781 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081165485 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081787876 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082188149 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074082127 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081203465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081516172 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074064791 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087804804 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074313265 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085930701 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082196119 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08032729 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081430179 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083367615 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082480727 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082935795 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084964325 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072281721 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072894485 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080701427 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072337099 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072533425 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080475433 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075702559 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07595834 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087977186 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07307827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216478017 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073887895 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085556605 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074196508 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077855576 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088577783 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075425992 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080156975 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084515185 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074837596 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082154202 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084114116 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082426526 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074079834 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07607598 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083007937 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083065655 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074408813 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073674676 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075474731 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081375769 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081037669 seconds)
  done (took 19.651434997 seconds)
done (took 38.981787723 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.199142932 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150961881 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.162259921 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11760122 seconds)
  done (took 2.02786086 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115533385 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103012323 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093982517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072702511 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103978522 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072190054 seconds)
  done (took 1.906068548 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280109881 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19480292 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178368577 seconds)
  done (took 1.996265975 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203136038 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191565907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.433929832 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267131846 seconds)
  done (took 2.536386678 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142742858 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092803562 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074419725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090571927 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134376918 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161229415 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100404204 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125934696 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083716186 seconds)
  done (took 2.398410055 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149528065 seconds)
done (took 12.360755609 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096086357 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.216760897 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.151889075 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163254284 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.079640579 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22504947 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074938601 seconds)
    (8/309) benchmarking ("sort", Float32, false)...
    done (took 0.138429754 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135658168 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083110261 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090413656 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109941061 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.084143458 seconds)
    (14/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219378394 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096906224 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.248094461 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.220837634 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.182452731 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077552948 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081646594 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081757797 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.342789699 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07906315 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081377076 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077351346 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.080228154 seconds)
    (27/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08506579 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.104966838 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08171694 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199494858 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.249814708 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185921167 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19960502 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090263717 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.207106167 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.21899388 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084232369 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076926919 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09959088 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08821829 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.231818747 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097829447 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107237467 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080618317 seconds)
    (45/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074408081 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105412329 seconds)
    (47/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073575315 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.144853602 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193439908 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072081042 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094239859 seconds)
    (52/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.210442557 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085774218 seconds)
    (54/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084122176 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194466831 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.151805728 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083463849 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119562937 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.122922794 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.071956891 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08412702 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202381384 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160208159 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087113034 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094389855 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070742004 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091986671 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070377658 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079080921 seconds)
    (70/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058040558 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088199011 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.196873633 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084005737 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077740434 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069366283 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073236614 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081117179 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06868333 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100302444 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07102173 seconds)
    (81/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084731098 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092638403 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.225134984 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.086466365 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.086774501 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084207762 seconds)
    (87/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062851191 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156649857 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.167772144 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074715505 seconds)
    (91/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.115857767 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076634218 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.111726574 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075448836 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077220429 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185405236 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127586893 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080848418 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160385916 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150027207 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125593567 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.157591271 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060196689 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166251216 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.222855765 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098986704 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08711063 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079748047 seconds)
    (109/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080050913 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100442352 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061808563 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.061701739 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.108994889 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203223188 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.082052785 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119553097 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079875563 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162174321 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082225349 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164304412 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.088772594 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.099981163 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096045294 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.073611519 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060015263 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083855255 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091544024 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080923563 seconds)
    (129/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.115169452 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.130501986 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.082202011 seconds)
    (132/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070400106 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.059408637 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.111554473 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081935161 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080617337 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09742565 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.19093982 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099317411 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095999608 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14747224 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.075172758 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093835715 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082383087 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07174051 seconds)
    (146/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077764706 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155767454 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071559401 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058097235 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085376271 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0799942 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183634159 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078249842 seconds)
    (154/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078157345 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 0.150646776 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181047646 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.207274624 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079741552 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082789154 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080480105 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173622208 seconds)
    (162/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058931487 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078573001 seconds)
    (164/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107988336 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057088805 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.056958867 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175427189 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082925628 seconds)
    (169/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056830002 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069005959 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074566906 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0716059 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075747119 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.108220989 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056902174 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095841467 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124601405 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056931829 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10069342 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149022173 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.195668035 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.284527696 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164016167 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.061202319 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097570282 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.096748174 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.084349224 seconds)
    (188/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.12319894 seconds)
    (189/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061974537 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100072608 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.061048387 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073655567 seconds)
    (193/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100053715 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073713311 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.058798883 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.080371901 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.058755996 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059910001 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.083347963 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072964383 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058527572 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.059594866 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.072048572 seconds)
    (204/309) benchmarking ("sort", Float64, false)...
    done (took 0.137813735 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081836499 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072771737 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.073504175 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062986306 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.080390469 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080768732 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058776536 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059485284 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.0701434 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134861277 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069294551 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19641455 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107051239 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073347072 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081006022 seconds)
    (220/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.088745844 seconds)
    (221/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.112577474 seconds)
    (222/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063811479 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100205897 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.179556459 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069709292 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.071110027 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080931978 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082669749 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149204912 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061115738 seconds)
    (231/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.072281062 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073536393 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076539365 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079529752 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077428345 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087241241 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.11037885 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057531597 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058295164 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077511324 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079320647 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057767062 seconds)
    (243/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057752763 seconds)
    (244/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06917984 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071524668 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094803666 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.108145983 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059113515 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.074904199 seconds)
    (250/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078067242 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118832308 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1266936 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.071669178 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146312255 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.072170833 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079001436 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08174944 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170341408 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072056092 seconds)
    (260/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061042375 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122725619 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.060490592 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18375119 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059682901 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073205223 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10607151 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058617023 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071094285 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071516955 seconds)
    (270/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057115394 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109255911 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073234328 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080130977 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081689512 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095174833 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072406918 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073970566 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077206886 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059929794 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078852084 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071909473 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079106524 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070756758 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057358527 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07349748 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05727689 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057411141 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070505611 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070092803 seconds)
    (290/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092116286 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058268401 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077698823 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05686043 seconds)
    (294/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066774803 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151480128 seconds)
    (296/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059771803 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069767166 seconds)
    (298/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056916966 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078153965 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070586946 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077341446 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079302987 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07666153 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059065567 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091928001 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070524064 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.230167052 seconds)
    (308/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.073593329 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.074752982 seconds)
  done (took 33.135536655 seconds)
done (took 34.493046875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088162212 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097987567 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08137768 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099249908 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088145631 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.085229161 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079065552 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083589 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086441225 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087398173 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084496789 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061934257 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080217952 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080039216 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080637124 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096148716 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085483809 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079194254 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079461403 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070373279 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079584662 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071783483 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073752782 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061460819 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08457842 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078048887 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080796594 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.08080767 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07296241 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073851608 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07828585 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.082596204 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073936516 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.088409614 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.082293443 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082361314 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.084113856 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085758793 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.0755355 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073409168 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083124756 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073088566 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079988118 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079883962 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078498622 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077202829 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079785918 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083148753 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095878681 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073756342 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080901353 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082377836 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083159656 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07870182 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076113939 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079746688 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077168364 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096306507 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07974521 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074418443 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08082745 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.08015715 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077243653 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079292782 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079674928 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081489054 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083522991 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07760206 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081222021 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077652285 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071545415 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07936318 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075970186 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074202241 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082574661 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084172474 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070393928 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077645309 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07934313 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080033507 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071035813 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073677113 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073588121 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078085395 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073579248 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061779264 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075568195 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078497031 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070474701 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080131227 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.079054774 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079364453 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073000516 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083187407 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071149795 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076822577 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071421267 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071434266 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07323142 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076411158 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071028043 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073775305 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082094892 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072555039 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079322978 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085648778 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071972069 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079431922 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.071797863 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.073170451 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087277837 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083255603 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.072717293 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075615906 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072113134 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080547007 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071610422 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071652741 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072542184 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.073189491 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079075511 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072360637 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074578155 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0791763 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.224803752 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074409266 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.079143205 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.077473276 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.075048107 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.081018218 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.074116292 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074851555 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075557039 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07090586 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075874841 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073520248 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081418327 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075538337 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081232997 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074155092 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081077861 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077159654 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077832666 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077636325 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070589948 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067729059 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073802275 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074338562 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073097244 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071285411 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072778675 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071472556 seconds)
done (took 13.435311574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072450487 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137977474 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097753861 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098354764 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088998553 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072369116 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080011017 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099776214 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073205585 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102715108 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092882048 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091528599 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115106084 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070714552 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.072744983 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076175887 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073532392 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085117227 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100966441 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091926055 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116401095 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070997421 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095495206 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092752208 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091027058 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097822823 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073395627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076464034 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.076904528 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106288755 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093404575 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075791768 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072552721 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100113498 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096353569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088851168 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.073020898 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08648675 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07381175 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072103271 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073183263 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100442511 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084649212 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084785328 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076342908 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082267188 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072871901 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086805321 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092357834 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082846274 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088985701 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102591493 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074720297 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087939308 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.07047671 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089155245 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080841478 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07378727 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072046306 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079151206 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.07225344 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075077176 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084738793 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084166956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075781172 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087732711 seconds)
  done (took 7.06778198 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089748208 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101794492 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088800877 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088714244 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071813272 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072340441 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072433668 seconds)
  done (took 2.033510919 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072300726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091942429 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093532902 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094336441 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08806915 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098259811 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083447394 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074475355 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098569895 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073611892 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092466295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104144304 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075191738 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085739605 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094749089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072808525 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095205567 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072353524 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074729769 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09431627 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077973255 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101361482 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079421999 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073170246 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086256666 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072876801 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118894531 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077714083 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075068497 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075774161 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073653147 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111605204 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086362738 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080325984 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073041509 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087367082 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086948612 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077267502 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084940041 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082993444 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086286444 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075139376 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075997581 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.076127293 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07895225 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08421036 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076337233 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.078883177 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077859441 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093980521 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073180517 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0873052 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077480784 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07903162 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075474597 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079809747 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082124026 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073465078 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09158024 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074598114 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087605635 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086831826 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085524657 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08699736 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074543664 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084821266 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085323389 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074916116 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074318139 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076040833 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087043662 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071482282 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074478996 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.083933376 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076692776 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.096818884 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096536522 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076549828 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08816658 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075324086 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074672995 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074066212 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095988252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079678408 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073501732 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077823789 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076242438 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076812161 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073565951 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079311766 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073260836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.080920432 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077906168 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076666799 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075283285 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087433662 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075651473 seconds)
  done (took 9.417181481 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075148714 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07381318 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075150847 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073511236 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073101377 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073630296 seconds)
  done (took 1.917259709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09511691 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074035768 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08467257 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077282162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107908225 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0905554 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091305659 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082170712 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088001844 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083229433 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090717275 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092394066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095632582 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077554279 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090986548 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076674513 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091337172 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079512459 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083508664 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077439495 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090412381 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077327291 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078067453 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086104151 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08117702 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077456147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083894479 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084062757 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083385963 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082644717 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077442656 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.08075785 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075922643 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082371039 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091608947 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075780411 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078796949 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082417284 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077725476 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080774753 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092027088 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07751396 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079209235 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082269237 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082160729 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075586421 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081743369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083813557 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091059071 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081966602 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082434681 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076029556 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080669782 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082107551 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075533242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082094745 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082682953 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091317302 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077479884 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075758425 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074410287 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080398665 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081914411 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080677665 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082127339 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082574155 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0756166 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077568966 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0773862 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0768185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082054135 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074691663 seconds)
  done (took 7.382232651 seconds)
done (took 29.251898336 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542045989 seconds)
  done (took 1.971676831 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607889526 seconds)
  done (took 2.066241513 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.561763637 seconds)
  done (took 8.015975689 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.386562716 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490201562 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.729903051 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139803999 seconds)
  done (took 3.242177601 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728937029 seconds)
  done (took 2.193095643 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242941446 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238152667 seconds)
  done (took 1.956928546 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381510467 seconds)
  done (took 1.841094901 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130403733 seconds)
  done (took 2.591652515 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.24470508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186452423 seconds)
  done (took 1.894391952 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.453958836 seconds)
  done (took 1.916452818 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.890514158 seconds)
  done (took 6.355516132 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226130286 seconds)
  done (took 1.729379581 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243138684 seconds)
  done (took 1.707936559 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.748230283 seconds)
  done (took 3.211833554 seconds)
done (took 42.162136448 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089567517 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091238605 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.092379961 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087423599 seconds)
  done (took 1.805044828 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083156348 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07913308 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082158596 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078650411 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.082400709 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080040284 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082254308 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082383442 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078460518 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078599274 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078667651 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078153494 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080855085 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079940154 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076843195 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080311316 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081561975 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078384052 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081140131 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078637404 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076379328 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080361014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080427546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077842479 seconds)
  done (took 3.381581727 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084834954 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078583622 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.082500382 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.079590107 seconds)
  done (took 1.79578733 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084425515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096269595 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094329995 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084402185 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096818149 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091900846 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074771928 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076867841 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.077624337 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086419886 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076875977 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102907447 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.094504688 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084036205 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085975009 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07100127 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073571636 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092645412 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084781746 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085006206 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076453202 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084477591 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.074578284 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094417208 seconds)
  done (took 3.513128514 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087219652 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106837295 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086561149 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096142472 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.101483827 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.074597223 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087289698 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100130236 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13418888 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073827676 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079780562 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074106569 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082499917 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.075625696 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.087490008 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113817547 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11756765 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075353223 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104258755 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071642258 seconds)
  done (took 3.304817701 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077934452 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075076651 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07606699 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071385459 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083221977 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.079319019 seconds)
  done (took 1.940031422 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07369758 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0734743 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073713009 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072177344 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.078292571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074900299 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074488166 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076083681 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075802446 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074839723 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075003385 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073558262 seconds)
  done (took 2.368854623 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.187581598 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075055223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074151382 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071718156 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076662231 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072314328 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087057836 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073432547 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097414349 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072240235 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072630507 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074327283 seconds)
  done (took 2.508647486 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199864855 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080537793 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230939096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153818555 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113070181 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116159097 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115180847 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117014459 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14105497 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104485325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164358894 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16432071 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110004429 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13957274 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094009461 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107071042 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152985076 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166790528 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110274601 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16507989 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145551945 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129805276 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147196905 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105092828 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108709636 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12173661 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07727555 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084316539 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167921107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133128315 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143604946 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114487872 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095021132 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179527611 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166062822 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139850452 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150756132 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090021412 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10797172 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13440355 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193264918 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092039521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301420534 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115543759 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086424005 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136503884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124161107 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124440347 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10804626 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094970476 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145694627 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17948217 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137476761 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090321306 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127401005 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116133304 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114376935 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116042178 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175760102 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159874868 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132265514 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.078754315 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116318669 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150724608 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137034616 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110321763 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125026262 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095891145 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134605688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153227134 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126339963 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144602871 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118608789 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092719535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123512464 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13880623 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12830522 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160567016 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126578936 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078807176 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124078717 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104425965 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085878018 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149027013 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0804287 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172834728 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104510208 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109504629 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125474471 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110403066 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111303368 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154186925 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286555128 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108429474 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073705013 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10927194 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122021376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144384766 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092349372 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111266737 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119110492 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083314553 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134991977 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081270366 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124968641 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.08299188 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126090676 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13162732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08267694 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1251038 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106767822 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105752786 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133930378 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158683866 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095528735 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08871436 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168554887 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127692797 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110259211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144138524 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156462567 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106868456 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102935372 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146751581 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169009394 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093601785 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161083446 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107614135 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087714121 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092820457 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125244006 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113426018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12597409 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086128975 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120927413 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164301007 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079191105 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099322457 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135834504 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083380838 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084956643 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108661408 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106215823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099858905 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101627302 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104997797 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135542605 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274647947 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109841509 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126753311 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103071426 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165059694 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092268442 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107283667 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107911114 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075294467 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133416928 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154351004 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083257947 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158824552 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123989203 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119236964 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121672341 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088459732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137876589 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083733387 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075665249 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141658776 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114627577 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112941274 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151219058 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119839422 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126715159 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121303307 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132437748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131191463 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130465215 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111100906 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093003464 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115884004 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129100091 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079293319 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095116312 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085459048 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108327078 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099185842 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087835785 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141432108 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124959255 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116316007 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115901299 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10119234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146329644 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.082439091 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128726722 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123183761 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100078355 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150116657 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149704696 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134329138 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102618045 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283644431 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076837028 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081134826 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093348008 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126570042 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089745198 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089720972 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119804788 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146646036 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130715552 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136499106 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12571859 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122815721 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156240689 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.078391709 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125684525 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14520045 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124038998 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10821183 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097367201 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103046421 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142009992 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110208527 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176805838 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118208676 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127001547 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154485817 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10788787 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085334891 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106230403 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133804677 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106355996 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144085275 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102443461 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092525298 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110959329 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.0807416 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101513289 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128581497 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12001743 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136293566 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116513912 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13478561 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082414524 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116259854 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123549551 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121999456 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070255422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119558744 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155688393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098850324 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118584948 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298549763 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085481632 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140954303 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175301235 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14734847 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090852228 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110607455 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123046178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128074308 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120682598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139775607 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10788478 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138740311 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114605471 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089915635 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091795349 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10017774 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107351806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099090976 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105615344 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115738866 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.102697302 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135203491 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110381556 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116187639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122004326 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.105126266 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098002645 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101358927 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172538062 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123129835 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170810525 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104840527 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141283841 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159676437 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08023492 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083964776 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083479825 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138945278 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089499137 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132012313 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11409309 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119066379 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126201524 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140581904 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099386022 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074033678 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11150339 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132870978 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125218875 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101275533 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104726305 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158204195 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101376028 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082287696 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261555353 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119304932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107161431 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168110627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069568214 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110660705 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081716682 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084395103 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127960572 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150170363 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084684964 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103990182 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123321915 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114940038 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12730239 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101962741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115087124 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127295975 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148242974 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129163319 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093848258 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113518881 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132231741 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155071437 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107716003 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102859322 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168733656 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150392481 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15990678 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09129613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116722722 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117555626 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112052884 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137707688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088276303 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159954332 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086686939 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136990171 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105634653 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092736043 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129494377 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114633642 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092380019 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144211579 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119317699 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088940876 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082501135 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117176248 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120175735 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106426871 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079586258 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285308324 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.08202401 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137298208 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164196302 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089037249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111284791 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101528647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086991367 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110024849 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106659446 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092756777 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103424156 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168458008 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091331668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146815275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134227801 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113488337 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134918154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105454256 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643907458 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082811607 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14992496 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118702887 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168380479 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102938247 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120032474 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112563856 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12224942 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142501991 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105363807 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181704115 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13374488 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118213435 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084060218 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105429737 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1072667 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091186096 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110119756 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116377636 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117260976 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097036405 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1180874 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125278823 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087451385 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100175523 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153688267 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117090866 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143495118 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136983951 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088383078 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119505412 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136602585 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232008074 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121972843 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150245674 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110361234 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104095237 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085969405 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103361142 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1593638 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094942294 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157422904 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126301665 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113507364 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115619563 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112809535 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132220793 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10792608 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124202441 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095365862 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110384599 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116049025 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087533292 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084575075 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111475987 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116084419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104331469 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102070228 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.106540378 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150636386 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078002992 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102468075 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118298141 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143133339 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169765516 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092860745 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088302352 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123511024 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11828937 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114935822 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123972428 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.085043211 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086782221 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084579417 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087175697 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110556867 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116314493 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117109571 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112724064 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160043741 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088241369 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229212116 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098650841 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107057386 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075471794 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082141267 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09876788 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098812339 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255130099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118166979 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162710907 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10339266 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097884374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097725112 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.08360293 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092549964 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131795042 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113800057 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123325213 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107990374 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.072683122 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112547368 seconds)
  done (took 60.184964114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108782083 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087619689 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102091658 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148748493 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126739664 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205611723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161231169 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194205983 seconds)
  done (took 2.714044458 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074195285 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099112941 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107809959 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088949216 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072096872 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073900924 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230099828 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.089335731 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073435563 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100397504 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085575508 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074594981 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412817315 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073926432 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074272255 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067009689 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073424924 seconds)
  done (took 3.437903231 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.39331291 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622041439 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350010524 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08472204 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.972153561 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.099497172 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.292421894 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143622305 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084205665 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533098063 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41122459 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138049828 seconds)
  done (took 18.701736544 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086759188 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081848398 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.096566757 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095988097 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085761778 seconds)
  done (took 2.020600675 seconds)
done (took 109.168308636 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087760614 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421402611 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060384269 seconds)
  done (took 2.083819564 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091610651 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092873147 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.09345933 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090657259 seconds)
  done (took 1.950980222 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080143535 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08298423 seconds)
  done (took 1.741287776 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233359097 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17557627 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.104869254 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087147162 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084957464 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086153437 seconds)
  done (took 1.841579595 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078173716 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080082407 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077596981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081789888 seconds)
  done (took 1.895313468 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081712347 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060511002 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06198059 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062970973 seconds)
  done (took 1.844464937 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091736098 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088104761 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084363547 seconds)
  done (took 1.842511962 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104431637 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093370523 seconds)
  done (took 1.776104618 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086265511 seconds)
  done (took 1.666248989 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093530292 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104126992 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137500903 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119923402 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144288632 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120236077 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090179895 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090859128 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084430863 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091602069 seconds)
  done (took 2.655858909 seconds)
done (took 21.472875345 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083980182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373211169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36777435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098847982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678299473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365652095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999935056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101954184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149289506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075825175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09335902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.658101336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993012226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33935227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977222547 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332736564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65632493 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074614886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073706488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074316411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.98163061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073875136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074133826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076143791 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653753783 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378614109 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075282193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.338181998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077262229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079203606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381278245 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076415945 seconds)
  done (took 16.393462589 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075766508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125917668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081043712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09317275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.079343103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078449749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079976825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078468551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130633498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076583968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092528198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075722692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080027924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075522847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093535836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077563874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076761479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075956637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075698386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075856602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093529563 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075859781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076222199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077369403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077486663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090672898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07828996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07810219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07827349 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079515752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080338573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078232326 seconds)
  done (took 4.251941881 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123469769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132334263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082361551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115076294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122755954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.080262181 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154168722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103872784 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137266148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077866637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0940251 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077646174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111378212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078510594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097618575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0768046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078223047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077973412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077453174 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078133094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096913927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077643367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07796373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078075315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078359958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091905472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078600545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07781586 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077659005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.08029958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080335474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077495603 seconds)
  done (took 4.542989827 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078482042 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080767297 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088640161 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.092229814 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077509498 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080313451 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081265998 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078166425 seconds)
  done (took 2.253604748 seconds)
done (took 29.027114612 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083754208 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076653703 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081071007 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09755265 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082640956 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085790332 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075095276 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08501092 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081897082 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.082369277 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083243818 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075753026 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.079970926 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075548097 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.083008121 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075222609 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.086706484 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079841953 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086051718 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.086678437 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077648341 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080368426 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081373782 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083937594 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084155403 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08431214 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08309687 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079414772 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075570083 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078689435 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.084406488 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092520472 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075927246 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086336062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075945535 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076342078 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079958588 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075955872 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086870284 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084542565 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077821649 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085131675 seconds)
  done (took 5.002255669 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093980092 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100745191 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.093882752 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071667053 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.077108844 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0737292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.097679197 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068890582 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.069905961 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.097928736 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.066011499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.068311147 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071299355 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062186224 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068017059 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.066774722 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070926071 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.065230805 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069412239 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068257193 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.097081081 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.063174516 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085068568 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071903112 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.065283332 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070404332 seconds)
  done (took 3.578915951 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080523571 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088694141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.098381868 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151114714 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.118978945 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08604013 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087207144 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101033426 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.102192822 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075008109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079187906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102786498 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095348064 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082513736 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074985105 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091538542 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092179194 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074963118 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078479334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100096466 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.0914597 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091140254 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09789685 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089233563 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075274775 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077944777 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079568301 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.089278192 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077924453 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085148529 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078489857 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.079279592 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077575043 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087306297 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07868015 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077524143 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.102111843 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085979829 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086709671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076843826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084451839 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07698981 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.099631558 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132588923 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075214557 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081815407 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079130494 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085400061 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075540848 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102419107 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08751972 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075517339 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078745743 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074937487 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075225421 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078588821 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077481633 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077165339 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085038325 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081304108 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.099921625 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081118006 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091055775 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075956242 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084080529 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.074059783 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075147526 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072650373 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099364423 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076616694 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114759951 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075951708 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077058721 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083492488 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08166872 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080231619 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073191213 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08885873 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082813981 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077713926 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083388969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078135334 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.077375877 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104005935 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077305608 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.076726786 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075498714 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079821309 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.077299305 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075731717 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086387007 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073352701 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.077612714 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092709579 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075567359 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077617068 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082611599 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080840611 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075727992 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087851127 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079284802 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075796057 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085140719 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075803673 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078449239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08758308 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08214339 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074405711 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.079217832 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080233577 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074472775 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074537341 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075428017 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07513253 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081736814 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079711052 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078224855 seconds)
  done (took 11.455004181 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166469149 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160399418 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080445883 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154906856 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085280331 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086028005 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154469862 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099142046 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074481675 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07583972 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073600879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112817309 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108551595 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121680885 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083946646 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074068804 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096219781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120371643 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157117466 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15280237 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.099188003 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085002294 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078325538 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.077551097 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.077916248 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.086681018 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.096012933 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084021674 seconds)
  done (took 4.56618072 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08453009 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107722345 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081146442 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09841723 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098592682 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076111786 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077929717 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076920236 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.093158126 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084720797 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074506359 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078842883 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079892389 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076491446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074539693 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08044798 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079625794 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075067792 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076882199 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080859277 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083552631 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096880776 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076633965 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072821643 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078170469 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072712594 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068638339 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08902527 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073801864 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098072523 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071087111 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078184961 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087644453 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074539379 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073242159 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07395676 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073211747 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073282752 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075475224 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072737184 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072140109 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064170955 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073069221 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085421637 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087749716 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064038436 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080422034 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.080225375 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080874327 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073079213 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078891823 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078938988 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07949308 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083441654 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080176338 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081669984 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077392346 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085024105 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.084360018 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075426674 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072178763 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07334206 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078567374 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07046985 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088414279 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078354711 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072158839 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073533438 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075013771 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086389891 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073239875 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078418391 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071101043 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075484051 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077780926 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075648987 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074647818 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072096163 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074354007 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.075262843 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062190063 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074215942 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061248231 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078870355 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074590032 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074931887 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076104237 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080813574 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087564361 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077579113 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081880905 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077429749 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075732652 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079125018 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068702074 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078509516 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08671921 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089971878 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076778412 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074001571 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08854253 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080601267 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075380974 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.066370326 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.08049709 seconds)
  done (took 9.857456053 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09603631 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07780573 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088949955 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09783573 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094688314 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083614404 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086892443 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078185585 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092670052 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.083026239 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0849431 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076335003 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.086746371 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086073597 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078239957 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.086837957 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08113643 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.09163769 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.090474286 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075035777 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08320274 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087783171 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095999545 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087481536 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084917011 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086248984 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096198007 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083773144 seconds)
  done (took 4.069075268 seconds)
done (took 40.120519903 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.690435234 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.942786352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.679672978 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.008498687 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.760663753 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.864980242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.764077384 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.674128699 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.900456492 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.712883483 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.011459848 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.740005961 seconds)
done (took 64.481227082 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.696696071 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.815971398 seconds)
    (2/2) benchmarking "String"...
    done (took 1.904585083 seconds)
  done (took 5.325216928 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.864721148 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.254609182 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.922830034 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.675233488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.68103414 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.985110106 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.476952999 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.203810896 seconds)
  done (took 29.805017906 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.80775753 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.903833289 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.361628035 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.392383124 seconds)
  done (took 15.120938047 seconds)
done (took 61.506664523 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.690177974 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.712702654 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.687574538 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.660588437 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.735239806 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.690018687 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.954812393 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.927259814 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.67666651 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.670837807 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.678757527 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.106597401 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.676651629 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.867767854 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.675469091 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.686547683 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.726744787 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.13535172 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.832752925 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.696761159 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.684050601 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.722066838 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.677145777 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.686991128 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.714594739 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.677126036 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.079728111 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.679505101 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.300876894 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.676612827 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.709188976 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.000380635 seconds)
  done (took 201.701658177 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.677430817 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.501269449 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.545750795 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.700176597 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.15190856 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.877579683 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.763048674 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.197467122 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.683928219 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.690469347 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.831531605 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.677139455 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.842443439 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.675104943 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.726505746 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.678678631 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.845611462 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.852619899 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.730841704 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.845890744 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.691141907 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.819299214 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.782648487 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.81524705 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.703243332 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.750299488 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.830111267 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.681223907 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.887933669 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.825325883 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.677998251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.681418078 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.897453028 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.56012307 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.677499213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.6902625 seconds)
  done (took 166.07221354 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.867058674 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.681001527 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.677786009 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.677963981 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.690364352 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.678349755 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.80110371 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.681134693 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.329572249 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805968694 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.231151107 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731903193 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.679024847 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480786692 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.678131359 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746321276 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.690303294 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.679414585 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.692964249 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.705209056 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.682860614 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.67937217 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804988303 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.69165643 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.678690805 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.68466563 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.680671303 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.684949357 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.052536704 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.679789234 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.67963486 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.740371455 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.679989449 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.685217659 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.937560739 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.680604796 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.680046887 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.530482874 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.800090649 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.686931025 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763067575 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.681305761 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.686160059 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.679740389 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.896157768 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.680559192 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.679364875 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.680991429 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.682881938 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82450143 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.680170204 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806478935 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.680137719 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.159496635 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.680467434 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.680475611 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.359656111 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.264105516 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.680592095 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.682976016 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.68125576 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.680972506 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.686923834 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.285784355 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.754154698 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.683740752 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.684096715 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.686696531 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.681867855 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.695353396 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.68138482 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.291318171 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.742693218 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.909325798 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80400555 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.684560102 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749152067 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774520029 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.682335753 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.68207489 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.681499767 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.681878074 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.762655884 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.683508919 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.815142495 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689830509 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.683182653 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732168544 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.752293983 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.682276956 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.52679356 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.682973144 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.682417953 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94925759 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747707874 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.682700397 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.68178577 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681418197 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.809996404 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805540018 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.399214136 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.685549942 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.342629996 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.827906386 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.683953374 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.822277255 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.682740025 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764275893 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.688323557 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.68430251 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714479977 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.683748467 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.736876568 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.683434544 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.058030415 seconds)
  done (took 391.709829107 seconds)
done (took 763.012828372 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.282402209 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.243746398 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.345175239 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.257438174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.239982394 seconds)
  done (took 12.980142536 seconds)
done (took 14.591525575 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.771429649 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.777922842 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.706757094 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.775172043 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.704606906 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.774894699 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.757151355 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.708320878 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.742777341 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.709744676 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.743476778 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.708176985 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.69581355 seconds)
  done (took 24.188343674 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.926516231 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.919978638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.756093437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918182125 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.731750185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922294835 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84768497 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.836196143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837943928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.702190172 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699407861 seconds)
  done (took 21.710721716 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92668815 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.924505583 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.761955182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.925949692 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.73523787 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935538935 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.869488872 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.839606793 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838940587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703264321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699224579 seconds)
  done (took 21.773543251 seconds)
done (took 69.28501415 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.693407657 seconds)
  done (took 3.306997517 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.720648883 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.893598376 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.700080111 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.697181619 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.693625132 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.693589056 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.696960292 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.693488272 seconds)
  done (took 15.404172619 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.692752567 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.691932135 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.693059359 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.696028667 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.693095192 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.69633236 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.692780727 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.696721315 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.695683079 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.695522061 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.69310772 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.693989092 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.69577755 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.695655514 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.69310424 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.695782265 seconds)
  done (took 28.726734499 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.696768107 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.692873204 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.692850588 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.692616447 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.692467716 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.693171686 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.693558238 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.693185477 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.691683801 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.693225871 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.693744201 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.694094977 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.693124709 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.693382044 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.694045773 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.69381221 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.693395618 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.69403368 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.697217809 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.693479599 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.694266891 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.692792383 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.693218994 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.694875548 seconds)
  done (took 42.265295549 seconds)
done (took 91.316428292 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.400393597 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.439686589 seconds)
  done (took 9.456189406 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.69658937 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.69692304 seconds)
  done (took 5.013607494 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.696685809 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.696674457 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.696886269 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.696705927 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.69723922 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.697492139 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.696664658 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.697288829 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.697086804 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.697337756 seconds)
  done (took 18.586241571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.696353417 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.697458883 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.693641521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.698167514 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.697245126 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.694658147 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.697236365 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.697341723 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.697180443 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.695208468 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.697835099 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.695830632 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.697201622 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.694768698 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.697591709 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.695103381 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.695984363 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.694415157 seconds)
  done (took 32.150292536 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.697678925 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.698166218 seconds)
  done (took 5.013454303 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.695505256 seconds)
    (2/7) benchmarking "second"...
    done (took 1.695224867 seconds)
    (3/7) benchmarking "month"...
    done (took 1.695756917 seconds)
    (4/7) benchmarking "year"...
    done (took 1.69621362 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.695913486 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.69759223 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.695944046 seconds)
  done (took 13.48943278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.699003447 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.842180012 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.90238262 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.32217871 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.700054456 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.701627876 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.627631528 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.702407806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.702780322 seconds)
  done (took 18.81823241 seconds)
done (took 104.143946986 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.511507102 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.696143826 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.921006853 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.780820406 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.712153911 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.032033992 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.730035096 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.955683113 seconds)
done (took 41.957307835 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.703769603 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.470768327 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.501921524 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.716451747 seconds)
  done (took 15.307518918 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.681611649 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.004523394 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.697282445 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.495484248 seconds)
  done (took 21.552504216 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.065779329 seconds)
    (2/2) benchmarking "read"...
    done (took 2.035731427 seconds)
  done (took 5.725374876 seconds)
done (took 50.908832524 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699995003 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.697878565 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.699690517 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.697879981 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.699929502 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.696984695 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.697765557 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.70114565 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.698242985 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.70135145 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.699891594 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.701423069 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700941083 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.699368313 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697759237 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700345517 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.69862766 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698573872 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.701441707 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698641486 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.701252184 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700814407 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.699193611 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.698457263 seconds)
  done (took 42.407690549 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.7020225 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.699372908 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.701297625 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.700341602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.698539797 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.701079416 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.701450409 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.698840799 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.701168614 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.701811764 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699217623 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.699643611 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.702184976 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.699383698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.702366158 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.699823797 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.702279862 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698756834 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701866146 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.700352835 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.70259255 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699684635 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.6991496 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702224951 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.699537055 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.699736026 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.704936325 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.699821228 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702889745 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.70001117 seconds)
  done (took 52.642980945 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.707010208 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.710026224 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.702878166 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.702240082 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.701967905 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.702293412 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.702344769 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.703262243 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.70303252 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.70417499 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.703101252 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.70276491 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.702967631 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.703918468 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.702679364 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.702981759 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.703564315 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.703414416 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.704442243 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.70310165 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.703576608 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.703507792 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.703116091 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.704497025 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.703881945 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.703712985 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.703608921 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.704456356 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.703527865 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.704282824 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.703447122 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.703658787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.703789255 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.703981132 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.703535704 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.703348412 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.708252732 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.7107482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.70347681 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.704084199 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.703366379 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.703996998 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.704159683 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.704673537 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.703959958 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.704485608 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.704775233 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.704191981 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.705974793 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.705010395 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.704139085 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.704568291 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.705698703 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.704863826 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.705403993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.704513547 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.70554891 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.705743636 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.704471407 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.704794365 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.705796035 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.70565307 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.704593536 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.704644541 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.705938845 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.705869393 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.704523725 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.705243885 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.706287367 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.705723775 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.705860275 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.706260781 seconds)
  done (took 124.342979045 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.706389376 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.704926694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.702343826 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.704640129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.703474063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.707237076 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.703204707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706363677 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703440017 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.706969431 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706643215 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.703794562 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70393698 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.707746539 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706731381 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.704045028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.706492312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.703687277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.705782005 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.707764864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.706402516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.705002308 seconds)
  done (took 39.142854959 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.706407324 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.707773664 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.70424659 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.707694147 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.70407577 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.706604412 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.707308157 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.707225267 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707171083 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704795508 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.704754689 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707278512 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.705288531 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704577736 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.70458609 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.705118294 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707985063 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.704953453 seconds)
  done (took 32.333878083 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.70480185 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.705167678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.707205018 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.706269981 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.705861707 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.707802032 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.705092713 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.708122885 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.707832088 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.706939257 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.70764747 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708235432 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.708924116 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705445702 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70885773 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.706859911 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.708918476 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705136387 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707981872 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707237466 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.706754132 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.708545065 seconds)
  done (took 39.182668042 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708403473 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.708508524 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.70650221 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.705725749 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.705814379 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.70890261 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.708740005 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.706338501 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.709026977 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.708336173 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70759343 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.709495054 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.706529049 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.707042748 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.706566765 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706811054 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.709465269 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.708135313 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709036458 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.70694023 seconds)
  done (took 35.781788982 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.708317499 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.708334794 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7083414 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.708235349 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.707016565 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.708290115 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.708219055 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.708483117 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.708387119 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.708026699 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.70836852 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.707923422 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.709873573 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.707981061 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.709913279 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.708498912 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.707854173 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.70842092 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.708321692 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.708709216 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.708510006 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.708750535 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.708772678 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.708289978 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.708534796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.708582244 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.70886341 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.709744258 seconds)
  done (took 49.466634622 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711441965 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711631928 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.709000712 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.709089038 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.708312368 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.708851846 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.70973774 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.709157969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.710963072 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.709800476 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.711621244 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.712376582 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712109844 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.712152791 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.712651446 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.712630561 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712179484 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.708503086 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709033702 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708647387 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.711752668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711254657 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.711951062 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.709479207 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709259746 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.712095611 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709105463 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.709494096 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712202668 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710104938 seconds)
  done (took 52.946734875 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.730642899 seconds)
    (2/2) benchmarking "in"...
    done (took 1.731325386 seconds)
  done (took 5.092585117 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.708758006 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712649467 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.712776084 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.709396649 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.710575822 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.712447319 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.712290236 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709718768 seconds)
  done (took 15.319450812 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.709248063 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.71303404 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.712509006 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.713120021 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.711381217 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.710659671 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.717019755 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.713767055 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.712029098 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.711357215 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.718385178 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.719363052 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.713499949 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711039971 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.711361222 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.712648365 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.713663948 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.711937578 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.710997126 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.714316969 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.711671107 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.713890234 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.713935619 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.712543273 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.712617555 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.722728423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.717013856 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.714947105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.712294021 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.715901385 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.711587861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.711809443 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.711994011 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.711840149 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.715291804 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.712919394 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719784327 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.712784849 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.718807928 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.712543453 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.714843167 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.711785518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.71297811 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.714600246 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.713399211 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.713204738 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.715353649 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.712300584 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.713851952 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.717028655 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.720569266 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711967156 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.712892159 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.715875473 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.715138284 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719546263 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.714093872 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.716936752 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.722594761 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.723894346 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.726343635 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.721052943 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714342417 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.713910712 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725854198 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.737312727 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.720679225 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.714040146 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.713362522 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.715508487 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.721106568 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.728071245 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.723058541 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.714049062 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.713851312 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.717128802 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.714619721 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716635972 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72069157 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.718404387 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.714932707 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714713816 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725188628 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738473706 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.714995042 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.716475172 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.715382517 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.716287864 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.716658137 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.725041266 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.715709935 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.71841557 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.715257736 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.714019016 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.71669028 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.715696521 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.713887662 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716132632 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.71475561 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.718233154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.716152491 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.718445301 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.724172506 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.715967909 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.716607693 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.721189461 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.718602617 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.71496364 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.722095743 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.718700821 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.716851504 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.717263795 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.722922329 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.715697923 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.718909472 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.724598936 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.715894312 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.717280522 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.715924284 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.719116138 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.725691575 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.742625207 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.719005179 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.718629447 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.721751655 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.730523977 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.716481547 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.719280934 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.719375695 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.716793762 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.716614243 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.717618296 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.720680011 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.717451522 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.718300708 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.71787171 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.717390239 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.720248692 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.717524701 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.718191439 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.719261642 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.718222726 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.721053265 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.719818354 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.718956793 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.719274483 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.725181458 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.719826239 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.719422932 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.719168443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.717376064 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.720798558 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.719158448 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.718201527 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.718294717 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.717910643 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.718034804 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.718255029 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.720647451 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.721340675 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721170075 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.720374775 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724532221 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.719042343 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.722788046 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.718363009 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.717736947 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.720706456 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.721051989 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.719528311 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.721530381 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.717189402 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.721956762 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.726331904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.721022866 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.719055069 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.72200401 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719949286 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.718770383 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.719327339 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.72243736 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.727288318 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.720379133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.725900438 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.720547481 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.719926737 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.722647708 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.71973069 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.719016784 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.719418659 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.723341505 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.729889687 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733172445 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72893623 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.72102487 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.726160641 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.721413014 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.724362304 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.723955038 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.720144168 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.722330507 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.720452166 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719120909 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.720393909 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.721537588 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.721308137 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.719977258 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.722796976 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.72322318 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.721424502 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.722209261 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.721361476 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721678931 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.719435982 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.723189344 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.721834255 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.720148654 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.720375572 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.720000358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.720610112 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.723953061 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.721044964 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.72842564 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.720846728 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722910562 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.721853408 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.720830348 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.720788546 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.72345242 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723600694 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.722127144 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729167053 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.721806711 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.722386326 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.729726092 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.722390209 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.72208504 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.725121464 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.724743894 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.722672661 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.727196417 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.733087397 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.724537771 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.723025553 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.723376217 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72271224 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.724912826 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.731260957 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.722893422 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.722976357 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.726117835 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.72547551 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.72337204 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.724807244 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.724856516 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.724663923 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72526132 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.726818043 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.727245863 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724755874 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.723930202 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.72453637 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.724262183 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.727395249 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.732403589 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.728925664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.724715117 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.727486535 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.726070364 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.730981212 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.72446244 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.724593584 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.7235804 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737514743 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.733307543 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731858863 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.725455732 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.727035455 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730143503 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.726017649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.728912992 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.725159306 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.725238087 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.724489879 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.724037702 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.724827469 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725491156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.72722889 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725273663 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.72573211 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.732122299 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.727751855 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.72518386 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.72520685 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.725896048 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.728824042 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.725568731 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.728450896 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.727124692 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.726820217 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.724940748 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.725663292 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732706369 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725541789 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.726736103 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.726232178 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.726829903 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.725258623 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.727932479 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.727593794 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.730550529 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.734858149 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.730331619 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.735439596 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.728775414 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736739027 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.726809956 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.730876828 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.734752463 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.72550112 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.724121533 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.727315591 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.726341133 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733466838 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.726812654 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.727138959 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.730834429 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.727324674 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.726878939 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.728115569 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.726739395 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.72953836 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.726411387 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734194964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.728130334 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.730935302 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.728501984 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.727984662 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.72735285 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.729658485 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.726405085 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730791251 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.727122385 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.72868039 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.727370888 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.727288769 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.730245639 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.727739938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.731082593 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.727079043 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.730717419 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735012007 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.728872576 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.732318925 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.730939087 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.735927329 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.728719268 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.735229194 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.729453963 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.728576895 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.7285492 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.730557478 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.729994318 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.729345085 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.728836746 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.728237456 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.729857725 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.734763335 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.729708759 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.731880936 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.730134697 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.729643954 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.729629637 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739133279 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.753327961 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.731412649 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736347594 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.728899888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.731214524 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.734222759 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.729771372 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.728882318 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.732497122 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742572729 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740089895 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.729796206 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.729304916 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729816698 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.730024751 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.732552219 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.732279118 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.729649734 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.7324136 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.730707544 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.729742116 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733572907 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.732306599 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.730659764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.732072789 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.731549007 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.741211114 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.730871211 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.731133071 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.731359849 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.733725216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.731151565 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.730314905 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.731528109 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730871109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733640132 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.732382264 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738055855 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.737573398 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.733391934 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.731006476 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.731702381 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.731732933 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.732020558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.732626409 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.731121592 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731359233 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.733102682 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.731328704 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.732561294 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.730782268 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.733997981 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.73344452 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733541331 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.735614812 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.738708756 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732858131 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.732529931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.734180041 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73570579 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.730957326 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.733645174 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.739467429 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735665693 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.743460878 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.74164987 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.737318988 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.732922938 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735617897 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.741166068 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.731010835 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.733262474 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.733028251 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.734203996 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.733838652 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.736738146 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.733931329 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.739274554 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.732159426 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.732420974 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741169523 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.735016016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.732902483 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.734963672 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.737880422 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.734114409 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.73234013 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.735755287 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.731933232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740269966 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.734427651 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734250586 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.735563154 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.731639646 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.735769422 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.738086099 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.735596912 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.734563395 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.732960378 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.734503082 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.733810223 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739070174 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.733727176 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.734230768 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.734164566 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.737303828 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.742050836 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.733354432 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73583971 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.734960109 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.735132165 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738218627 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736565092 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.734318033 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.733843295 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.736061855 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734342819 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.735193145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.737014405 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.73493269 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.7366821 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.739567294 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735493687 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738982048 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.747178752 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.746065968 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.73567731 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.734105902 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.735838462 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.737634927 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.735306476 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.73475196 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.736346474 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.737075127 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.738441099 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736716005 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.738369587 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.73930857 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752060443 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.738545277 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735505424 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.736104292 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.739406359 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.738744517 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.734701008 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.738541016 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.738390267 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.739018908 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.744132376 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.736030253 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742489607 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736676932 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.737142881 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.7431981 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.740533627 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.744458211 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.738341089 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736384706 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.737336884 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.741911939 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.753732002 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739090885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.745707562 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767359328 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.738210047 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.738493852 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.738727469 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.736573853 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.738931405 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.739479487 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.738646826 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.74067521 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740049338 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.737695162 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.739542023 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.743534353 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.739328575 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.739972392 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.7404855 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.737721514 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.738371559 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.738433622 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.73953231 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.740203376 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.738430787 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.738421867 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.738354788 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.737440517 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.751692083 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.749240502 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.740575611 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.739258959 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.738539759 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.741629973 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.741948593 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749873549 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.748868464 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.739750609 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.740877653 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.740128946 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739098846 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.738784537 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.739367594 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.739112366 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.739064602 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.738243436 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.752669336 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.748523413 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.743236387 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.739384711 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74032276 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.74179049 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740938166 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.739195582 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740174351 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.741019551 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.741107288 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744181486 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.74261261 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.741567781 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.742806454 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.749302168 seconds)
  done (took 1031.438169253 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.740518591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739625186 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.74004482 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7403125 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740976146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740123343 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740086664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740717448 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.741064446 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740249548 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.739797213 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740816029 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739746906 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.740407788 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740628522 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.739813671 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74020842 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740269558 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740639292 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740269235 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.740188425 seconds)
  done (took 38.207236237 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.742972315 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.74098365 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.740873447 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.743591871 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740645941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742856099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.741691026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743019238 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.742825594 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741689186 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.744014515 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744115946 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.741243504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.740858517 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74125153 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743741226 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74419924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741240457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.743687729 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.740795485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744663671 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.741544446 seconds)
  done (took 39.993144906 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.743422761 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.742497852 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.74136993 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.741606996 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.744816862 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.742411017 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.742874015 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.744912051 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.745083788 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.743075705 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.741481677 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.743956455 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.749714452 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.750529145 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.744804914 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.744684372 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.88906234 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.744149786 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.743692629 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.743906065 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.742833088 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.748880871 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.743516264 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.742303803 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.742496703 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.744037035 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.746190333 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.745635757 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.744081746 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.744309856 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.748394744 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.746167273 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.743784461 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.745144461 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.742842962 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.743876761 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.750480067 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.743401046 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.743128561 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.746290303 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.753644992 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.767655683 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.744570477 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.75225748 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.746430755 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.746415868 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.748012249 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.752978249 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.743432544 seconds)
  done (took 87.344215426 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.746544026 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.747024504 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.747257843 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.747933617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.74640685 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.746626236 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.748223548 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.747418434 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.74444812 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.74445259 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.748101311 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.744993323 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.745408685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.746338634 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.748701208 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.744565381 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.742322827 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.743217196 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.743665029 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.743794138 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.74514273 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.747025377 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.746693358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.742810403 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.746944873 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.744636644 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.744399728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.746256951 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.743470094 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.744922517 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.746161879 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.746094249 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.747906311 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.744151828 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.743269607 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.746458935 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.74594595 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.743900256 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.746719967 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.742453611 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.745116297 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.744926905 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.744599597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.746452952 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.742787419 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.744143826 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.743420404 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.742904231 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.743155293 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.74669547 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.745926779 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.7432953 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.745160716 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.743340737 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.746428609 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.74470525 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.740661402 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.740527433 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.743484014 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.740874112 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.741040139 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.743651817 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.741141097 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.74252292 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.743096 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.741706618 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.742551981 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.73867485 seconds)
  done (took 120.301871037 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.735989647 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.736547707 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.737979643 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.737397199 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.736462165 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.735367565 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.736268641 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.735624229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.736638778 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.736450374 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734702322 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.736189012 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.734795795 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.736891735 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.735092993 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.735278137 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.734268235 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7349616 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7355224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734686358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.736959438 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.735277282 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.735358365 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.73521804 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.73693948 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.73646673 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.736019169 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.73458042 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735803795 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.735517164 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.734796603 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.733923435 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.734365265 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.734247585 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.735062858 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.734867702 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.734467311 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.734888267 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.735308178 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.735247509 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.735270751 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.734912467 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.734878889 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.735171998 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736380428 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.736336269 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.735534337 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.735204793 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.737454572 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.737231823 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.735757066 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.735146706 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735762463 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.735267094 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.736037543 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.739556842 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735742525 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734905509 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735073178 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.735437801 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734827415 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.739387861 seconds)
  done (took 109.271551432 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736402584 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.737365458 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.734995663 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.733590862 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.74017299 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.735205716 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737543412 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.737466452 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740430556 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.738264104 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738723607 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73517191 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736431391 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73790114 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73483232 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738263928 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735369362 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736178964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737166568 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.735385309 seconds)
  done (took 36.39096858 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.735837893 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.737583839 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.735061613 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.736175934 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.737273339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.735123569 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.737974445 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7385042 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734043062 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739166335 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.738402696 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.738970335 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734961578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.736421756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.738116287 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.735719083 seconds)
  done (took 29.443794424 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.7357526 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.733600496 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.731715168 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.731642783 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.730886012 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.731767557 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.734015278 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.729223931 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.728929452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.732660406 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.731268626 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.732743524 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.732194516 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.730302102 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.729432671 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.732075787 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.729036077 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.729376351 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.731999344 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.729298355 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.729809867 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.728408658 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.731736659 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.733338928 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.729197616 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.729772749 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.729595984 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.729184001 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.728079125 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.733166727 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.729424791 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.729677074 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.72937045 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.728779239 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.730050482 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.730846707 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.730730246 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.731610835 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.732402857 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.731315562 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.732050882 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.729784868 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.731222889 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.731453617 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.728992674 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.731954792 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.730211264 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.729714143 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.729071336 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.729259842 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.731243756 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.729539393 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.733027047 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.73213321 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.731650139 seconds)
  done (took 96.852353637 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731929187 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.731480439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.72975366 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.732340822 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.73245168 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.728938588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.731526171 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.729275864 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73056372 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.732233428 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.730970339 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.731911295 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729958682 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.732000567 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.731513147 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732054844 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.729751274 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.730791613 seconds)
  done (took 32.808958107 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.731480746 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.728957945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.733273097 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.727852145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.729674335 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.731963195 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729763949 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.731721276 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731135433 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.72874723 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729149488 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.731966505 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731105164 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.731160025 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.728430825 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728133932 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.730004338 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73126357 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.729069629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726214153 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.729866842 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730675379 seconds)
  done (took 39.711788443 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.725983923 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.728353105 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.742417631 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.747362162 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.74857481 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.761213404 seconds)
  done (took 12.100707855 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725466337 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729278829 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725570987 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72856883 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728697926 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725900235 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725460923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725459373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727402771 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725323636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72512061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728895036 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72562876 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723139091 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725754476 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724695937 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722829335 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723793531 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722422265 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7259363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72304933 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725805284 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723498085 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723869247 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722894964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723552999 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7255512 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723162605 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72514627 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725196903 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724542091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722492559 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724828992 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722368974 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726085651 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725629259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72294649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725883048 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726340786 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723597696 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727247013 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726761136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726303915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72309565 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726194208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723138352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724867724 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722371289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723392502 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726204986 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725067998 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723374267 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726907562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724388106 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725024103 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72667961 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723939408 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723046625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725003659 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723035563 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727228806 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726056848 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723646243 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724584646 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725384881 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723781894 seconds)
  done (took 115.497208162 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723242554 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.723242775 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723981763 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723047892 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722869619 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723208957 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723471404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723658895 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723511465 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72334297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724871719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723290904 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723656484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723833532 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723260926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72299652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723007291 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722936777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722572813 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727225607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723089633 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723411967 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722953149 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723976873 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723247919 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726266597 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722029053 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723490007 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722823138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723967069 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723179325 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724598644 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723250434 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.721771593 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723147853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722687845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722727962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723766234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722351391 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724886428 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722811887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725729553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722930914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724833103 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722514629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722777479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723345411 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722957985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723438603 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723190255 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722436566 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721660385 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722259819 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72179442 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723706632 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722437369 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721296272 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722156832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72177791 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724534161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724450472 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722530846 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725019565 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72214974 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722188493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722790059 seconds)
  done (took 115.382029695 seconds)
done (took 2395.027540288 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.759498884 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.876552652 seconds)
  done (took 15.277297508 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.886491187 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.84139632 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.724444233 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.775245932 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.724650997 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.745004501 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.744839879 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.724186069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.725210173 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.726341178 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.724364345 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.910577571 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.776219496 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.723981057 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.724271288 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.816834435 seconds)
  done (took 49.944003736 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.726537019 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.729167549 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.738611504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.72881792 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.726066996 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.743780738 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.761911588 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.73112229 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.789003952 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.741595701 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.853794163 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.738494469 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.727871745 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.776087045 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.74343953 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.740297601 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.817080983 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.803453165 seconds)
  done (took 33.262595317 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804549182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.726692249 seconds)
  done (took 10.183626077 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.750558062 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.778261997 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.722670071 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.728391574 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.73608593 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.746523877 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.747496453 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.75138162 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.730801102 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.735451962 seconds)
  done (took 69.075683674 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.730448987 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.726048664 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.725839502 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.724153772 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.718663564 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.722298313 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.725257053 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.718973539 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.394424194 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.76100307 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.731657651 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.728790176 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.72465186 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.728289022 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.726435444 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.747923738 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.829539303 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.725589234 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.725462152 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.731279144 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.726385321 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.780107834 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.739768352 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.729626323 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.756967744 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.394493805 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.73433677 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.732343511 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.830032262 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.726155417 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.72656841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.727203897 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.728449891 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.138798747 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.99273627 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.72864732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.741417935 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.734467711 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.729056773 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.831763434 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.725874151 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.734222217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.485487795 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.970479436 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.833566794 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.770685412 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.039744678 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.743460724 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.728664513 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.756215476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.729773583 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.72858058 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.741450158 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.218751134 seconds)
  done (took 124.434602625 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.722429613 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.074830945 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.89215485 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.722173486 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011535402 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933336105 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.725489779 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.771938378 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.72607629 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959223372 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98068801 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832207634 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.728196113 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.722569026 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.722610141 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.722516263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.883926956 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.800273539 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.726729094 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.722433338 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755369343 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971446847 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.850887956 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.728221045 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.75371455 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.938301612 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.848440002 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.83162464 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.511591501 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.722662916 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790056838 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.725796064 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.726370243 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.724676485 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.882473622 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.821695153 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810650054 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.725910764 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.72319157 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.722870705 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.395996317 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.928058515 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.821220148 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.868374083 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.926984024 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.932827747 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.51062484 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.723456553 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.476292617 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.890968689 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.954615093 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961328434 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.848372333 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.726845252 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.260512653 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.722931601 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723433681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.978113263 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.872703836 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.824701607 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.727442218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.723758261 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.723693493 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.973487075 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.725793806 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.822618795 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.727740755 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.725432649 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.824285756 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826712738 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.865309129 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939572638 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.759042996 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.615532207 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.262414034 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974478427 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.793288161 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978827831 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.727464452 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.724630641 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805433995 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.569300159 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.980470814 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.976777631 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980438632 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763116912 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.450205699 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.724901324 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.955594213 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950469331 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.001183376 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960651926 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.968593906 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.050347562 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.72399208 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.726966098 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.947469145 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.864272056 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.729289154 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.073142419 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962976548 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.277958431 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747209783 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.033646469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.859892367 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.730726463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.369796349 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.724373977 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.958262752 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.769287616 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.726597871 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.726390621 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.948281446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.716545483 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.727931565 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.382140678 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.790794905 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.731059903 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962075957 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.729988943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000398238 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7302842 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967406722 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.782565689 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761042554 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.959860184 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961700145 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.730950916 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.973982204 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974681128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.843883957 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.952212426 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.432196892 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.728214506 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019502726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.728709386 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.726822374 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.89948053 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.728097617 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.873571483 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.731299673 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.02301075 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754449692 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961394861 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734426765 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987410483 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.763518373 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781153928 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.730947883 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.861332866 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.728636547 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.561767459 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.887854243 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73276043 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.727544234 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.538088541 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.726811841 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.881242159 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.387358668 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753929496 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804147641 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.407493396 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.727329263 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810402592 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.753492347 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.120559696 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.729643173 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.983923478 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.73238199 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.727969686 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.727147592 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.970136816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.916727169 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.730358867 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.729077834 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.640587021 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.728191239 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.727949343 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.912677652 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.073685161 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.728087517 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.93321549 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.733876578 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.858733553 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.734502596 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.811951226 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.073521927 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.730566592 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.728768812 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.729053025 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.733053944 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.731165656 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993760351 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.757512091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.263092989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.870951365 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006878028 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.043130637 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.980761366 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.775510347 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.730496431 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986558298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.732694371 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.794899263 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.731010675 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.75319528 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961979348 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.733591042 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941346524 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011808518 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.586266438 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781072044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.732081852 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.731118687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.730575649 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.877995168 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822162685 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.732345292 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.729883586 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.850766808 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.853662007 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944685351 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.732630065 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.93265557 seconds)
  done (took 872.09201457 seconds)
done (took 1175.914923699 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.731735843 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.73117834 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.718420886 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.735715991 seconds)
  done (took 28.574562155 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.739044339 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.736782565 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.737955935 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.736812299 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.738020412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.735958987 seconds)
  done (took 12.082037971 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.751635887 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.73078117 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.735333758 seconds)
  done (took 20.875295303 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.805845036 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.12155996 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.839992466 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.161948877 seconds)
  done (took 9.589656314 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.740495563 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.737272292 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.738183081 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.739775684 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.740973829 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.742506881 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.739434684 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.740857135 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.741196906 seconds)
  done (took 17.320636328 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.82079909 seconds)
done (took 93.920694042 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.808743495 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.834862727 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.73603015 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.859204668 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.802506256 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.718566575 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.921982544 seconds)
    (8/309) benchmarking ("sort", Float32, false)...
    done (took 5.436544778 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.847479967 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.753151246 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.11566771 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.134864803 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.736949658 seconds)
    (14/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.536072428 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.747519835 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.180920433 seconds)
    (17/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.027111425 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.910655557 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.801958986 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.902059741 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.760781947 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.383656559 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.768611433 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.827410028 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.841753564 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.891337538 seconds)
    (27/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.615631644 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.786545806 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.882450886 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.00918739 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.818168031 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.904850157 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.645243942 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.828414063 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.897430915 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.022006819 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.738846063 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.900395592 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.537277568 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.875916695 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.720531761 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.665383084 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.409567941 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.915726786 seconds)
    (45/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.734114508 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.301264791 seconds)
    (47/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.823147723 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.952544383 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.913909618 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.850138476 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.054807503 seconds)
    (52/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.723762517 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.943980507 seconds)
    (54/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.754129327 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.159994002 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.95804483 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.850720229 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.308553304 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.727824623 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 6.764438981 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.434637234 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.73972887 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.838997708 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.993620008 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.736614627 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.432650593 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.709531366 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.906163033 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.762725088 seconds)
    (70/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.829778443 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.151000924 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.108790796 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.878418756 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.876986424 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.836170608 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.008615403 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.924343318 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.024525835 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.745245709 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.742770663 seconds)
    (81/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.422681074 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.111871452 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.91926223 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.830170988 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.755240875 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.757387531 seconds)
    (87/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.723723904 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.106526575 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.813452643 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.933076182 seconds)
    (91/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.832021234 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.875695562 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.801103333 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.811105956 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.599762517 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.827831243 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.726354073 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.874542948 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.91276051 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.742768151 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.853264993 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.736178814 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.037137639 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.971730464 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.083046671 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.541771442 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.748146928 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.816252561 seconds)
    (109/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.244774473 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.742773842 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.171431726 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.254460934 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864673858 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 6.738720959 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.772305852 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.928766166 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.875231769 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.973963882 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.883446846 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.358321532 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.568909474 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.745090148 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.190733867 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.360891293 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.101737338 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.829767245 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.942450665 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.009302032 seconds)
    (129/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.821482838 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.728323924 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.773460144 seconds)
    (132/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.859386028 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.926243811 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.810609164 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.76490359 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.061545792 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.6708636 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.701560306 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.771877822 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.888854877 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.746120387 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.741469308 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.745363591 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.040756048 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.746061071 seconds)
    (146/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.928821089 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.975553471 seconds)
    (148/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.658929561 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.838344628 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.644938368 seconds)
    (151/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.7811792 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.742148746 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.981632193 seconds)
    (154/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.002893794 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 4.635368996 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.87482732 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.730395382 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.083301087 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.002119269 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.849883625 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.741216788 seconds)
    (162/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.04991786 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.779950016 seconds)
    (164/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.032996555 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.311635828 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.659224211 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.743910894 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.746037605 seconds)
    (169/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.922439787 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.771170717 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.762131418 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.741962576 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.240309862 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.839757155 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.879792093 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.56003963 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.873680418 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.098927029 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.867475354 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.741657545 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.034159591 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.763440682 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.842432745 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.733415068 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.900431434 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.677289836 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.772933991 seconds)
    (188/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.862938044 seconds)
    (189/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.225542775 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.860000851 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.018827615 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.748050215 seconds)
    (193/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.866172877 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.903989951 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.033337349 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.98865064 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.83941061 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.167437714 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.76237441 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.828974158 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.086726315 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.73092797 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.136976572 seconds)
    (204/309) benchmarking ("sort", Float64, false)...
    done (took 5.523218773 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.776208782 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.128298714 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.153177375 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.733845817 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.912235881 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.771139642 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.111985713 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.151822464 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.829905199 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.869191955 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.291275791 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.311051173 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.738920261 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.195341209 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.996679878 seconds)
    (220/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.257338602 seconds)
    (221/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.866850199 seconds)
    (222/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.195454896 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.500505884 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.89205314 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.203210294 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.905656427 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.971366279 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.595659236 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.744459488 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.73554413 seconds)
    (231/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.475640147 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.16146847 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.747933566 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.105836696 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.789474647 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.577806561 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.819118543 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.811650645 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.817231868 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.77158574 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.773750695 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.167616933 seconds)
    (243/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.854829899 seconds)
    (244/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.872565415 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.421736858 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.692159164 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.031666717 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.065835042 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.046556392 seconds)
    (250/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.982923922 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.869030937 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.73168401 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.268233829 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.752039135 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.930799645 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.273227219 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.76371513 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.878745834 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.856296551 seconds)
    (260/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.233325417 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.779726788 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.73186089 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.847790129 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.930163655 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.846600661 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.927367846 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.644235606 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15619386 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.105860371 seconds)
    (270/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.852783459 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.864904588 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.069803105 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.883238236 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.102796167 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.905566872 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.095972605 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.76511788 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.769075558 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.060076789 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.911075706 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.747009058 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.171316428 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.879442341 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.029432727 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.822072698 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.952912695 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.954356155 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.080137052 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.018436022 seconds)
    (290/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.775424367 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.728312174 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.542611337 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.913918814 seconds)
    (294/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.250250777 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.758909348 seconds)
    (296/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.225353391 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.86004526 seconds)
    (298/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.993167073 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.790488598 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.010939844 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.794771337 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.763653672 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.907212981 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.739848446 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.856396731 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.753426195 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.307387133 seconds)
    (308/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.012369481 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.112618858 seconds)
  done (took 969.956224178 seconds)
done (took 971.682079387 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.785948814 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.778973285 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.763063957 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.784975041 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.876177619 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.791735988 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.774295784 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.765409878 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.811571124 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.813335665 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.761012373 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.789192398 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.764375731 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.764153914 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.762756581 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.779478683 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.088185967 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.799104861 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.779330448 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.77374651 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.779872045 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.760124533 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.812409666 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.790388056 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.768290537 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.767163653 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.768367277 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.784222892 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.876012392 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.767425997 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.765695585 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.776598946 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.087639534 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.798223916 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.7598349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.783236409 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.775331221 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.776422556 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.767896681 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.796247775 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.179982562 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.808151189 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.767281578 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.767115612 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.765513408 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.769632685 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.765613423 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.770531328 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778284583 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778772818 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.164081852 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.827650432 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.767464498 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.766531228 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.775925897 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.766085558 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.768687578 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.781691421 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.785083617 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.782010872 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.066347739 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.805001543 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.767595144 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.782637832 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.774330579 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.200643378 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.808079054 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.770747516 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.17046541 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.816506799 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.200604335 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.822363773 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.768002835 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.781192402 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.797673915 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.08663825 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.795581371 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.767213769 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.77423914 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.763528034 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.776710321 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.780557924 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.772548949 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.766896754 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.780597621 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.79420893 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.777699508 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.767122086 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.77618434 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.786745384 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.775252994 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.778088878 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.771805582 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.763059657 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.776473872 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.770984963 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.771510084 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.770103392 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.772486871 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.777881424 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.168732223 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82926491 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.765081987 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.765486641 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.767054092 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.782405477 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.167523693 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.81350705 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.791324698 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.815389846 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.770612143 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.067892896 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.805160983 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.784686659 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.777445726 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.772644242 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.764526373 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.068318643 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.201070427 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.829311568 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.771205636 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.765462958 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.783747635 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.770346943 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.766722072 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.086934816 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.805770442 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783449747 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.890799148 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.782165363 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.801461264 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.765834175 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.773238833 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.802304412 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.784995802 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.802208982 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.772620758 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.784971167 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.785359144 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.766768164 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.779799733 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.780417998 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.771684204 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.776293053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.764236298 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.8008169 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.783116365 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.782479188 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.790779073 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.89179301 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.767897067 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.070469503 seconds)
done (took 278.331626527 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.84179025 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.762657864 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.864922016 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.770810947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.84770233 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.852899677 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.768407804 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.767231965 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.768247445 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.140894921 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.767938323 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.769379866 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.766322558 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.768189593 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.849354642 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.772048629 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.766861452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.103581402 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.768491991 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.840270421 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.771027622 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.768977806 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.771041695 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.14259268 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.761843623 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.768594173 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.840283532 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.770047678 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.105957842 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.769656613 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.765789153 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.105906531 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.860672071 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.791022734 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.78114681 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.777890581 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.849259368 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.775483111 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.849201825 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.851391444 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.865723127 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.809471615 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.762908946 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.76723607 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.777166507 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.772108304 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.769269435 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.800134243 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.767237986 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.769745427 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.105734225 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.782808016 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.78044763 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.771153033 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.770573552 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.792420541 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.77012307 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.771793915 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.859943978 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.771220889 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.831600567 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.141949012 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.142490301 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.773302186 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.763947889 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.771320473 seconds)
  done (took 177.583703311 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.836200839 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.849432868 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.83649471 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.774789002 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.821634068 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.838292929 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.77554904 seconds)
  done (took 14.420999552 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.776626027 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.774139251 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.822271615 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822706247 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.770868765 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.926068348 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.773625081 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.781708855 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.771652677 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.822070035 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.771797815 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.774232193 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.781498703 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.766191268 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.822482444 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.781575411 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.888708501 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.773419228 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.772915257 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.923149348 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.772150562 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.78161204 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.806837535 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.782595012 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.773353556 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.777699146 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.337026771 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.773410082 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.772308181 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.774787176 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.772709708 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.811815692 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.775543241 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.772628965 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.771923581 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884393088 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.773031755 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.77280264 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.774884258 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.767364172 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.775054883 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.774842497 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.775446121 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.77352768 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.776372741 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.795293713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.775583823 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.775903411 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.775018038 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.775435289 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.807063201 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.776187746 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.773087154 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.773493287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.826821584 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.783649863 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.774152158 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.772891993 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.776511968 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.772953183 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.925359211 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.824944541 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.776111679 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.82347153 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776053537 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.7773345 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.778082653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.7760273 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869522539 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.776319807 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.823414369 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.774713821 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.933259564 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.796634581 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.777324443 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.776877064 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.776901729 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.775947294 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.77670777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.78107637 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.774596222 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.776684227 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.780910919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.774940224 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775174961 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887474946 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879848772 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.774809127 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.788068523 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.781277532 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.774675781 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.810366742 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.777603778 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.774559153 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831965365 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891183384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.829353728 seconds)
  done (took 196.406544355 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.779920323 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.783244085 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.775549279 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.791214067 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.775250078 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.775318531 seconds)
  done (took 12.373051569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.777985707 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.780006632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.776983581 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.779130127 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.776618833 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.776227997 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.776518487 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.777761764 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.780813259 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.778780418 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.776062734 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.779984411 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.777886221 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.776440496 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.77786719 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.779187553 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.776935943 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.77666166 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.778979095 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777363098 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.922693395 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.777339743 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.777559348 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.778236931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.781024312 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.779904065 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.786714797 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.778545605 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.779644165 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.785904851 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.781719924 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.777499429 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.776518817 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.781938704 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.781785652 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.777360927 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784243882 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.779175058 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.776280708 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.77834749 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.778786603 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.777107751 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.779892667 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.778839147 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.780765626 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.781779962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.783523558 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.78466224 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.779451296 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.779859652 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.779555543 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.780102958 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.778058498 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.779950128 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.780685558 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784279032 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.784105449 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.77954422 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.778179999 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.779937034 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.782076994 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.778726258 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.780006237 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.783997902 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.788201915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.780078087 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.779588049 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.782561633 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.779113924 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.780382431 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.781182848 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.778569718 seconds)
  done (took 130.978952569 seconds)
done (took 533.468094204 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.906119032 seconds)
  done (took 8.601493232 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.966042743 seconds)
  done (took 8.703854675 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.342170187 seconds)
  done (took 10.041526565 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.804898499 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.794042212 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.782319242 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.781569273 seconds)
  done (took 28.883122798 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.827223706 seconds)
  done (took 8.523967165 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.800345844 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.775492399 seconds)
  done (took 15.307328388 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.857279339 seconds)
  done (took 8.559341213 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.864621728 seconds)
  done (took 8.586469465 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.791726933 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.811651733 seconds)
  done (took 15.313839899 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.759932044 seconds)
  done (took 8.455502112 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.446348136 seconds)
  done (took 11.237083213 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.794303593 seconds)
  done (took 8.594549635 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.849595299 seconds)
  done (took 8.544877222 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.862218063 seconds)
  done (took 8.557483592 seconds)
done (took 159.607108564 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.775227435 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.772218078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.772460932 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.772430897 seconds)
  done (took 28.787304104 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.814082554 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.814184515 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.816608237 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.826944581 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.818322856 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.815537216 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.806741508 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.808039183 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.826560335 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.818214719 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.816792866 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.817890793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.815535862 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.808657391 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.818635453 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.81650317 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.825128161 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.816270763 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.808438792 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.818768426 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.783177828 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.82552279 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.81864338 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.782487201 seconds)
  done (took 45.234181678 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.974658121 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.852526873 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.93331914 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.831546967 seconds)
  done (took 9.288818504 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.835158778 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.836153275 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.846480801 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.885351362 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.909474289 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.845478033 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.808372932 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.804037372 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.790579666 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.83538526 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.911446281 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.831930886 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.938373489 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.782778044 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.971166342 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.783381182 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.78528991 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.836443348 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.886111562 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.912470718 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.783178671 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.834557495 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.839541555 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.830998643 seconds)
  done (took 46.022056098 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.78158814 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.789445431 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.788544553 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.782548098 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.78488732 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.782915473 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.789441889 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.783227112 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.806416411 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.783857097 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.781789709 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.784001115 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.782115174 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.784871257 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.782910487 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.795811293 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.797804026 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.78390966 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.787508417 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.791010631 seconds)
  done (took 37.442810112 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.776027318 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.62911467 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.12600162 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.030600738 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.77626926 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.777182312 seconds)
  done (took 30.814666297 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.79498528 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.787848904 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.780699064 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.839221095 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.925124121 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.789865267 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.781194133 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.793267437 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.829990138 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.85137994 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.803249232 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.811124039 seconds)
  done (took 23.487888423 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.779764709 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.791337108 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.779217943 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.807012829 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.794339408 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.789678189 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.789660904 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.776418722 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.795206386 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.801760919 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.791000346 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.794193778 seconds)
  done (took 43.192078377 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87091509 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.672337192 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427367271 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.588913246 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314774705 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990277401 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418809002 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958551997 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.785399007 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053285361 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.37439781 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02992841 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032752918 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783615155 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.851390653 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.248210714 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082094418 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019172482 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815180521 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466815458 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908007966 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345113017 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.569304819 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913533194 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991078682 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.914840222 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.183548204 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.743666161 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921295505 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8235847 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791447687 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782801442 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056789699 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003263273 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91362731 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791058072 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.43341677 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.497558761 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.767461033 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.542257691 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.458698003 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922409727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789921747 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784329187 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714579437 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347054387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965949866 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.786954763 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.484462901 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.782907637 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792235639 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87292681 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.786119935 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.599181126 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732758875 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.061025781 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.781535125 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786389342 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360773054 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901148225 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450276071 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.721902864 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.871393135 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.50047386 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265889011 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.94019055 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.787244993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787823762 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716468791 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.537837564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913324122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92832066 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.802225768 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432433455 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095422622 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.472128319 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87367431 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084554488 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6870722 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.722788618 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011745458 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.739695006 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716109873 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.622689662 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.716646339 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062093684 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823551402 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.442641321 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825002577 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959855694 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794699483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804651899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79082895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007313927 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.663401252 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785317147 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.351833356 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077032609 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806250947 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.960591883 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719237 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.78913104 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038506684 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.996111425 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.065234477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.26062749 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952328618 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787922568 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.875354904 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.754418425 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798719275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.07380584 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853772931 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.910996031 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922799276 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.745635955 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096825594 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817886664 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.963317459 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.426051183 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06144092 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12407764 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042873803 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871329581 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792494136 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.788947102 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575423324 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417867689 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.01047891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.785310249 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322931981 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.799386669 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.786190172 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7212819 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.46473484 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.434427622 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.902208826 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010564043 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.763131227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06507967 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721153136 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933429469 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.90068394 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.010853937 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44466837 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.875766613 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046545958 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320298674 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.075670326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798908151 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807617654 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889216879 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809507295 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.251241424 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043364936 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.791944848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.791800384 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56939718 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862837248 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795928961 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.793505435 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615690133 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084769229 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.825058444 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.794793193 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.732314663 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.803637286 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871369215 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794257055 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798147946 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.313356464 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621786368 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.80103859 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.550713612 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047555266 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799610127 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.518855671 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991774761 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.882819734 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079936216 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859792009 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.723257057 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.491799315 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.492189394 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791329689 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.72435372 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.791081679 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799805302 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802160706 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.03213491 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08798471 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843995508 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.560132491 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.911113494 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801071762 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.794224298 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794863379 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.318384465 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918995676 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330497725 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910930025 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929490647 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.804875065 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.724563396 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.794054759 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797353097 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.792484521 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.742845886 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845996454 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.507965275 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132775696 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05044124 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.436243789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809014679 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.588845919 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.930171355 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.812353385 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.382958024 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807097121 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.889720469 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855868813 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.802529661 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.524973668 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.567374044 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371636696 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107601935 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128002887 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261979497 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.197148879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122368824 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.969956112 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027698187 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321492729 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853526799 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979001818 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739291679 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88595084 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.451584611 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15684719 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810294517 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021517225 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206064307 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.458328754 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968425417 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003604994 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827861875 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.634918361 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829826153 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.31428516 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948594093 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.381259904 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030294686 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970619979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.408888405 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.91599614 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.790915864 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271178459 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885442785 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.502846289 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.154916404 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375971416 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.448104658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182643986 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.800353689 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.238888798 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159974324 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.170051349 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.890825368 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731206662 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.804747441 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.804615487 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.79229913 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.787032902 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.775103478 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.095694661 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805067877 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028005867 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.112054716 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07618734 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.707439412 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.801688662 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79650894 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104289755 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.556346229 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042902142 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.172477191 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.412996577 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820455608 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.729498061 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729393734 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.498973282 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.798768148 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.770728817 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032030085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.905594584 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.748044446 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.217129187 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11518194 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049833924 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.809745286 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084943309 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081311252 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.528328835 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826823381 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.897038073 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.394181782 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.523630445 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.016650216 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030619454 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592632918 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026442921 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453338194 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.775746971 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.794246166 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011243904 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.019124032 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.451770163 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063296961 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.524116272 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.804173827 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164223328 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864516952 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.462265961 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024427924 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.88694018 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805723417 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87933646 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807727446 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.808390033 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808150028 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845232979 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.472597605 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944651516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.811689844 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887652608 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93960979 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.435601065 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.821780967 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088793684 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172197998 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150001666 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867526912 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.799602942 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808028997 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731325803 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938570942 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.245667807 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071666966 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.929482123 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.990229952 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824914766 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.388790309 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.136237129 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117053478 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074477118 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.694065213 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80052543 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891521944 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.023484912 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809485586 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.009934045 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038797902 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135249242 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277225336 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.969829943 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08329844 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073486682 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171491012 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800925357 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392247531 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.80864884 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.33296009 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.845932718 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.453221955 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099982332 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810623511 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026070018 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.822999259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.996934669 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.253933384 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532690379 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170757867 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.804759158 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866600149 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090114386 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222251975 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124362794 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882591531 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812541856 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.499314167 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938819723 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.805327787 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.075101232 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802435193 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012204176 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.513283738 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.811733579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102358753 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119843841 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.799561741 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.79679992 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859344002 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.810890306 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024556871 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073404563 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05762384 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810692099 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.806132881 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.617351925 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089542368 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868936464 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735620602 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.808366275 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901109327 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.050627532 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822617985 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.31995049 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.505345434 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106451459 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.728832317 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825730889 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.235358176 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255882757 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148446864 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.331909507 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039731685 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363618154 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.659707376 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182464852 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.807298617 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.22722082 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184989439 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.806913294 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351431583 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919863305 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.082443024 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133916738 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.814478286 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571964539 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.854050113 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026312827 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396604239 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746136935 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.809451374 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862530256 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.805087481 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.93441188 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815060478 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.795557551 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.700667614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.646492276 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297089596 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.809084003 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.797248238 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.329325672 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390945579 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913704697 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960740145 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810581312 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.527130876 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.096580862 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.058510943 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339591429 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.878766717 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.80828817 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805836319 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.732207916 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003533032 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.045543315 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113336273 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.177995282 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.922406365 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810817231 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.021853646 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016262268 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.390330811 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969304834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26585775 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922517664 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.730677825 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.519470406 seconds)
  done (took 1644.942812916 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.828081775 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.830166152 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.817497553 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.857447881 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.81603747 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.824844031 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.880069584 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.81000563 seconds)
  done (took 56.389764406 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.803886271 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.000062955 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.812462982 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.80518908 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.830310656 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.804868848 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.99684775 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.818112924 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.858560154 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.814075147 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.807162694 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.832731094 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.131272419 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.830611575 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.804796341 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.797792164 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.846484827 seconds)
  done (took 73.331074263 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.808204968 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.981513414 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.833421952 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.829363957 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.682383581 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.821332454 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.763695472 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.820825489 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.809018279 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.974789643 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.14721245 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.855035843 seconds)
  done (took 89.054829035 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.821095895 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.810847815 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.811886066 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.814369234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.812493584 seconds)
  done (took 10.805677315 seconds)
done (took 2140.508213043 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.042152857 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.993802314 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.034184833 seconds)
  done (took 5.755412569 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.953013095 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.002854762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.120652704 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.141128408 seconds)
  done (took 9.949695562 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.090291691 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.176715558 seconds)
  done (took 5.995448183 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.12890375 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.838194763 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.193100121 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.808302728 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.815452888 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.814887065 seconds)
  done (took 22.171295486 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.813184277 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.815677014 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.812768159 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.815910571 seconds)
  done (took 8.986142611 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.79285794 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.51687246 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.79385989 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.808582644 seconds)
  done (took 20.640682137 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.558650495 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.936162274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.556383899 seconds)
  done (took 8.779616788 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.514641334 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.189698382 seconds)
  done (took 9.433582264 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.972058252 seconds)
  done (took 3.702731415 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.842782458 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.085750004 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.331546519 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.398567832 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.445403287 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.070005123 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.161393321 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.04894054 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.267803447 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.309759765 seconds)
  done (took 24.692320133 seconds)
done (took 135.03757336 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.375513761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.844108791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.014540325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.185806431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.047378692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.01440322 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.02757801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.182425013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.870227254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.86055251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225934073 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.041372341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974599935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831656827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983274522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.832691064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.036926482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.219052579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.866233344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.10510131 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.044632799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.822359835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.013648118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.83710096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.040663331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964024913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.368273948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.83436309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.003976227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.381020116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.968564591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.238768153 seconds)
  done (took 166.788508832 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.812351104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.813228824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.812533387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.813131794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.334976637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.812740647 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815407831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.811598732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.248464748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.240842994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.813152373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.332268708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.814365795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.811923912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.812110958 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.812843385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.403885181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.813292988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.813434527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.812938915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81318149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.166294247 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.814005442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.187934723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.394511926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.814864452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.812188858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.813279939 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.814015201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.812151688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.814264607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.816209834 seconds)
  done (took 207.563032691 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.812464277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.815228818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.815654614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.813637983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.816228807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.814276204 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.814550115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.813456982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.562756593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.562446733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.815884219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.814850578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.816550165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813730825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.813072455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816189458 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.813897576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.815210753 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.815961358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.81619817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.815462297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.542813043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.815070664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.548322705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.81574439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.820820607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.814449998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.82571973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.827268407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.828770151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.832072196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.81510245 seconds)
  done (took 218.829603274 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.072281353 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.823461146 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.827700369 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.746742311 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.824990878 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.824439826 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.816744822 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.078632297 seconds)
  done (took 18.770824021 seconds)
done (took 613.692053488 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.321360027 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.167046869 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.007043616 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.848358189 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.087486167 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.881666177 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.843408164 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.911496532 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.484842214 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.919256995 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.52626607 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.863846232 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.604262646 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.875855777 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.967531667 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.900163729 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.388568185 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.480312925 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.019426307 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.898822558 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.015432899 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.782269178 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.927850214 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.514258159 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.623670885 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.847933812 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.918479708 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.398913258 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.855775051 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.006531795 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.593598526 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.166186482 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.858818358 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.839544688 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.897881205 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.877037022 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.122780789 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.855193233 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.962524344 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.590052342 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.911546661 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.391552367 seconds)
  done (took 100.691793706 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.81203623 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.809686754 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.80956778 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.81067804 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809447573 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.810373772 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.808736743 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.810105521 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.810503325 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.80986744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.809060551 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.810368071 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.809699133 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.810775661 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.81002479 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.809653438 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.81292572 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.81151131 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.809944387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.810422972 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.811439928 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.809227418 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.82384924 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.80990982 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.810915567 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.811203859 seconds)
  done (took 48.832484596 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.826612795 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.974963918 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.063838793 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.845447369 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.822808839 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.826279079 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.842564351 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.832193138 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.825420763 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.82587494 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.917017147 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.833517354 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.843865807 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.062798263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.842925963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.827026075 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.828291462 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.825016041 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.981052073 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.841577008 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.84505674 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.832421017 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.844951916 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.83829275 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.82631885 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824434861 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.829253429 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.272974914 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.83536151 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.917491685 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.882269934 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.848939269 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.205935153 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.070573622 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.882750027 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.837806849 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.827960455 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.918683208 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.830705846 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.825563397 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.843426185 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.830079303 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.06076012 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.313983842 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.840772422 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.828870082 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.280458144 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.929243345 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.866418065 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.835901231 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063864619 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.844984688 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.829387286 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.824905269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.861336443 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.830234167 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.82441948 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.11733618 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.839045035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.844064607 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.833178725 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.826667652 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.984792969 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.836082576 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.975595371 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.83678579 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.832161494 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.826886167 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.063854431 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.845675065 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.311226333 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.841758463 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.829215403 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.91674647 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.979684926 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.30988688 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.840761034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.984565411 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.223990722 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.85294855 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.834049599 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.259739473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.856804144 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.83413681 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.831432259 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.831098869 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.829674293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.875588393 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.843825051 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.256048158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.319768985 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.138467451 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.855272303 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.841899689 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.827693208 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.118869407 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.840027733 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.830159741 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.058978742 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.325902045 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.84335333 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.834458461 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.303270837 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.845899682 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.847232292 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.836860803 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.068196427 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.845946168 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.875593375 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.832177971 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.83493213 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.830865096 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.847979318 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.836739852 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.830982244 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.297714694 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.941389949 seconds)
  done (took 226.65455704 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.825958683 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.841407795 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.823448597 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.828349185 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.823293161 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.828645802 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.82379923 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.822430162 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.828114808 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.82266617 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.824185843 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.825510177 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.826602387 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.831697843 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.83284132 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.829562253 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.429744984 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.82358665 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.837023355 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.824958504 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.478997058 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.832529015 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.825515223 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.823663112 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.826006715 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.824949913 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.835280788 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.826733749 seconds)
  done (took 166.175402526 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.832508851 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.944951652 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.849773112 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.857449872 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.842526245 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.829810677 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.854630603 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.846584893 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.835766465 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.830121096 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.830069848 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.89167559 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.844893435 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.930469941 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.863188312 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.863803759 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.934090857 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.841564807 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.830832902 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.83088203 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.859940988 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.82465001 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.891137704 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.958868384 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.85295169 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948205027 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.837917887 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.834651668 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.830591217 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948735154 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.851657119 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.895027187 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.861637686 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.849642165 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.953561495 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.949692512 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.939605393 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.863984042 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.835092338 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.83203902 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.832212781 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.817792316 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951228261 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.854895907 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.831419864 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.936129529 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.85505153 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.835135641 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.843576233 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.832860804 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.845261351 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.850352479 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.899956642 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.964958515 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.869831256 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.86050722 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.856113173 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.124261217 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.839919452 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.930259227 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.82559326 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.952076049 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.856990109 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.819796231 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.834407259 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.840285397 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.862594164 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.867625817 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.936440638 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.842160279 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.930205283 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.870521432 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.842104273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.835002513 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.838424657 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.948808151 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.951971617 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.871469992 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.87079266 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.865173135 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.827710471 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.832994468 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.82123146 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.850322144 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.839780347 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.951495115 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.952643337 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.844372255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.837245956 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.838317262 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.838085554 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.85913634 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.95836532 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.871814078 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.926594305 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.903731734 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.910759379 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.851102578 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.849700336 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.840101465 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.898012993 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.852955094 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.847288164 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.173646569 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.902913824 seconds)
  done (took 198.729513172 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.288038032 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.888636345 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.890208686 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.151662981 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.1786537 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784648671 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.881467226 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.885545237 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.905597788 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.073138615 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.959397396 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.90441758 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.8709415 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.856597318 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.885008046 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.904029443 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.897461191 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.226770759 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.993412445 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.02902329 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.867028076 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.174286875 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.163549756 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.276541253 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.917600062 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.229314898 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.555724138 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.027815799 seconds)
  done (took 60.422953248 seconds)
done (took 803.243780805 seconds)
SAVING RESULT...
DONE!
