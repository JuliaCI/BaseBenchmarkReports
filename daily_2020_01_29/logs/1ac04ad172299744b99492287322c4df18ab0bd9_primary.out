cset: moving following pidspec: 30234
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.450578133 seconds)
loading group "string"... done (took 0.609820221 seconds)
loading group "linalg"... done (took 7.539960854 seconds)
loading group "parallel"... done (took 0.168596942 seconds)
loading group "find"... done (took 1.184254913 seconds)
loading group "tuple"... done (took 1.941514006 seconds)
loading group "dates"... done (took 1.31926285 seconds)
loading group "micro"... done (took 0.229832617 seconds)
loading group "io"... done (took 0.994124958 seconds)
loading group "scalar"... done (took 39.736491002 seconds)
loading group "sparse"... done (took 12.328344787 seconds)
loading group "broadcast"... done (took 0.987564146 seconds)
loading group "union"... done (took 12.683002013 seconds)
loading group "simd"... done (took 4.68532493 seconds)
loading group "random"... done (took 9.401750239 seconds)
loading group "problem"... done (took 1.861099171 seconds)
loading group "array"... done (took 21.665211575 seconds)
loading group "misc"... done (took 1.713994514 seconds)
loading group "sort"... done (took 3.462329275 seconds)
loading group "collection"... done (took 18.078164182 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543912218 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131307998 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125862465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126358824 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154517248 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119871794 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133494329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09166372 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.817393799 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156856432 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123699626 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.445293905 seconds)
done (took 5.289655119 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180551288 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088412778 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087953407 seconds)
  done (took 1.312376863 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07252884 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130592153 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071274773 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072199544 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071939323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071585516 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07218263 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071252911 seconds)
  done (took 1.698825888 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078028216 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07463844 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070691372 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072507066 seconds)
  done (took 1.429929035 seconds)
done (took 5.838899672 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.813333459 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.221380768 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.195397367 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.432199379 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141908923 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169444792 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645693462 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353444582 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197396443 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085966394 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114960696 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.345408187 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11501174 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644985704 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078899895 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096348279 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141335794 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.408658675 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075489499 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088964356 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095504078 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135064789 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093606545 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080795676 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151868245 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072104258 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144400109 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085103234 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071079828 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221466316 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177190992 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666498611 seconds)
  done (took 10.534925619 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105177719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106105622 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075333649 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130035276 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10390954 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073946636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075181684 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071853739 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09239883 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132397031 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093012478 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107354214 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070102634 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072838794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090292056 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210597873 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.0884294 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09036862 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078242615 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082171386 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111493527 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083021371 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081758847 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081253361 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132999981 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184419221 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104144124 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103669062 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073717819 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087273568 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.121666205 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13335752 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072368602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072233258 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130812047 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098348741 seconds)
  done (took 4.805520138 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.047976642 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151956735 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095066715 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14180974 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069522292 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114836415 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070053814 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08746847 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.223553582 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.491487471 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.621965671 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115977423 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110718192 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072226692 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073185365 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07174474 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.569285265 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100731757 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113833651 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087462021 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075040017 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074025109 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36137146 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073166283 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068556473 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073751778 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061710014 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131609276 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072374068 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.982085262 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.135166537 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071804022 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105630707 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165949672 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.116762144 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092341529 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.281084295 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074524993 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069837027 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16019268 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076409371 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069983824 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071310458 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088738287 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108666667 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120712986 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069620918 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074164448 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169947866 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06973076 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085563342 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.667929599 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072725201 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158239126 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084570152 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071006317 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.266667074 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094327457 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075524964 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069777505 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18931839 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136000491 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072384785 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071362824 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073611344 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07444339 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.392395911 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070515433 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.233299593 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07323778 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082337885 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074234823 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074230153 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07808152 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077168779 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093638059 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068327897 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070195609 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080168532 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0704229 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070433857 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071263443 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087815832 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.401444961 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071029985 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072367571 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069289566 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095201165 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1008746 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070868531 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069600247 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103835869 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072806757 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070912907 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113412648 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071448872 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.188807447 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075083505 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118397481 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071240695 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.139504456 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072449578 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105311219 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074147427 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102967608 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085142147 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072891158 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.448617106 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069643256 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069853754 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073516089 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069799206 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072323567 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070245991 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084406616 seconds)
  done (took 22.349153134 seconds)
done (took 39.871834636 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270113392 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078250353 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082689516 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078620343 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081143581 seconds)
  done (took 1.822907753 seconds)
done (took 3.034316726 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129329671 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106180139 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069338911 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102946367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069333312 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107719706 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106825973 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082009771 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106897623 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071023994 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106131607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070003183 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069434281 seconds)
  done (took 2.429030279 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088466577 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090241886 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074752846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089140157 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068567684 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088665964 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087137389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094950446 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086632059 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07780155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068486583 seconds)
  done (took 2.119738299 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088243772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091176223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076449022 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090056651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069332442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088663556 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08727843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092084596 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087292926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078788695 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069614155 seconds)
  done (took 2.122366046 seconds)
done (took 7.870545292 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083798558 seconds)
  done (took 1.278705674 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.618348712 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.172740113 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.087193696 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117911821 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.20114154 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.125395083 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280983577 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091964093 seconds)
  done (took 9.078275497 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097236113 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090063236 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080386181 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075333109 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076934574 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075685624 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077778119 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078885484 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078925247 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079453442 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076419045 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078989564 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076524981 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07481028 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078075216 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075469301 seconds)
  done (took 2.541317582 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097621713 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097479063 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07894787 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079336683 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076697909 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076922805 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078094462 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078482617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075426407 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077329757 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079950622 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080277093 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078186892 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071085097 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080626042 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081275209 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07609058 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078241431 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08030311 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08236605 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08221312 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070964529 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078691445 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081139929 seconds)
  done (took 3.224263629 seconds)
done (took 17.327758036 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111567177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073037927 seconds)
  done (took 1.386776686 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087580971 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090335966 seconds)
  done (took 1.388676979 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088056517 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.071144575 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.097961195 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083128702 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070525715 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070243585 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.095825885 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072669375 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072554322 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073079037 seconds)
  done (took 2.005464095 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073956422 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085524608 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07814966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.089637536 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080399924 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070795353 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080889837 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074666917 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085443482 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069277823 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078060113 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.091199931 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078692307 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092028876 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.080076584 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075081323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077797523 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073716615 seconds)
  done (took 2.648049863 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069312569 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073478753 seconds)
  done (took 1.357389346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072260058 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068276555 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072409414 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071937874 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068059615 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066540034 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067617227 seconds)
  done (took 1.698223032 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.4036502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121201786 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336240217 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077385215 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088627509 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.274540473 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070524905 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075602573 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075543095 seconds)
  done (took 2.78571866 seconds)
done (took 14.488347659 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084624729 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091698495 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102078007 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394004578 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097005364 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070551244 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119067998 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.201329592 seconds)
done (took 2.387291759 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218772823 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.730419112 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.453211668 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222176541 seconds)
  done (took 2.624873338 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362932979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094148694 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063035048 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073074773 seconds)
  done (took 1.822400945 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070935547 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073688848 seconds)
  done (took 1.37071115 seconds)
done (took 7.26355697 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07168248 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070734709 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089447985 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068503892 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070568177 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068113998 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067604544 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070201668 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07024053 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071066894 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070229257 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070088452 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070464091 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070066603 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069697811 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07303729 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069354614 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069492188 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072427331 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069861283 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072263925 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069729721 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069924034 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069722926 seconds)
  done (took 2.968101546 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089515914 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069576132 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075370718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.076066274 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073656671 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075192883 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075265226 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069995242 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076749742 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.074657855 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076204944 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076075758 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.074754988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075985152 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074990194 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075976486 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078245166 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072665766 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0746208 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0748034 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077585475 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072655392 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076032011 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077790254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075744264 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077907116 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075513021 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070864414 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077487649 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075466628 seconds)
  done (took 3.502899406 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073987048 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067436839 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068464624 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075302583 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067934354 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068791587 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067860159 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067736023 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068799786 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067805339 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069079349 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067630812 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06822047 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069485992 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070349477 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073404054 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086201872 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070530789 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069679829 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070375602 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07301641 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069685593 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069900558 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069387062 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069237261 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.184537367 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069601882 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070465406 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070176239 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069923834 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07328365 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074075779 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070083957 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077737187 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07378748 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069483221 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07343781 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068834639 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067844317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067317751 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068444759 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067319106 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067138746 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074657541 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067591133 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068814272 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068105469 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068358422 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067981362 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069855364 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066922704 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06756838 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07188132 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071073777 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074506432 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069196311 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070608031 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06937282 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071048098 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.069658694 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069824697 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069852008 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072757036 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070466606 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085621646 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077361205 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069805879 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071595407 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070388204 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072961149 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071714427 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08540348 seconds)
  done (took 6.454253967 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098727263 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094038122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07149666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071518133 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06792272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07005417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075907923 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069678188 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071460762 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089188042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0708437 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071904347 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071390415 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074151701 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070666508 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071463115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079072602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067674867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070782663 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073845567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07000942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076147466 seconds)
  done (took 2.893192811 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16198997 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07489367 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111147897 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080055828 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074103208 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079837174 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074090109 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076156864 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076650879 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074329788 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07400902 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076274045 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076702057 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074081036 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074058567 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072964585 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075546414 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073707021 seconds)
  done (took 2.721205605 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081459034 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071070963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09471496 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07280739 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072838471 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074745441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076967778 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081476093 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.074603245 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.072964492 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08067275 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075543918 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075209162 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072446284 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074634994 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072767266 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074705725 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072003516 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081088999 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078034026 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077109239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080813666 seconds)
  done (took 2.931345857 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084431074 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072833657 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086501657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073359139 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066060853 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068925265 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074668522 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070007022 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07529142 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072218365 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070343943 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068476794 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074712561 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071793196 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074982441 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070290508 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0719432 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070138956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074126641 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068457684 seconds)
  done (took 2.700126142 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092738221 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073992754 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074049086 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081708118 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072391418 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072054737 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079834385 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07244738 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073026311 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095480003 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074053895 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071651446 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079704713 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07707942 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071962161 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080053723 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079699384 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079667713 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072514251 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071665472 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095176898 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072319059 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079701587 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072207775 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07179209 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072053066 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07178572 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07769229 seconds)
  done (took 3.400308965 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071551757 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071800592 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067382316 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068167237 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067883047 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068169776 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068126674 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068423141 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071109693 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067981688 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070089948 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070558938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070260979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070181158 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070258018 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070923637 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070455218 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067597962 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068151886 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068315911 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070479105 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070597241 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070246224 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06789248 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067883219 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070396202 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067869542 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067622702 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070222454 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067559312 seconds)
  done (took 3.322732219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080263226 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077263877 seconds)
  done (took 1.403536262 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067801428 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085206494 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067096102 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074458247 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075877276 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072975797 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080839857 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07678144 seconds)
  done (took 1.843076359 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088422749 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085497166 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07502914 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.087053468 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084670825 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091474757 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145716254 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073994521 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080906083 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070784236 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.090623489 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073054846 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08007297 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073828255 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076738533 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077839542 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068250691 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076855699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073111382 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069248593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07189033 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079453035 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074062015 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065941701 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072450672 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094551329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082164909 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070817938 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073804129 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078757073 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077055967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064848608 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.071447659 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071199812 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068539874 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080645965 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085854494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074390708 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079308604 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071853336 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080933045 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065540552 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075869503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078147778 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081891139 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071584641 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071459304 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065129756 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068372142 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073647341 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065545293 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071387918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064929217 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077980604 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074452953 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081686712 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069994912 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07287967 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074373152 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073922634 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077671951 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072787028 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073591671 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070858657 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081824236 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076599614 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080103392 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06549025 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064944029 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070528787 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.082492791 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095247664 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076930629 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071322271 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071461537 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068424546 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074160212 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071531638 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077193441 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077341027 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07130241 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076326889 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078802863 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071182854 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073849184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079732377 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068894874 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073526784 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069441192 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08830598 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069865923 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06851778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068980631 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081293371 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073805738 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070507971 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069089207 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077614007 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064680132 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07092735 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07148378 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07061771 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080135438 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074077065 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074774933 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078940302 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079089904 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071898616 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073173375 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066367852 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070399126 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068768559 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077730216 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063726893 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07236867 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.194779875 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072682468 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080946448 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.07021832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071793851 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079371869 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077507075 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069828018 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068108231 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074462846 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071805157 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074480585 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079192868 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069734299 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067745287 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068119128 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077716399 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073619741 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077946824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077816358 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076914367 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067882413 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071146768 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.078565124 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.083525524 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.073472125 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07514849 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080483203 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074377294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073198378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08086381 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076725058 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072872488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078742553 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074093258 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068323829 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076783035 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076405938 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072822838 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077571428 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076575817 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073252752 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071442736 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069353317 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.078527579 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071902691 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069967451 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071108586 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07009701 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082124335 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073605666 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065236361 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067910551 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080515062 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070529043 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070321906 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072208323 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076432586 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073513792 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070479514 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072482031 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075122385 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084099228 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077153044 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074192304 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078826454 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085531936 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.073372479 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.075931183 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072848646 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075030001 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073684558 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082720978 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079107237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078887919 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074949554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067099485 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076398559 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078722554 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06966071 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069051197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069526389 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075038174 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076776925 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075143882 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070987815 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069218951 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07221107 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074191368 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073904192 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070430376 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070149962 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076847963 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068840811 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078405317 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072048881 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081954583 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074105659 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065431156 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073159883 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06849628 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07696076 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065121865 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068356677 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069862273 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071050718 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069259164 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073044365 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064187086 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076798206 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077823831 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069981822 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068989498 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069390159 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076953342 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072001438 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073896067 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073578159 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076199932 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.208311711 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07061358 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075985864 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082988275 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072320033 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065765441 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077039337 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070049194 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070928434 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071302586 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070410976 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074375897 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079714505 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077955371 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065219049 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073921029 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069789749 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070419835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066363863 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077420264 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07527541 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072108767 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078318798 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072168333 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07078419 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075659872 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071273627 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07191045 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072049939 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074853519 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071819423 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073230362 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069791423 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074590072 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070066877 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068049016 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073287011 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070870181 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071415635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077090993 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071136615 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070804911 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073373871 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071182377 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07185179 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071928559 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070078233 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074349349 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071941899 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071164972 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073909062 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065578929 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078682054 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070019304 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078802297 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071986731 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068047277 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077903875 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074614821 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077879853 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073711958 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073752243 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074096929 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071366808 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074393521 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078869534 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070014698 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08197621 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078951852 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071791231 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074110065 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071410894 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072534698 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070542495 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071719044 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071503254 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071341096 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070813155 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07531365 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074504536 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07102257 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072447108 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071977689 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071770297 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072240896 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065374001 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070450467 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070308775 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073300955 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081474691 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071566384 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071562047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.070095189 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072353533 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070542743 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067686744 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078991489 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080053718 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072627611 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079733678 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.073108977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075410734 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083908237 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066345896 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071170296 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07034725 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071594711 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080305726 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.073225745 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082442895 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072699979 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071201019 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068812192 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073338101 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070475838 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066422748 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069945152 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075725546 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071267317 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069810308 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069947062 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07309193 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.201106258 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0818893 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071784122 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073042502 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071862253 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069750354 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072295774 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073414585 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07692256 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073713006 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068981947 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068101538 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070907919 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072945445 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073745038 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073462593 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076170677 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081458114 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073675703 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076568784 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074568274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065587915 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075363679 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071573972 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070846651 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070454813 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075506709 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075131028 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072906879 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080336656 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071448522 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072315912 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071797402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069455821 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071354387 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071753608 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071720023 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070662821 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071894609 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079799536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069074694 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074173688 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071973894 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071395263 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077943553 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071590934 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074507904 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07802704 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071214321 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073458226 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079720246 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074768399 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073776604 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072110106 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073100638 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076609911 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070446598 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078370511 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073193816 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074339102 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075153741 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071474815 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073847309 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073627675 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072842909 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079450864 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.074532675 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071985722 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.072934768 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070832819 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075089974 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076426332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081966592 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075785658 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077081883 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068564706 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069704563 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073946269 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07182647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075081742 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075632611 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079698175 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075609882 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074155099 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072279277 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080684847 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077694829 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074841316 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069558153 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075207696 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071841921 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074362902 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072474645 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072000125 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07284344 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.0752005 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072616894 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070093181 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077853896 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075404028 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072699008 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071924003 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071575097 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070955271 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065428879 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071032147 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072594824 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075328149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072284331 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070668846 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082045694 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067798474 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070836437 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072625903 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069041824 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074628931 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065040737 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071489328 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070789855 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070353314 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064637092 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068927753 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.19740185 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074353711 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070470277 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066328991 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082716051 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081289655 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075559479 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071546136 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070675269 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066539027 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066786248 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071424636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072527939 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073089656 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082720809 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.072464217 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072618062 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069030003 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0736792 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077361228 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077353641 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070158666 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067823387 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.072774986 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076590467 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079442161 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07261181 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073133712 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076447233 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074297098 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.070081323 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076002591 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.069592321 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077735164 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086985326 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074206271 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074381024 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080529895 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079386083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072064433 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06582512 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071740146 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073803287 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072218479 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072767838 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072097032 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087161066 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074499917 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070804191 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070421518 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074494809 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070670956 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07983981 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071666184 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071706938 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075650708 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072159912 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079835545 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073870181 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079089732 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075793652 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073326029 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070657118 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071261198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069025957 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06995912 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073104956 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071324727 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075050412 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078844271 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070186835 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082310425 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07992712 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072563561 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067450547 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07047338 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070635181 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065684565 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072585165 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068919766 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069711904 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069138394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070338758 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072258228 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076937438 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072012041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071704778 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071113044 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065256325 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075644045 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076032443 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074671947 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07003314 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.073878685 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.074273446 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077816943 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077680604 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071164139 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07512813 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074767454 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074824139 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068629951 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080207107 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072429638 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074241523 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07021918 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071722887 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071234481 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074700061 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075538252 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071599845 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072635571 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074495098 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072474468 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06736254 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06725942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075205822 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068223372 seconds)
  done (took 45.72998907 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108064898 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067770675 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066703573 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067240798 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079174232 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069235714 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068542869 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069429727 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069991584 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071428394 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068604657 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068638064 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075699608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083107791 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079944044 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072850193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067941653 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06979255 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067424847 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066734381 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076736588 seconds)
  done (took 2.882745849 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079455722 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082858653 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08135915 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086944188 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075074029 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074818555 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079796125 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075387445 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082604977 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076833447 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08258237 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07448135 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076746057 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076853132 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076702622 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075185013 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08507278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074898667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074521331 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079304124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074878959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079679128 seconds)
  done (took 3.04215058 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071402425 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070827624 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072640966 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065713173 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.07028435 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065502293 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073637378 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067756296 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073708352 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069827457 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069802662 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069482136 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072108497 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065743637 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070265155 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068261702 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114128729 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074486562 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070481894 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071171118 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066222991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072543449 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06619124 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06611177 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069398494 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073694147 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070848215 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068533108 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070476888 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069504824 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070418922 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067712349 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072474152 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071509585 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069146987 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0697034 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07019741 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07070339 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065188346 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068134876 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071069424 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065845683 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071361033 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071762642 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068152453 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067861269 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072080841 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070043515 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065362784 seconds)
  done (took 4.779556568 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084355579 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115356784 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071974804 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094393944 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086893154 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079466171 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075836479 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095368432 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067705281 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068352946 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085877514 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083404346 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069905907 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074391077 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076749155 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069709574 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070649209 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068607202 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073442897 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068892598 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073436888 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077193382 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084918562 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08253992 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073407664 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068584613 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068667588 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073904074 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082532882 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074123116 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074652662 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07614053 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085252323 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074919408 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069006044 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07314221 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086130351 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069828128 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072501306 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068302798 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072282461 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073832743 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076492684 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087100846 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069730067 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075117118 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069753612 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06804921 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083717892 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073530361 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077272003 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084315287 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073476367 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069809509 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074232985 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085182916 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070704299 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068692402 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073499636 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081954324 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067501227 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074199444 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083434963 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071735511 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076943781 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083928023 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074849175 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073641533 seconds)
  done (took 6.671798621 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079877886 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100491888 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088740284 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087815572 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080418702 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08042418 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080003759 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079833176 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079864914 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084473373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080101512 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121070423 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075344842 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082323133 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080197203 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08054129 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080310739 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080778983 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079924476 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080601618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080112681 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087912319 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079970377 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087571945 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083935466 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075793823 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079741646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07961482 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088086606 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088299077 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08412178 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079698688 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080007218 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087706253 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084157103 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080175624 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070008109 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079652889 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080678608 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080291057 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075526756 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087826957 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080123784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075285615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079936628 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079753495 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087944876 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084411498 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082371002 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085446993 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080287232 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087538545 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079785846 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080682293 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087931302 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090886329 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087286178 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087669509 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08129504 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087436774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087737759 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090689623 seconds)
  done (took 6.513824945 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089177613 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07830912 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087349082 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065816817 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067884645 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076196561 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068447121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068070232 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078065072 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078224514 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080510071 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076592754 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079334794 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080230376 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077908223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080085932 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076150026 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077806028 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079869089 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077034631 seconds)
  done (took 2.88759408 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079890612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088644831 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072440899 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078093448 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075892325 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078363642 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076629238 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076377566 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074137539 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075567801 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081357878 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080813878 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071390634 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076176424 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082193134 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078876805 seconds)
  done (took 2.583765922 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.089462079 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077533219 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.086425667 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072739547 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073419665 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068510102 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071971012 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067590833 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068636852 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08528257 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072660162 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.0833175 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072645991 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071400152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068862898 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077981605 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068401448 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069916171 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071824969 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08538562 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07696233 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071291671 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075654131 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07207749 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075151254 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075980348 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06912735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070027661 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067211613 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070473939 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073275142 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073513472 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066991636 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067943261 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06899169 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067043174 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070356712 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070320474 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075950919 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069713817 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06812146 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072901735 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070381775 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071138969 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06612861 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070815391 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066593177 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072142438 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067581054 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072946789 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070124991 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072650934 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071312031 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077295285 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073330273 seconds)
  done (took 5.333973752 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084553602 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073946381 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067077758 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069783085 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075807559 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073263569 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075981178 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073257172 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074072447 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069993469 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072797062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073904934 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07242218 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073675263 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071285073 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074257374 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066857839 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07324541 seconds)
  done (took 2.666921575 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077382633 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071192077 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079643271 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072221319 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072493916 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07508802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068140323 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071156291 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071762969 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072108412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071838415 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073738318 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071338624 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072679658 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069868702 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070417304 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073325719 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070044805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072263285 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068225734 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07462437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069191336 seconds)
  done (took 2.932789545 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101300973 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087706814 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.1466248 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084626215 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090391916 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076522562 seconds)
  done (took 1.931520339 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098953902 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108497478 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070807531 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074413217 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080501321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075647039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075942128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076603443 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084545452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080677402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074476035 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083393509 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08319523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082450133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081379265 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079934648 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074758083 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074838547 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07071245 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088603694 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074607514 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082751689 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074874921 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074146271 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074181394 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081795764 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082550847 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080104969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074266559 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082877592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080392403 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074413105 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083637226 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080205435 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073589778 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082884693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074473192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088720899 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08025491 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08265164 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073587911 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080253868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082981253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079279083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083231039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075255441 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079120969 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074604827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074463206 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090810252 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080605821 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082317456 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080320812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083693688 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083045411 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090925621 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080813237 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08230806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080407631 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080415129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082011462 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080447425 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082414301 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080814849 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080742233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082142444 seconds)
  done (took 6.666246959 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112534482 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074079958 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07824938 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082971585 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084796673 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077246271 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077806682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077362082 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07696561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073205034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113778672 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074608377 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082414205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082810846 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07461635 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07462309 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074609443 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081926378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07120875 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08982772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074288205 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083138507 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081944725 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082177624 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080162106 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080399974 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074563674 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07449771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074792447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07477401 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079992404 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074878378 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082092294 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071236609 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081948162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074461102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074950076 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079160215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07413868 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080305551 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083066767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088219877 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074866539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074729851 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080703381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0747006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074778811 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071414335 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074886376 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070983265 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08024226 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080178033 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080740418 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081936822 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074674744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074801318 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074295549 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074734156 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07470151 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080327096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08262471 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074549237 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090757357 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074852055 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07470208 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082898514 seconds)
  done (took 6.586921191 seconds)
done (took 136.574291301 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201063752 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172722933 seconds)
  done (took 1.721582581 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076072366 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107405533 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084776875 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135460662 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071241268 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104158866 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104895581 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082773666 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07068852 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070243693 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070934444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072927892 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135714542 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07057967 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070052716 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073452359 seconds)
  done (took 2.763402875 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106457433 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17054068 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108661313 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069571854 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104622617 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077097835 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069057659 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080387509 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075040074 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069673524 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077180712 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075114393 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069575014 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074769451 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076042594 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077462472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069197181 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076827546 seconds)
  done (took 2.8930113 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106711327 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.099134484 seconds)
  done (took 1.573304976 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.167922228 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138022309 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21012635 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.365059065 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16898437 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153521403 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149175162 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149188414 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.125030807 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.144548408 seconds)
  done (took 3.134673014 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107344411 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163291045 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.281060026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124869759 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077535931 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099111203 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126205029 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083458785 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.0857505 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084926119 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084908063 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081699778 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1052299 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077545964 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078990715 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080789506 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11003335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077457588 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079378072 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080304354 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106200917 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06980644 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077347823 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078306055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081411629 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082882901 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070575651 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069990729 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.081232006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079652026 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080773097 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097343452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081998536 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111170532 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075682049 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112965845 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08153723 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078313336 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079940186 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077975781 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082469204 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082425075 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077817946 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080754636 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069956532 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081213132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070286529 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070014109 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082718994 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071333206 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082324114 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080927847 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111878947 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071653076 seconds)
  done (took 6.271263946 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10982273 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110919796 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075231839 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11767396 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108457701 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076624489 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108986753 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100803994 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110408049 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074225181 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07346939 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074753824 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086544566 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08800528 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120823044 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112744631 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078300851 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07543697 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111503639 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110780392 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073128621 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102196315 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096666201 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109082976 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071620914 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075439837 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072343583 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074426069 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081333032 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082692764 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074835589 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085202898 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088987257 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083136698 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071715545 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072501302 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072776697 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08371315 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083656405 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083417769 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.082306792 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072000981 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07272511 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074403681 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074805689 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072192791 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083557536 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084838547 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.083319449 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074832055 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076372496 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.077698499 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.079820968 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086971718 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085234459 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085590582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084606057 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072972487 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073123779 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077362255 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085479015 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084433486 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084062834 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074273333 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084388939 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073546267 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084864664 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088668309 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073150198 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074471834 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072824774 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074465806 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074602236 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082098877 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082947266 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074426276 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074280308 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072890127 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085025402 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082853349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072821214 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082296618 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071956148 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072634046 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074499392 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074558114 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.082262209 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084538172 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074369892 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073142316 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073069849 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072647433 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070955597 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080243869 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083058536 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082601853 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082231001 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07342207 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082284935 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081568493 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074470231 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08264051 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072283024 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073376503 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072760395 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081312108 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079957885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082578758 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073128987 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071721198 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081267435 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083273274 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072110794 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080729993 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08273002 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081947251 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071636534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083895514 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071739605 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081863552 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072393637 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08274373 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071581052 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082380264 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07204332 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071074137 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071763324 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081678632 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07368829 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071495274 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073442301 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07359886 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082102306 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084938569 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07419551 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08095723 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081950527 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073621656 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081866466 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072020825 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080751706 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072154635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071411798 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070446887 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082689893 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0711687 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070766017 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071178991 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081753292 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070494659 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081262808 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078741872 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070679779 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082095212 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081704915 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079661076 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080928521 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072794494 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07064179 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071376815 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071046614 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077661925 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081173021 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071837435 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071093049 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079269711 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081216477 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070000753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080014073 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078988554 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079440773 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070444545 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072096759 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081515464 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08280635 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079827248 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079184616 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07950811 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070578031 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078825666 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079297362 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071375985 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085619632 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070908591 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084819831 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081106802 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077750817 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08134329 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081177434 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080877154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081699144 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084502353 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070676335 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07131524 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080896496 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070946191 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071478726 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07983378 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071460759 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072202035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08455919 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071467243 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081540312 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07041022 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081005922 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069933394 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072341403 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084138957 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071566995 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.30667654 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087001342 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076491686 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085342315 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088032618 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085593581 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075506802 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077364234 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086443396 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086591334 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074723265 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074903738 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076839427 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08512133 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083769711 seconds)
  done (took 19.472590611 seconds)
done (took 39.202329049 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.221965074 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16383867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184079417 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.126766036 seconds)
  done (took 2.195092687 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.127874426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108957342 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.102509004 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071322353 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107143355 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070978997 seconds)
  done (took 2.021200815 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327527725 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221175262 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198029862 seconds)
  done (took 2.175718414 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212171395 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200873689 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44488809 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.27988407 seconds)
  done (took 2.686438223 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.152560193 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09519287 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073152541 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090447896 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141671735 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168514864 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.106428045 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132269843 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084617492 seconds)
  done (took 2.530391569 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156434381 seconds)
done (took 13.202316685 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.19844229 seconds)
    (2/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.212632331 seconds)
    (3/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.206550064 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.17823662 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123664591 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099947448 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.117297001 seconds)
    (8/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089875914 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088763249 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083892834 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119941206 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119208571 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.245146844 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078471654 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086948619 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.186646613 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.229129376 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079951243 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.077767424 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071066325 seconds)
    (21/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086294716 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.116730845 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174759789 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.150027111 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.180435745 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074456278 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077050021 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09567484 seconds)
    (29/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.242579359 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079494099 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08245842 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080869844 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.225986966 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087301213 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078385053 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089739344 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19087872 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081775929 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.120340746 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241578816 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16209601 seconds)
    (42/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132100306 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16489674 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.141103352 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057131515 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174978848 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082084231 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078976316 seconds)
    (49/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07996543 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.078279715 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092005576 seconds)
    (52/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.215475268 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097310993 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.123242581 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079757338 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173630927 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15993615 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073469182 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071498943 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070864667 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081344765 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.082867506 seconds)
    (63/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.123970846 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080025357 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096798852 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156205533 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099031293 seconds)
    (68/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081457304 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.071345257 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076933677 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055431633 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081784396 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192422073 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.107934938 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.172804091 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056256329 seconds)
    (77/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080166792 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054846681 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07766643 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098576832 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057381871 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073182941 seconds)
    (83/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098018584 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183421503 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146331674 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146242854 seconds)
    (87/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162723753 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.248847766 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057012333 seconds)
    (90/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.281817602 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.097756147 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217753425 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.076673974 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096408145 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147878551 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099426335 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056795621 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055970306 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215831322 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078353028 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079050892 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.194225837 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098399849 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 0.139128561 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.217886466 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079515639 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070333219 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15552248 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093774262 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070534115 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081005912 seconds)
    (112/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.111527403 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17062356 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205353203 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086007031 seconds)
    (116/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165301884 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17663409 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.186462988 seconds)
    (119/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199717618 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.169472019 seconds)
    (121/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081885095 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.144825638 seconds)
    (123/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.120994738 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079171869 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099679277 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080186529 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07861708 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096540265 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077924698 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098744361 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070153125 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.077315952 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054924511 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091229093 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071412692 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054704802 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193337435 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071765832 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081748183 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069845995 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08136335 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077789738 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093359728 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078796427 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055055674 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081137759 seconds)
    (147/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075702775 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.118092257 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083862365 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070632279 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.162211652 seconds)
    (152/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067620047 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069856996 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078509731 seconds)
    (155/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055736364 seconds)
    (156/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055050528 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071844329 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083039783 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056498699 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.057399056 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101493006 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120791299 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056008648 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054783363 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079513904 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079011486 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070880706 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162993199 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.1502564 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077003039 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130601057 seconds)
    (172/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05591728 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191559458 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100436881 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.184528947 seconds)
    (176/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068066406 seconds)
    (177/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07711926 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098984346 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069861816 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056660889 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055573787 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088321869 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056090896 seconds)
    (184/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.108118384 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213449713 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0710119 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076887931 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054705557 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069566831 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091285653 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119379662 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078967567 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054403859 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.231017095 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086775012 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07715878 seconds)
    (197/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055988631 seconds)
    (198/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204342769 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071469955 seconds)
    (200/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.122086575 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073195256 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055186228 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05519722 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070761966 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077800101 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056548791 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069109348 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 0.14130448 seconds)
    (209/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102695373 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069802649 seconds)
    (211/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070533086 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055593539 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.098762924 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071821918 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080979638 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07864446 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055707503 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055494033 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056502066 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074192526 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073273837 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.069749073 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.07201932 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078535733 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19640148 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077317772 seconds)
    (227/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068155941 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055968337 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068950188 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.088632052 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055720235 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.107611146 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05525425 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082149775 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078516798 seconds)
    (236/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05556923 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149075833 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067896023 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079109537 seconds)
    (240/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097173341 seconds)
    (241/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07204986 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070719292 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123122289 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120635013 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135656652 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.057350908 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0849831 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057755843 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057239749 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056615455 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055552736 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096960907 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095290131 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07073998 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076090095 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071613162 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092223973 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07756702 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07084884 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056387965 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079420405 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078062255 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056208007 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07178008 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069673916 seconds)
    (266/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126940464 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077140393 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094199663 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071350774 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140238059 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071803612 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 0.1494698 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056289673 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069416685 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055003592 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195096357 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069117142 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085586267 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070457401 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055205599 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078435877 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070241261 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072760646 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068843723 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094142314 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069279596 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055098814 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10368005 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055234624 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077899275 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069341718 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099621915 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058221825 seconds)
    (294/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068069338 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076329804 seconds)
    (296/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.0741912 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136779288 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169887132 seconds)
    (299/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073169714 seconds)
    (300/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054684348 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054877254 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055845022 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075965099 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183007363 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072538715 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054666766 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078363204 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078116189 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115250357 seconds)
  done (took 33.000306421 seconds)
done (took 34.44226523 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094687699 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100810109 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080447203 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099989362 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087339729 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082084531 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078164651 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083893679 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085436244 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08801233 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083971459 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05910688 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079596095 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080233253 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080321977 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097077605 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084213601 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077905564 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079060366 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069911406 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07866429 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070336063 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072729597 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058174203 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083699021 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076484194 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077405446 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079226174 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070267128 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070969053 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07381569 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078521102 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06959645 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083401648 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077452573 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077512644 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079983746 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081821521 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071924996 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070637081 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079278351 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.07010537 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078098046 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079244761 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077350964 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07586399 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077878444 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082915631 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096531778 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071990721 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079303844 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081107204 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080964411 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077574264 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074491852 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078417811 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075720232 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096483546 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078155595 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072508978 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079615772 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079856325 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075819709 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078290038 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077832204 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080089277 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080933877 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075794293 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080251429 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076677814 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070593986 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078013351 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073900478 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069708696 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080715686 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082798563 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06911062 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076906284 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077867853 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075928283 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069327503 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071777525 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074141922 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076841803 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071881784 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05815543 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074905953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07675983 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069224981 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078897116 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076989299 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0780356 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072183563 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081478101 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069151984 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075242503 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069968448 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069973256 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071924894 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074546052 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070076761 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072108485 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080008119 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07215364 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07763061 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084181671 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.07006547 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076717531 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069484475 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068752264 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08368566 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080250351 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069638884 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072346805 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06851431 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077373765 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069147031 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070030315 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069907448 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069763561 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076045721 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069897974 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071558585 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077174626 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08294726 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069410506 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073902835 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071075415 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069272642 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075899519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069877128 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.204539498 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073279597 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068142117 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07266097 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071120422 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078256323 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072728672 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079082601 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071707106 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078329486 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076010385 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077389306 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075688738 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068301179 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064102187 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072282427 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072314409 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071971365 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069904067 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071921847 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07033627 seconds)
done (took 13.273190144 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073269727 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147485603 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10207138 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100970911 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.09064184 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07217784 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.081193075 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105660003 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073200671 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106587674 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092785474 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092240217 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120504731 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069018387 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071000436 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074424254 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071616788 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086797501 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.105598447 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092489825 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121619744 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070073771 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098083214 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094902774 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093857206 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099751315 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071616019 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074581296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074929321 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.107460125 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093945111 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074539565 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071197832 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103844779 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099925389 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088719576 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070709389 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088256688 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070794381 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070129362 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072528575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104511485 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085524586 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086496896 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075791575 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081804204 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07191069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089446358 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095818147 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084147395 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.091143807 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107879177 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073683785 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.089548209 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069677743 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091634865 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082068758 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073607274 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070867881 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078982307 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070636484 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074163823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08592526 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085684984 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074846507 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.090824177 seconds)
  done (took 7.229874998 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091713035 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098265514 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089837983 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08969734 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070540473 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070554223 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.07095651 seconds)
  done (took 2.122813071 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074006826 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093832284 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094989766 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095494298 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087115795 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093609713 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080727198 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070823162 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093664929 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0726297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093193993 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106238522 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074694293 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078876637 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096416163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070633124 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09568306 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071233567 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074535448 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096314372 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073579306 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101568203 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075548666 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071881469 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086036651 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070948501 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121017657 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076084159 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07265006 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074321007 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06853232 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113378222 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086144178 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07933324 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070924448 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08784001 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086199652 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069807907 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.090565886 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083367481 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088448804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074494917 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075886757 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071582007 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07875132 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083913497 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072425814 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072522394 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07463294 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092606447 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071919781 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0856515 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074259108 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079745651 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07407225 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08067381 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085339461 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075410981 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09536847 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075692494 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093292876 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091845614 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088891682 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091456268 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076575484 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08894801 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088889104 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.076835801 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076342153 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078122081 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09172416 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071958848 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07493158 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082370054 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073777225 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095590478 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095537032 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07294181 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085091455 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071587911 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071631592 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071541201 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095656677 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077492092 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071677989 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075771955 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074149966 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069195661 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070244705 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074704193 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069135988 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072913653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075059161 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074522046 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074187229 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088787039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074152462 seconds)
  done (took 9.434083288 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074728915 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07215678 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073789434 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071816862 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072170181 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072991938 seconds)
  done (took 1.99915226 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101374646 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073764108 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085215156 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077228789 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110454984 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.092177205 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092829775 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083364598 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089134107 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083798397 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091656215 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09331177 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098275264 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078040275 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.093339437 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076073447 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092312155 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079668917 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083155164 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077153342 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091996245 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077479941 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077073214 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086513966 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080877413 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076563127 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08299125 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083871312 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082959732 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082934308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077373462 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080581247 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075286956 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082522916 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092988805 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075402036 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07592387 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081628319 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076348352 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081658091 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.093555665 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077368456 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078977063 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082011292 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082431181 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075157775 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081715887 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.085156523 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.092016853 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.08150674 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081673202 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075412644 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.08006872 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081675792 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075673941 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082418357 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081570982 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092155469 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077017268 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075418759 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072896366 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080737257 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083768227 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080944594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085596802 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082356591 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075305824 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07693606 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078062994 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075867496 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082224281 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073189052 seconds)
  done (took 7.493534252 seconds)
done (took 29.805196593 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545494997 seconds)
  done (took 2.070236791 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.639162972 seconds)
  done (took 2.191514319 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.423676596 seconds)
  done (took 7.976181227 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.415501373 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.540822641 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.74341766 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138513385 seconds)
  done (took 3.425270157 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713113933 seconds)
  done (took 2.274110285 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.223939236 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.211743523 seconds)
  done (took 2.003630847 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386378806 seconds)
  done (took 1.938954307 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.170049237 seconds)
  done (took 2.722007024 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265792438 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181891558 seconds)
  done (took 2.002625997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.496252038 seconds)
  done (took 2.048254769 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.919380447 seconds)
  done (took 6.473187327 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218647442 seconds)
  done (took 1.815236461 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242909049 seconds)
  done (took 1.799670699 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.731795826 seconds)
  done (took 3.286169739 seconds)
done (took 43.584162055 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084415677 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085910127 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08682753 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083008061 seconds)
  done (took 1.880761149 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081539148 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076790548 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080644295 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077484593 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080763089 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077347176 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079462059 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079644806 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077318243 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077996717 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077349584 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077774554 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079485628 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079495117 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075810571 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079788707 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081088884 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077328222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080018394 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076938958 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075168832 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079388497 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.08016405 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076735494 seconds)
  done (took 3.442425094 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083662759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07799346 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079988964 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076650869 seconds)
  done (took 1.883779573 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082886187 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097901343 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095528296 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082758594 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097407424 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091971763 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074221239 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073203433 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07470937 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082415701 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072271115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101555582 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093590639 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081993458 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084970924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070185692 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072829456 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092768122 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083127167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083687806 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074734676 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082213069 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072834564 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093756014 seconds)
  done (took 3.575895653 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09086855 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110478485 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.0857399 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094106346 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097714146 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069380884 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092560688 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09653353 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132893336 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069931046 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075298556 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06968757 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077599983 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069534548 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085865461 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112713181 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117419122 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073631755 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103318264 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070257454 seconds)
  done (took 3.362487055 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077026246 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074124836 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069759586 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072954013 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082600657 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077682024 seconds)
  done (took 2.02271064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072881181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072335601 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071776211 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071306028 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076444637 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072473697 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070355157 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072147195 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072468171 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071352678 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071826088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070542232 seconds)
  done (took 2.430351303 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208189032 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073231572 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073006808 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069925377 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074883654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070759282 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086283274 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071906144 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.0968117 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070658068 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070633322 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073243566 seconds)
  done (took 2.606360215 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217077005 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080757724 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249753075 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158563313 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116801588 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122305482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118624808 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11932224 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148755991 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106703421 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175626622 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175246794 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113815789 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143883128 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094455181 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104266675 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162249458 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171475248 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112067521 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173592716 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153506386 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132337074 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154883179 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112548381 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111551845 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128744819 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076231566 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085112922 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179398589 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14091174 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151456738 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117524981 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097636083 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184208135 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179857951 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147583819 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154426884 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090014091 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107922796 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.140279352 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209228714 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093744375 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168417705 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252905114 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086107249 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14064309 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124666694 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12566951 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11115857 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095876164 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153062326 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193890045 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.144950493 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093362533 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131491432 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120465368 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120513298 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119170097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191437822 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170649603 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132742069 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076186044 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115036493 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160171849 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139627718 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113885219 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1311047 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097148449 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14104293 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161914919 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128451747 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15046072 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.123553803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093584912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123941198 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146700352 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134067077 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168342064 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129869001 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077094908 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129413174 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107198803 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086036033 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154343796 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080740459 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182986642 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103738633 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111369102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131379899 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113968669 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114371836 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166811072 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150062652 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108177283 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.210903116 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111615 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127692081 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152584936 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092238546 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114129319 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123062463 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08179805 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143951796 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080469306 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130422764 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080168749 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131438554 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135320526 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082264014 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127635436 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109710957 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104519448 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139621005 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168051897 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092743398 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087562202 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176507491 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128587312 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110035338 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151242605 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163641271 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103144009 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10592371 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157199773 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186000613 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095179148 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169265881 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111704532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088150828 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093681295 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129608237 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117081832 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129366538 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086468121 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123889115 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176075595 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080094185 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100385347 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140262666 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083215963 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084762309 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110093443 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109573449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100577099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104698128 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107917409 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141894255 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128746004 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110143145 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129408243 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246932122 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180526787 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09246291 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107700669 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110452873 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075365702 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141548349 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163723482 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084031986 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170479528 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129908178 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12261261 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124316207 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088493319 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146507473 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084167671 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074743579 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151601602 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115798134 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115856814 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158493826 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122705447 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.132846774 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126394404 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140184668 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137323357 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135825069 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111470897 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092083111 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116093074 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132631113 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077768092 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096064534 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085751841 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109727559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100851957 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088154191 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148066667 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130117091 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115364193 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116422262 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101998225 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154337674 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080825359 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135448125 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125032919 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10077749 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158011434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158169202 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137055815 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10409582 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143257653 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075126158 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07787459 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092717364 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126739919 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230913825 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08934659 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122802038 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154733809 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135389743 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142946433 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130084725 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126901487 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161401792 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074196614 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124767599 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153702757 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127181485 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109083204 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096702625 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105332563 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148048836 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112568143 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190141072 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118469872 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128253298 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158892527 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107137643 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084654328 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108156293 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142217326 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109654437 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150799297 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105010729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093683881 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114191878 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078814364 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103986078 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132606703 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124541458 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140571087 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121650316 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13906611 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082381237 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12166595 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127292494 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127769842 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068135054 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125144951 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167182512 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099980863 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122972492 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15994286 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08353153 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140845098 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181211352 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294908497 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09113207 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114451444 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125794773 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135323522 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125411328 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146922423 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113239578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14273699 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116566079 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089345362 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092392796 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103386303 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110969038 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100491641 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.11092327 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120000495 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100985028 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13766255 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10981815 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115597335 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122383709 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.105216261 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096322543 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102226232 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184999854 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124637427 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177987866 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10387094 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150043807 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170541801 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079925375 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083140855 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082172193 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146662772 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088853449 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135782896 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113097107 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127105531 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129475065 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148521356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100711825 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072947408 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115966828 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139917116 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131108923 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104528309 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10974389 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170007782 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10542181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083542769 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118718164 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12145788 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108131639 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178809473 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065282077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110608578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080211823 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229424964 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135026516 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159403708 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084724117 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107957798 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124654723 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117704546 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134542378 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106359047 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113868549 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133302816 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159821946 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134717471 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09417039 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118463035 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13385563 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163192128 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111517079 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102857021 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180044734 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157791012 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.166506901 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092980293 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11914264 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118018066 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112448858 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142208243 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088168225 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170170554 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086531572 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143213369 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108786761 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093812478 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135636118 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114109625 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093057141 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15509103 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123835986 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087572886 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083140075 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123893951 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126047796 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111678283 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079572659 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143898316 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078304588 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137380081 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16647178 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085469582 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109951537 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100821882 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084030861 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25610965 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107441121 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092593102 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104432381 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180103444 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091723374 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156927976 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140291541 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118166507 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140531773 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108230496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645509175 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082492719 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159036839 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122026619 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182755769 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10635725 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122496665 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114077497 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12921987 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152513315 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109634945 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191437651 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139413952 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121420906 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083994687 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107543788 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10957852 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091787745 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112904664 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117368997 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121450753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.098622972 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.121189734 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13017316 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087319454 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101455806 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162717411 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12282245 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151003767 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147042443 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090926399 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123256292 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143269561 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084172779 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.126009964 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159322548 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110933699 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104585277 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085549064 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105636133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164762059 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.221688765 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1687813 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125983559 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115645007 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117014199 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118674511 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13721895 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112527834 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128041289 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098067737 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.114351807 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118956261 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087019331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082457253 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113038256 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117107947 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102338666 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102930585 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103408796 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156692774 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07688844 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103561427 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121665055 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150621971 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182526838 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092629711 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089097955 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125002188 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119379403 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118664851 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126610045 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084123525 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086651272 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084413499 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082580394 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114992973 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118261579 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120009833 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115960957 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170782081 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087949832 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.242485463 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100923259 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110511778 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07485156 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083259678 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10185343 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103456434 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113567981 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116184403 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166247715 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099749151 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094639543 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095699169 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07802663 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087862778 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133633639 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113759315 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122917355 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250970481 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067508609 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114359414 seconds)
  done (took 61.880158144 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112565901 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086265924 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100435516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149259787 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127256025 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206631574 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156047626 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194803896 seconds)
  done (took 2.809356027 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072381921 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100720824 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108369764 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089192183 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07120362 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072729913 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239293199 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085922943 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07054075 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101627913 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083318215 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073181362 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.440801568 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069965259 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072568215 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067286752 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071589951 seconds)
  done (took 3.560263393 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.403828827 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615829753 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361174196 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076628738 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.500376748 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089076227 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.147693833 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13307754 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076779302 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543292157 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41420712 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128374177 seconds)
  done (took 18.170279237 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080497232 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073895218 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089083548 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089689383 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076599239 seconds)
  done (took 2.091791322 seconds)
done (took 111.30375927 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086048723 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.620493298 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05682272 seconds)
  done (took 2.3871473 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087918621 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090275343 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090040719 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088155344 seconds)
  done (took 2.039594304 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079197675 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081220432 seconds)
  done (took 1.836708645 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.241864826 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173870936 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101752785 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08705665 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083507944 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084521579 seconds)
  done (took 1.937407137 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076750403 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079657449 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077236619 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081154859 seconds)
  done (took 1.9914415 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081232081 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056041059 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058421273 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061684854 seconds)
  done (took 1.934342246 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09193711 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084198029 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083292637 seconds)
  done (took 1.938248406 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107766819 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091289244 seconds)
  done (took 1.877456941 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086558136 seconds)
  done (took 1.765334459 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10025946 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106160333 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137733005 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116077565 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145563625 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115031666 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090152538 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090508529 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081563796 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091751252 seconds)
  done (took 2.753953489 seconds)
done (took 22.743233201 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083977769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37956239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364429503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095190753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673826649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360993884 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.007521665 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097842015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120615998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071534038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089914985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653447692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.99713235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333417496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98654678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333695493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653229557 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07310494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07179782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07226651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.992118966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071628998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072336604 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072969183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653734743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376428405 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072801273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334792616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072643452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074434514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359938723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073083103 seconds)
  done (took 16.412871159 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074597315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126422965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077636666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089224069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074883624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073424432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075806001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07353659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126925936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072292027 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089699389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072027583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092494536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072716035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092666862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072330685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073414834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072384632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073232065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072952273 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091699362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071961399 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072767587 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073177599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072499691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084992576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072790364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073253372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07343299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075113822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075202814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073076321 seconds)
  done (took 4.253195664 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120092949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131385631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077841309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108610589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116424529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073994025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149883858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098524297 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132916639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072005496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089611857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07198841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107538431 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072775361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092659434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073202401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073378428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073241705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072959413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072505396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092612258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072738014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072806364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073063205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072933897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086940751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073159812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0724561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072807132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074570834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076373442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073000166 seconds)
  done (took 4.490424517 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077037116 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080687582 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.089187791 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088812171 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074573513 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076986982 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078211915 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074229162 seconds)
  done (took 2.338511212 seconds)
done (took 29.181844913 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08367446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072964282 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076441782 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087640211 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076989881 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084094502 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071488515 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080133651 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076822542 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077917897 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079391949 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071843591 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076479778 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071748194 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078447714 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071639423 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083731548 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076106662 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083512983 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084195706 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074083304 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077508115 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079314339 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083125748 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083700609 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08290014 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08175854 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076972448 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072932711 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074501363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081495122 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088281971 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072832843 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083544472 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071283152 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072167221 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076115014 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072198033 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084039695 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08138402 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073441832 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080537219 seconds)
  done (took 4.966587772 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092361444 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098053898 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089541195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065783314 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070846221 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070675047 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094121632 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063797998 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063093234 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093353487 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05936132 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063161369 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067243421 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057020463 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064391073 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060236956 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066383512 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059322706 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06412139 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06399121 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094550886 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057800793 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08209118 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068236148 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06012492 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065391857 seconds)
  done (took 3.564239454 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07869112 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090075041 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094780809 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137091313 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111266223 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083580713 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083431315 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100196625 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093753457 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070586671 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075183094 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097281964 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094655083 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078899209 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071273319 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091313502 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0883539 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073672575 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078469525 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099433163 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091969931 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090641401 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101720335 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088044976 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071250021 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074558811 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075944672 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085714574 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077452852 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081752461 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075971262 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075404837 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074187525 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084499957 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075529755 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073696554 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099751707 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081999287 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084042135 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0721859 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080568124 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072647699 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097884087 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132765457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071606779 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078446253 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075735123 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082631281 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072092902 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093134577 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084338348 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071297469 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075377509 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07096652 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071803886 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086116729 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073978374 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074113854 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081734602 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077994148 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097871464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076447224 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088463982 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071693977 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080153232 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071058691 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073317957 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070902926 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101294275 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074178414 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116273231 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073434646 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07311087 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081274626 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079819395 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078203713 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072643864 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088594508 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083713652 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075929541 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081023411 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075382404 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075687928 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096714901 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074583412 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073897334 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072390377 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078221621 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074768293 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073487673 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085722284 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071533991 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074852074 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08956844 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07245148 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073389601 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078146369 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076705711 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072107066 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083195917 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077143481 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073208232 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082401036 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072251166 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075765364 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.086343494 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078802744 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071290197 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076535225 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077578044 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07243131 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073427635 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075404424 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073409736 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081262575 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078784511 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076419529 seconds)
  done (took 11.25042339 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.172287971 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165493685 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075716884 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155589971 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080973147 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084038776 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.169551778 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100326396 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072652122 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072545963 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07311772 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116790433 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111679656 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121763338 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083541825 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07244624 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089560331 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120592214 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159883807 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154670139 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090536979 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08158403 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074981918 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.0735128 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074975315 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083667679 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090624524 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083920919 seconds)
  done (took 4.643044312 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085175393 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111256338 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079372914 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096162389 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096433649 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072073909 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0744786 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074566466 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086990987 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083470939 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072083273 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077759701 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079636085 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076156801 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072968078 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079799303 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080163394 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073512367 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07594205 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07794468 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084084026 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098152401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076327232 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071778647 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077746071 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072548083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068259264 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089677218 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073284616 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100617278 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070256534 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077645132 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087968319 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073295082 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072574184 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072413742 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07194696 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072131567 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073870516 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070934586 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070816795 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061924474 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071121926 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083948699 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080311141 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060371923 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076818286 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077920526 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077741098 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06952907 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075531628 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075131634 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075601394 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080008213 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076791626 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077601571 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073633738 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078526562 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081702368 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072160683 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069639104 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07058549 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077479053 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069719711 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081604352 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077347324 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070807985 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072426964 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074474043 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079150176 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072589149 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077120984 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06963016 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074630045 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077412399 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07449788 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074195373 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070693467 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072555117 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072639473 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059256337 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072021956 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057271549 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07616388 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070375133 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070464696 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071747878 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077486529 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084053365 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073793417 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078184015 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074158966 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071106452 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075985645 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064493269 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075602884 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089225429 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088184001 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07212472 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070141813 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086495324 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077638507 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071674608 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060506233 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078218443 seconds)
  done (took 9.734247577 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096324725 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074417474 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089498385 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097515478 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092340539 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079992048 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082798839 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073564641 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088903015 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078631821 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081645164 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072312929 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08329173 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082593699 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074547561 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082347258 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076473284 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090127643 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087612424 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073124628 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081740751 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085245779 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095556787 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087196975 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085749802 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086989398 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095968569 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082636369 seconds)
  done (took 4.10569786 seconds)
done (took 39.958293957 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.784788682 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.95149315 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.777773754 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.114112981 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.867830849 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.017162461 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.974077335 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.777097236 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.014966509 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.812757472 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.12603532 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.009473888 seconds)
done (took 65.938600106 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.853205559 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.919446014 seconds)
    (2/2) benchmarking "String"...
    done (took 2.011123324 seconds)
  done (took 5.642730133 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.001646719 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.497754076 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.026811886 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.7779713 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.78470176 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.099251449 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.587378417 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289227759 seconds)
  done (took 30.777519137 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.866262964 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.998810762 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.445392708 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.470025883 seconds)
  done (took 15.538523901 seconds)
done (took 63.6063819 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.777837315 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.817556422 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.779350764 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.762602926 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.83943171 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.794277376 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.301880591 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.803237575 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.777255607 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.769447219 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.781938872 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.219975403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.782319012 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.31453412 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.79093267 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.790613603 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.832391148 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.397895272 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.936761669 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.800101064 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.796279697 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.789368084 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.779019651 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.785274114 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.827331395 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.778746247 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199761336 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.787545976 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.40644609 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.785420345 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.818075166 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.804091414 seconds)
  done (took 204.341728207 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.781276031 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.735692826 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.791482015 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.80189447 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.232642803 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.964166441 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.875832456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.283246302 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.785550477 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.809797331 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.96333076 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.779706899 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.984894146 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.728997958 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.80993527 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.791975172 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.913647905 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.982931614 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.814397224 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.949788253 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.792714897 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.847843804 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.800445505 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.934276555 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.792113544 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.864207169 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.792648303 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.808369236 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.978342455 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.889118751 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.786696624 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.813943052 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920353865 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.654460346 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.790058146 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.805869136 seconds)
  done (took 169.769253813 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.367513208 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.784887684 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.784388769 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783905445 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.794839423 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.780332463 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.955820234 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906985754 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.392209808 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.402361782 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.83995151 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.584446929 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.78248007 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.849503827 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.795230196 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.78195039 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.797956696 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.810030474 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782127689 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780753868 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.906951296 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.7943961 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.969065587 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.791489364 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.782639602 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788094771 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.151883269 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782109235 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789268628 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.039783774 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.78339016 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783823132 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.633500885 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.411258172 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.784970997 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.864421239 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.783851262 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790737491 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.782467523 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.000245547 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784547679 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.784419017 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.783888198 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.786489175 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928277177 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.788680935 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.906324735 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.787602384 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.273331415 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.78543741 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784185395 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.462017654 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.787473908 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.399941304 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.787496927 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.783599609 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.786209187 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.784162202 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782215708 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.788931895 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.43937821 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.864717771 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.786201034 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.788543003 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790192271 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.785727472 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.964075919 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.788787913 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.98853857 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.844258905 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.014570784 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907202785 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.788059702 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851251445 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.87800464 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.785224834 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.783605654 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.785292359 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.784184002 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.784274131 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.86553329 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.785614631 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.921824748 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.793152334 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.786033955 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.837712268 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.853369114 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.785513706 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.633999698 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.788555139 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.785503437 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.062191914 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851604008 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.785461434 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.784994216 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.785462501 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.923599953 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.908919091 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514458418 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.789931574 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.545367885 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.790453424 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.932249707 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.786830375 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.934657176 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.787014433 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.867399702 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.791813087 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.787747148 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.785948377 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820002756 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.787388977 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.847453159 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.787216953 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.157695754 seconds)
  done (took 403.348252158 seconds)
done (took 781.589990691 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.455396685 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.420559165 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.534376127 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.443809687 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.419519797 seconds)
  done (took 13.994927132 seconds)
done (took 15.715002369 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.878124254 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.883762383 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.812358774 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.879655282 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80996163 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.879855373 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.864345886 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.814212298 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.848317416 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.814458365 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.851586072 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.814021099 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.799500399 seconds)
  done (took 25.671465242 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.026114755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.034378588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.85878945 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.026239604 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.833711873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.02648221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.953122308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.940960363 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.941772688 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804078841 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.799740083 seconds)
  done (took 22.969265673 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.039480594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033434845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.865129209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.028532241 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.837790833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.0277611 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.954368453 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.946781507 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.941696874 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.80582203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.80103428 seconds)
  done (took 23.004544375 seconds)
done (took 73.365966831 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.795406856 seconds)
  done (took 3.517233272 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.822712637 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.989504687 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.806121981 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.801726061 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.795119108 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.797661429 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.801448866 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.796915136 seconds)
  done (took 16.334925189 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.793144935 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.795375339 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.796287087 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.792846751 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.794157523 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.793993447 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.795597158 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.795213051 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.795431421 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.795905696 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.794266531 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.796932329 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.794530648 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.794152739 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.796340892 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.793993869 seconds)
  done (took 30.441799943 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.796509765 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.79419215 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.795667282 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.79546491 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.795035752 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.795013648 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.796032165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.794024436 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.79394197 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.794053426 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.795955511 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.794022111 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.796784622 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.794333017 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.793511991 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.795685034 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.794831716 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.795764207 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.799104555 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.79491411 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.79474131 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.795059722 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.795715468 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.79501955 seconds)
  done (took 44.812430803 seconds)
done (took 96.828587852 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.554329604 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.45663416 seconds)
  done (took 9.736456148 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.799874692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.798388021 seconds)
  done (took 5.377895889 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.797652855 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.797727903 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.797814542 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.798095892 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.799255363 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.798363375 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.798859146 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.798538682 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.79786011 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798905361 seconds)
  done (took 19.708358451 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.799542832 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.799265416 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.797305972 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.798783343 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.799197095 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797152067 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798737513 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.798852935 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.798742079 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.797076426 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.799967728 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.797410767 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.800082309 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.796777415 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.799816649 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.796703801 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.797835835 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.797559539 seconds)
  done (took 34.099203654 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.798922187 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.800252528 seconds)
  done (took 5.326670117 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.796791147 seconds)
    (2/7) benchmarking "second"...
    done (took 1.796634945 seconds)
    (3/7) benchmarking "month"...
    done (took 1.796705794 seconds)
    (4/7) benchmarking "year"...
    done (took 1.797937822 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.795629028 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.797546052 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.797244575 seconds)
  done (took 14.305761436 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.801397042 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.956691709 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.02744971 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.44393942 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.802115444 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.804188993 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.721158432 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.803493327 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.806466929 seconds)
  done (took 19.894261103 seconds)
done (took 110.172964514 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.610653097 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.797291679 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.022955648 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.845886025 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.855095082 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096028588 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.8066392 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.111865979 seconds)
done (took 42.873632933 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.816640237 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.121542959 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.131051178 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.819379231 seconds)
  done (took 16.800706151 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.781094534 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.330913328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.828810486 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.394550317 seconds)
  done (took 20.090884012 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.169964941 seconds)
    (2/2) benchmarking "read"...
    done (took 2.138268707 seconds)
  done (took 6.041827698 seconds)
done (took 51.47884496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802792177 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.803062748 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.799831016 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.800398537 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.801720609 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.79986992 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.799296404 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.80476111 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.801615794 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.804244007 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.802848255 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.802406342 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802518122 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801349144 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800201923 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802989834 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.800382583 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799937883 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.803756917 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800815479 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803503607 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.801498036 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.800438511 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.800821092 seconds)
  done (took 44.972138848 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.806090736 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.805168483 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.807166449 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.806207604 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.804294927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.807253923 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.806721291 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800775982 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.805858013 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.804717874 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801312896 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.801606208 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.80279159 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.802351859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805908271 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.801528995 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.805556169 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802606898 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804915285 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801432341 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.803642376 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802443215 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.802604136 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804310443 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.802839308 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803365331 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.806165307 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.803364399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804969219 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.802200871 seconds)
  done (took 55.855170249 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.810403129 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.813498241 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.803917541 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.805493962 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.805844282 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804498204 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.804609128 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.804719174 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.805107232 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.805562957 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.805111825 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.804945352 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.805857914 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.806455609 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.806071944 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.806586099 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.807475014 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804666707 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.807046534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.805731782 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806260582 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.805768194 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.80529887 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.806705769 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.806005153 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.806616911 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.806951923 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.806645026 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.807303501 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.807037608 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.807886131 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.806477971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.80644462 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.807694629 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.806152655 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.806396263 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.8117711 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.814723816 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.807186381 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.807162922 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.807156582 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.807476202 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.807412512 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.808101705 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.807237637 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.807421766 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.807197976 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.808480953 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.809240794 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.806660866 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.805966969 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.806861794 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.807359486 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.806901797 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.808913682 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.808539955 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.807328963 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.80667628 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.807358199 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.808011835 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.808402095 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.807970646 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.809218592 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80995509 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.808168319 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.809732325 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.808769069 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.808464792 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.808325132 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.80938809 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.808029803 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.807998459 seconds)
  done (took 131.859807463 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.808188462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805140395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805160473 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806052767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806205651 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.809552232 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.808306238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809220267 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807272221 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.809110071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809371377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807152127 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806707744 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.810803721 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809087244 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.807109981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809280278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806449416 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.809430268 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809812013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809277888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807426063 seconds)
  done (took 41.512234867 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81023587 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811292846 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.80744857 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810829861 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807540405 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809734398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.81096108 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809827685 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810973362 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808084491 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80651379 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810731995 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.807396914 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807806914 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807751277 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808729007 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810402817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807946821 seconds)
  done (took 34.302049305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.809263666 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.808512554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.810204858 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.808309307 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.809219536 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.811169944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807471005 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.811111558 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.81169327 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.809655783 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.812603471 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811210389 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.812326102 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809560443 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81181714 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.809274137 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.811959301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809603475 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812265544 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809898161 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.809415911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811902669 seconds)
  done (took 41.566890041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812667237 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.812754357 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810542157 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808751954 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.809240914 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.813639162 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.81301929 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.809282643 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.813602079 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.811999911 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810286507 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.812761805 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.810376686 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.810608934 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.810320463 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809738779 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.812532139 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.810248462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812596792 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.808935706 seconds)
  done (took 37.964013983 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813835007 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814547617 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813615792 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814057398 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813732416 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816004226 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814222557 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.813744945 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813845141 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814782819 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814097599 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815015709 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81545417 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81455815 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815042771 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814195721 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815127197 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81544521 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815258064 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815945788 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815276282 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815606913 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815270182 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816624248 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816025883 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816283539 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816557766 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816692327 seconds)
  done (took 52.561195875 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813787239 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.815336796 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.81267004 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.811598467 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.812173614 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.811952763 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.812724829 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.813913163 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815120655 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812287929 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.815337275 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.815336478 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.814865741 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.815384576 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815346202 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.815474462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816147853 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.812886925 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813942103 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812726707 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.815385934 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815610049 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.816440932 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813934243 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812100926 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815896672 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813705395 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814219675 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816609389 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813009222 seconds)
  done (took 56.167626754 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.835040957 seconds)
    (2/2) benchmarking "in"...
    done (took 1.83400706 seconds)
  done (took 5.411446689 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.813293815 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817489966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.816741456 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.813490239 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.813928527 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.816837069 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.817592398 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813604047 seconds)
  done (took 16.265198854 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.81689024 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.818416771 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.816661027 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.81645135 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.817686445 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.81670865 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821908275 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.8174831 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.819854773 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.819011821 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.826499987 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.829024754 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.821765935 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817583471 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.819331587 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819236464 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.818194154 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.818296023 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.818930428 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.819200262 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818841971 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820510716 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819808921 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.815375785 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.821359667 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.829672458 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.823210741 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.817726519 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818426897 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.822661834 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.818673138 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.816023012 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.818340678 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.818738857 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.817819011 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.819607862 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826924401 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820032663 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.825749997 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819344682 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.818404179 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.815415229 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.821201461 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.821353613 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821930547 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81988838 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.820234532 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.814742602 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.819159761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.823381656 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.824429546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819838495 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.81617151 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.822557395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.820707483 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.826080035 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.8214535 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.823796947 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.829415282 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.829298907 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.833850189 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.828563973 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822710517 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.821400493 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83126162 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.84586321 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826490331 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.818319231 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.817743483 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.821329844 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.827012509 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833753058 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.831953977 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.820932018 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823043 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.822961825 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823170007 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824125832 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.827606252 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.824934741 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.82144129 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821867276 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831654061 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844965999 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.820937283 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.821789967 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.822851067 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.82265953 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.8226071 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832260569 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.822927956 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.821410369 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.82222142 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.821800076 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.822600896 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.823071269 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.821032075 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824589784 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.819126323 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.822218519 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.822167422 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826792682 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.830949054 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823036602 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.822636101 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.828324351 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.823525932 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822863996 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.829646579 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.823282284 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82285382 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.824197899 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.829845351 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.820237739 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828028578 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.831943322 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.823334373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.824996786 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.822987834 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.823461657 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833750878 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.851276571 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.824621921 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.826384441 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.832358318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.838875727 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.826960598 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.83017125 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.826381786 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.82227519 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.821499163 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825496513 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.823515997 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.825516521 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.824406251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.825186623 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.821888532 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.822690302 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.82463962 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.826371441 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.826123649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.825456571 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.827127839 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.827482111 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.825985463 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.826354799 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.829758157 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.826591156 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.82723705 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.826297071 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.821859779 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825939522 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.826992438 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.826996577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.826276592 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825947059 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.825252474 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.826237633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824979478 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.825259005 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825253431 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.827742034 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829525197 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.827362466 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.829248994 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.825680887 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.825429564 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.824538529 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.826532586 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.826592356 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.827140997 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.826232538 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.830091171 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.835509224 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.826420981 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.826177982 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.829614682 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827783844 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82727253 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.827154191 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.830664539 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.83594504 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.828545909 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.832954858 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.828474382 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827725889 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.828335453 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.82970805 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.827366577 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.827710931 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.830845338 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.835914073 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841114382 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836914378 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.828649799 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.831179357 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.829069879 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.831015083 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.83098086 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.829136911 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.828283786 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828391523 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828211574 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83031609 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.829194643 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.828941645 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.827130379 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.827875321 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.827987686 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.827672293 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827667988 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.829219116 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82925479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.825084201 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827651429 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829478469 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.829451256 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.825924998 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.827145314 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828434653 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.828913748 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.829570574 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.83547585 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.826242122 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830927296 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829357917 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.829186335 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.829425006 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.828923405 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.832340299 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.830040963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837294885 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.829664908 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.832063718 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836612731 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.831026364 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.829221667 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.832562672 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.830110384 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.826102906 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.83233404 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.837001719 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.830196355 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.829200485 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.831558179 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829937528 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830267211 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.834741752 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.826822733 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.830215499 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.830686024 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.832274396 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.827956683 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.831925549 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.831242294 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.832397586 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.832699077 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830872831 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.830930785 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831453887 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.834760657 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.831460237 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.831309063 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834615377 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.84164136 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.8375122 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.830568529 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.833677748 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.833364399 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.836174259 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.833208159 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.831377789 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.831834974 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846383637 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.841000783 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838189134 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.833544941 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.832372682 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836044966 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.833145771 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.836562879 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832233288 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835909703 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.832947483 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.832768638 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.830008129 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834184291 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.834511635 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834120318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.834445771 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.837209224 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.834938162 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.83217653 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.835025722 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.832996117 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.832470703 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.833794478 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.833915092 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.835105249 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836135655 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.833037756 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.834238465 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839251223 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834478569 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.834236609 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.834636385 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.835010681 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.833757098 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.834114858 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.835265726 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.837915703 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.842571188 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.83669612 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.845117319 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.835732802 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.84190434 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.835138724 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.838465293 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.845397112 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830325947 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.835285991 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.834594385 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.833802813 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.839926844 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.833465796 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.834902038 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.839959802 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.834088135 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.834521084 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.834053867 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.835283141 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.835115909 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.835885339 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843855216 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.838363263 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.839247696 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837251357 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.832080184 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.835953864 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.834989693 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.834222773 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840621055 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.83671373 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.836566242 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.835335706 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.83833021 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.835514451 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.836282727 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.83585493 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.833712817 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.834992289 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84259469 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.837087626 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840313651 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.836556035 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.844628086 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835396195 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.842071536 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.837010275 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.837053767 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.836360934 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.836281345 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.838704128 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.836613943 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.838388156 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.836625344 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.839688538 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.840651746 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.836300564 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.839328979 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.838667361 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.836765914 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.837110584 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849558855 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.861841823 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.838901547 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.842173549 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.834692027 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.840882636 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.843146751 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.838045114 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.837167404 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.841127924 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.848401043 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.848017212 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.838806309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.837855117 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.838445505 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837153117 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.838028886 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.838919594 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.837803526 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.839109231 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.840335342 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.838805924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.844142678 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.838555508 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.840718611 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83954253 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.841571667 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.849143759 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.839269618 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.840046639 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838909004 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.838722739 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.839462472 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.838599561 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.840102398 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840729582 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839302651 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.841753168 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847448291 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.848295204 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.843246204 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.839630978 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.839370956 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.840675757 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.839773264 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839697646 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.839009148 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839401757 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.840817868 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.838956341 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.841311356 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.839549667 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.84016066 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.840967399 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839651528 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845000047 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.849781595 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841249082 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837643365 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.841182012 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838876712 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.838995358 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.84085087 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.849311027 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844780029 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.853717249 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.850362535 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.845776262 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.841381479 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845334313 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.849690639 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.840783685 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.842081323 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.842089166 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.843076336 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.842776263 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.846183925 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841944854 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.846948189 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.842552872 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.842054232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.849326271 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.842720704 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.843063582 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.843866327 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.84729232 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.842756902 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.840739313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.842390697 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.841603737 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849309643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.843569682 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843128513 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844500319 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.842012489 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.844330108 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846165616 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841718018 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.844116504 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.840812008 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.843667934 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843678125 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842722084 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.839604949 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.842599735 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.842436721 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.846992408 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.852589762 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.840170277 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845857667 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.843817891 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.844787536 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842748951 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84319089 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.84067014 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.83966308 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.843874997 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.844492492 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.845026782 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.846236644 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.844491612 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.845663934 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.845500056 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844863592 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846131408 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.855979055 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.851508 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.841561054 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.844537679 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.846259667 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.847469055 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.845290582 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.844658757 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845304769 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.847431904 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.843810985 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845092312 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.844635997 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.847980705 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.861224103 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.844450152 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844740355 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.846111089 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.847864339 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.845808525 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840994908 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.845022464 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.847757773 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.848385762 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.854315001 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.847318468 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852410199 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845582183 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.847561746 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.849007863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.84892183 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.853091287 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.848198864 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.846407748 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.845805131 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.851424352 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.862860444 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.845357803 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856754474 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.87607354 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.846971255 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.848292728 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.846778783 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845516246 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.846697588 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.847732442 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.8464809 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.847443721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.846947168 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.847495866 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.848302353 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.853594718 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.848912898 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.84672096 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.847796631 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.848270214 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.849186702 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843881509 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.848182157 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.847889852 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.846813404 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.849296174 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.848106569 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.848255515 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861519729 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.860013817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.849541658 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.84880335 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.84452363 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.851464765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.852343774 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860174191 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.857563667 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.849372741 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.848810747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.849678296 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.848982505 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.845583083 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.849412139 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.847860203 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850166982 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.845869054 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.861807952 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858833304 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.85195678 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.848348695 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848969154 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.848410492 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849404771 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.849553261 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.849896267 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.851797873 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.849496557 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852867544 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.849098315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.847828094 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.852872869 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.857817735 seconds)
  done (took 1095.63802989 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845925852 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846619969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846973038 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8464055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846948716 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84621407 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847007435 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845669967 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846363524 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845740009 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846690664 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847105808 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.845974354 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.847295091 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846968136 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847079614 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847150622 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847688278 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.848001641 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846600431 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847127002 seconds)
  done (took 40.555945981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.850700473 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.846669831 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846250639 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850685393 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847343274 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84935397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.847265844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848064925 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849360718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846405235 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849187814 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850233379 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.846915415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.846550769 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846023747 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850111101 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.851163143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844712251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.8473997 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845466147 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847766381 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.844963146 seconds)
  done (took 42.429142586 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.847674293 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.848576738 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.847313889 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.843974719 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.848769154 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.837544962 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.841583466 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.839729022 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.84056828 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.84235761 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.840008174 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.840727458 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846732134 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.845179536 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.841867462 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.839667108 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.98128993 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.83853624 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838858145 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.83883859 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.836976275 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844020231 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.8356449 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.834777684 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.83764355 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.83899219 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838415814 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.838242933 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.839366349 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.84015308 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.844248481 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839563059 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.839739687 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.841284195 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.838477875 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.840548728 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.842043711 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.839810024 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.836048755 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.840646143 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.850403454 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.859720012 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.841436489 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.845287624 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.839019431 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.839256171 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843111218 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.849127378 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.837357346 seconds)
  done (took 92.157854865 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.837896248 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.84084868 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.836414111 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840689952 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.840106526 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.839984672 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.839610665 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839624304 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.837575799 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.836382195 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.840354599 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.837356735 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.836036721 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839846686 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.840350625 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835752278 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837103289 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835941999 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836181943 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837324164 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.837369552 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.83973026 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.840111586 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.837758525 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839178089 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839625462 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83779363 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.84040859 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.837667013 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.838383616 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.841591141 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841480668 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.841448329 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.838086261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837624763 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.841345444 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.842554514 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.838164287 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.841108096 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.838340583 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.840946002 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.842241376 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.842074303 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.842222369 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.838558782 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.838870345 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838391765 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.841088897 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.838388081 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.839971992 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841562394 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.83880423 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841714495 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.838941484 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841001873 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.841753368 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.839152381 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.839520647 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.84095511 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838290851 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.837646317 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840889186 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839303257 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.841246426 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.836745872 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.834193431 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834477606 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836009788 seconds)
  done (took 126.828127494 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835313971 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.836251326 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836604476 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83588244 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83491463 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835868979 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835716674 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.835392918 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.836281615 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836209356 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837600106 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836038273 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.835890508 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835502014 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837281421 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.837874512 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838924942 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836187861 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836031244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835490929 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.837402861 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838689959 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.835631016 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.836419861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.835709531 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835983661 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836324668 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.835403567 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835715058 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835587171 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.837388049 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.836444507 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840667001 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836356222 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.837221854 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.836896162 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837526412 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837602125 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.837090326 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.836251738 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.837021467 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835919512 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836294742 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.837288087 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837298501 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836716585 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.836813522 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.836083736 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836166452 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837865693 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.837743135 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837384263 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837445803 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.837410658 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837306517 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.8355578 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837659618 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837812257 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837668269 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.839008525 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837577039 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.835925055 seconds)
  done (took 115.645589795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835486556 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.835383798 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.833665478 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.832630584 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.835356951 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834835152 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.836763147 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.837275766 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834556509 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.834729057 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834529487 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833690776 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83393177 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836917249 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832851063 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832914556 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832005039 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.833737876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835934018 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831113069 seconds)
  done (took 38.451680969 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.831418236 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.834196278 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.830898559 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.830527468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.831584922 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830165112 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.833978334 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832521867 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831171432 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832401551 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833494956 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832898947 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831075643 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830431674 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83610864 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829093386 seconds)
  done (took 31.07318703 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.829336904 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.833550858 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.851212561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829275749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.826532984 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.827653281 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.831206753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.827540118 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.827974158 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.829388603 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.829367203 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.829685635 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828786447 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.83034864 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828557073 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.83028649 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.828748446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.827104131 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.831399093 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83051487 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.826708572 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.825799424 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.829316966 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.827666369 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.827622531 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.827466388 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.825495123 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.826539136 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.826813722 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.832776769 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.825934667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.826759982 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.827766524 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.826803494 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.83052955 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.826657998 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.828800817 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.829910808 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.827939402 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.829647988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.829940238 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.824451329 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.827634098 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.828763614 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.82543568 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.828365006 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.825159783 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.824080258 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.823767351 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.824823449 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.82685426 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.829285624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.825724258 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.828975386 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.825550138 seconds)
  done (took 102.325802007 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826475133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82772051 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.823544721 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.828092964 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827435921 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.824996088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829449576 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.822745574 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823995371 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.826181173 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824421989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828172427 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822975752 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827654489 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825687222 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827042849 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.824491668 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825538078 seconds)
  done (took 34.619591995 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.823407633 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823816029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.825809506 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822177297 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.825016582 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.826117411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824511897 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.825686834 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827364348 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.824398702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821420881 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.826753635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82709773 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.82479202 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824931326 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824311765 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.82800918 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827308115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.824788474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822726773 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827422389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825785118 seconds)
  done (took 41.907867874 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.825008598 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.824178336 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.841279382 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.845718182 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.847111331 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.857153457 seconds)
  done (took 12.794756853 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823038427 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828580939 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82419578 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825769569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825494694 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824403194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824085294 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824725025 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825743633 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824992438 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823159859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827246432 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827108801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82364492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826355021 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825539061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823872993 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825061262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823888086 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826707336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82260698 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826773505 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822546268 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826709776 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824240664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823530968 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827312935 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824515782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825406291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827645436 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828586524 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823276896 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829104194 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825021502 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825820008 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827165646 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823559469 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827458226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827300538 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826636558 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825738473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826934447 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826640119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823503762 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826373125 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825175485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824514864 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824621963 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824193014 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826691622 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82782109 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82358593 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826762514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82592354 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825755217 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826501247 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826204473 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823861686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827169944 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823093801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824240346 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827554265 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823203866 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825556079 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82655193 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822340469 seconds)
  done (took 122.234467884 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824952314 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824097935 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823469485 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824679032 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823783843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825559665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824356507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823520925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823525439 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823221539 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825067527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825598691 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822371747 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822807519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822907798 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822802238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825155981 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823609355 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822980737 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826863455 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822085918 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824850186 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823672285 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822277633 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822467029 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826170737 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823820537 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824720143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822510521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823546674 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824256349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824468149 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822847423 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825904804 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823078898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825208463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823350785 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824278169 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824671942 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827293181 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823832313 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826067696 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823298434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824816805 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825258949 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823872889 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824531555 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823888183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826875487 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824883098 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825857349 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822906277 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824880401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825445123 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825398475 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826447367 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824163536 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824663093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828142646 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830722726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828454303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827029278 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830352663 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824723657 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825263911 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82396098 seconds)
  done (took 122.185397495 seconds)
done (took 2539.013906071 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.893045668 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.916754655 seconds)
  done (took 15.564634026 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994864685 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.943130889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.826790386 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.826159045 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.828507478 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.847103697 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.834189633 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.827242852 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.83036024 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.827228247 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.827923619 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.016270732 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.833698626 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.826493811 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.828671588 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.921384722 seconds)
  done (took 51.599538987 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.831288937 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.83292417 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.843469978 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.832834218 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.831127054 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.844002965 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.86425341 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.833826958 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.866361862 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.84484796 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.899612014 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.841666989 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.831953341 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.88111832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.845197653 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.846345952 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.924963298 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.907833028 seconds)
  done (took 35.160867093 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.908354687 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.838784927 seconds)
  done (took 10.511118355 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.838168481 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.848880689 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.901127598 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.838321266 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.835942525 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.824142143 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.835943465 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.832504065 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.856510493 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.015992247 seconds)
  done (took 70.38846614 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.847641453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.843385534 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.841061171 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.840891917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.832977179 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.839984428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.841812101 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.835588575 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.528021189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.893854296 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848481288 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.846824026 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.842062603 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.844873822 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.839527743 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.868557378 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.938584771 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.838771438 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.840013579 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.847530275 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.842833134 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.896899954 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.85737482 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.845645503 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.873180979 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.519119773 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.852322083 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.847599756 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.933686613 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.840066954 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.843010822 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.8432376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.84585573 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.19833399 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.114785524 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.843545428 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.857499488 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.850473835 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.839380167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.936162081 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.845359037 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.84827184 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.476936828 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.094864062 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.942312459 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.887416288 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.164533531 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.86201759 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.84549032 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.872915025 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.846931303 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.845641994 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.857167659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.310396495 seconds)
  done (took 130.655373632 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839709073 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.195761844 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01063978 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839984544 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13082331 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052809747 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840155498 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890705306 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842828704 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071557492 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.095394772 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9521531 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840758036 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.840380462 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.841399672 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838061345 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000053454 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91447345 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.840738331 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.837498427 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872425957 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087413442 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.966183058 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.841909477 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.872624041 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056254164 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.968800302 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.947917963 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.624519373 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.838334764 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90770069 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.843914618 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.839060911 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837748154 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999420261 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938679567 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928126701 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.843839125 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838765167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.83863699 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.513944274 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042170879 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940033645 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985899333 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042389162 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05124401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633117887 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.838541082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.588518153 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007695803 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.074453111 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.075536961 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966876499 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843561871 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.399853735 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.839511283 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839960228 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09548356 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99266213 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945250205 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846008378 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840577508 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84002584 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.090958362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845268908 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940473917 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84437898 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840953379 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941210032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950690936 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.986639794 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058084184 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.879115965 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.809914911 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.396131909 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09152466 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.912380259 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099747172 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845846407 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842575728 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922981238 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.695464014 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.100136643 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09287542 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.099898745 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882058744 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.573091721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.84118285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.073250232 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067860083 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.096236261 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052319188 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.08181802 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.181445466 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.841249647 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.842065687 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.100346445 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.981425782 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845625494 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.207364142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079795717 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.423848381 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866089728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153687614 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979379673 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845017472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.488565881 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840968913 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.069945261 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.886662071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.844545118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841782916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.067424821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.826493089 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843543191 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.5414849 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.910836089 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.85011218 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080414386 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845411188 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109429184 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849015612 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086416847 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.023678871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.878561245 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.078635305 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.051886022 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.847592689 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09509609 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094552427 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964581168 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07067355 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.582037482 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847827929 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136779413 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847144008 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.844190214 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021038436 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844605277 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993860686 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847036783 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131348307 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871576294 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081581916 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846437154 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10285887 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881540676 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899440162 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849294237 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982156192 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847056755 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.683064087 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007458528 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848398786 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846202313 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.685565381 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.844083447 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004500415 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.082356976 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873692599 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.922286864 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.523127931 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845819281 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931989139 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873317444 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.247679997 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.84749211 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.101539096 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.847045922 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845434527 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.846235059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.090778618 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.034330812 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849884777 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846415371 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.749298017 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.846361272 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846092207 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03395062 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.224319309 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847872942 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052483557 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852035305 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979457958 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.847793134 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.931476083 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.208915515 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845613866 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.850304768 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.84899553 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.849321167 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848003374 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.115064496 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.87769651 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.388546354 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988218821 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117714971 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.167678195 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.100257471 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894827216 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851856305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.110307531 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.849513574 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.915697535 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.850750702 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874425151 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084493196 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851029232 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062094686 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.131652191 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.732263206 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89967483 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.853205528 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848467512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.84747106 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998195279 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94149468 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850004959 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.847195603 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.967412845 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975307459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.06301876 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.851604095 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.961341951 seconds)
  done (took 898.541653284 seconds)
done (took 1214.175991126 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.849298157 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849207881 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.836475247 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.851093268 seconds)
  done (took 29.16783965 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.856955486 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.854479123 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.85605584 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.855720199 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.855483826 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.853492921 seconds)
  done (took 12.91158223 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.897010634 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.847264624 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.851401976 seconds)
  done (took 21.376099814 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.923077236 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.240805377 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.961975437 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280440192 seconds)
  done (took 10.188579257 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.855073881 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.854006841 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.854883218 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.856573143 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.860008781 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.858314146 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.856254759 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.856181325 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.859185514 seconds)
  done (took 18.494426725 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.270442658 seconds)
done (took 98.190036307 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174976863 seconds)
    (2/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.077508618 seconds)
    (3/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.915743325 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.032781694 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.179527806 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.186382851 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.299957468 seconds)
    (8/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.295992896 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.001456725 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.894554701 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.391573239 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.97253547 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.352132291 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.880454476 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.849457148 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.043482865 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.223114932 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.88164502 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.930700001 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231553288 seconds)
    (21/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.98799683 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.743236567 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858388361 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.041716418 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.032100117 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.917038247 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.950677783 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.8584246 seconds)
    (29/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.253602163 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.973611849 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.85832289 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.94649627 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.143915048 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.704229289 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.951695286 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.235001937 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.854969904 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.944627379 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.079429246 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.101679667 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.0046502 seconds)
    (42/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.923391877 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.944654105 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.839189942 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.362412764 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.327201507 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.94255545 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.017370473 seconds)
    (49/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.86082378 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.003949715 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.106177643 seconds)
    (52/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.267996744 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.855448867 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.966693427 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.880683019 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.983314736 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.954910027 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.910245888 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.854248241 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.345341622 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.939813044 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.145536498 seconds)
    (63/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.83934515 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 3.208354695 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.202770859 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.855771463 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.201157181 seconds)
    (68/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.857109142 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 6.62673916 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07560915 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.162610825 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.875667903 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.198121856 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.796620823 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.042446259 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.150887363 seconds)
    (77/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.394206237 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.052463058 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.881382091 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.648249638 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.090457039 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.923044977 seconds)
    (83/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.881715385 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.853070009 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.885702842 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.852936631 seconds)
    (87/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.905940112 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.93154477 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.965947177 seconds)
    (90/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.1599888 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.771637456 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.431385831 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.879077427 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.871590372 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.854626758 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.532029462 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.142016564 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.212001776 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.424953446 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.875438986 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.054116984 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.14005704 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.962289629 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 5.602508907 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.078967874 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.947930805 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.755805308 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.857480687 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.802818507 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.485495054 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.942862221 seconds)
    (112/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.935873533 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.961760486 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.842442934 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.488796825 seconds)
    (116/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.091567697 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.962782672 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.773235142 seconds)
    (119/309) benchmarking ("sort", BigInt, false)...
    done (took 6.859838787 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.275079992 seconds)
    (121/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.881820817 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.41307956 seconds)
    (123/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.025387525 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.882952618 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.044198524 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.922007598 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.110697472 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.180097067 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.885451082 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.495125817 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.141547337 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080475363 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.952795906 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.111128564 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.857319609 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.643412251 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.05086654 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.860398486 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.222941384 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.19321698 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.863765798 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.059786288 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.981282299 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.889738919 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.026965602 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.99487043 seconds)
    (147/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.959269288 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.98638798 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.552191908 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.862792148 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.960908611 seconds)
    (152/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.058004139 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.085379676 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.887017536 seconds)
    (155/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.960092891 seconds)
    (156/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.095342625 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.914645394 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.86187209 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.423752507 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.074263061 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.098343131 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.932168422 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.843479188 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.73039848 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88228447 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.857768131 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 8.199337284 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.980044719 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.863177856 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.993186018 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.84616575 seconds)
    (172/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.38483754 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.86252703 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.860054188 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.872082904 seconds)
    (176/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.100593686 seconds)
    (177/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.891010362 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.549840903 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.556041246 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.847061383 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.295280013 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.696489751 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.85740267 seconds)
    (184/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.969328112 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.848155908 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.076596668 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.887911251 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.21026525 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.140876625 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.824366578 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.961342902 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.893207469 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.024528036 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.255274863 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.558849191 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.848078525 seconds)
    (197/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.9666841 seconds)
    (198/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.850323075 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.202963478 seconds)
    (200/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.057640497 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.968347136 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.100369149 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.490266953 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.108490196 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.126692395 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.851034399 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.007399707 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 5.571027464 seconds)
    (209/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.872847301 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.011244215 seconds)
    (211/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.253796069 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.224671529 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.677984794 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.866233873 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.754720676 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.062758109 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.896442191 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.220592726 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.148554021 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.848891059 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.950465156 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.164683304 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.096028458 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.96935216 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.86320728 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.887113137 seconds)
    (227/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.028502118 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.790094405 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.907864173 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.8197586 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.31202595 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.937448677 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.980487044 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.869520567 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.107905677 seconds)
    (236/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.936605393 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.744747741 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.995556652 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.894052042 seconds)
    (240/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.865722987 seconds)
    (241/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.057987602 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.202439085 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.942600429 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.94071544 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.989028173 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.317108199 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.585280226 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.862913246 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.414702394 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.315441515 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.220359249 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.544335838 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.958207423 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.958146849 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.891247632 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.865178779 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.047780689 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.89128329 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.86694015 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.265763614 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.227962814 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.889972235 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.84961251 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.063793932 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.086578652 seconds)
    (266/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867748368 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.96582811 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.807307994 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.874218293 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.966216858 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.963175927 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 4.800996346 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.852478611 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.061710259 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.048708758 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.87332814 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.950716225 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.057855668 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.104774966 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049018165 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.989849465 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.242228206 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.006762458 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.957643423 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.99646011 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.01290762 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.168666569 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.020929859 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.693025115 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.658677299 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20127303 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.888215026 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.855895917 seconds)
    (294/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.37029831 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.359051094 seconds)
    (296/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.930898125 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.959765754 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.998593517 seconds)
    (299/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.936770165 seconds)
    (300/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.063745667 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.176655562 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.337342721 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.893427036 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.865627196 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.955653421 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.160776293 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.890220746 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.886259777 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.853054404 seconds)
  done (took 1004.877846033 seconds)
done (took 1006.722142624 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.90107985 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894992746 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.880415347 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.90179834 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.99138327 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.907956589 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.889954033 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.880907112 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.928515692 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.929352852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.879186709 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.90678698 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88263814 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.879255628 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.880225687 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893339359 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.189910992 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.908118895 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.897542123 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.890553438 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.897703905 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.879746855 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.929584456 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.907884993 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.884322858 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.882289787 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.884925378 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.899661592 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.991947122 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.88397818 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.882726605 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.893236073 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.189736273 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.906695801 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.876724479 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.900841784 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.892246749 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.890282131 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.885359847 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.913396927 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.281155451 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.917709259 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.883039417 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.882377365 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.881832704 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.886693602 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.883333948 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.886628621 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894788293 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894487816 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.278644649 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.93483622 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.885884693 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.882251716 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.892259221 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.88297331 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.885802742 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898628958 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90238692 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898553606 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.181757083 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.913147917 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.885060437 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.89879564 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.889749263 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.318154939 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.915059379 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.887120164 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.281889343 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.926144027 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.317664939 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.929197237 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.884365013 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.898796926 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.915412186 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.191423581 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.905103287 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.882857023 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.889831251 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.881766769 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.891452219 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897520078 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.88944228 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.88511896 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897845301 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.915181483 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.893623889 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.885508633 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.893851154 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.90371532 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.891272758 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.89543992 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.887683124 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.878078176 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.895869687 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.888511385 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.887354146 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.888061374 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.89365478 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.896149759 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.280351059 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.93803463 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.88311661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.882852668 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.885375507 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.898300407 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.281218666 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.922663901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.908841955 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.929448813 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.884723036 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.183446732 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.913649007 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904532985 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.894590585 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.889427696 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.879319597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.184644953 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.31183043 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.935765289 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.888206872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.88436741 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901052307 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.894052023 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.882377829 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.196545514 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.914963604 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899724851 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.010725239 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.896470706 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.917634255 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.883316071 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.888429791 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.917604641 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901547172 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.91715681 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.889660568 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901577394 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.903455374 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.887185044 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.897714075 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.896894712 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.88790125 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.891993837 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.883236421 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.914737889 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90047609 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898593291 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.907470992 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.010252529 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.884651869 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.186621075 seconds)
done (took 296.103336045 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96185598 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.881683985 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.988210772 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.886850858 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.969362909 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.971655606 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.883236753 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.884137976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.885328193 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.270389917 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.881293679 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.881654277 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.87794398 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.882016143 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.965822485 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.883520655 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.883540857 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.228789388 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.885021005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.955541179 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.881007848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.879565612 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.883645479 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.264676735 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.880500816 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.884695245 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.955357846 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.884463781 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.229914779 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.88350904 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.879514738 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.230731949 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.975890571 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.902847651 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.895476634 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.891840228 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.96821542 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.889554196 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.966874309 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.968462131 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.982878483 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.925357695 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.884596213 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.880495408 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.891268477 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.886484033 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.88228973 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.913507984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.881377596 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.8822357 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.228588248 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.89553469 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.893303362 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.882932048 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.882994568 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.907234315 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.881708449 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.887339537 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.977803763 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.887674465 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.949053982 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.276610425 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.27352138 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.883799117 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.881823237 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.882351284 seconds)
  done (took 185.396335972 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.951224873 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.956767727 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.951329765 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.88973499 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.931383892 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.950508285 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.888004584 seconds)
  done (took 15.327629656 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.89105327 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.883372672 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.937946507 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.935109623 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.883828149 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.061557896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884057343 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.89703438 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.882032594 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.938535388 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.884742778 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.883562776 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.889732629 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.877470458 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.935549143 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.896871717 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.003108806 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.887035325 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88675405 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.037723184 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883098684 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.891376487 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.937448881 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.895421777 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.885380158 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.889731423 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.572211477 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.886721652 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88204893 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.884289586 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881491448 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.926608101 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886290506 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.879607922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.883049907 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.048316114 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.884945921 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881694762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.886046655 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.886928624 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.887002881 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.88696092 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.885595368 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.883314435 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.885203178 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.911914614 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.885028498 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.886546449 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.886994832 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886865449 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.93774654 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887499068 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.884451477 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.885035454 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.941442212 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893529323 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.886768078 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.883467156 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887601688 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883507585 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.039224615 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.937639285 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.886860717 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.938572402 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887801856 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887685058 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.888076678 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.887792616 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.985655599 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.886920022 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.940237166 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.88448429 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.0519617 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.91308335 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.889224898 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.891346845 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.888423136 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.888234639 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.882910991 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.896097565 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.885262897 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.888614415 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.894383605 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885205802 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885904356 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.042396104 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.024578928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.884852954 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.902024738 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.895921497 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.886258991 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.942373898 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.889318972 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.886487215 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955929534 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.008327994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.944194766 seconds)
  done (took 207.751919841 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.89424595 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.897313559 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.889681286 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.90639547 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.888928488 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.889828055 seconds)
  done (took 13.179032948 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.898194173 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.891513979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.890861751 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.891878911 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.890597671 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.894918808 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.891365197 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.893009848 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.896335756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.892522399 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.893556304 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.89289342 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.89436649 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.891347717 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.892993073 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.893297834 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.892512536 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.889849914 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.892245882 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893065001 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.041882501 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.892284302 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.89294527 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.893352933 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.897449415 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.894761238 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.904112813 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.892844149 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.893168319 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.901683343 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.895925869 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.894359853 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.894574393 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.89931229 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.89836394 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.894102514 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897356908 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.893197866 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.890322908 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.89345399 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.89308876 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894866118 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.893290172 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.894096069 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.895421141 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.897975195 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.899059454 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.903355805 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.894030646 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.895510946 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.895825739 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.89382464 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.895472415 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.894270807 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.894823197 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898520313 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.896639399 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.894741167 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.893573815 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.895257897 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.89326674 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.892944715 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894169544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.89884501 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.900879453 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.895754055 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.895470294 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.898065708 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892846199 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.893567988 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.896054608 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.890921353 seconds)
  done (took 139.385844264 seconds)
done (took 562.8606318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.053692983 seconds)
  done (took 8.871493018 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.960144174 seconds)
  done (took 8.821234505 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.161188153 seconds)
  done (took 9.988049058 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.895977211 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.895495145 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.898080524 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.886356217 seconds)
  done (took 29.4112388 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.935489662 seconds)
  done (took 8.749590894 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.906218439 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.883668989 seconds)
  done (took 15.63900375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.927790137 seconds)
  done (took 8.742300303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.981253043 seconds)
  done (took 8.850387427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.902828828 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.916837975 seconds)
  done (took 15.647518042 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.868276347 seconds)
  done (took 8.682338644 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.481083936 seconds)
  done (took 11.387087551 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.894095876 seconds)
  done (took 8.810956143 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.918017604 seconds)
  done (took 8.732178793 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.951294474 seconds)
  done (took 9.765947621 seconds)
done (took 163.916476083 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.901751436 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.886120021 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.886609945 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.883745943 seconds)
  done (took 29.372892895 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.924141871 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.923624027 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.925927079 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.934364836 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.927883803 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.926067741 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.931289816 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.916831948 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.93532098 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.927435018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926437601 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.926679538 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.926318454 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.917191834 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.927570604 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.926743524 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.934910025 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.926026819 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.916317448 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.928286282 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.891626021 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.936132384 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.927814221 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.892958683 seconds)
  done (took 47.99304665 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.091163792 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.966308868 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.046167352 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.945945235 seconds)
  done (took 9.864680021 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.94445858 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.946038913 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.958044039 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.99469764 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.022162681 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.954512399 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.914726994 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.913170478 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.900739949 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.945668713 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.020953637 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.940927537 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.029471981 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.893392069 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.072327077 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.893652852 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.893452557 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.945172464 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.996958615 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.009348408 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.893607084 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.944931242 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.947805903 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.941681547 seconds)
  done (took 48.735419536 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.890334509 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.900331751 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.898179692 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.892512295 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.893109437 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.892743472 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.897371382 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.894102976 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.913358331 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.89364069 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.891814069 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.893567412 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.892030223 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.89277535 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.892356138 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.905657748 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.906429793 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.892737074 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.897402831 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.899436643 seconds)
  done (took 39.747738941 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.887394351 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.742136525 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.240221509 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.143130699 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.888334023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.889017753 seconds)
  done (took 31.609433886 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907332623 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.900303687 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.895371926 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.950658306 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030879963 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.900417903 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.895679632 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.907000063 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.94119579 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.957736069 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.915011931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.924787493 seconds)
  done (took 24.945819028 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.890555062 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.935006243 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.893582586 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.954276515 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.905795493 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.902019456 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.901866853 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.888836106 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.909669589 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.913589132 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.903344021 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.909606602 seconds)
  done (took 44.73090922 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98151404 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.780789546 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.944851724 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617803512 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429842589 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105078946 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.420383193 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.236298603 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.896834564 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166551062 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852475843 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138722456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147654945 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934040369 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.893454251 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.346006625 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196441258 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124960101 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921301254 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61905253 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015091066 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358678283 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.584345775 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018904646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105147621 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.027520296 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.153710551 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859796362 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030380265 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931661471 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905501933 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894891296 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167455249 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277923032 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008512966 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903935802 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.55436185 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.616348708 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.880677868 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.610031615 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.720048437 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.030027182 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903029609 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89502911 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828972668 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359238123 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244119628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.900956536 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.597025304 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895066976 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907752495 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988224181 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.897861557 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.714524176 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84816305 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.176143083 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.892325397 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905246192 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466827428 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950199011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473768592 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.837924892 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.990318258 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553133149 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366161868 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.047401397 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.899610597 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900527663 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831111291 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.545987971 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018331066 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041929814 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.915243939 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546025702 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216097119 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.941961672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98025163 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193697874 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.639681677 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.839841535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125433604 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.848113541 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831690678 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.751116293 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830901521 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170330661 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934588525 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.530490216 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942435278 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237834308 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909053498 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918929888 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904096697 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121041337 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.781640499 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898295098 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.594108376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.185277624 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920422473 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23808538 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83298518 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.901589667 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153326011 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.110332091 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.082401055 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.352769871 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06395104 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897656429 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.990923078 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.764867903 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915975525 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.179582443 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961715751 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.944039112 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028001611 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854306703 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203533431 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926983442 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.076842463 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.829553975 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163834421 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.222262382 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152049696 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982350486 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903166313 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900368339 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.580675115 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.527006102 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.125213094 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.900467173 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351663082 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916647947 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.901475155 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835225713 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.593527991 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854605265 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.018152623 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124810957 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.806301049 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181504205 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835202696 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047659029 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01886129 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.124657273 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.555826035 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.985712567 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162490175 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34645235 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.088357704 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918103297 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920838437 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994500646 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923396261 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.276859405 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162244289 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905220236 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.905050261 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582312131 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.970160951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905493479 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.906124505 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702635648 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184942251 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932072347 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911943965 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.791016123 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.915502882 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969676692 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907832691 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912078865 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407124199 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65580333 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.91287924 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.599345612 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149598942 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912389653 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.555033988 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096404963 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.986543318 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186199415 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966912747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.838278892 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.607630917 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.607158384 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904426331 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837871374 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903872332 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912092412 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913941201 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.10136654 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190851838 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952205464 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.633538919 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.018562011 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914946114 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.908963299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904277061 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395478125 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960803902 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477395746 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920193251 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04097817 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.918485478 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839175802 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.907835107 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909505925 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.905710538 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860572187 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957798904 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.636698736 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359496394 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166208779 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.560778405 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924988037 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.658071711 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.03694146 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.938124326 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607397318 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931060478 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.91858684 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993440102 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.918183665 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.552607858 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.677807072 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472637868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233214305 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223910079 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353210785 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.340766786 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.13385656 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249240555 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143506706 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437298729 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967910343 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255695865 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854482165 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000778415 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.562538006 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271671425 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92569948 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137057487 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29735429 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.675761522 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070253828 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11961121 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945035951 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.786390387 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838749679 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.149590871 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066005688 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622692467 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140699969 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250632163 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.615000785 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.020501684 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.907986504 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.614649177 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000574846 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.623857847 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.270302018 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378280937 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.887407296 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406632904 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.919056504 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.355871386 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267316819 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.180898873 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.010176997 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847030643 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.920312545 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922464449 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.914786905 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.889306441 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.864127514 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.198682989 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921435076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145677806 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.127614865 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183918851 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.872531951 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.91621301 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910730944 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215320465 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.538859863 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163584969 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.179699014 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.504674205 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921193367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846346131 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845364255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.614132532 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914893017 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88606741 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138760493 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.021834088 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865101488 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230516007 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219064221 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16940017 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.924838504 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.186877781 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192736723 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.64949343 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940620933 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.012312363 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607557383 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.611146271 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.134206754 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14807024 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717169194 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14331008 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.960069162 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.880283162 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.912832778 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126050922 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.135452163 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.868291387 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166823969 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.639103342 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.927993478 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304521419 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974598876 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.832234579 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.128857911 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.007565519 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92752953 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995683035 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924013312 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.925262447 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925771101 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965799181 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839698109 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.047814302 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.926755288 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007605534 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.96032144 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.502901526 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.928640142 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192591209 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293639565 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246652638 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978545432 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914366895 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914704086 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847348381 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05417324 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360721693 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187630739 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044727793 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.056083612 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941213497 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60315903 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.137276117 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221610879 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190599365 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.80929845 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875235837 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022458369 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.13924192 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926985317 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.125943192 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144965413 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24338365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386854214 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.997292938 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35057288 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189832462 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28961261 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91605136 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507845329 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.932392485 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.698391413 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.958777499 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851278349 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207393427 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927019674 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298295903 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939490141 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.111758236 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.434153695 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.565816776 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280744853 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.911143045 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979831254 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195931393 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318109395 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234795177 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987231256 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928863226 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.617784483 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056875135 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.889857041 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190468344 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917676935 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129099032 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.630253052 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928963204 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206402381 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231764421 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.915313581 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.925035923 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976358672 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.927412404 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142365002 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183066404 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172093186 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930141597 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921605677 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.737598039 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201806444 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979703997 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85397871 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.924869528 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018130681 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166516857 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937816629 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.436935695 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.622645287 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218428032 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.83746102 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941179519 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305368102 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355225424 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256912756 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.459919301 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153430898 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479161403 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.714452263 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287178221 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.924402919 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268408551 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290493285 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.923933573 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364715841 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023151334 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.190225068 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243814749 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.936086135 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713112137 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.962424011 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144845881 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524270625 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860118214 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925574622 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.981032174 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921431611 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052008378 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931914936 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.925032441 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.738134614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.751459452 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413365691 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.926225629 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.913617719 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.6582051 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418635429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022647564 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076742466 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929821951 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.644324894 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.212840189 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177071071 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37887684 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.985673825 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.92734063 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921983917 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850705659 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118570825 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.120718956 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223429386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.208139532 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.025933784 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926544085 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.137815221 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133884037 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.834250199 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078948393 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228978193 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02741022 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.843072271 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.635662124 seconds)
  done (took 1701.66208798 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951328252 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.971153857 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.952254409 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.037967578 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.998014421 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.978752857 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.050319565 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0086778 seconds)
  done (took 57.800579209 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.924941901 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.156229892 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.931436002 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.923244367 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.952611258 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.922965163 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.598677674 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.938586875 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.960172719 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.93926239 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.929191041 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.932452338 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.299264841 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.961695922 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.93382769 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.929601224 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.949141579 seconds)
  done (took 76.113196121 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.931755042 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.266633665 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.96837145 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946035607 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.910279013 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.942459495 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.981435667 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.977555723 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.937285924 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.178828873 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.268858493 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.954014456 seconds)
  done (took 91.123289802 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.947131441 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.937932398 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.936658119 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936279673 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.937369212 seconds)
  done (took 11.562066563 seconds)
done (took 2217.165479454 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.179958968 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.160040205 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.162508773 seconds)
  done (took 6.182992212 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.082814907 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.129337057 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.249234301 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.254079948 seconds)
  done (took 10.580344195 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.22035469 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.315945763 seconds)
  done (took 6.39767667 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.265339706 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.957682455 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.354314623 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.932340727 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.937770674 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.933603535 seconds)
  done (took 22.669206412 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.935867214 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.938494019 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.935525628 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.938110958 seconds)
  done (took 9.608358416 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.916406464 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.645104761 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.916270723 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.934741307 seconds)
  done (took 21.27524587 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.68442073 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.333691765 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.680900387 seconds)
  done (took 9.561590758 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.582384644 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.159198321 seconds)
  done (took 9.602836904 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.187102469 seconds)
  done (took 4.048548835 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.963368583 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.207537066 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.480888404 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.457905215 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.55613477 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.756679051 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.266501178 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.174691594 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.393099289 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.394016156 seconds)
  done (took 25.513283943 seconds)
done (took 141.057110635 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.359720857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.964355668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.138111944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.310420629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.174701013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.139059354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.159588018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.321951194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.847695193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.830835913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.302460404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.167844467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.105210862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.951927438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.109178423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952241925 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.164570068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.376634553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.018130883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.223741363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.167239093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.946750388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.1376089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.957762623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.17287914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.086816836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.486607914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955462881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.154405315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.502377057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.089421593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.35936957 seconds)
  done (took 170.49786338 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.936420068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.936172515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936144758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93629031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.223242764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937291855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.936699334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.935530485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.975387342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.960522627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.937317038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.217783827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.935803121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936500474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937349214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936165888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.121250662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.939515603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937768056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.935387227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936408541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.07162569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.937482497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.085148666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.086001295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936196325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93741581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.936800597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935129902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.936895807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.938690696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.937160872 seconds)
  done (took 209.089241658 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93682343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938005053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939909489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937239719 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.940379548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937978126 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.940798292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.937407246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426000483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421153399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.938818523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.939427662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.937188559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936902935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939822259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937828707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.938247146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.937846932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939159872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938991118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.941001378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.567155982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939584777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.594171771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.93913694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938594707 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.938969628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939170107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.937533361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.940974553 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.940404347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.939329879 seconds)
  done (took 222.162502204 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.129322608 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.944113416 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.94525831 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.868893392 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.945129745 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.94526207 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.957287445 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.128247889 seconds)
  done (took 19.73200773 seconds)
done (took 623.352772957 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.430740396 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.289245542 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.131531287 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.970476711 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.243391179 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.01133871 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.966493301 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.033963866 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.698576119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.041131023 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.655874248 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.988680896 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.743581289 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.995485905 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.088845103 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.026634857 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.549114447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.643029993 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.143017494 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.038022464 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.145169031 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92691673 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.05013213 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.733178015 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.766249651 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.975965073 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.141155681 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.556518157 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.976651782 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.125115363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.747631763 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.374729716 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.983430311 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.965938252 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.023294957 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.99999393 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.316509281 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.981066726 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.09215521 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732007113 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.062866726 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.589075232 seconds)
  done (took 106.824146265 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.936128163 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.935221899 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.933651028 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.934653817 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.935426248 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.933924487 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.932623493 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.934991921 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.934638946 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.934624822 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.936208236 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.936593685 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.934890392 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.9359841 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.934561881 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.934315997 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.93531052 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.937536359 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.934834574 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.936241255 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.935906246 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.936560202 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.94995888 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.93597466 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.935955956 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.93500333 seconds)
  done (took 52.214459238 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949334063 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.115113329 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.191073785 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971561621 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.94942576 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.951938971 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.968706777 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.954618569 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.95194198 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.952239954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.061812629 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95294783 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969609996 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.188709412 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.968017973 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.947919718 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.946989146 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.946995708 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.120192904 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965754706 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.969955459 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.95304285 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.968974545 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.96365197 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.950171611 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948699307 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.952983532 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.429497471 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.958685875 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.059718816 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.995466456 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.974450104 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.395742469 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.198654544 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.008398568 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.959344717 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.949090326 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.0627891 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.955272778 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.950450165 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.969319727 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.955453838 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.188492217 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.448387457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.968168422 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.950595664 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.433401981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.072468104 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.991361752 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962596517 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.19073631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.969600778 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.950819845 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.950124928 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.986136324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.959980567 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.949479427 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.304540873 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.962552707 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.968987449 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.95622759 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.950017989 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125723412 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.959319693 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.113238581 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.959254616 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.957413083 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.952054855 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.190337714 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.969887514 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.453294739 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.96713181 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.950186303 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.061404685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.11913729 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.465483387 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.965970725 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127160081 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.415676811 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.977466364 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.95764946 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.414401424 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.982627326 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.958995849 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.952681316 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.953364872 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.951105236 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.001814468 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.968115317 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.382183006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.454439362 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.324141363 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.979545281 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.967377556 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.952811124 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.303793587 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.962113828 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.953139933 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.183481231 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.462119115 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.96871991 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.959102198 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.440095494 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.969666482 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.972844929 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.960967518 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.196048468 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.97180454 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.003766197 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.955071465 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.96051567 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.955486725 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.972428855 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.959890068 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.953589235 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.428379562 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.08631686 seconds)
  done (took 242.055928062 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.950560265 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.950290143 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.948059981 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.951751423 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.945746987 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.952257255 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.955519478 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.947217934 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.954043926 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.946661941 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.946800031 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.948678301 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.949045804 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.953319971 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.084590806 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.955582754 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.576835797 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.948140466 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.947893693 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.947285025 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.705615821 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.956562874 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.947732578 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.949331504 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.94853448 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.94860912 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.956697643 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.074528399 seconds)
  done (took 170.125721598 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.955025108 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.07118341 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.976220668 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.983638957 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.964973465 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.952310935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.978490691 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.971560537 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.960338757 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.952882063 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.953524115 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.017613964 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.966069352 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.053039108 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.986013145 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.986583676 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.060555743 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.96200378 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.953171767 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.953424533 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.984938103 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.949843938 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.01921591 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084091596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.976517794 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.074656516 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.960764555 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.95627438 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.955715341 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.074546872 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.973918721 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.016555124 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.98651654 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.974297413 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.077432133 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072965248 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.061787099 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.986036294 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.959547147 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.953972783 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.954188967 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.943164699 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.075165041 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.977494206 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.957119379 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.064654185 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.976399357 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.957645506 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.965577183 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.953973377 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.969686443 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.974514036 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.025556011 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.090797621 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.995269787 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.982164666 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.982630385 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.242888255 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.967899101 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.055445889 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.949166573 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.073030399 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.977586161 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.944640994 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.955769623 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.962214347 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.984595716 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.989135048 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.061848416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.965081634 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.056889848 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.992745621 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.963837224 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.954948472 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.958835204 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.075532907 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078186189 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.99334945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.994987748 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.990288729 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.953247249 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.959177714 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.945773706 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.977639597 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.961849975 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.076752659 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.075922525 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.965738723 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.959514708 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.960737612 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.959173438 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.985565645 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.083199157 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.996649054 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.053159173 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.027966773 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.035940539 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.974790999 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.969810067 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.961539802 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.023062562 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.977372338 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.969702545 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.292904906 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.033192714 seconds)
  done (took 211.853663183 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.426545582 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.015297218 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.017888442 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.273769341 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.396446576 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.854460506 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.011421559 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.00853835 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.032165687 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.200976734 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.081859464 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.026201706 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.995537561 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.982363918 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.00768162 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.031572022 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.017868137 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326769479 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.130397788 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.143874522 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.991428102 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.270327517 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.330184144 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.422232459 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.045666932 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.358186516 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.695155873 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.161891946 seconds)
  done (took 64.146531822 seconds)
done (took 849.085906656 seconds)
SAVING RESULT...
DONE!
