cset: moving following pidspec: 25897
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.806711366 seconds)
loading group "shootout"... done (took 1.212762244 seconds)
loading group "string"... done (took 0.421851518 seconds)
loading group "linalg"... done (took 8.273727443 seconds)
loading group "parallel"... done (took 0.162488143 seconds)
loading group "find"... done (took 1.38981653 seconds)
loading group "tuple"... done (took 2.015620358 seconds)
loading group "union"... done (took 13.075591897 seconds)
loading group "dates"... done (took 1.386205147 seconds)
loading group "micro"... done (took 0.211130695 seconds)
loading group "simd"... done (took 4.58200049 seconds)
loading group "io"... done (took 1.045779776 seconds)
loading group "random"... done (took 8.968971528 seconds)
loading group "problem"... done (took 1.563316327 seconds)
loading group "array"... done (took 20.341150235 seconds)
loading group "misc"... done (took 1.543633124 seconds)
loading group "scalar"... done (took 41.397961509 seconds)
loading group "sort"... done (took 3.293382962 seconds)
loading group "sparse"... done (took 12.140107216 seconds)
loading group "collection"... done (took 17.817559576 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.516872093 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120731851 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127418037 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121675485 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.181910368 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118752747 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128422186 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085160961 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843072086 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.135834598 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115997199 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430233999 seconds)
done (took 5.249627258 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.165672967 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090297335 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082237641 seconds)
  done (took 1.280782174 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065863599 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132953525 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06623348 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067026324 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066723593 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066085063 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066096489 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065679728 seconds)
  done (took 1.640859571 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070667568 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066035177 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065416626 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067007935 seconds)
  done (took 1.381096108 seconds)
done (took 5.660933007 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239250863 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101266567 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.289067988 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.440584826 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.603120095 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091525086 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07310205 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068520689 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129496438 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322471159 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104558581 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.182412191 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091433361 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168306282 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.015247817 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11906832 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086549915 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121635753 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094119675 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130016606 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.388698461 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078164734 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.076318403 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070589599 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068055883 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643550782 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671972166 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.122458934 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083760696 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.16008909 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116295529 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.634037269 seconds)
  done (took 10.72882647 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091178391 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087711017 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068608918 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123999691 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094032257 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069986739 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075377351 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067540958 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088676869 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123530433 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090099096 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097907565 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066377655 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069313664 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073750658 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196670924 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080621528 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081745749 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067578722 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080787462 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106236931 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078379728 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078150193 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078423775 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130176827 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169631967 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096120373 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096744647 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069086439 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081333979 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114949485 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126064001 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067050447 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064790934 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119371211 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095381167 seconds)
  done (took 4.526269816 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.973362515 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093989203 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101332539 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.628870775 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066139173 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.151154628 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244542045 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072950961 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.440919395 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149688978 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141326563 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147397436 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117163132 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069868499 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.24960788 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11929454 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.524003813 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068372741 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066979618 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066076241 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0683504 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067321223 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063510666 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069277625 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095086738 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087810021 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.16249171 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.953800385 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.292180285 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069932139 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161071088 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08741254 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.360712549 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068500029 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082672993 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064808903 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.441966079 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122931142 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066169791 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173486173 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.117734347 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065134953 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.120968109 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079025272 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070049368 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069550977 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068218474 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071259141 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078691889 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101208529 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067797497 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065862177 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171914803 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065117114 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066244695 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066957996 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14920525 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064850382 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083340726 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142502967 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06422802 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068929696 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102552631 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068824257 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.0869653 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06454936 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.095619933 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.327706574 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.029219667 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066992452 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.936045253 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065128354 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076854278 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067725803 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070349466 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066573278 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068085798 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06773972 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.07249616 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070701288 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06944187 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109027283 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067547248 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070660154 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06792755 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072069712 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09745601 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065881084 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.50305552 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09770964 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066838469 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076113249 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106070415 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068058718 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071944764 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06803026 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067102578 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065812448 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066589301 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06932811 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096688895 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069864557 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113647811 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.136412511 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070392058 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06709691 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.075272932 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07016826 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070141774 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067212562 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069573912 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068481502 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064870896 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107675549 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067347562 seconds)
  done (took 21.870235168 seconds)
done (took 39.207532709 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332484475 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07873638 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078649129 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07845831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078395991 seconds)
  done (took 1.856295287 seconds)
done (took 3.055818353 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.110044587 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063511998 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.099945218 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100086055 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06375357 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064102922 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098735173 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064000557 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098527102 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100105366 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101992793 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100886627 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064165262 seconds)
  done (took 2.336816731 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069774412 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081602463 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083433337 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062095483 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071582406 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081663365 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061706637 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081111076 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086967113 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081790208 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081711078 seconds)
  done (took 2.039354762 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070672353 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080044696 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083694151 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062159614 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073119596 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082406914 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061686654 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081254825 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084170499 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081429649 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081551839 seconds)
  done (took 2.031734896 seconds)
done (took 7.595564379 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064866958 seconds)
  done (took 1.239320698 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524485358 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.187132556 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066098504 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083659169 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193718477 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.092370739 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.196318333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069289478 seconds)
  done (took 7.756230069 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096851712 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072060178 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068394235 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068402246 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069427568 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068884284 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068729656 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067738036 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069485174 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067664422 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068064373 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067650655 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067740148 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068441055 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068179922 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068036383 seconds)
  done (took 2.402931937 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099029013 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097717449 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071625084 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072925076 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07035774 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070597554 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07300365 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071517936 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069207747 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071205105 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072469201 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071184446 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070826251 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062236651 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07238832 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073230574 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069392325 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072204818 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072979203 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073857064 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072329505 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061924751 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070678485 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072078095 seconds)
  done (took 3.055742246 seconds)
done (took 15.644273983 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16950667 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07415695 seconds)
  done (took 1.4270493 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065968603 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068139123 seconds)
  done (took 1.331236393 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071638406 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06034559 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078024774 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070232614 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061077574 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060900464 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076387077 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061173675 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060848766 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060863107 seconds)
  done (took 1.858255212 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061471022 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068422067 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066559858 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068291578 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066526877 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062288967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064331441 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062228413 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068904739 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061293061 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065534101 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082198803 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064917749 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082648072 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065030905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065244738 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067132379 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064519634 seconds)
  done (took 2.408226748 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060446431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060147413 seconds)
  done (took 1.328168812 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063328585 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060636301 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063883731 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063887553 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061575165 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060923777 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061378691 seconds)
  done (took 1.633827563 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.416586863 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121620382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336502992 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068127492 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07622781 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25210007 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063918693 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068034382 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068305737 seconds)
  done (took 2.715190877 seconds)
done (took 13.912386424 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080849252 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.176149308 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088496244 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.518692799 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091954985 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067015847 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112409808 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.167145551 seconds)
done (took 2.525173342 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226097212 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.320585244 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.788576214 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066175791 seconds)
  done (took 3.384438216 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32827816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079399832 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078041874 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067698206 seconds)
  done (took 1.77201096 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063851076 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070202867 seconds)
  done (took 1.347138795 seconds)
done (took 7.94770058 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063089401 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062804859 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062909334 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063471562 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063886254 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063291672 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06394808 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063652037 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.063395678 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091874529 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.063269045 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063306364 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063247593 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06392859 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063823797 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063226051 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063620474 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063618746 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063882608 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063794991 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063312091 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063667626 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063605116 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063623981 seconds)
  done (took 2.794674211 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077255473 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064410668 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067285818 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066272713 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067547086 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066878603 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066386311 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065221882 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067028048 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065077795 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067258166 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067125346 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065272659 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067165041 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06548435 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067251429 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067133616 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065546126 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065317114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067230269 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066647602 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065989041 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066973327 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066329093 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066869324 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066728756 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065240562 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065774646 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066513924 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067297884 seconds)
  done (took 3.229826168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064735312 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059625551 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060697278 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079833236 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059683744 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060410753 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060272665 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059749369 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.05997254 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061215647 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060447687 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059584396 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060419317 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059772329 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059589614 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060141739 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064548798 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078394756 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059949503 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059869582 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065055617 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059645349 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059760116 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059747173 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.06053015 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059686006 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059602925 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060249911 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.06044387 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.06088837 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059884198 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063893594 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065264083 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06030095 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070035051 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064831034 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060167236 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064530038 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061541782 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060022147 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059967814 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059901245 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059952075 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05967251 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069455071 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060068317 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061050595 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060627878 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059993893 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059507988 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059896895 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061542742 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065275797 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061256962 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059398648 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060685327 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059671356 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060493182 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059693181 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059694804 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059618654 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063383265 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061214703 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060322549 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07944988 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.06141897 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069388723 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06027719 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060765554 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063318544 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060938926 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076747044 seconds)
  done (took 5.704959808 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082049039 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085215871 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064891003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064727037 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060927658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060122602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067489217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06035587 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064760362 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080902588 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060490272 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064700618 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064627557 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064495208 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060258911 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065232388 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068184961 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060872785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060323921 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064606596 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060701782 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067828366 seconds)
  done (took 2.696088702 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136621231 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065625625 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104815938 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074204664 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068275014 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074164852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065598583 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065713982 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066144072 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066392271 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066330392 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065484514 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068247742 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066339809 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066176172 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066514217 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06592948 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066195996 seconds)
  done (took 2.551867184 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075256392 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065917477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086457308 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065707016 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06696195 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065431577 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069276858 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069641208 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065352497 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065864033 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069298699 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064868054 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065038417 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06605324 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065402702 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065578521 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065043653 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065273268 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069196554 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069383575 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069260093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06991152 seconds)
  done (took 2.733758736 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075509018 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063554226 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079503645 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06676248 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060659469 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060461843 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065475187 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064549976 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065296822 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063989379 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064678987 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06035343 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066293833 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064718033 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066323826 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065026718 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064725872 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064952592 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064421245 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059925434 seconds)
  done (took 2.540447071 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083948328 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061710411 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062123448 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081793008 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062869039 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063077466 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082262759 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063160348 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062748265 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084343482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062584238 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062654188 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081752834 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081828636 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062433865 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082031282 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082199384 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082719843 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063149459 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062785022 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08435189 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062963716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082614017 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063051106 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062702655 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063244023 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063208887 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082119834 seconds)
  done (took 3.23283916 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062826244 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062453461 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064195246 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063859902 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064658695 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0639034 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064155912 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06417721 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063966252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064420677 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063812804 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063520625 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064013413 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063409149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063287763 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063593101 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063540862 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063878934 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063772393 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064331796 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063078329 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063210517 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063172996 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063839482 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063575317 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063770469 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06396285 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063607378 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064362208 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063952771 seconds)
  done (took 3.152613684 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071311075 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0712484 seconds)
  done (took 1.382467659 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061025414 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076240861 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059536214 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072368488 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069167572 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064149592 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06893571 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068252956 seconds)
  done (took 1.775731003 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065214054 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088436161 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062746987 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062929324 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065264235 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122220449 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074359311 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073464141 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075012861 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063971655 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.06247045 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073438741 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063437044 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074621472 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063401573 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070576778 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068984558 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074334934 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074446722 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060456123 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073588181 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062761822 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060378936 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062320743 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061330954 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068716198 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076924981 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073640617 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069957332 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059636836 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080076855 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060739568 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061858598 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070194614 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064989185 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060777214 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097452284 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061303417 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065961113 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060312368 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072563658 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081235525 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074939963 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07914909 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062401919 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062714278 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060250453 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062456955 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064451689 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070067018 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060507126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068028919 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060197325 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062361723 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071524554 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061116282 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065851715 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069782468 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073977251 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071474897 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069414545 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075982435 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069533883 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06837035 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061789504 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080153768 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062113075 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073614612 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075281902 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061779659 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073645179 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060336469 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059282117 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060597424 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093821964 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062389636 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062250707 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060620072 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061073144 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062113704 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071502244 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06624014 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068428117 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064748895 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077205415 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070012575 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.06097423 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067349318 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078594933 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06484629 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061058428 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077094016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064459726 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060821012 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078913706 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070409138 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062543358 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061738968 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064410834 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07404098 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062030221 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059208909 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069007689 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06263967 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062978968 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064678621 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068091806 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060546336 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070739359 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064820708 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061833748 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058851907 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063966219 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060549421 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059453995 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068917517 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05958278 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073653245 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066083012 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073690204 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074652402 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.07014319 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075976462 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059532948 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05830604 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077288659 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069127738 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061318096 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076717835 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059702276 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069842716 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.191333837 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061927202 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071462058 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062068979 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063619786 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062473707 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067328732 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063851157 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063647952 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066467726 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070100468 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073323109 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06248277 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069843096 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061373791 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07715944 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071399292 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065876061 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065326745 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061876862 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07344618 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068063792 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070979261 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060671208 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06177095 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060821584 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072224193 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070350559 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062850534 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068342175 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065975111 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061744485 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06154694 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062195001 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06479651 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064382889 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061929536 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06928142 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070281862 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074731973 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068428293 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070609528 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060560205 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061194839 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065141454 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060466608 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065335093 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070803044 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076664511 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072568079 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082047645 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061070357 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070382803 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062371628 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077839843 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074274321 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061797986 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065587317 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060254818 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062647778 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070356491 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072188998 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074934302 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07638962 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065936142 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065743832 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060576217 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075503737 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061147363 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069354236 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070372224 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065189959 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060692084 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062438367 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069542653 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066017046 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061094367 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076373197 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067570927 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060323992 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075150432 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061418126 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071850133 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060545809 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065159136 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06635356 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062846209 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070189286 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076086313 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059834168 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061354879 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076962549 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063108277 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062782097 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069174547 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076159536 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066525688 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068990149 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071423419 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071211339 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065155086 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070300803 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061914384 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070049674 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063993738 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071923428 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060679925 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078492309 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059783001 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075594295 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060488921 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071159892 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061437569 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068759323 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060116773 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076912837 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062360429 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061259325 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071729942 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059215625 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069134449 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059950379 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065107739 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066085527 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069376663 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061580207 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068969914 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061350204 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068263422 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064300978 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067739729 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068764181 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063973892 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059273581 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068014245 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070852963 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068044085 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.197244323 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063066728 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063190228 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072011021 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063546645 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062924127 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070481085 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066015811 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067100075 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063385246 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062927583 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062869611 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069825199 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070576749 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079240336 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070748154 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068926146 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070432315 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060888046 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07756315 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061534143 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068572736 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059908238 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06707384 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070679179 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061447669 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07955313 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062310891 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068633196 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073110362 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069675287 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064351547 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079829461 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064362678 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070267108 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069374946 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065826058 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068033176 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062539529 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069078127 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070927282 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071864937 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061844308 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068903478 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069884865 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063060726 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068586939 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06312701 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069549135 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06332653 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059924592 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065778841 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07251297 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066129369 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065684291 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061444268 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060186068 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061047638 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06733827 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065333205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069469263 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075794026 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059656083 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061443591 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060685117 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06490329 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078915651 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071082996 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068841065 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065799641 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062362875 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062395929 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062493705 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061323666 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06441505 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060076756 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060669383 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071559243 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062040717 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064436522 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061131856 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062028442 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070728521 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065369231 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061550971 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067739004 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060544557 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066472301 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06010594 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063040053 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065615763 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06037373 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064271303 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071365711 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077242271 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067387247 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06959717 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061699456 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069155034 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076226368 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068272765 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062078182 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070191799 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06027492 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079433684 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07023375 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069636396 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07231983 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061751597 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076051649 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064424939 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070624249 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07600363 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062098297 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.0667562 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060236277 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075606669 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064824254 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059877553 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068322163 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068242492 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065958291 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071994906 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061139219 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068027571 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064348257 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063790937 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061516471 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061650738 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068868219 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075145762 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060329162 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063223348 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066641876 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066574898 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064190796 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.210693346 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069257697 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063579036 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064184809 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066067929 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063491803 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074141113 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062532196 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065912981 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065758334 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060835723 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067619547 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07836822 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070253989 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070835784 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061285927 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060439827 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078748135 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065193797 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064824081 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069313078 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071207703 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073535736 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070455067 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07822248 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062262071 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066764982 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073243325 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062236998 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061245209 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064628812 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062552191 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070015332 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071156243 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068637639 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063421216 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067696574 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074931435 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062341753 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065505789 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065828265 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06231108 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071812292 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069410874 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06999605 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062322131 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060889854 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065251371 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069483257 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068581441 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070351017 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062323733 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067835591 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074808174 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068838573 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064459297 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061232937 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064084556 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069898447 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065571523 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061200828 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066109322 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064443694 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067815031 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070474487 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065273791 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060859665 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07785129 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068978417 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069979414 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062579221 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063259161 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06161585 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060764261 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072232128 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060646644 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063199266 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065716986 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.06262551 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078937175 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070180698 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076653222 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062130044 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065545646 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060943001 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070640817 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066346662 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061136771 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072206704 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061889996 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075826414 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072729845 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066387771 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061112529 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066653501 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06929662 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077879273 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071143294 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070378174 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064946476 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070540872 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062733323 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072359598 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061260867 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060428913 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071238452 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06983848 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073829198 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061331269 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.07100781 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062864551 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068890364 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069166252 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062741543 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062473134 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062769224 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07003441 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065815546 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072455211 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066073669 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077427395 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061530653 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071357063 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069705932 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071422732 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074253047 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072397241 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068116803 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060835851 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067890998 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0681348 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061308171 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065306051 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063122126 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080895137 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060910332 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061244634 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.211761304 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067341957 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061744115 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069602966 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067671325 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072924095 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.080491061 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071988708 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065327751 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062933914 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066648636 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066644698 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061446248 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060926873 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06109658 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070730128 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065385938 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061748832 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079703421 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062646749 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069852194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073106905 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067450737 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063372682 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060420299 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06170925 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074503711 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07677187 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064837951 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070157187 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06337316 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070608043 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060791673 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070041021 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070172526 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069572906 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060963609 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061592829 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076276613 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076830997 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066043913 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070857279 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070460475 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06270316 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083199458 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070335852 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062516296 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.072576747 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063020944 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059915085 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059326793 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060838113 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070909814 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.05917987 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.0621746 seconds)
  done (took 41.865603437 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097893822 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060312268 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059626552 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059516747 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070633389 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060444348 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059549193 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061374942 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061681395 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063742024 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060840544 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061099101 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071974997 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07268622 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069692566 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062947422 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059429356 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060290747 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05915836 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060248881 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06906816 seconds)
  done (took 2.716334234 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065300953 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074750245 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070259075 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077627702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068539241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064421847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070806355 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063016642 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070458536 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068681893 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070718003 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063664316 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071055894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068881226 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06934076 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064865568 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072433639 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068994488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064595403 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071665021 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065201418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071955438 seconds)
  done (took 2.854555509 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061142425 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05994272 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068252036 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059396343 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060217302 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063566752 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060944185 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064653003 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065030461 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064930624 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069568628 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061028834 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.05988034 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066820988 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060195239 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061265305 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102837061 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061290326 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061651938 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060327468 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062964768 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069347206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060664982 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060697071 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067097738 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064169458 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060436267 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063291772 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061231205 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065020888 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061454215 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060394126 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06979348 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068754315 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065096545 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064918372 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06224696 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061345192 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060633202 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060481897 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069292819 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061808329 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060893698 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062440048 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069891147 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060542293 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060500621 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069554491 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060135662 seconds)
  done (took 4.479794621 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069433804 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110438028 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066547327 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093329076 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07376813 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066726694 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066536219 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093972318 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061597786 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062416207 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074319597 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074135655 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063535092 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064606528 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067730853 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063784165 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064211303 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063040256 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06579874 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063310281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066066465 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067461194 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07297971 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073657494 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064475109 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062624403 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062860521 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064838638 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073873793 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067031074 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064926988 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065124097 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073580086 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066885449 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063578716 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062940325 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074237862 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063456632 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063268828 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062363439 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063252615 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064819451 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067602812 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07451621 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063639141 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06839456 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063491366 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061789908 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073904827 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06470771 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067318417 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074467818 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06452033 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063831158 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06471141 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07379605 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06410975 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062315486 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06368707 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073485333 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061882448 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064345266 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074456357 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063083446 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067458955 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075269826 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06853529 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064414197 seconds)
  done (took 6.096679917 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068783756 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093442567 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070707229 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071970702 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071411758 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071480723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07058938 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070180273 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070597573 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070929295 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070058848 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108211873 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067450964 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075043541 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070912909 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070870562 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071247984 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071102732 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070879639 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070682995 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071451013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071845468 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071139203 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071077781 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072515242 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066627519 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069418952 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070189477 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070903733 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069586803 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073047605 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070038829 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069688124 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070663657 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07254075 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070276861 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061946028 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070987177 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071507299 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070993866 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067750865 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071430739 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070871521 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067595702 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071384857 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070902493 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072366273 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073917345 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077984767 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072299496 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071548187 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071587212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071090935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071702871 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072132359 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078249419 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072179729 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072484169 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071283641 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071764847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071902557 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078963484 seconds)
  done (took 5.845082971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07274822 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066536455 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078113089 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060836328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060628428 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070434673 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060667443 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060650306 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069340505 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067099573 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06893888 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070012215 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07224888 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068536886 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069570144 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07389876 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070038474 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069737313 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067039435 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069924912 seconds)
  done (took 2.730774423 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076004414 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08070923 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066582087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070009032 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066333845 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07039192 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06611672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066219531 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066375161 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065997268 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07064417 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070923934 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066578955 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069647875 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07073922 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069735307 seconds)
  done (took 2.461393215 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066616562 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065781017 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066522668 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062176347 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065319818 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060583249 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061512047 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059931314 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061288974 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075132751 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061732306 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073420663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061550804 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060256158 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061119326 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066677406 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060979331 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061339952 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061724448 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065580542 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067656944 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062523525 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06511362 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061350112 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066772903 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068441573 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063216628 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065168706 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061866939 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062356644 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066871875 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068135191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061213246 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06184042 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060491928 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061648304 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061596065 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061745469 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067449584 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06139801 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060407278 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066435134 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061671936 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062108763 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060721157 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06170672 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061170832 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066939861 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06202985 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067026165 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061586615 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063163784 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061983602 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068516461 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064056399 seconds)
  done (took 4.856819935 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07653059 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066275194 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060376516 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060460715 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066157167 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067192658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065916315 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066061718 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066667623 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060354587 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066247714 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06552592 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0658314 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06579662 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066034661 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065653983 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06046808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066186126 seconds)
  done (took 2.542339196 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070874887 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065174358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070551909 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065624997 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065721109 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065541132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06080755 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060850803 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060772646 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065218847 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065831032 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064966915 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060504175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065014655 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065357092 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06515622 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064797142 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060807713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065303164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060648601 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064780929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060858786 seconds)
  done (took 2.771282495 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086055491 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083345693 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.126706002 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079574439 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088245346 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072216022 seconds)
  done (took 1.892536561 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091273504 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101521946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06538322 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065537523 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074645769 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069033051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067807499 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06877077 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073853338 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072446006 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06903124 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074047182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074041029 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070642541 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074570262 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075841884 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068684219 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068502425 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065746473 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07660501 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068023437 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072977647 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068176079 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068608221 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068812888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070541655 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07664053 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071410583 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069379503 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073939676 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076587984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068697951 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074221416 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075139012 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065759752 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07445214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069152869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076994419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074755798 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070651646 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065745207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074546041 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074660756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070331524 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076820649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069711105 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070931274 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068924921 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069307351 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078889541 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074693518 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07075745 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074596727 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077626993 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076304398 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078010939 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073013573 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071261344 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075968288 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073063972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070289046 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073574388 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069973876 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071898829 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076628064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070046007 seconds)
  done (took 6.163113863 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098215822 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066310044 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069547238 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073243575 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071387705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068938263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069024818 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069005689 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069168244 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066518317 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103482408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069052552 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070806777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070769382 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06921806 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068900925 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069040876 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070891742 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066400558 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078760496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068952421 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07045612 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070870913 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070796228 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072865107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076939706 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068884727 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06872656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068789805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06878773 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070765047 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068917476 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070685273 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066043775 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070824163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069204224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0689987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070599148 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068646971 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074207535 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070578016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076541416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068400428 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068768118 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072804426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069283124 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069189965 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066369407 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069006392 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066892998 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072565671 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072880242 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073039855 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071108059 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069566212 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06903631 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069092956 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069096374 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069689924 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076716506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070452327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068511923 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079344385 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068066704 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067920919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069729336 seconds)
  done (took 6.082526095 seconds)
done (took 126.369688278 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209445265 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182219637 seconds)
  done (took 1.739777221 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073563113 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.0951663 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073836231 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132356609 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070455444 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104282029 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103222721 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073605145 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069930037 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070505499 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070887003 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072461599 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135439522 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07033451 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070076396 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073097652 seconds)
  done (took 2.72845436 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105716871 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180259615 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111415606 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068462167 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105467892 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074634139 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068301244 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079042303 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071676562 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.079622131 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074624925 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073162148 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070386268 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073491611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072184866 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076324904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072026183 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075240288 seconds)
  done (took 2.903864905 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095754495 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084184013 seconds)
  done (took 1.553992688 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152890595 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103525686 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142173037 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.318639933 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127222559 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.123799444 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126822258 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.122611813 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109031822 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119052162 seconds)
  done (took 2.816444446 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103566399 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173309653 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309342964 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118327298 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074267204 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096276452 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120012452 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080349124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077256144 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077214121 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077537759 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07478593 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099075466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074469559 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073211625 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077485729 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101712243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072346465 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073308691 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074795219 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104149865 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070545202 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075145193 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07268938 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076490604 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077631881 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071335284 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069491272 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074619975 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073142931 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075991689 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093016972 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075720431 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.095917809 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073556947 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.097084971 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072713679 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0723023 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073530251 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072336481 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074523692 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075130461 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07796649 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07487269 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07025541 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072868321 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070788799 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068610132 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077037123 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069584681 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076706591 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076077103 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.095636971 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069824914 seconds)
  done (took 6.033548528 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105167304 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103476624 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068517388 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110983387 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103874261 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068329774 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102319168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097961319 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106327129 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067751313 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067749273 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06789629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074523241 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078385452 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113189085 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105372546 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069177412 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067690131 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105172608 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107297161 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069076649 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101704142 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100447932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106956089 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068253163 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068865936 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067714917 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068379422 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071767471 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073273828 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067094899 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073976548 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.078654324 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076921592 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066437441 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066848898 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066616908 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073095009 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074329248 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073627675 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072545298 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066638085 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067222438 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067355397 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067823447 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066333997 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072675886 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07409919 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072670542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067006552 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067031577 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066778332 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06690057 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073587423 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072124098 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.073763896 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073993189 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066578857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067233346 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069776672 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076454485 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076319229 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074336503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067582374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074602047 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066473232 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075250114 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078559781 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06677148 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067072777 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066916007 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066889865 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067670313 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0735667 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07453832 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068855273 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068292812 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068551359 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077072354 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074383789 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067448007 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072536662 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066308235 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067034517 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067428997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06747602 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072403839 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073805277 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067693371 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066448422 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06696957 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067024062 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066516584 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071469019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072934151 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073367219 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072734212 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066949302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072788171 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072604895 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067552551 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072793089 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06658733 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066781064 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066061094 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071291935 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070698723 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073482764 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066576756 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065523102 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071627084 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073938483 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06592673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07142107 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073358089 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.205954697 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067962279 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076875364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067959106 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075321592 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068576059 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075444343 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069994479 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073996535 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0677012 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066829347 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067935092 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075646165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069806526 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068945406 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069237656 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069472533 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075882159 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07848164 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069595773 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075459921 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075698347 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069963711 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07589761 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068858243 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076422128 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069179218 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068944659 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067985803 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077805979 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069129038 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06876008 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068854929 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077736201 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069115117 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077315676 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07261289 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067338797 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076674872 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075711504 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072269171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075832016 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068396498 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067549594 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067411999 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067251314 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072324452 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073246085 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067821538 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067338516 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074430596 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07737265 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067324949 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072692139 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072357982 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073126934 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067031445 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067422091 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075725003 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075199171 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072982937 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072604839 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075530373 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068750711 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074293651 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075731807 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068560393 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080825149 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06917219 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078960909 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074568395 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074428264 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074020466 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074555594 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075069567 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075169344 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077034891 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067034436 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06724223 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072893836 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06692133 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067155901 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074760948 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06865176 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067949766 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077774494 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06757857 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075207353 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066502709 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07384436 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066707563 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067352414 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077541832 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067166793 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067395227 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072705528 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067033904 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07314535 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075682671 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072429154 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067313967 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06754575 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073347292 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073745395 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067088253 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066769038 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067103179 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07135799 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.070926642 seconds)
  done (took 17.908741294 seconds)
done (took 37.069872798 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216420269 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163022219 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197571692 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112910332 seconds)
  done (took 2.16695092 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089597272 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096853909 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.075565423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064464438 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079813352 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065308095 seconds)
  done (took 1.888229127 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.246909751 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185231796 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17061581 seconds)
  done (took 2.015119836 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213237047 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193517196 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.69929554 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300321107 seconds)
  done (took 2.91680235 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.12945326 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078035066 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063718564 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.074069044 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104041419 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.131361371 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085772299 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104926781 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073086927 seconds)
  done (took 2.319702348 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.126610048 seconds)
done (took 12.874458193 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.159107823 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.203665445 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10511554 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073130473 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074565406 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108558791 seconds)
    (7/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081212738 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151117029 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074927996 seconds)
    (10/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.125054597 seconds)
    (11/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071336442 seconds)
    (12/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.220742681 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.202048685 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.234482151 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.119639255 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076294022 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074249135 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17312059 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126616593 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241393757 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076482376 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.233499421 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.244879235 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091425061 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.204932132 seconds)
    (26/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.257362546 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076868939 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076350774 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069380341 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065025598 seconds)
    (31/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.165013094 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066118027 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212544008 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088832486 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093851532 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172813371 seconds)
    (37/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.177235164 seconds)
    (38/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224347602 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07505387 seconds)
    (40/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079648678 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.188955021 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.221568586 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06443869 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161217715 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088697361 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078793122 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.148863873 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.22266754 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137937333 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118694341 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.067242718 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.174318368 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089992613 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075105916 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148999727 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074444408 seconds)
    (57/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066788247 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075316427 seconds)
    (59/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066769918 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068251295 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066288935 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166013107 seconds)
    (63/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.173609705 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065418336 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074866086 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066572313 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084981171 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063179853 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.184183095 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065557381 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088418131 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061787375 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088522339 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.137504679 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139773059 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077134995 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065959507 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091948502 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.13884105 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073536125 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067064536 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071618693 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.384668765 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065659614 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.196074396 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079074182 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066595536 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073358776 seconds)
    (89/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.167417328 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.178936046 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13468104 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092175739 seconds)
    (93/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139209156 seconds)
    (94/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.196740248 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161084115 seconds)
    (96/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07226928 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069226091 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073938066 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068629467 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074193275 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0737077 seconds)
    (102/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.075063754 seconds)
    (103/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.073143108 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066441155 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087556225 seconds)
    (106/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.065014121 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067419714 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17860459 seconds)
    (109/309) benchmarking ("sort", Int8, false)...
    done (took 0.173013942 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075011356 seconds)
    (111/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066370327 seconds)
    (112/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.079159906 seconds)
    (113/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.142920065 seconds)
    (114/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.176072843 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173207111 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069996376 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081543878 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075582043 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076369009 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073142274 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153846046 seconds)
    (122/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.066323082 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160591683 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124917582 seconds)
    (125/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068769488 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15151047 seconds)
    (127/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.147007462 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183081887 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074202199 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075443041 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065001156 seconds)
    (132/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072478876 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075125406 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065202056 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121942479 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065751147 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09204473 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079788737 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066194828 seconds)
    (140/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066976035 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18549722 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160054929 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.083429868 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065206651 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151429784 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076901134 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.132448986 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.143879991 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224348137 seconds)
    (150/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.199227616 seconds)
    (151/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074126819 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075070616 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065039909 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073328002 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065470909 seconds)
    (156/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142043243 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142216129 seconds)
    (158/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199257333 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066243333 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074969299 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076710218 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067625261 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191110514 seconds)
    (164/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.065586335 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146775896 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064323037 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07312751 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064811743 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095008976 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.137364451 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066419487 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067267897 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068157871 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088185143 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150012046 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066257669 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066822983 seconds)
    (178/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06453076 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091238605 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06470622 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131510822 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064843124 seconds)
    (183/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.077942913 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065804762 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064686597 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065425874 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.141925068 seconds)
    (188/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071831255 seconds)
    (189/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064318306 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064017074 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066013063 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151480383 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084618247 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066294662 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.225046337 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06718469 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.0741947 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068749079 seconds)
    (199/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089872119 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074986604 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068796914 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079211554 seconds)
    (203/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093573908 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067161238 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075500068 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078594086 seconds)
    (207/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.066251678 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079062338 seconds)
    (209/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.074470837 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075445519 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073482799 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073254708 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073406945 seconds)
    (214/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066781634 seconds)
    (215/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.065825841 seconds)
    (216/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06715516 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092334698 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088728775 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06503685 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068442637 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.143105944 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078300992 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077263671 seconds)
    (224/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.096107383 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065115443 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065411614 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148019373 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082078103 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123275538 seconds)
    (230/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066983127 seconds)
    (231/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070994313 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073749387 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0668337 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182771053 seconds)
    (235/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066904043 seconds)
    (236/309) benchmarking ("sort", Float32, false)...
    done (took 0.140237689 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06700264 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065421143 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.147482615 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077693667 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067353474 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06659625 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116241588 seconds)
    (244/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066634376 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065143037 seconds)
    (246/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065811368 seconds)
    (247/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068009291 seconds)
    (248/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092048872 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064740321 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111844975 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067249454 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073956394 seconds)
    (253/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.066005779 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081220229 seconds)
    (255/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066943394 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132548358 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065217733 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091695232 seconds)
    (259/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065438122 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16078992 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064572403 seconds)
    (262/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067058433 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064821426 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066630332 seconds)
    (265/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.066994807 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065048237 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07294568 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065583273 seconds)
    (269/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.083047761 seconds)
    (270/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.066807305 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066634924 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066032787 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065514188 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065223488 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073597635 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124359215 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 0.261051259 seconds)
    (278/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.066228549 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066344521 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066223124 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064331132 seconds)
    (282/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064794042 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064710862 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063389704 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073458863 seconds)
    (286/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067029625 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160904447 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077576645 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.094460442 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066010296 seconds)
    (291/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065708674 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065436423 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066074552 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077845751 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076910342 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088562745 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066563855 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.150494646 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089135928 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066085842 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073103968 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065051093 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065289116 seconds)
    (304/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070352059 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068225025 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065382946 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179589251 seconds)
    (308/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073806413 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064986718 seconds)
  done (took 33.093510945 seconds)
done (took 34.52441134 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08474909 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090592757 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073286554 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084746251 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081295772 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100796609 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07399019 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078381795 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080462276 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079738569 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079002985 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073089863 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075457871 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075481811 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07333476 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089385372 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081590093 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074693023 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074887697 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065122707 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074252697 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066172875 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064727817 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072681194 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077574912 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072830431 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075657601 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075863494 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066485866 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067177444 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071162414 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07577103 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065824034 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077654055 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074728325 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074783585 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078274455 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079011525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065214988 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066340802 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076853038 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066494368 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07428428 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072888627 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071151042 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073646122 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074740392 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077969361 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089133535 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071254298 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077206377 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077322484 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077291216 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071870712 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07168831 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074438167 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072632736 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088454503 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074832129 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07090541 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07671965 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075370517 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073404844 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07436487 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074703094 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07778573 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07759482 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073636848 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076874173 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073804548 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065914876 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074454886 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071079365 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066130038 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077799356 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079841554 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064857491 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070885767 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074269969 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075096372 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065846917 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0711778 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064799435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070795202 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070371986 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072681654 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071386675 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074045402 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064980782 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07554157 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073410756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074669153 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065077463 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078100794 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065549764 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072771642 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066362246 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06636565 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065379534 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072502983 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065797091 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070871023 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074387047 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064686469 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070782715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078999148 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065767177 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074115977 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065256405 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065795422 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076659064 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076978159 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066750436 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071340145 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06502491 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071638007 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065210564 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065612802 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065754661 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066514896 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070678366 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066566409 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071005096 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071820211 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078413269 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0660875 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071213233 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070649005 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065912228 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073307979 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066511341 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066197906 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065033278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079679609 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070568584 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065983401 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071515871 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070297974 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07333053 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063962194 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074043066 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071097485 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069796493 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072137933 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063884031 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076699618 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07012851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069659382 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.205156634 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065573242 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065312733 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067406545 seconds)
done (took 12.741869151 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06584609 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103311747 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.074286538 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.082043529 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079183425 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06750412 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070290725 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082862215 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069662324 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.085946771 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09342888 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087550811 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092354896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064626044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065974879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067479788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065047942 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072895583 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079218703 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087784328 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093967344 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065455313 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.066978633 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080433718 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074813779 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080492569 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065788413 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065599815 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06727372 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080678533 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089336456 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064373838 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066245503 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079148578 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077870162 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071448437 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065542461 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068752176 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065402039 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065837388 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067559854 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079109282 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069791468 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068940436 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067296515 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068018499 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067096336 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.071945877 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079820676 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.069880166 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07404451 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.078507935 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068393066 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066565234 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064837116 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.070695723 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066818536 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06721444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066795683 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066311725 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066572606 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069173294 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067276572 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.067302978 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070228744 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068924314 seconds)
  done (took 6.310639121 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083108575 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095220138 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083818194 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084188756 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066590224 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067674533 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067115801 seconds)
  done (took 2.085902617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06608779 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076865858 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082252414 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081953824 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07472837 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084278474 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068033394 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097633335 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066162602 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079378437 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110860924 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083030824 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070020718 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079005099 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06728714 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.073989841 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067322386 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075901799 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074527205 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083439064 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070788741 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095874929 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081174736 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067762844 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.086638433 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07131603 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066288204 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067206485 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067989561 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067779426 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067641415 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105761655 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.070582343 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078389085 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068209741 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.098978768 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072569394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070654474 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069363724 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075579636 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071435248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067733573 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065331871 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067944824 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069284366 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070818511 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065280302 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068200132 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06755075 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078289425 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065779781 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071004203 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06977196 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071664711 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073261907 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071574845 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075557616 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068850243 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.078641356 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074724833 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067607631 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075020232 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074834273 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.073030828 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074176688 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071349448 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.070530188 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071791703 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067617088 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068881335 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068533727 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074218123 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066700536 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06881849 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070410471 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068960008 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.070772988 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.083337289 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.083445416 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079786426 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069251019 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068230273 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071038424 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.083321315 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071937673 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067588471 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070471861 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066610134 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07175033 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068498357 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073513733 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068407113 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075330781 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.069332536 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071060198 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075404234 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067204917 seconds)
  done (took 8.676068432 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069162289 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06815603 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069535299 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068545014 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06878861 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068548388 seconds)
  done (took 1.977918841 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087843431 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067805234 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08219509 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068279078 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103206569 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073932615 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073615742 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07527347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080815036 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080337461 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.074167023 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076754653 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073363317 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069040674 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.073246444 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067981196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074012375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070512102 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079445946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06954078 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079873171 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068924696 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069095564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079145898 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069624528 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067893788 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06836849 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07965318 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079057608 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075041043 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068672569 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069713416 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075408377 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077089236 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.073524918 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075825916 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06762856 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072645871 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069473931 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069881811 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075634778 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069056165 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.0695074 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07270787 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074579253 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075513775 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072858163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070893719 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073445914 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072606665 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072860338 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068223675 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069794797 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072551364 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075669645 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077114077 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072722017 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073643313 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069146564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074997327 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066639163 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068478965 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073911711 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069720687 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071778349 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072556791 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075682764 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06912092 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069711899 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067256038 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072530927 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067473247 seconds)
  done (took 6.810824267 seconds)
done (took 27.388259933 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541703953 seconds)
  done (took 2.055538128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.569478868 seconds)
  done (took 2.12361846 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.673639673 seconds)
  done (took 8.22514361 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295836904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.321332835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731041325 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12963775 seconds)
  done (took 3.063186259 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.748537514 seconds)
  done (took 2.312044743 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23560369 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22937794 seconds)
  done (took 2.038260467 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339754548 seconds)
  done (took 1.892576295 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.128491288 seconds)
  done (took 2.678359867 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.221174264 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162278516 seconds)
  done (took 1.942241653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.490536192 seconds)
  done (took 2.048184153 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.264958491 seconds)
  done (took 5.825143141 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229188582 seconds)
  done (took 1.82769358 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232426056 seconds)
  done (took 1.797701041 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.76802973 seconds)
  done (took 3.323947234 seconds)
done (took 42.714442698 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082536682 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085451597 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086878686 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082770136 seconds)
  done (took 1.867553064 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072546689 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06962665 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073481888 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074229394 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07218675 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072653252 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072858185 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070235414 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072351482 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.07062036 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068683765 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070355109 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072864789 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069889517 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072936201 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074371713 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070456586 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070698236 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072950091 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070040356 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072756454 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069888997 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068470791 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06989174 seconds)
  done (took 3.273892434 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076830664 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072351453 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075919507 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071543955 seconds)
  done (took 1.857066793 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074855783 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083147692 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086043211 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090602878 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077655605 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076541883 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083436452 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084540007 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066756978 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086162816 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068662263 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067655547 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067547398 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086009196 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083073425 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063076779 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064962393 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076813539 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076361601 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079171639 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06907792 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066047096 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077191 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076431894 seconds)
  done (took 3.393066471 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077516542 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066007995 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079348748 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091681033 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094128322 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066068179 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080274467 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093647788 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124506211 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066707902 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072360514 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066215943 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105069701 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066229915 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080767479 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107361645 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109221762 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070284922 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098932289 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06631676 seconds)
  done (took 3.254475369 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074381083 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069797388 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070708839 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06678742 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077588997 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074441617 seconds)
  done (took 2.00681887 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0674932 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06893649 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068406765 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067934559 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073152531 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068269574 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066424241 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068621449 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068409001 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067966344 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067632899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066776139 seconds)
  done (took 2.385181102 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165247068 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069969908 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071645739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067242512 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071651526 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06765904 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082128637 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071275583 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085772039 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067247591 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067779978 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070101181 seconds)
  done (took 2.528777056 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099185957 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101305366 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145584245 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117031828 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095069268 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095360449 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.158935421 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.135970967 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116453166 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069936672 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087654292 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100780449 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099622376 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134154786 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112876499 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07312558 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.112058968 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081581551 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114086602 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122228283 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11531947 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123913257 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093522411 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099326466 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106766985 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118714665 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.072767653 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071190712 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1487303 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.100952524 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.093446245 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09998669 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108669029 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068813083 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085482521 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.10751486 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083339855 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116359189 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.088461222 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099482562 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081207156 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.131504969 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105242952 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102959652 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131035518 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092694511 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110513334 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.106758848 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083424358 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.119472224 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098806422 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091645684 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080955817 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.159792817 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089590034 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.110930141 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111923053 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081604242 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087958143 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100918702 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.129161836 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.104570804 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112634785 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.255631362 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.092746931 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092622692 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132216203 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086438585 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101837074 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130207017 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.093216519 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076427433 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09715666 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070092703 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.098251898 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107445571 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092728089 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111969471 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078403908 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127643824 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108811265 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073752493 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.118040085 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099402572 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155886477 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09614549 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101018876 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092015708 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.149910393 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085245565 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081074548 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099318644 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129128648 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094600989 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096442953 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128772782 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097118759 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088198484 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076070954 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.090099486 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10213939 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108153364 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101992874 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089503594 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087592094 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096490078 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075714708 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081465769 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.102106532 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086593478 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125130184 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110003173 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122970392 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079244964 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106008648 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.097003902 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129772633 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118475986 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085999405 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108284619 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142167846 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114038152 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085596248 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100826708 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111383709 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108563277 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096519963 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136621569 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11667698 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08941183 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093883921 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094752533 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.263055506 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15685274 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090658479 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106116684 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138870995 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.115613413 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091731626 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084430278 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096308562 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106403666 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141908665 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096158998 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071416242 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092737018 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131782884 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077178659 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099732757 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.093578907 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084622606 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081994421 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069288422 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10256939 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136266822 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.11391676 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100158538 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.105547165 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069651274 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099917162 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105089696 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142532195 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117180982 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097520518 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.097373931 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10237119 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080556048 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.134052966 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.134599839 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092649544 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092497522 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122699303 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.096165199 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.105425561 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114723515 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103012297 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.100373326 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139433939 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11892354 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.121877872 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103119888 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12169455 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080433254 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113505541 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073982337 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103878258 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07637526 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105830955 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.080275248 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.111369369 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079202669 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099351776 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.069877819 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072706848 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107980302 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.241064659 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08519743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.136379945 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.131270227 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.08207502 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102075915 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101614627 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101826276 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.109985936 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.091721743 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092113119 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079740134 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081951704 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099792282 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093780662 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108552833 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079376271 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076447271 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139058913 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104175484 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0910662 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096288492 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.119651346 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089748878 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087864499 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104001302 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138705454 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.119630891 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08115255 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.093243996 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.069781884 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.085634764 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.076657351 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10996297 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075816522 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110250894 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067999438 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.129598174 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087648176 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10230684 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098483412 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128053017 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091443975 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129116676 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087588245 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108237983 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09512023 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096784716 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.110057749 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096939519 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105410223 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111172836 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094342261 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088942259 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122469902 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106597273 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117558679 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107429293 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.137275615 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112698507 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076085586 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105230019 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100042099 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145829919 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100450905 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090137669 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095559043 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102824332 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082002671 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.29268816 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087387806 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.088059976 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113772093 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090035566 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098873381 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077179462 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100480673 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095611241 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114318296 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.099613826 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.094054459 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110598696 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110637448 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087223899 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086869932 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124451822 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.129993334 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.103096756 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094627062 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089121915 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099213111 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094757641 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.109726858 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081225251 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076261691 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.069197922 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.073721123 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.118074281 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108239128 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099502472 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098891442 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103556319 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072889739 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088315553 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091142544 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08394178 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089288613 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113786719 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103104265 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.129868086 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.10205126 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086867835 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142120566 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128151457 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085914098 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092945491 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100724138 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074629243 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14654536 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118369496 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076185256 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08314628 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07663528 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082587722 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072482211 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104910204 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105469592 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076966443 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104393262 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098938757 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12390784 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097834728 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077394465 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080911455 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075927514 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076054027 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102375399 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.078486996 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07704694 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129611754 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10291292 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106898108 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083411672 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075431447 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.284637156 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.071041065 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133938 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08425832 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111399954 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081859727 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080728669 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089961657 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107082142 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107110779 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113669907 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071859718 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104114893 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154952538 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076544803 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077492251 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076399716 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111673775 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088150067 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141919595 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090074194 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093957651 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077965639 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129013871 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103230436 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08347169 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129336353 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08086657 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072046119 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086422811 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.112569645 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.073321701 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075906953 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113410424 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.510635468 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090721239 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075444514 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087110171 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127877392 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084211616 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109129219 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11917974 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107726245 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.187162493 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075397294 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091521334 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102447919 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09697066 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090945968 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077978044 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087374918 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087179782 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083174967 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104500177 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079373514 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09010788 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079306915 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103852173 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128880269 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087374176 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102374195 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087471297 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090023735 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098531732 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111012959 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105699587 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086479969 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085712729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105922506 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083065969 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075645315 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.252088422 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.077518787 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079720933 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119163428 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085574472 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095154495 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104685391 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.089998991 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114261582 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119007738 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112571045 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098648604 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080271937 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086878545 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088344851 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075104628 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079712546 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075358386 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071796718 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107706648 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08586818 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082661268 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100315893 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109158971 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101222475 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107244577 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09101537 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098531153 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101071287 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.127568082 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145869924 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098661175 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.12413049 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131886187 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07714698 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076736184 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.080079765 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13081221 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.082068312 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093440853 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.238581143 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076577566 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079810736 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091823732 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108372471 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084051527 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081184832 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099144781 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110908134 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085509597 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08199298 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094841742 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109463029 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128626713 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09033033 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075988033 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108038656 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101676278 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124190799 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074410526 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082025824 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.12931085 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088623149 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105431801 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081503629 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12442823 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132102648 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074774963 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089957708 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073457044 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088516445 seconds)
  done (took 51.270887308 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.146957253 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.141094281 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081493324 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097149098 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185166742 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.195068354 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117957047 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093704936 seconds)
  done (took 2.781667561 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067833788 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081340243 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101784493 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083910179 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067961115 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068802101 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201751385 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082177137 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067652949 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107390854 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076169521 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069789337 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.361323407 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066768766 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068564034 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076007486 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068523651 seconds)
  done (took 3.391879614 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369179152 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623545435 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.319720105 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075703369 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.952137293 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091083953 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.214456319 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138028416 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081101573 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54960227 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370158475 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130619228 seconds)
  done (took 18.600980599 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074645249 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075565478 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079528465 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079132769 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075169607 seconds)
  done (took 2.066047673 seconds)
done (took 100.257752987 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081549153 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.17296456 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068525188 seconds)
  done (took 1.959899187 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081425081 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081090838 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081924872 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.079527736 seconds)
  done (took 2.015377738 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073216788 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075264918 seconds)
  done (took 1.834048617 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234259514 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175086138 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091760332 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081398569 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079496107 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081237682 seconds)
  done (took 1.937584635 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070439199 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071736241 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072736579 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072857096 seconds)
  done (took 1.970501164 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066731461 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064815329 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069300939 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072208594 seconds)
  done (took 1.95730296 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082062104 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079817825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078954531 seconds)
  done (took 1.927032523 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107057283 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096799823 seconds)
  done (took 1.88934101 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078272422 seconds)
  done (took 1.764578137 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088053373 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094981224 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140298754 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105533786 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138432918 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123357212 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075287708 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076002529 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072152264 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071012671 seconds)
  done (took 2.666754407 seconds)
done (took 22.186489752 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077561374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367106354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361062981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089322134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671120969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357765894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971515131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09187528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.100826237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069796739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086309832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649584141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96001099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326829974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945725486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325847008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64963603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069250495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068361328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069506514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955404837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069191889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069447931 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069539518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650314953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375145501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070432472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326115479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0692125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071812325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356726664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070225231 seconds)
  done (took 16.123342254 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068718724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120990664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073889574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085892864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071650163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070714914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072134802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069742282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111215684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070615251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087510199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069162138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073243544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071773923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09064328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070983318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07203573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07123893 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070203157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071338108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089438161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070468076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075513973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073699887 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07085576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083490641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07194809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070201512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071110896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072540554 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072914532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070902938 seconds)
  done (took 4.156353079 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120865109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126429595 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07200054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10793169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119587799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071461954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151604341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093466812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114764214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070018429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087762385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070593044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106192309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072000928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091489982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070418507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071857332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07180914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07049997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071288982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089394655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070517489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070936314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071273601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072078913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085697403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071104638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069265719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067984198 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07017779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07184478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071545621 seconds)
  done (took 4.415722248 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068982556 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070473628 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07987807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081663844 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067931308 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070417894 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071206587 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068032169 seconds)
  done (took 2.290420624 seconds)
done (took 28.68627235 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077348366 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067893244 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071906505 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089520595 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075277121 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071890387 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06622361 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075108161 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072441772 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072228453 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073703901 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068452677 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071221306 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066788082 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073629791 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067853804 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.073373166 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071863444 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.073012967 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.074075176 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070647084 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074336825 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076227794 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.072592874 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.072136768 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070629118 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074609113 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070980613 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066339913 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068496328 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067898809 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078931175 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072128758 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072181974 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065534156 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066222387 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069920212 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067885861 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071869124 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074556369 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068422694 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074719362 seconds)
  done (took 4.691261801 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086241993 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09293636 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085332174 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083356758 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.106490019 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083265138 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089476333 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07822872 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076389052 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087455375 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072896609 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077127303 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077975867 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072170609 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078993808 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076882158 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081524658 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075041798 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080861584 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080055167 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093129875 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07363862 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080162177 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081318825 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07534772 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081246322 seconds)
  done (took 3.841680195 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072251248 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089055498 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093971865 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143257758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111305762 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083946026 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083787516 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104080726 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10264153 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069572618 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073450887 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095907867 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098248109 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07664254 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108254775 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087413101 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081656424 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070832218 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075279836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104086521 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092835698 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088307052 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102305275 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089274294 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068855473 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078347722 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075847878 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08359551 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076872922 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081181163 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073295862 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072640847 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070225184 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081201921 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073195243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067081784 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089896799 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081664159 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084682261 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107440764 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078258142 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070294882 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.0985116 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134994827 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068213743 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07162141 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072578568 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08121622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069302843 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097598532 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086560319 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068659192 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.087356166 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070068604 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070403092 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085018118 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070115486 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070894819 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081235654 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075498233 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089304566 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073606549 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089005944 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068661958 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080112702 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07000965 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07000409 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066761823 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103997719 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075779956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120326373 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069950864 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066867718 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080544696 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080401185 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0757454 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068358159 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086750938 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079144183 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072904469 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080063822 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071572283 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071936552 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104646548 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06749349 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066592558 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066724656 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070738137 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072206025 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069161464 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082002822 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06826516 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07232676 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083476134 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069070722 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068961493 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071015356 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069831663 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068036287 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079686363 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072259944 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07073873 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081564632 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069987015 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071924601 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083572535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078143475 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068222825 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069590159 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071365172 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070699777 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073514453 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072557605 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070648837 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075464562 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076653877 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073908778 seconds)
  done (took 11.104286617 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160287265 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154549344 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070792358 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147237618 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077717044 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073454238 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147879111 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.087811197 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068870991 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070725007 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068323972 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.096919051 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092438178 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106115139 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.073557066 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070332117 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095160988 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10219587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152517479 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146399457 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092870103 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077341112 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07187294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070315507 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070331577 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077205711 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083417546 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074580825 seconds)
  done (took 4.4318375 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074654706 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111282899 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073817136 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094264072 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087382375 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069096212 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071292045 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070355474 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086288786 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075258063 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067998914 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072183631 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070381231 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069481591 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068042947 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073989827 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073434801 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066485392 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072080411 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072077562 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078206176 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093152188 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073177195 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06806727 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069382204 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067101174 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073299871 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076371284 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.0667045 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097502664 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064025381 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071258208 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081032462 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068908717 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066971557 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067593251 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067220147 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067084472 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067097153 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064987542 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065397914 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072036457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06633989 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073063886 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082424194 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075203543 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069615961 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070321926 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070603522 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064755718 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070209564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070565242 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069985133 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.0757876 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072201913 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071050199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0696484 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097279474 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072970624 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066432271 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065893267 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068118422 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068081732 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074776848 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083658388 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068041462 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065616239 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067525279 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071926624 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08096148 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067349799 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072973653 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065130125 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067946283 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069977777 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069948667 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068459528 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065349476 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06680204 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067564888 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068713628 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069005155 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069010338 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071794093 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067264118 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067611889 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06952499 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070877077 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075947505 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068053573 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07166618 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068682891 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066188935 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071270081 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074271224 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07264047 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088730069 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078176184 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069686653 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067214273 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083007365 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070668059 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068665328 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075452785 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072841515 seconds)
  done (took 9.356200936 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089713167 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068553413 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08738158 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093470227 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078939273 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074258002 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081331972 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067719283 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083456842 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066752061 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075958826 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065577212 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079632059 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075610183 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068613105 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077628952 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070138338 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086989548 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0824502 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067942013 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077406956 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081047377 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081974265 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0868759 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086588976 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087422819 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08098071 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070956956 seconds)
  done (took 3.956606029 seconds)
done (took 39.084591471 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.796330516 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.953512093 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.777762498 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.991942163 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.835678133 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.910245305 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.906109145 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.770833876 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.91415183 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.800362147 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.080866343 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.173023022 seconds)
done (took 66.684619527 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.921590925 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.924849958 seconds)
    (2/2) benchmarking "String"...
    done (took 1.991290305 seconds)
  done (took 5.630128935 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.92142735 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.412936614 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.053035506 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.774140736 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.775937307 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.286248716 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576540005 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260931231 seconds)
  done (took 30.851607357 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.864640135 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.99811594 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.446818922 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.481936306 seconds)
  done (took 15.546452758 seconds)
done (took 63.673309804 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.819399556 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.773293672 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.790737095 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.808300563 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.784104453 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.77567737 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.78000385 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.776934906 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.812273658 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.778413702 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.774739716 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.78924451 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.775945125 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.822438701 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.527383083 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.841895522 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.80036775 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.792039363 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.801500494 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.789003303 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.785573309 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.779117307 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.243808112 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.96208887 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.386213447 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.197050481 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.815931433 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207006434 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.786242053 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.775477686 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.826438177 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.163101595 seconds)
  done (took 204.250638521 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.779494666 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.569139446 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.679714415 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791318312 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.106387821 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.951798317 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.878785615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.181905965 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.78209314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.802204934 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.924616862 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.780892883 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.970187576 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.774306369 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.815384043 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.806395147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.932428159 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.97873438 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.81789522 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.927124876 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.802255345 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.77035969 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.712154951 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.928932913 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.796651332 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.823909402 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.793436131 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.809170608 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.967695394 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.899317542 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.815086328 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.800403135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.943313852 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.648292926 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.787477379 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.79746963 seconds)
  done (took 169.06411665 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.978065981 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789656535 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.782947894 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.839682568 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.904490221 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.782634886 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.460112326 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.793397793 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.503412059 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.788841589 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778891407 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.780608442 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.783499058 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.793595591 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.867564188 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.784750786 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.796505966 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.7839678 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.80704727 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.785556741 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783215542 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.780960335 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.782024782 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.779764414 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.7825464 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.781052757 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.28101071 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.025662703 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.784214264 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.784465172 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.417623138 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796417898 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.341485058 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.782234891 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.873510438 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.782660395 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.840571239 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.906311943 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.784623397 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.000071532 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.867125739 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.782881251 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.781281976 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.847057807 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796552955 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.783952292 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.784661663 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.789729673 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.849412228 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.032416601 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.783433936 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.904861409 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.288954707 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.784773645 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.783934211 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.784281526 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.422175537 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.785446207 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.784113755 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.781851281 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.790032557 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.789700895 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785578578 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.785979894 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.169724467 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.784794718 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.854481334 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.799708588 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.416312314 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.785906414 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.940113986 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.78665971 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.970315494 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.783644428 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.782505883 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.785785028 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.785830812 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.782799752 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.78549489 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.904787716 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.794718663 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.916651349 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.868309367 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.908718867 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.789532599 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.795453965 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.618423531 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.854875041 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.823620164 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.61912209 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.785115951 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.157059756 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.569547432 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.783943628 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.784938815 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.798244321 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.784419565 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785714824 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.784929401 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.864566692 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.7857179 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.907927263 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.521079046 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.362137602 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.787546452 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785998386 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.792293002 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.869187764 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.90977949 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787551987 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850705753 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.791129171 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.787079367 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.886812935 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.787546212 seconds)
  done (took 402.821514869 seconds)
done (took 779.884654198 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.506744062 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.662192179 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.563968684 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.411570578 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.382648206 seconds)
  done (took 14.248924242 seconds)
done (took 15.966953585 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.800639807 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.792164492 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.850913613 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.872519943 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.803153188 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.803266505 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.867306897 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.807207422 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.837339904 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.842510056 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.87105929 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.872289565 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.809937719 seconds)
  done (took 25.556119514 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.797380587 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.931286123 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.017516709 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.83015419 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798137558 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.019887256 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.856336276 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.930419692 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.931434371 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.007835525 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.026420294 seconds)
  done (took 22.871014484 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.797998066 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.928700391 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.011957973 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.834501216 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798856006 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.024714814 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.861472795 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.929086507 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.934104836 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.014033208 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.021123535 seconds)
  done (took 22.890564066 seconds)
done (took 73.038829877 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.789432552 seconds)
  done (took 3.511770838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.816467299 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.989530438 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.791744245 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.793555738 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.790029094 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.791945626 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.794776451 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.792827171 seconds)
  done (took 16.285124869 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.791949648 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.793766607 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.79378586 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.79526945 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.792231178 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.792372606 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.792972759 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.791707743 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.791471637 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.792148543 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.792968948 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.792505345 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.791174264 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.79290265 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.79267317 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.790780534 seconds)
  done (took 30.406866214 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.794612085 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.793702384 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.791411971 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.793529438 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.792765854 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.791261924 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.790228512 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.790457861 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.793145702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.792436952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.791262072 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.791761258 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.790807663 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.792104669 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.790911574 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.793157625 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.794264657 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.79306217 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.798625168 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.794692494 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.79343488 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.795154055 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.796505276 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.792770183 seconds)
  done (took 44.757864292 seconds)
done (took 96.693892499 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.666006517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.605773684 seconds)
  done (took 9.999791429 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.794221244 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.79496593 seconds)
  done (took 5.320860663 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.793765419 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795110005 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.79516777 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.79470254 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.794896819 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.796348616 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.795427144 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.795124932 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.792752431 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.793444348 seconds)
  done (took 19.673674305 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.793729588 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.793176225 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.795271813 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.794181003 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.794964073 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.796051224 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.795213502 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.795808376 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.795372848 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796334911 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.795082958 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.795990116 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.793426945 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.795302902 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.79412293 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.79555624 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.795552654 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.797658792 seconds)
  done (took 34.039698703 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.79473928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.795475853 seconds)
  done (took 5.318162151 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.794764311 seconds)
    (2/7) benchmarking "second"...
    done (took 1.797215017 seconds)
    (3/7) benchmarking "month"...
    done (took 1.798349239 seconds)
    (4/7) benchmarking "year"...
    done (took 1.795828011 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798574697 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.79650385 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.797350515 seconds)
  done (took 14.305224217 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.796456255 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.937781605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.986269217 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.395958481 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.795646089 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.799531713 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.667306523 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.797898639 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.798922972 seconds)
  done (took 19.704323468 seconds)
done (took 110.084784153 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.584570393 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.798038922 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.046717434 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.887419524 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.817358059 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.090078127 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.825983901 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.394993215 seconds)
done (took 42.174469234 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.846470004 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.794974535 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.827539678 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.825150273 seconds)
  done (took 22.175856499 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.795995419 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.124232483 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.822641673 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.721397012 seconds)
  done (took 22.212025489 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.17681272 seconds)
    (2/2) benchmarking "read"...
    done (took 2.143667388 seconds)
  done (took 6.05427781 seconds)
done (took 59.019168306 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797244083 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.796431779 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.796883688 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.797289842 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.796974453 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.795037997 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.796680724 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.798075201 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.796560683 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.797513165 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.798981578 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797368804 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798276571 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797432137 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798349946 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.799342432 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.798042181 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799019702 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79737036 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797868064 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798736343 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.797854599 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.798916575 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.800279883 seconds)
  done (took 44.877641012 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.799267 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.799125596 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.800775641 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797630439 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.798389044 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.799692673 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.802235635 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.797783831 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.797786112 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.799238297 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797931992 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.799460093 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.800748259 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.798899067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797871255 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.79790722 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.799988397 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800588929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801147554 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801091423 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.799913261 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801117342 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.799031737 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800129865 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.798432435 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798189653 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.799199526 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.801384574 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800069341 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.799350728 seconds)
  done (took 55.716793472 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800243223 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.799592061 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.801292181 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.801897865 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.802705217 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.801148976 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.801344377 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.800150384 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.800035522 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.800909745 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.802185814 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.801512979 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.801439176 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.801348806 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.801651745 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.801228134 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.800694916 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.803451342 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804519438 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.801192003 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.802228177 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.803853772 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.803426593 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.802648818 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.804221896 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.803093484 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.803080435 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.803398231 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.802801458 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.801910525 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.801922541 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.804179718 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.801202433 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.802056792 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.803961293 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.802131468 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.802414617 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.803938804 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.803386767 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.80250192 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.802731417 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.803801623 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.80268675 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.805661522 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.802897485 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.802266243 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.803291049 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.804328596 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.803115627 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.804734943 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.802848422 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.801856498 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.803853837 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.802983952 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.804368964 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.805743804 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.804292991 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.80335228 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.804151451 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.801736295 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.802272062 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.800422398 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.80627018 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.803874593 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.804857433 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.805607546 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.80310621 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.805771314 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.804190327 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.803083379 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.804397406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.806522943 seconds)
  done (took 131.542920281 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.80561243 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.806259963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802503132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.80565824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805397198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806585426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.804656285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804508838 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805894238 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.804846384 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805763378 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804555138 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805752203 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805942116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807438437 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.805125663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.806425832 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806585313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.805649187 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805364302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807001575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805105387 seconds)
  done (took 41.459110275 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805593728 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.804431001 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.804325111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.80457864 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806455346 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808719902 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806251673 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806793624 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809898708 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804872547 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807239641 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8061809 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805250469 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807195339 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806782561 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807616338 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807305786 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807157079 seconds)
  done (took 34.252809561 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.808329867 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.806435801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.804899663 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805901445 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.807304553 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.806021426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81029832 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.807168232 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.808533428 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.807650002 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.807273709 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806311654 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.80537524 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805560148 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807360148 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807311987 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.807336396 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808178938 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807561105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808803758 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.806755595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806759981 seconds)
  done (took 41.496396368 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810860756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806859315 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808760906 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.807305793 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810442633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808432525 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.807741738 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.808364731 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.809854091 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.809363533 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808136035 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.810987381 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.806904524 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809077978 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.809385845 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808536219 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810969553 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809955278 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809304701 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811186433 seconds)
  done (took 37.922473855 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809990432 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808600941 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80773485 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809352036 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81007939 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.810215784 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809163898 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.809627591 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.812444205 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808154705 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810271703 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809657409 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811991385 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812113979 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810651326 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81121057 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810231144 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809442939 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.80966827 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810455709 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.811157855 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809717606 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811356628 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811285601 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.811151651 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810872117 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811719423 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.812659746 seconds)
  done (took 52.432652432 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812014679 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809347872 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.810869147 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.810354303 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811727932 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810502791 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.809921597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.810459498 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809765539 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811163835 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.809855301 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.809927187 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810111721 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.810710831 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.81032193 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.811917693 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81210988 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811594159 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812506946 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810643278 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.811451565 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811908195 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.810361751 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812990738 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808653046 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.809558026 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811622437 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.811636089 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812083539 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812263081 seconds)
  done (took 56.072192213 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.834663787 seconds)
    (2/2) benchmarking "in"...
    done (took 1.835342996 seconds)
  done (took 5.41156919 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.81453942 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813388088 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.813456231 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810802497 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.813460413 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.812521819 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812840287 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813573232 seconds)
  done (took 16.249994621 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.814138441 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.81605441 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.811655073 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.811501785 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.813976149 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823137001 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.815223813 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.814466238 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.817172808 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.814801584 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.81898692 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81800358 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.819348289 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.817811894 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.814149022 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.815070885 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814967076 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815510695 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.815416397 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.812735417 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818055138 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813696498 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.811451369 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.816411304 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.813426677 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.817470887 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.825129944 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.815918233 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815259328 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.812572845 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.822279154 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.815538864 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.813109067 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815619879 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.815053626 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.81486177 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.821898289 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.815448401 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.816356232 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.815524594 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.816433086 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818175211 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.82032621 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.824456598 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.816317959 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.814331728 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.81572705 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.817181221 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.81499545 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.818638928 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.822374374 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817423531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.816490858 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.818348443 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.81974924 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.815563227 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.818511318 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.818269378 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824987178 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823213145 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.819461642 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.836448817 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.826264448 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.817399798 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.816931222 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825927856 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.839399802 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.819008209 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.818717703 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.816876231 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825413882 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.815934847 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.818624379 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.815860351 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829608 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.826178163 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.81632699 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.818002272 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.818600132 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.816926992 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819953619 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.819301349 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817401269 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.817992314 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827124925 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.842864924 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.81861934 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.816979006 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.820630071 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.8195329 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.823766755 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.824880099 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.819914866 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.821048302 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.82222369 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.822995774 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.816868386 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.81905904 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.818920823 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.829225454 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.820406039 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.819387075 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822461031 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.826911601 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819752813 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.822283257 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819423256 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.818493111 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.828710732 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.81909757 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.82006296 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.818810271 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.822150082 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.823884655 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.818019451 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823021959 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.827806767 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.826897018 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.821088099 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.823321878 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.824866165 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.822854388 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830756813 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.842291457 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.819683822 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.825511607 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.825742675 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.832518042 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.822591218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.820698485 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825236752 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.819564611 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.820374879 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.823616824 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.819795976 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.821117934 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.81922766 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.821068591 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.823688059 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.820896967 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.823589957 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.82162611 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.824276805 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.82206885 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.826035627 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.822377459 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.823545358 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.828320553 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.822867667 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.822611151 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.823017159 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.824444036 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.821844227 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.823718368 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.820711878 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.824501704 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.823510773 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.82334184 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.82492912 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.822317897 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.821784769 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.823406117 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.824435982 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.822743812 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.821690431 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.822958792 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821258563 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.822841982 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82345215 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.824429517 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.826190626 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824046512 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.829744265 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.822571542 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.823903802 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.823832964 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.823846307 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.823981802 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.826608269 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.835017126 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.827124286 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.832723074 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.824218337 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.833242994 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.824348769 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.825039554 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.824732191 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.824818365 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.823121792 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.8243492 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.824951173 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.828628501 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844539793 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.835644074 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.828096507 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.826573519 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.830558551 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.828054345 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.831523948 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.824322512 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825956405 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.827506831 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.824181605 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.825881102 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.826406423 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.827689957 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.824222967 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.824463162 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.82849017 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.826324034 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.823706946 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.827171444 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.825938321 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.828281779 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.82619576 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.824230034 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.827804478 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.825740757 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.833251727 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829027148 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.827461792 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.8266444 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828300493 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.827368193 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.825507088 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827390911 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.831539729 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.826095607 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.826851674 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835465223 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.827230366 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.826970746 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.826589973 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.825296071 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.830600315 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.826042072 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.829568323 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.835379165 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.830956124 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.824937263 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.832922578 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.825863011 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.829311246 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.827252331 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82765109 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.828136841 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.828684617 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.826461676 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.826162032 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.833887304 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.827335489 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.828092321 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.827257198 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.83148485 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.83046779 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.830987085 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.826492892 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829944973 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.836299363 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.83379365 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.826828973 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.83159561 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.829458422 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.827991026 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.831724921 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.83038085 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843463105 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.838002135 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.828334465 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.828959845 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.832015321 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.832665995 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.830547192 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.82967358 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838447833 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.829476336 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.82981386 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.83189082 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.831143269 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.831593796 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833806846 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830697962 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.835356134 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831480711 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.831302553 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.831781209 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.830152845 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833114797 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.829635386 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.832516398 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.834467662 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.829460025 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.830750655 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.829932803 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.837374819 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.832584983 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.83084394 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837383344 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834652671 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.828496093 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.83062109 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.829253656 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.831132629 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.831772498 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.829791867 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.832748891 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.829346677 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.834873704 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.843140903 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.834889086 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.838587976 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.831778431 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843506812 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.83267151 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.831113651 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.831662929 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.834215875 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.838722994 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830332574 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.834523336 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.843232591 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.832432708 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.832613892 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.834718817 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.830625337 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.831037576 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.833357222 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.834249465 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.836794272 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.836765218 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.83178207 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.833723219 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.832961615 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.833456613 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.837515228 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.834625159 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.833512855 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.834742144 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.830959161 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.832793385 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.833737252 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.834301863 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.833233093 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.832053971 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.832296389 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842090867 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.833108325 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.83413275 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837351133 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.831787542 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.843448412 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.833393642 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.833606653 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.833348975 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.834278803 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.835603349 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.833305495 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.832842864 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.834022235 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.831659481 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.834564933 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.8457755 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.841100082 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.837493303 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.83653557 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.83324737 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.83528666 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84266097 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855548447 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835663117 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.835754406 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.837031772 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.841811475 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.836735399 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841165259 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838177102 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.841799709 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.838008382 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.835441311 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.838560214 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.845084161 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835387729 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.83574703 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.834584724 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.840213701 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.83917791 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.83444977 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.837424742 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838698832 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.838708072 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.846607208 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.834810733 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.838598979 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835390224 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.835207736 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.833441394 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.836359922 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.835478071 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.836766529 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.837377798 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.837131961 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.839332593 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.841116819 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.834866466 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837984795 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.844751101 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835823403 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.83549267 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.838701349 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.835906309 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.838982279 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834891562 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.836195808 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.839311408 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.837187023 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.83683923 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840658531 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.847931762 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838351608 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.836191919 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.836157798 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.840719206 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.836994127 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.836113826 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.838889009 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.845327953 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839610027 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.847087437 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.843955045 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.837835338 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.838788919 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845369211 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.844210487 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.836172348 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.840004775 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.837573952 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.840413312 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.839901082 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.838125775 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836976035 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.838772324 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.843495812 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.835700656 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.839276745 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.837777349 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.838232282 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.842272004 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.841367872 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.842985219 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.837912536 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.840513431 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.838257724 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.839095452 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.838888366 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.840960861 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837068658 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.840547378 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.841888577 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.838727209 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.840954387 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837516172 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.838515394 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.841036508 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.838872573 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.837333976 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.839424172 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.840390122 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.839065157 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.842950703 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.847069845 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.837206383 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.84056319 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.840306938 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.845040128 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.838066959 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.837289736 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840199898 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839071741 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.848473808 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.839688925 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.839565789 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.840244416 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.839194244 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.847002338 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.840303925 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.845217455 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838684842 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.839371417 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.841847976 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844699038 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.849128319 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.846487284 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843168478 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848796401 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.846072312 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.842447089 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.83929601 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.839512935 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.842362544 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.841888007 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.846946971 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842237886 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.842876564 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.840042002 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.84257871 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.842808378 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.843299995 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.839727839 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.841153825 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.845132339 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85185991 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.851617272 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.84232963 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.84348979 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.840998946 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.846778246 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.852715501 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841846911 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.841838661 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.841373025 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843791226 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.843510983 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.850340737 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.849906634 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.846277005 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.842576514 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.845774337 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.859480464 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.847812929 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850808857 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873003295 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.845392052 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.84676846 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843517366 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.843586537 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.84181387 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.8456968 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.84385003 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.851142012 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.843372885 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.84180917 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.850968996 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.840952901 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.84261384 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.844877977 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.846044436 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.849003191 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.842967076 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.852106444 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.845242489 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.843550514 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.841476214 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.847298883 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.841992458 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.844269136 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.84268662 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.84667306 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.844023545 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.843012168 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854115171 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.844078883 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.844470443 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856174439 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.857493938 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.846815649 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.845184994 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.845837523 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.850855827 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.848002728 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.844473049 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847418318 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.853137836 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.847625228 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.852294973 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.848896984 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.84669324 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847572812 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.845244329 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.845000856 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.858822099 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.858210241 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.844234244 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.8482749 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.852826742 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.846825233 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.853136991 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.853253063 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847998784 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.847381824 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846865443 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.846912182 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.84544919 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.845430699 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.847134669 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.851832474 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.845966637 seconds)
  done (took 1093.97862879 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845838322 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845713926 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845257355 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846881609 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844999451 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846542343 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846433378 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845853179 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845442075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847117941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.847745554 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847095368 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.848164018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846582697 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846636491 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847510494 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848136301 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847506361 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.848592746 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847145617 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845220747 seconds)
  done (took 40.556770407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.846780874 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.847731781 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847383501 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847867628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84713241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.846370298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.84673722 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848144862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.846399598 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847822794 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847688684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847725204 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.847287588 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.847787524 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847840771 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849287761 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849334191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846516131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.847457079 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.848647332 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846454117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848307399 seconds)
  done (took 42.425573968 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.847766282 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.848415383 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8508079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.848083812 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.848896611 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.849627862 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.848540392 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.850733802 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.848099534 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.849891636 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.857716003 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.856093118 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.850259604 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.852905625 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.851015097 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.85069748 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.994131449 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.848932967 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.84877187 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.849623725 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.850188007 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.858386788 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.850150281 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.849520034 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.849505824 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.848288103 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.850242626 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.851014321 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.848312121 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.850484788 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.852927456 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.849459141 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.850994297 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.851309175 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.850431244 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.852516297 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.854183518 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.850397013 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.85055766 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851327169 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.860245662 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.870690093 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.848946332 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.849582989 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.858135497 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.849082406 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.851199243 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.852684864 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.857644202 seconds)
  done (took 92.649372355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.850196381 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.850554679 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.854668561 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852089258 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.849935627 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.850143113 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.851286327 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849770837 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.851357458 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850014776 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.852042543 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.852319891 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850191357 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.853302883 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.850500422 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.850470886 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.852095483 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850208277 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.85272914 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.852295328 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.852249814 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.849804852 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.851222877 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.849737085 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.851598667 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.851188989 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851643781 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.8508816 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.850205496 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.852790954 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.850799147 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852296134 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.852490992 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.85277988 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852197398 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.85303055 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.850497249 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.853583723 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.851899602 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.851870938 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.852294987 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.852528277 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.851508083 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.852523098 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851081096 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853073056 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.853291165 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.852183713 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.852883693 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.854122016 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.855149415 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.856821286 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853981279 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.853323898 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853194523 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.852784962 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.853473365 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.854162954 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.853680173 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.853976998 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.854148656 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.85418576 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.854047116 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.853281521 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.854062377 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.855386984 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.854280554 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.857160882 seconds)
  done (took 127.744526287 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854475673 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855630074 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855447026 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85330848 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.85559212 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.853148335 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855973768 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.856984634 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.857164526 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.855933469 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855771927 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.854694998 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.856027739 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855139634 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.858425558 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.854544135 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.854479075 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855855924 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.857840298 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8562758 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.854838164 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.855590791 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.856343872 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855792697 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855865828 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.856324759 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856245655 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.85734873 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857272492 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.858770591 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856500891 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.857720024 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.856090849 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.856280636 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.856145854 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.856003414 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857847965 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85787487 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.857040813 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.856918414 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.857214356 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.85625421 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.856265213 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.856076336 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.856660309 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.85858662 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855233092 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.857045506 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.857161632 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856001213 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.856532061 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.858029732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858284899 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.85743277 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.859633882 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.85843675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857055335 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856508062 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85904476 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.858324602 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.857852448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.856376571 seconds)
  done (took 116.893309957 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858732302 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.860011597 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.856966136 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.858725186 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859091257 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.858085399 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.858420473 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.858422058 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.858302712 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.858097285 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857526767 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859702538 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860256705 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859357705 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.858469188 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860345181 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860169925 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858458864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858515073 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.859641955 seconds)
  done (took 38.966982067 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.859203276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.858749069 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.85939579 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859333581 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.859173836 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858937269 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.858388598 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859524838 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859727992 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860449809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.860722303 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860788142 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858977809 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858675545 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859742349 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860267024 seconds)
  done (took 31.539416658 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.860654983 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.861904944 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.859771827 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.859309321 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.859543808 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.860639426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.85936415 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.86093397 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.859901724 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.860219815 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.860227129 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.863303191 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.861222562 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.862329707 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.861046454 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860847679 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.860854211 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.859878239 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.860958079 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.860218124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.861389103 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.862006282 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.859011764 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.858052582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.861962587 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.862184773 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.861551294 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.863560016 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.861572603 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.862880457 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.864038767 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.861631849 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.862586103 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.862019938 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.863558259 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.864978053 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.862892379 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.861111353 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.862778707 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.860753557 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.863611068 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.863013289 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.861684536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.865589511 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.863702467 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.862733183 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.862978487 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.86207519 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.861393474 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.860782114 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864027412 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.86261027 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.861864544 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.861810412 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.863278046 seconds)
  done (took 104.188714165 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864312963 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.865785078 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863299892 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.86669229 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863699803 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.863047307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.863858554 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.862465689 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863591493 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.864558055 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865303784 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.864487248 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863703568 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.864432812 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.865194853 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8637304 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.865017949 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.864036349 seconds)
  done (took 35.350539532 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.867098137 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.864346904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863415896 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.86359519 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.862702246 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.864153453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866064252 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863131531 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864944022 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.866770133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86341675 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.866268909 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866926806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.866104414 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.866011145 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864445168 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.866303278 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86641169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.865548856 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866019084 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.865508706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.865086787 seconds)
  done (took 42.829235083 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.864933014 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.865810774 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.880554984 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.88647872 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.886632196 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.902306828 seconds)
  done (took 13.0831877 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865269106 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865661572 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867551158 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866944204 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867040107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865784033 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865217857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867856382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86621206 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866182994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866375363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867508358 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86605189 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865529647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866055961 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867333007 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866501709 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866365397 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868699407 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868974532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866878938 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867634908 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867658327 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868038908 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86714159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867072415 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869905999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868619553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868217926 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868609749 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867299048 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868422328 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867257979 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867244302 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867701833 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870293474 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866053271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868500421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869311485 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867519194 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.868283728 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868795893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86921294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870034472 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869831334 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868733151 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867919511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868807165 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868802734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867601342 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867472984 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87130378 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867885324 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869605645 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868681345 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868978735 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869735264 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869951496 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869226376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869764074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868318714 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868584423 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868585589 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867943403 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869886373 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868040808 seconds)
  done (took 125.08409691 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87268481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.869026172 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868914889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870062216 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869336323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869020638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869345991 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869327365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870427902 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869479423 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869972849 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868579936 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871231793 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871054784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869470819 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869830736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871583908 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870068196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870020221 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870852098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869574396 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869435068 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871843258 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871910347 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871095201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870574649 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871845399 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869742387 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871117002 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870845534 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870568454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869725362 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871818192 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86967976 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870653962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870868698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873335573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870397386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870868512 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871458745 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872909248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870995373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87148693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869507483 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87346125 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871497504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871298207 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872537116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873072721 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872261571 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872901338 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871029529 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873143946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872213886 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87210478 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872519128 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872292164 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872376354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871226518 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875037422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872126381 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873088626 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87271517 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872618288 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872737881 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873113958 seconds)
  done (took 125.30056823 seconds)
done (took 2549.762670679 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.951951329 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.008723994 seconds)
  done (took 15.762942035 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.040483789 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.991510879 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.878848773 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.881178979 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.878942135 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.900568334 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.894002512 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.877840319 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.878908015 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.87597515 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.878478857 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.063753837 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.930644398 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.878964484 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8799863 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.97145503 seconds)
  done (took 52.525627983 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.883557374 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.880266177 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.892692547 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.881459022 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.883676818 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.895840805 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.914709601 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.887433375 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.921395525 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.897358359 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.954702146 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.895838592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.885090351 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.935340286 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.897636699 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.899777438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.976267798 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.962978008 seconds)
  done (took 36.148989786 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.964129254 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.893325675 seconds)
  done (took 10.670107986 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.909646182 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.901258443 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.912158668 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.886277179 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.904275288 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.90222414 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.902648924 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.901297778 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.902658042 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.89577436 seconds)
  done (took 70.847733833 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.8845607 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.883797215 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.883154804 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.879034244 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.876498034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.882638143 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.880075642 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.879592331 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.583308631 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.921490396 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.890626986 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.890819243 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.882046489 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.880551885 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.876501045 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.907182291 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.060138497 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.880229231 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.876040786 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.886563002 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.881202174 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.975554727 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.894421827 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.882959015 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.915019889 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.578182346 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.893753632 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.885858715 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.049895988 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.878229273 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.88109356 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.090758015 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.887963004 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.32773777 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.201735156 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.887799296 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.892520621 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.889747533 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.879207259 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.068795101 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.881761285 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.887081995 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.720197534 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.176876878 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.980785041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.928965437 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.236934484 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.885888541 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.882319022 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.917294143 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.884494858 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.881456652 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.901196695 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.3848605 seconds)
  done (took 133.785800019 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.880842294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.124655581 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031326082 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.881422875 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13414347 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090912735 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.878891994 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925463697 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.882030486 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.076525919 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.132124258 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982560438 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881635849 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.881708137 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.881065891 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.881198082 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02136749 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.948620691 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.884245428 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.878523525 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90187163 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082905686 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.003308451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.88056647 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.907796564 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.089477569 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.004218887 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.982859059 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.650796086 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.878487805 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.940351025 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.882937833 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.879603964 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.877998794 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036989205 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.989787161 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962905879 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.882225572 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881570579 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.879767724 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.64459429 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083605955 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976204663 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.003963584 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134253675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099701719 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.490327587 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.880505405 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.506859063 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.048521086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.087202136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.0852631 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.001975318 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.883993546 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.433421218 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.880349897 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.879591428 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104709455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104500825 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.981164282 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.885475547 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.884480421 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881279839 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.169595355 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.883992322 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97338114 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.884336473 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.881635151 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.975064259 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.985599935 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.114347567 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103080031 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913825514 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.208901671 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.377575004 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084091212 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.951245425 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105726906 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.885085468 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.882148924 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959766306 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.720116102 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.136404075 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.164062427 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.083736474 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919093647 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.508745917 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.882175466 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.069503497 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069122676 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.120718514 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128498814 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.123149374 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.197712914 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.883393376 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.883731886 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.169637463 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997005292 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.823623134 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.230785787 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117059374 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.371206644 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.910684779 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168948205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01731506 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.887133867 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.530627843 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.885831391 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.093965933 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.921793808 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.885537839 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884068471 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.073570401 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.800778193 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883345851 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.835450108 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.949782386 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.89050471 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085667279 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.888331772 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130966509 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.889690612 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121045975 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.455252718 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91352125 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.114279595 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.133178991 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.517280257 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129252189 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.128035967 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001480698 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.163411231 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.888482842 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.887691337 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14898739 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.888505039 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.885857305 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.053657085 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.88624207 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.030284934 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.88973558 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.154299367 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906828812 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126044903 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88959094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.120715931 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.921284581 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938357073 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.890432201 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00990072 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888370664 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.700410138 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.046052153 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.889822523 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.887271709 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.658715558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.887953622 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.04212511 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.111259688 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910578243 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.956733318 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.427679258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.866677862 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967939511 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.911158318 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.171989355 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.886416023 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.138045323 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.864254793 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.354387109 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.887807739 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.178644137 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.12699592 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.890274384 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.888117053 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.726592734 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.849871385 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.888110693 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.496347251 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.256767422 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.662907913 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096880064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.893791209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015458317 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.894181408 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.961776401 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.222284041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.887313295 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.890004519 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.889436439 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.888753077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.889889483 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156099445 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.917454102 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.319880229 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02450451 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.144218252 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.193566997 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.089113801 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.929343308 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.889510192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.169250808 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.892443203 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.951351445 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.890804657 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907828807 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120697159 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894821382 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.177495272 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125566379 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.752486376 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.937331007 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.892754814 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.888637435 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.820073067 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.035602966 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973344785 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.892627598 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.889096046 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00443914 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.011763476 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074224564 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.580577061 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.042960339 seconds)
  done (took 905.943976446 seconds)
done (took 1227.488565755 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.887758885 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.892643898 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.893148551 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.891638402 seconds)
  done (took 29.385429712 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.895677905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.892104183 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.892254347 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88962296 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.890028843 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.8923469 seconds)
  done (took 13.173915312 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.890905427 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.893390246 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.895533319 seconds)
  done (took 22.499412544 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.969995326 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.311957255 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.03613354 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.326850827 seconds)
  done (took 10.464480458 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.893859674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.893479359 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.892525939 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.89248064 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.895615084 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.897013786 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.892901109 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.893620006 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.897919572 seconds)
  done (took 18.871439967 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.899386263 seconds)
done (took 100.115108265 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.014383868 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.890238915 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.9092399 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.904862822 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.901877918 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.43068537 seconds)
    (7/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.905482462 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.916552374 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.908187741 seconds)
    (10/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.582866071 seconds)
    (11/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.972518898 seconds)
    (12/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.129182022 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.070505611 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.190430104 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.882380292 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.610143727 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.128473768 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.77912279 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.900850998 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.952174172 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.933615725 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.696208122 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.014823407 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.201590114 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.080868546 seconds)
    (26/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.667106999 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.156801951 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.981396615 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.957707291 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275179486 seconds)
    (31/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.353492939 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.893179118 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.089610778 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.243864643 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.898166438 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.783268572 seconds)
    (37/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.033510116 seconds)
    (38/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.278808763 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.04148105 seconds)
    (40/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.897805101 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.8186725 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.212899935 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.988196583 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.158537452 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.190790906 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.312083424 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.11202458 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.187874289 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.977242662 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.912830041 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.512860628 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.916071248 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.787914719 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.919286751 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.895332191 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.910167784 seconds)
    (57/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.177842108 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.152643641 seconds)
    (59/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.211971037 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.897870116 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 9.497902813 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.165884132 seconds)
    (63/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.419580925 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.009463075 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.915490577 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.894273132 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.839051175 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.286822295 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.898394796 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.996751019 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291482041 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.979800435 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491847064 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.003601431 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166500804 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.915569036 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.898101214 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.476527974 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.053447587 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.580272025 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.996322032 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.040953822 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.225434978 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.156894941 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.203037127 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.464035741 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.32597629 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.678056984 seconds)
    (89/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.443385112 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.052937558 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.005064688 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.758199442 seconds)
    (93/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.989705183 seconds)
    (94/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.373813474 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.001338939 seconds)
    (96/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.980656019 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.958569101 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.978244958 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.959399218 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.910655687 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.91646978 seconds)
    (102/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.027861404 seconds)
    (103/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.298605916 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.205340297 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.812615531 seconds)
    (106/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.344747587 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.904900713 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.04452263 seconds)
    (109/309) benchmarking ("sort", Int8, false)...
    done (took 4.866976144 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.013800375 seconds)
    (111/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.001434265 seconds)
    (112/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.065292187 seconds)
    (113/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.152357074 seconds)
    (114/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.002896832 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.905445961 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.920386921 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.716165958 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.217556495 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.903469668 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.910496636 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.900528343 seconds)
    (122/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.549472771 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.000174369 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.904008528 seconds)
    (125/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.103978332 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.925806426 seconds)
    (127/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.106771791 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.904943168 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.013162106 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.918571534 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.102335817 seconds)
    (132/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.981525739 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915834205 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.978368951 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.030784838 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.2528064 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.022815325 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.380051228 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.302456508 seconds)
    (140/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.311896985 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.904413544 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.162942058 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.155285059 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.219329583 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.906159895 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.202509496 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.903378389 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083296461 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.28014768 seconds)
    (150/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.228161236 seconds)
    (151/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.922471127 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.904591157 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.078850022 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.917621486 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.219273833 seconds)
    (156/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.169658863 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.288532854 seconds)
    (158/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.295785422 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.251686798 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.668741258 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.017194266 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.953095351 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.238950411 seconds)
    (164/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.679122465 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.929802977 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.917423848 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.090019659 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.110888952 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.906706786 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.670911216 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.679261212 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.339367074 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.853898321 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.871997938 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.914513393 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.017505684 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.998808277 seconds)
    (178/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.674096851 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.679105143 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221042449 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.007900225 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.902690872 seconds)
    (183/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.06361508 seconds)
    (184/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.036292387 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.990804694 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.706307899 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.122209911 seconds)
    (188/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.907562405 seconds)
    (189/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.000919785 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.071865302 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.909321845 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.398977895 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.792683964 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.913721188 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.805110846 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.153020445 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.922948168 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.904731153 seconds)
    (199/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.949758937 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.917761506 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.124477432 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.911387613 seconds)
    (203/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.977100296 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.907084215 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.966375202 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.582164918 seconds)
    (207/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.138434192 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.922296005 seconds)
    (209/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.993252248 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.046211235 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.11626821 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.15807739 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.140107855 seconds)
    (214/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.19106715 seconds)
    (215/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.039783951 seconds)
    (216/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.704074801 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.504962324 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.03802806 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.988974566 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.966854336 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.106713913 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.589362204 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.206055506 seconds)
    (224/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.945540917 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.983643333 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.033936948 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.911767493 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.311078069 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.799403172 seconds)
    (230/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.103796991 seconds)
    (231/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.063142909 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.91763927 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.295937677 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.908685474 seconds)
    (235/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.035094809 seconds)
    (236/309) benchmarking ("sort", Float32, false)...
    done (took 5.571933421 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.201601566 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.175104848 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.041042833 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.377650295 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.1365027 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.909987233 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.043278938 seconds)
    (244/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.988678998 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.214451605 seconds)
    (246/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.326663074 seconds)
    (247/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.908886771 seconds)
    (248/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 9.9689877 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.031626445 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.030961214 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.91651328 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.923730793 seconds)
    (253/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.03788067 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.730331062 seconds)
    (255/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.356060422 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.036252032 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.31297839 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.568242253 seconds)
    (259/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.032705404 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.02400468 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.010345092 seconds)
    (262/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.213899924 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.92613008 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.756764421 seconds)
    (265/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.473813742 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.051947981 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.91620541 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.30960434 seconds)
    (269/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.818689784 seconds)
    (270/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.403306843 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.218405605 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.153285173 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.146784788 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.18119269 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.929485575 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.878293141 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 7.006647127 seconds)
    (278/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.627550696 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.913106764 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.117863643 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.229214345 seconds)
    (282/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.131304755 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.31799231 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.307710374 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.930484199 seconds)
    (286/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.281640232 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.096908986 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.663393256 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.918821661 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.251929553 seconds)
    (291/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.003984874 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.214374796 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.054473285 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.766009366 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.910942179 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.861842977 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.266851662 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.918261974 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.267823211 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.913206921 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.981915423 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.007678251 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.232477307 seconds)
    (304/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.001005582 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.728827999 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.273890964 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.916381425 seconds)
    (308/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.925464965 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.22663337 seconds)
  done (took 1021.966652639 seconds)
done (took 1023.85227759 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.9453978 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934201867 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.916533736 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.938616894 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.029806308 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.959700081 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.929800592 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.92020788 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.967941247 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.965841107 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.917974769 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.956967673 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.919822117 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.918064435 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.916566848 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933991921 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.230126417 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.953299383 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.937457639 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.929712121 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.936696713 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.916018129 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.967417213 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.955970295 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.923191136 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.923741634 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.918984587 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.936499122 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.03123545 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.920179084 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.922231775 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.931105545 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.231089727 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.952209972 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.915710444 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.937867899 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.929960468 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.930039983 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.921993767 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.951634738 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.387703612 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.925053514 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.918804939 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.918406603 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.919648962 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.92823854 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.92136534 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.927538211 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.93506887 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933980781 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.376370278 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.942513425 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.921432181 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.919637324 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.931802833 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.921205609 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.926300302 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93590942 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.939883644 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936749031 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.218517835 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.961636162 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.922675031 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.937257328 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.930478392 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.415024915 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.92546815 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.92533192 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.385322924 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.93578533 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.417753345 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.938758453 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.924512935 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.936447969 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.954055341 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.232170628 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.952784008 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.920738567 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.9300032 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.920627202 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.934379246 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936333685 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.926058962 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.921489285 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.937752045 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.965425531 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.936785149 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.922664401 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.932980943 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.942594714 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.932131106 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.935546787 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.924358311 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.918805555 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.936482235 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.924869646 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.926002457 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.925200554 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.92567296 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.934785278 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.384453075 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947159517 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.921299629 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.919204187 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.923054042 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.936808594 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.387520725 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.929699721 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.944195192 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.971252702 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.927060538 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.221451579 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.961223307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940761741 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.934370642 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.924779032 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.923104248 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.221733096 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.414862969 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.946178978 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.922081748 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.921705032 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940133493 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.92476202 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.92158577 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.236893249 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.959641024 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938829041 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.046301311 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.938513144 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.956039599 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.924063935 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.927657177 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.970465885 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940292884 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.958250684 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.927002498 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.94196401 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.941274364 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.920158839 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.937655793 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.937434521 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.926030033 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.932214717 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.921836938 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.970434904 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940781237 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938668681 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.946268804 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.047258729 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.921530055 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.22299292 seconds)
done (took 302.305976024 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.009269582 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.922910214 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.016856105 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.923324493 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.016707653 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.001489848 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.923679837 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.921629752 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.920549021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.442288253 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.922352314 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.928299365 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.921501166 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.922192942 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.997018061 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.922113787 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.922103029 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213911395 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.923411936 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.005570137 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.925700199 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.924327697 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.922450626 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.44560373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.921868057 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.921099045 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.006845458 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.922870448 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.214356995 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.924804787 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.922265532 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.218497725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.008212026 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.93467541 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.931183564 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.933174507 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.019274784 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.932288219 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.996033903 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.997106903 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.019492905 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.9560519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.923158783 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.921042875 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.92770462 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.92305329 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.923961984 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.954433794 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.927843823 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.929401758 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213350017 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.927216986 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.93094918 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.92564451 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.924653252 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.939023759 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.925359142 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.924496034 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.007874404 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.925929111 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.998557165 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.445652583 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.443575038 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.923104586 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.925860353 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.923734965 seconds)
  done (took 188.359581466 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.991238248 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.994265122 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.992913159 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.932654606 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.974955695 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.992652608 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.929828647 seconds)
  done (took 15.65945855 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.931037941 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.926235534 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.986528084 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.9858689 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.924489838 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.105614693 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.935373684 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.930538146 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.95198655 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.92613397 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.560011487 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.985921396 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.931879027 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.926131158 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.937619494 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.991734471 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.928816411 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.927008775 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.03566276 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.075800701 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.930704048 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.931291733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.953594566 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.939676399 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.926511344 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927463314 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.924073887 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.931966379 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.925193589 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.92596018 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.925736701 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.991293493 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.926410576 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.924840916 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.928393983 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.92581723 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.927587592 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.926368017 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.924937949 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.928281898 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.926161632 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.925894498 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.92653158 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.927794657 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.926337052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.95036296 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.928080308 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.928329009 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.927801083 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.929644069 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.955914301 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930583882 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.925878062 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.932118631 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.972848815 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935522374 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.928475304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.927053875 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.928698629 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.928635121 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.92920103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.079185891 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.990178944 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.928157301 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.990568231 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.087883968 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.928436413 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.928628589 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.92812005 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.02286309 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.928877646 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.989274061 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.931413587 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.049587437 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.929295336 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.11071565 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.95480583 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.934155491 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.934811516 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.929392315 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.93594327 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.927799501 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.931162616 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.935296974 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.93340427 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.927880254 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.927191656 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.93128312 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.936072587 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.930374087 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.980361936 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.92890105 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.92992846 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.07263118 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.934224998 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.040463676 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.958848996 seconds)
  done (took 211.735553269 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.938433323 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.939237015 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.933776262 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.946927107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.931834132 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.932581573 seconds)
  done (took 13.478204136 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.934634263 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.934021668 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.93179704 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.934564575 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.932204296 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.932017041 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.93299578 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.934373008 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.934988776 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.931676071 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.932138429 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.933552382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.932194405 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.931446002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.931769047 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.932316544 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.930439974 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.933242905 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.931187166 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933368492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.066476145 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.931851264 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935027162 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.937410375 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.935092252 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.931126537 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.946259374 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.931276698 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.93435482 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.940685797 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.937821127 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.932716843 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.938764554 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.939804699 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.93592046 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.937539607 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936765064 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.933645393 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.930797206 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.933408186 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.930970884 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.932062988 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.931012283 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.934078253 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.935654472 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.944997636 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.938124587 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.944898449 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.931307173 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.934459031 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.932091665 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.933201942 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.935082465 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.933250277 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.940174419 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938985713 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.937479745 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.934095827 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.935067024 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.939232141 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.938200104 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.933285554 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.935596158 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.939115872 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.940752016 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.93518974 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.942267282 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.938589558 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.934727473 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.934660565 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.937120753 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.933524968 seconds)
  done (took 142.318305631 seconds)
done (took 573.420201374 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.96120377 seconds)
  done (took 8.819674915 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.973742879 seconds)
  done (took 8.911032021 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.868341045 seconds)
  done (took 10.728621548 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.941305846 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.947217525 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.948407413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.93863775 seconds)
  done (took 29.648251154 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.088461229 seconds)
  done (took 8.948933405 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.947064059 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.934591951 seconds)
  done (took 15.80543982 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.083763425 seconds)
  done (took 8.944538926 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.385636446 seconds)
  done (took 9.266508417 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.943108036 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.964532272 seconds)
  done (took 15.78856335 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.037636343 seconds)
  done (took 8.898113214 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.740833298 seconds)
  done (took 9.603352332 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.942400847 seconds)
  done (took 8.825056331 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.974684444 seconds)
  done (took 8.83509671 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.039793666 seconds)
  done (took 8.900739684 seconds)
done (took 163.783321838 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.946279183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.935864811 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.935238242 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.933953566 seconds)
  done (took 29.611341045 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.973180493 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.970425565 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.979572048 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.970701423 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.961874153 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.960886695 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.971157386 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.970365657 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.960734538 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.970313507 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.970892105 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.968364436 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.971034847 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.979257241 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.98147532 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.972051851 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.971865959 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.973688472 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.961437999 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.979274944 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.969543387 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.970793345 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.937627453 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.936722101 seconds)
  done (took 49.092859986 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.125174765 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.006182525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.091133381 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.98228122 seconds)
  done (took 10.065264811 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.93838369 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.002832017 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.990614967 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.990205088 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.023007995 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.038337136 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.989975232 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.147594165 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.053388163 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.066452536 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.945219106 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.957760895 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.963051343 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.992274144 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.041434649 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.937046763 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.938732482 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.075883975 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.999966972 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.146404366 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.938154615 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.992046433 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.033145122 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.994961203 seconds)
  done (took 50.059207363 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.939544344 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.946191198 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.947726823 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.940965369 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.939758485 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.938550055 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.947602421 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.940154199 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.960261997 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.942115962 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.938041419 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.940405278 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.946444181 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.940839187 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.93816999 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.95267435 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.955109975 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.941874908 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.942155101 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.945659026 seconds)
  done (took 40.746671593 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.937743724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.787096207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.282986314 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.189372729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.939616407 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.941404417 seconds)
  done (took 31.942012611 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.953102245 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.945279187 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.939230978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.999701609 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.081248023 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.948859486 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.941272024 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.95101285 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.9891452 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.007855198 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.960774758 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.970034046 seconds)
  done (took 25.553095714 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.94015685 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.939670892 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.94047261 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.950497412 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.949763789 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.947371755 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.947365493 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.940624477 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.954213608 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.962195441 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.950423843 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.952791704 seconds)
  done (took 45.246692388 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.154198186 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.164431946 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.154828499 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.569961767 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.941367962 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.838398729 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.540802959 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.564870111 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.225931416 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.911182997 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.9058728 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.823923263 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.182224011 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942078305 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.188567746 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.864166317 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.942847763 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212511423 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.943116888 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.945755543 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.229952948 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.990956208 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.155226676 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.988531426 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.153650179 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.485948836 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.194582765 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.205574803 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.26828462 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.991808046 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.176006549 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.993725897 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.949716175 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.952195292 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.944385581 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.954195854 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212466062 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942943639 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.944644741 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.935943243 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.866943459 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.174490182 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.051476191 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.351778492 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.064335014 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.184844136 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.946286048 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.160223188 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009037017 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.090590722 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.038428023 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.154239424 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.867789746 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.218335623 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058320306 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.943993778 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.949127781 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.641313902 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.182498957 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.021962813 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.167450659 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.047968024 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.946734376 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.039062678 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.942642157 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.057303046 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.323221605 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.948938703 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.94242427 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.953023343 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.041688752 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.156525284 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.945221318 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944573183 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.962992488 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949177112 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.296790985 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.539937602 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.941309441 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.5096897 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.452618424 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.919926931 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.457252798 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.994348595 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.230328314 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.160869573 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.129413173 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.190227746 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.828196243 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.949009628 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.752218789 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.024676088 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.021948594 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944639156 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.164827006 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.145236527 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.052647624 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.944393238 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.873520213 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.956615011 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.149798402 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.447800387 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.007457325 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.945502612 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.944222854 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.948283676 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.946271074 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963291066 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.961084926 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.46595734 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.225951876 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.043773483 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.198325598 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.933960107 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.632530151 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.20985705 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070272863 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.507649013 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.076972044 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.947278734 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088766444 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.952649861 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.949746178 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.323952275 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.35759892 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.179099117 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.197923926 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.949448337 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.973840699 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.952702044 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.031074813 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.174557749 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.949648554 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.192405534 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.191048988 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.609702465 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.937175118 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.020675869 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.956961295 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.161341107 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.032503736 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.474140902 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161902737 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.559374071 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.941509526 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.448911107 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.105199382 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324496676 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.964329351 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.174405919 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.986626901 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.657805097 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.877105726 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955289074 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.28092924 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.078563938 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983590695 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.952604595 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.951499996 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959300547 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.034623586 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.022012753 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.025589071 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.877862155 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.952588864 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9542224 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.952871274 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.496078238 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.555153639 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.238612968 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.955087378 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.013851132 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.952700083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.563598035 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.955506853 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.072376217 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.961871417 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.678636771 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.977398838 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.099284736 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.346448217 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066263105 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.953175275 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.954838937 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.658441994 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.962808776 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.6540108 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.2347368 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.945979132 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.39689724 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.008037993 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.137461307 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.972011337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.956278882 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.955572912 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95578236 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.155692257 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.462742866 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.170187328 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.294206564 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.038248236 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.220626849 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.13816723 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.462581045 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.631525066 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.452947751 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.180793977 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.955674628 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957524226 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.598858122 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.962421082 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.175046733 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.156288794 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.226228893 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.243109614 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.363132373 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.960764783 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.968931035 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.195950578 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.955494335 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.387874605 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.952084464 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.206159176 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.760339827 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.213344138 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.021335517 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.96598757 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.591313505 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069643528 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.918660681 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07638241 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.880841254 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.56005935 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246920792 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.222371531 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.929758147 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.290952241 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.248274336 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.104614171 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.578717767 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.955572072 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.001656982 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.037221539 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.965420441 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.542659013 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.004331958 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.004928502 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.964888914 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.959182914 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.959783759 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.634220472 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.035607264 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.075807862 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.602979576 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.496314365 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.874040394 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.218166187 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.01121185 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.393847295 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994747434 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.17123361 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.962418117 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.568760588 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009137009 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.226159407 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.910691956 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.173936075 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157124809 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.98887445 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.962274634 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.88638799 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.833421453 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.959234657 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.195054925 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.848672024 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.963497853 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.246671396 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.611778394 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999452346 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.961401891 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.175826885 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.252465467 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.212040017 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.967597758 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.170626527 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.081668081 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.880014353 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.441896441 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.54179886 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.65930471 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.974641716 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.164321606 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.194978814 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.28946361 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.00212519 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.029372743 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.224455816 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.932745795 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.958228973 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.481671193 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.057109355 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.203068013 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.268700757 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.502955811 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.290966627 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.387065303 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.019630727 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.168522527 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.318053764 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.201498341 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.96224896 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.05787882 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.172236734 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.239383811 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.848065364 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.66895033 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.203598924 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.965877588 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.919987034 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.169282468 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.462854767 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.315303468 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.498032937 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.193799073 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.993680134 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.446003145 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.976907911 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.897956261 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.963357844 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.911811846 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.180666328 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.194439451 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.005463584 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.521325755 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.120111239 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.35128022 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.247054124 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.008125428 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.888519166 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.567903943 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.910527956 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.959653482 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999700216 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.03511356 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.966241298 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.165840554 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.403803606 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.009372484 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.496026483 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.173812123 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26286396 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.223233199 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.254194665 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.919777357 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23426983 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.918873323 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.622904582 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.054906162 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.053895024 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.96349854 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.96792012 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236511258 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.187376364 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.576827821 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.007653687 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.191596157 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.05501796 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.96752787 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.969113132 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.490542558 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.204248106 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.178967967 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.042392998 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.109657714 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.03892661 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.479724976 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.970878826 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.969362058 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.101801827 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.962941195 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.607264711 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.25352364 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.698509758 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.168047948 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.486132033 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.872100364 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.198634739 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.015534605 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.966207866 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.978474297 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.975857103 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.207342805 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.233444124 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.727660028 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.972320171 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.967071328 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.843404484 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.574867831 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.20022866 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.976252176 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.027512017 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.968013407 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.085703781 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.964251997 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.228799383 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.018966169 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.964783507 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.975086308 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.181744194 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.482216924 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98498415 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.667627441 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.171766814 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.97313539 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.449407606 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.415757132 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.264972737 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.015887071 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.197337177 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.226487266 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.521171572 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.199604221 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.971702349 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.194461392 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.973376073 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241393557 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2417201 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.969913482 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.185022185 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.475001016 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262028684 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.976995682 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.850192335 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.968650596 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.229934587 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.018261769 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.968039266 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.978579347 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.508760706 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.583658742 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.432816643 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121044176 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.19110125 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.681212153 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.723162832 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.970874682 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.974003339 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.574133304 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.703711561 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.183253749 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.258520582 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.919543546 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.171266164 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.673632434 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.968029857 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.228256678 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.895409093 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.974198979 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.625708249 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.246661589 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.905598211 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.973461065 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.531445182 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.971849449 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.055035959 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.97032675 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.090223535 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.233789857 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.233964459 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.078603172 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.610609655 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.582755593 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.909173305 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.011315431 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.777203058 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.541793061 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.585470577 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991182395 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98694083 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.894969096 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.972838568 seconds)
  done (took 1687.341438964 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.999036128 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.002202183 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.016396309 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.041158689 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.017924349 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.043440667 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.038334029 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.97738527 seconds)
  done (took 58.028408164 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.969184352 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.985857712 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.978154517 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.972002298 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.991028591 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.981322586 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.131019327 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.981388894 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.975562803 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.976746378 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.974229276 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.982557368 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.247101652 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.995130246 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.973408041 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.966562479 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.972503621 seconds)
  done (took 75.997512424 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.97545866 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.274038865 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.017078496 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.970834025 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.841741737 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.977350636 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.145861942 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.009409847 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.98139497 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.122390369 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.272526398 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.97643133 seconds)
  done (took 91.459930535 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.977620223 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.976648045 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.971664743 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.976073923 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.972044036 seconds)
  done (took 11.774694999 seconds)
done (took 2208.84405594 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.21285115 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.032894784 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.06867488 seconds)
  done (took 5.994255962 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.12361738 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.165694619 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.279913629 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.046010047 seconds)
  done (took 10.516862059 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.260327326 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.33933552 seconds)
  done (took 6.491323701 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.337268144 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.980039894 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.361774341 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.978152019 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.976551696 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.977056603 seconds)
  done (took 22.83055299 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.977033069 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.974335152 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.975049411 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.976547823 seconds)
  done (took 9.799219284 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.971920635 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.657782743 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.968659566 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.981903763 seconds)
  done (took 21.472654855 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.114162143 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.985338348 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.114048973 seconds)
  done (took 8.109273952 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.196526445 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.985339171 seconds)
  done (took 7.076802209 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.121699326 seconds)
  done (took 4.01664211 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.001984067 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.247459601 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.476112093 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.536904654 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.603900206 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.772144583 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.300230779 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.248334967 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.393424399 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.431142814 seconds)
  done (took 25.90654891 seconds)
done (took 138.000370073 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.34713136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.00202251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.175461045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.347126219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.212702366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.177879925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.192969208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.335587357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.023246546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.010164272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.343395137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.271401347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.140514442 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.995417514 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.148408722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.003273677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.208568946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.357671514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.02290728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.265722599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.20195041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.993721384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.185528464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.007149617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.20929172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.128414766 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.534678316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.001623796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.174861343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.543407403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.129893871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.413662103 seconds)
  done (took 172.003922151 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.975533921 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.976834164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.977212748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.97549085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.266555754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.97916891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.97987091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.972919945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.228482779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.214203601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.977041121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.243843556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.977510624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974026265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.978162238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.976814379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.381306552 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.979106948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.975979554 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.97985202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.979411945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.091911828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.977866287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.106595781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.372471065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.976030553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.977392477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974637019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.975311316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.974935412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975611968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.976191558 seconds)
  done (took 211.248168046 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.97355956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974065076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.974038011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.974663834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.977286835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982008987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.976862456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.978567023 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.634476069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.622698503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.977514638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.976361491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.980597944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.975257221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.97973744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.977159431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.974461646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.981209359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.975936073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.978592575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.976599289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.603908642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.996970699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.617049849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.977218469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.977391994 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.981427762 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.981621022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.97955174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.976860297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.977872241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.980254399 seconds)
  done (took 223.775809839 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.216270733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.983958447 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.978205055 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.994921014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.981217193 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.984488307 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.987442751 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.227101532 seconds)
  done (took 20.251081382 seconds)
done (took 629.192317761 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.381051888 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.74026746 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120280111 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.003093711 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.280221841 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.051586529 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.998127169 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.057814086 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.835055065 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.077681929 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.411185281 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.005064693 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.800263365 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.027825845 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.122633373 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.055197073 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.342977252 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.656698401 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.144212463 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.673885509 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.156778272 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.935798463 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.073919661 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.863390367 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.428450515 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.964207669 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.019062759 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.344844076 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.003040744 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.159851696 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.637001585 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.268519618 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.013098447 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.00240538 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.053947161 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.033002763 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.213346154 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.010644304 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.114344137 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732775473 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.67666244 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.71758444 seconds)
  done (took 105.111238369 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.992808437 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.985752066 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.984803594 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.990183361 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.997981003 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.987339095 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.98934017 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.99086519 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.986947036 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.987619706 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.989533453 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.997239939 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.987053917 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.995466602 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.989448559 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.992136659 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.98479256 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.002003252 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.988955033 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.986542247 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.987160696 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.988727594 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.981301226 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.990519361 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.989715754 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.9862815 seconds)
  done (took 53.644207008 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.983139445 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.144003379 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.21988246 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.006484415 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.983526402 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.985328019 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.0108227 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.98778105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.985311561 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.988294322 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.099685319 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.989169976 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.998463493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.226752576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.997403321 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.985086576 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.984976351 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.984201601 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.156183372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.992570745 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.013416042 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.990178862 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.012486984 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.996215921 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.979505637 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982519662 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.989647719 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.394183212 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.997329767 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.104592529 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.02652508 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.017040986 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.321219959 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.235628552 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.039351297 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.991122067 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.97810581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.108007949 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.990728413 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.982456451 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.011722155 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.990770963 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.22428047 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.507774303 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.996545645 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.980821743 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.396788988 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.125220924 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.025904519 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.998291246 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.234936772 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.003620606 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.980900051 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.987969593 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.0217387 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.000577969 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.984599993 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.253525843 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.996278642 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.012321766 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.992728886 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.980495967 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.159210627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.992444146 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.146890424 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.993695506 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.989832258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.990879068 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.22944317 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007418795 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.525051188 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.001403101 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.983092605 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.1090669 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.154802445 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.420694856 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.998009447 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.16578119 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.344491335 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.022976346 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.993731428 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.379164639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.026202122 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.000100967 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.989879745 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.98218771 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.985893054 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.034654301 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.015909261 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.439809139 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.523294212 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.264178058 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.025883348 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.9981992 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.986023795 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.249263033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.993505593 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.992223793 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.223235949 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.531636439 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.000354088 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.993912005 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.50571286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.004951925 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.018066865 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.999024875 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.24282779 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.003535946 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.032818461 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.988854928 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.993635973 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.997878375 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.013174559 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.997659134 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.990570912 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.498591824 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.131728675 seconds)
  done (took 245.760961285 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.991197477 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.985513892 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.987362048 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.986674437 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.991013422 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.990717346 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.98692082 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.992420953 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.99403409 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.992836306 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.99158166 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.994488757 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.992936257 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.998874 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.025576811 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.993611698 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.480228964 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.990464051 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.988241578 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.988906183 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.547112041 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.992716119 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.983999543 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.992919093 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.9905997 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.988377987 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.992512287 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.018494888 seconds)
  done (took 170.765636698 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.994274169 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.039905158 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.997182983 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.035125837 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.003088627 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.990815715 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.085447164 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.005518472 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.997683073 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.992267857 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.990242953 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.020513423 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.996718804 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.090895281 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.019147282 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.096115305 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.093398766 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.998360273 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.99260558 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.989011297 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.03552509 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.999771153 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.01807039 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.049747895 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.000338654 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.044279242 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.999710863 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.989412846 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.993920475 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.101108458 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.004905084 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.022068255 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.019921222 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.007742855 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.104754128 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.100087107 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.088898341 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.088236199 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.992635715 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.988988665 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.995421634 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.995260157 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.047890615 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.007152826 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.991918697 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.106342879 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.006249739 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.988626099 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.989702598 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.991502391 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.00468314 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.010535568 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.027087647 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.113596844 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.035990274 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.016961211 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.090668505 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.113457403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.991673733 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.085478047 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.000172931 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.10329183 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.012168468 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.992950907 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.996910886 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.997730738 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.040382012 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.10080582 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.094375774 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.994240877 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.087651926 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.046503831 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.009607511 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.994141615 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.992477271 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.04840455 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.105065991 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.045968707 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.054711821 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.029216652 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.003447684 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.995293241 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.992259023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.020443676 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.000790723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.105790358 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.105746947 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.001343855 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.997610646 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.995878247 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.99598147 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.01927613 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.060496288 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.036263265 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.103453402 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029571579 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.036930931 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.000911841 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.006290919 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.998254838 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.031596796 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.003186692 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.009499622 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.272023037 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.023909506 seconds)
  done (took 215.196192603 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.344192965 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.041067445 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.070266699 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.251211946 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.374828042 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.921424659 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.030898432 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.046371157 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.050795854 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.174414075 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.106191793 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.092377914 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.035609171 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.0202828 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.039014529 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.058044939 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.073539172 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.337448186 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.244290988 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.563203071 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.039216619 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296004574 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.369632385 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.391779708 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.099539625 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.46820755 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.628909768 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.132075001 seconds)
  done (took 66.223457994 seconds)
done (took 858.607057863 seconds)
SAVING RESULT...
DONE!
